@page
@model MLunarCoffee.Pages.Report.Labo.TaskLabo.TaskLaboGeneralModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="collapsesticky collapse show" id="RTLab_General">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="text-md text-dark font-weight-bold mb-1">@Local["Báo cáo công việc labo"]</h6>

        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#RTLab_GeneralDiv" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return RTLab_LoadData()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return RTLab_Export()"></i>
            </div>
        </div> 
    </div>
    <div class="card-body p-0 pt-0 collapsesticky collapse show" id=RTLab_GeneralDiv>
        <div class="m-0 my-3 mobile-responsive">
            <div id="RTLab_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <table class="table vt-table mb-0" id="RTLab_Grid">
                <thead>
                    <tr>
                        <th style="width: 60px">#</th>
                        <th>@Local["Nhân viên"]</th>
                        <th>@Local["Tổng labo"]</th>
                        <th>@Local["Tổng công việc"]</th>
                    </tr>
                </thead>
                <tbody id="RTLab_GridBody">
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="RTLabDetail_Container"  style="display:none;">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="RTLabDetail_Title" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="wrap">
                <div class="wrapblock">
                    <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                        <span id="RTLabDetail_CurrentData">0</span>
                        <span class="mx-2">/</span>
                        <span id="RTLabDetail_TotalData">0</span>
                    </div>
                    <div class="icon-hover mx-1 mt-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Thu gọn"]">
                        <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                           data-bs-toggle="collapse" href="#RTLabDetail_DivArea" aria-expanded="true"></i>
                    </div>
                    <div class="icon-hover mx-1 mt-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Tải lại"]">
                        <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                           onclick="event.preventDefault(); return RTLabDetail_Loaddata()"></i>
                    </div>
                    <div class="icon-hover mx-1 mt-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["In báo cáo"]">
                        <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                           onclick="event.preventDefault(); RTLabDetail_PrintReport()"></i>
                    </div>
                    <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                        <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Xuất excel"]">
                            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                        </div>
                        <div class="input-group-text icon-hover w-auto vttech-input-item">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RTLabDetail_Export(0)">@Local["Tất cả"]</i>
                        </div>
                        <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RTLabDetail_Export(1)">@Local["Tùy chọn"]</i>
                        </div>
                    </div>
                    <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                        @Local["Xem thêm"]
                    </button>
                </div> 
            </div>
        </div>
        <div class="toggle">
            <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                <ul class="card card-body text-dark text-capitalize opacity-10">
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="doctor" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Người yêu cầu"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="userto" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Người chịu trách nhiệm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="doccode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã hồ sơ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="price" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Đơn giá"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="detail" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi tiết"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="receiptdate" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày muốn nhận"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="created" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày yêu cầu"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="branch" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi nhánh"]</p>
                    </li>
                </ul>
            </div>

        </div>
    </div>
    <div class="collapsesticky collapse show" id="RTLabDetail_DivArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <div id="RTLabDetail_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table data-name="RTLabDetail_Grid" class="table vt-table mb-0" id="RTLabDetail_Grid">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th style="min-width: 200px">@Local["Nhân viên"]</th>
                            <th style="min-width: 200px">@Local["Mã labo"]</th>
                            <th style="min-width: 200px">@Local["Trạng thái labo"]</th>
                            <th style="min-width: 200px" data-name="doctor">@Local["Người yêu cầu"]</th>
                            <th style="min-width: 220px" data-name="userto">@Local["Người chịu trách nhiệm"]</th>
                            <th style="min-width: 200px">@Local["Mã khách hàng"]</th>
                            <th style="min-width: 200px">@Local["Khách hàng"]</th>
                            <th style="min-width: 200px" data-name="doccode">@Local["Mã hồ sơ"]</th>
                            <th style="min-width: 200px" data-name="supname">@Local["Nhà cung cấp"]</th>
                            <th style="min-width: 200px" data-name="price">@Local["Đơn giá"]</th>
                            <th style="min-width: 200px" data-name="detail">@Local["Chi tiết"]</th>
                            <th style="min-width: 200px" data-name="receiptdate">@Local["Ngày muốn nhận"]</th>
                            <th style="min-width: 200px" data-name="created">@Local["Ngày yêu cầu"]</th>
                            <th style="min-width: 200px" data-name="branch">@Local["Chi nhánh"]</th>
                            <th style="min-width: 140px">@Local["Công việc"]</th>
                            <th style="min-width: 250px">@Local["Nội dung"]</th>
                        </tr>
                    </thead>
                    <tbody id="RTLabDetail_GridBody">
                    </tbody>
                </table>
            </div>
            <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RTLabDetail_RenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>
    </div>
</div>
<script type="text/javascript">
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let xhrLoadList, xhrLoadDetail;
    let DataReportMainDetail, DataReportMainDetailSlice;
    let IndexReportDetail = 0;
    let timeoutCountDetail;
    let RTLab_TaskEmp = 0;
    let shtableDetail;
    $(document).ready(function () {
        ToolPopper();
        RTLab_LoadData();
        shtableDetail = $("#RTLabDetail_Grid").TableExpandColumn({
            shtoogle: $('.shtoogleDetail')
        });
        Checking_TabControl_Permission();
    });
    function RTLab_LoadData() {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Labo/TaskLabo/TaskLaboGeneral/?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    $("#RTLab_GridBody").empty();
                    RTLab_Render(data, "RTLab_GridBody");
                }
            }
            , sender = null
            , before = function (e) {
                $("#RTLab_LoaderList").show();
            }
            , complete = function (e) {
                $("#RTLab_LoaderList").hide();
            }
        );
        return false;
    }

    async function RTLab_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            if (data && data.length != 0) {
                let tr = '';
                let totalLab = 0, totalTask = 0;
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    //calc total
                    totalLab += item.TotalLab;
                    totalTask += item.TotalTask;
                    tr = `<tr class="vt-number" role="row">
                                                                  <td class="vt-number-order"></td>
                                                                  <td data-name="course">
                                                                          <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.TaskEmp}">
                                                                         ${RTLab_Render_GetName(RP_DataEmployee, item.TaskEmp)}
                                                                      </a>
                                                                  </td>
                                                                  <td>${formatNumber(item.TotalLab)}</td>
                                                                  <td>${formatNumber(item.TotalTask)}</td>
                                                              </tr>`;
                    myNode.insertAdjacentHTML('beforeend', tr);
                }
                tr = `<tr class="vt-number text-white bg-gradient bg-primary mt-2 RTLab_RowTotal" role="row">
                                                              <td></td>
                                                              <td class="text-start">
                                                                  <a href="#" class="border-1 border-white border-bottom buttonViewClass text-white" data-id="0">@Local["Tất cả"]</a>
                                                              </td>
                                                              <td>${formatNumber(totalLab)}</td>
                                                              <td>${formatNumber(totalTask)}</td>
                                                          </tr>`;
                myNode.insertAdjacentHTML('beforeend', tr);
                RTLab_GeneralEvent();
            }
        }
    }

    function RTLab_Render_GetName(data, id) {
        try {
            let result = '';
            if (data && data[id] != undefined) {
                result = data[id].Name;
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    //#region // LOAD DETAIL AND RENDER
    function RTLabDetail_Loaddata() {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Labo/TaskLabo/TaskLaboGeneral/?handler=LoadataDetail"
            , data = {
                'branchID': _branchID,
                'TaskEmp': RTLab_TaskEmp,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    DataReportMainDetail = JSON.parse(JSON.stringify(data));
                    DataReportMainDetailSlice = sliceIntoChunks(data, 500);
                    $("#RTLabDetail_GridBody").empty();
                    if (DataReportMainDetailSlice && DataReportMainDetailSlice.length != 0) {
                        fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RTLabDetail_GridBody"
                            , blocknum = 100
                            , fnrender = RTLabDetail_Render
                            , fnsuccess = null
                        );
                    }
                    Count_Up("RTLabDetail_TotalData", DataReportMainDetail.length);
                }
                else if (result == "0") {
                    notiWarning();
                }
            }
            , sender = null
            , before = function (e) {
                $("#RTLabDetail_LoaderList").show();
            }
            , complete = function (e) {
                $("#RTLabDetail_LoaderList").hide();
            }
        );
    }

    function RTLabDetail_RenderMore() {
        IndexReportDetail += 1;
        if (DataReportMainDetailSlice && DataReportMainDetailSlice[IndexReportDetail]) {
            fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RTLabDetail_GridBody"
                , blocknum = 100
                , fnrender = RTLabDetail_Render
                , fnsuccess = null
            );
        }
    }

    function RTLabDetail_Render_Detail(TeethChoosing, TeethType) {
        try {
            let result = '';
            if (sys_dencos_Main != 0) {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    async function RTLabDetail_Render(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let countGroupEmp = -1, countGroupLab = -1;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tdEmp = '';
                            let tdLab = '';
                            if (item.TaskEmp != countGroupEmp) {
                                countGroupEmp = item.TaskEmp;
                                tdEmp = `<td rowspan=${item.ChildEmp}>
                                                   ${RTLab_Render_GetName(RP_DataEmployee, item.TaskEmp)}
                                                 </td>`;
                            };

                            if (item.LabID != countGroupLab) {
                                countGroupLab = item.LabID;
                                tdLab = `<td rowspan=${item.ChildLab}>${item.LabCode}</td>
                                                 <td rowspan=${item.ChildLab}>${item.LabStatus}</td>
                                                 <td rowspan=${item.ChildLab} data-name="doctor">${RTLab_Render_GetName(RP_DataEmployee, item.Doctor)}</td>
                                                 <td rowspan=${item.ChildLab} data-name="userto">${RTLab_Render_GetName(RP_DataEmployee, item.UserTo)}</td>
                                                 <td rowspan=${item.ChildLab}>
                                                     <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                         ${item.CustCode}
                                                     </a>
                                                 </td>
                                                 <td rowspan=${item.ChildLab}>${item.CustName}</td>
                                                 <td rowspan=${item.ChildLab} data-name="doccode">${item.DocCode}</td>
                                                 <td rowspan=${item.ChildLab} data-name="supname">${item.SupName}</td>
                                                 <td rowspan=${item.ChildLab} data-name="price">${formatNumber(item.Price)}</td>
                                                 <td rowspan=${item.ChildLab} data-name="detail">${RTLabDetail_Render_Detail(item.Teeth, item.TeethType)}</td>
                                                 <td rowspan=${item.ChildLab} data-name="receiptdate">${ConvertDateTimeUTC_DMYHM(item.ReceiptDate)}</td>
                                                 <td rowspan=${item.ChildLab} data-name="created">${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                                 <td rowspan=${item.ChildLab} data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>`;
                            }

                            let tr = `<tr class="vt-number" role="row">
                                              <td class="vt-number-order"></td>
                                              ${tdEmp}
                                              ${tdLab}
                                              <td>${item.Task}</td>
                                              <td>${item.TaskContent}</td>
                                              </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableDetail.Refresh();
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() => {
                    Count_Up("RTLabDetail_CurrentData", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }
    //#endregion

    //#region // Event
    function RTLab_GeneralEvent() {
        $("#RTLab_GridBody .buttonViewClass").unbind('click').on("click", function () {
            RTLab_TaskEmp = $(this).attr('data-id');
            $("#RTLabDetail_Container").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RTLabDetail_Container").offset().top
            }, 300);
            if (RTLab_TaskEmp == "0") {
                $("#RTLabDetail_Title").html('@Local["Tất cả nhân viên"]');
            }
            else {
                $("#RTLabDetail_Title").html(RTLab_Render_GetName(RP_DataEmployee, RTLab_TaskEmp));
            }
            RTLabDetail_Loaddata();
        })
    }

    function RTLab_Export() {
        syslog_ExpExcel('e', Outlang["Bao_cao_cong_viec_labo"]);
        exportToExcel("RTLab_Grid", Outlang["Bao_cao_cong_viec_labo"]);
    }

    async function RTLabDetail_Export(isOption = 0) {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#RTLabDetail_Container');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "TaskEmp": ["@Local["Nhân viên"]", (value) => {
                        return RTLab_Render_GetName(RP_DataEmployee, value)
                    }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "LabStatus": ["@Local["Trạng thái labo"]"],
                    "Doctor": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='doctor']`)).is(":checked"),
                        data: ["@Local["Người yêu cầu"]", (value) => {
                            return RTLab_Render_GetName(RP_DataEmployee, value)
                        }]
                    },
                    "UserTo": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='userto']`)).is(":checked"),
                        data: ["@Local["Người chịu trách nhiệm"]", (value) => {
                            return RTLab_Render_GetName(RP_DataEmployee, value)
                        }]
                    },
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='doccode']`)).is(":checked"),
                        data: ["@Local["Mã hồ sơ"]"]
                    },
                    "SupName": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='supname']`)).is(":checked"),
                        data: ["@Local["Nhà cung cấp"]"]
                    },
                    "Price": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='price']`)).is(":checked"),
                        data: ["@Local["Đơn giá"]"]
                    },
                    "Teeth": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='detail']`)).is(":checked"),
                        data: ["@Local["Chi tiết"]", (value, { Teeth, TeethType }) => {
                            return RTLabDetail_Render_Detail(Teeth, TeethType)
                        }]
                    },
                    "ReceiptDate": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='receiptdate']`)).is(":checked"),
                        data: ["@Local["Ngày muốn nhận"]", (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }]
                    },
                    "Created": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='created']`)).is(":checked"),
                        data: ["@Local["Ngày yêu cầu"]", (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }]
                    },
                    "BranchID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='branch']`)).is(":checked"),
                        data: ["@Local["Chi nhánh"]", (value, { BranchID }) => {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }]
                    },
                    "Task": ["@Local["Công việc"]"],
                    "TaskContent": ["@Local["Nội dung"]"],
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RTLabDetail_GridBody', PermissionTable_TabControl);
                let fileName = Outlang["Bao_cao_chi_tiet_cong_viec_labo"] + '-' + xoa_dau($("#RTLabDetail_Title").text()).replaceAll(' ', '-');
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, DataReportMainDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function RTLabDetail_PrintReport() {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "TaskEmp": ["@Local["Nhân viên"]", {
                        callbackRenderValue: (value) => {
                            return RTLab_Render_GetName(RP_DataEmployee, value)
                        }
                    }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "LabStatus": ["@Local["Trạng thái labo"]"],
                    "Doctor": ["@Local["Người yêu cầu"]", {
                        isShow: $(`.shtoogleDetail[data-name='doctor']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RTLab_Render_GetName(RP_DataEmployee, value)
                        }
                    }],
                    "UserTo": ["@Local["Người chịu trách nhiệm"]", {
                        isShow: $(`.shtoogleDetail[data-name='userto']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RTLab_Render_GetName(RP_DataEmployee, value)
                        }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.shtoogleDetail[data-name='doccode']`).is(":checked"),
                    }],
                    "SupName": ["@Local["Nhà cung cấp"]", {
                        isShow: $(`.shtoogleDetail[data-name='supname']`).is(":checked"),
                    }],
                    "Price": ["@Local["Đơn giá"]", {
                        isShow: $(`.shtoogleDetail[data-name='price']`).is(":checked"),
                    }],
                    "Teeth": ["@Local["Chi tiết"]", {
                        isShow: $(`.shtoogleDetail[data-name='detail']`).is(":checked"),
                        callbackRenderValue: (value, { Teeth, TeethType }) => {
                            return RTLabDetail_Render_Detail(Teeth, TeethType)
                        }
                    }],
                    "ReceiptDate": ["@Local["Ngày muốn nhận"]", {
                        isShow: $(`.shtoogleDetail[data-name='receiptdate']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }
                    }],
                    "Created": ["@Local["Ngày yêu cầu"]", {
                        isShow: $(`.shtoogleDetail[data-name='created']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }
                    }],
                    "BranchID": ["@Local["Chi nhánh"]", {
                        isShow: $(`.shtoogleDetail[data-name='branch']`).is(":checked"),
                        callbackRenderValue: (value, { BranchID }) => {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }
                    }],
                    "Task": ["@Local["Công việc"]"],
                    "TaskContent": ["@Local["Nội dung"]"],
                }
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let fileName = Outlang["Bao_cao_chi_tiet_cong_viec_labo"] ?? 'VTTech_PrintForm' + ' ' + $("#RTLabDetail_Title").text();
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, DataReportMainDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                                                            //#endregion

</script>


