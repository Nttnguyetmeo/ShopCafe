@page
@model MLunarCoffee.Pages.Report.Labo.General.LaboGeneralModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div id="RLG_MasterContainer">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer" data-bs-toggle="collapse" href="#RLG_MasterChart" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer" onclick="event.preventDefault(); return RLG_LoadData()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="RLG_MasterChart">
        <div class="card-body p-0 pt-0">
            <div class="row">
                <div class="col-12 col-md-12 col-lg-4 px-1 pe-lg-2">
                    <div class="">
                        <div class="col-w-300 text-center mx-auto position-relative" style="min-height: 150px;">
                            <div class="fw-bold text-center text-dark text-sm">
                                @Local["Bác sĩ"] (@Local["Phiếu"]):
                                <span id="RLG_DocChartTotal" class="fw-bolder"></span>
                            </div>
                            <div class="chart position-absolute top-50 start-50 mt-4 translate-middle">
                                <canvas id="RLG_DocChart" class="chart-canvas" height="150" width="500"></canvas>
                            </div>

                        </div>
                        <div class="flex-grow-1 mt-3">
                            <div class="mb-1 text-sm d-flex">
                                <span class="mt-1">@Local["Bác sĩ"]</span>
                                <div class="ms-auto my-auto text-end  d-flex align-items-center">
                                    <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Xuất excel"]">
                                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel" onclick="event.preventDefault(); return RLG_MasterExport('doc')" data-checkper="1"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-2 table-responsive" style="max-height: 300px">
                                <table class="table vt-table mb-0" id="RLG_DocdtContent">
                                    <thead>
                                        <tr>
                                            <th style="width: 45px">#</th>
                                            <th class="ps-6">@Local["Bác sĩ"]</th>
                                            <th>@Local["Số phiếu"]</th>
                                            <th>@Local["Tỷ lệ"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="RLG_DocdtContentBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-12 col-lg-4 px-1 px-lg-4">
                    <div class="">
                        <div class="col-w-300 text-center mx-auto position-relative" style="min-height: 150px;">
                            <div class="fw-bold text-center text-dark text-sm">
                                @Local["Loại nguyên vật liệu"] (@Local["Phiếu"]):
                                <span id="RLG_SourceChartTotal" class="fw-bolder"></span>
                            </div>
                            <div class="chart position-absolute mt-4 top-50 start-50 translate-middle">
                                <canvas id="RLG_SourceChart" class="chart-canvas" height="150"></canvas>
                            </div>
                        </div>
                        <div class="flex-grow-1 mt-3">
                            <div class="mb-1 text-sm d-flex">
                                <span class="mt-1">@Local["Loại nguyên vật liệu"]</span>
                                <div class="ms-auto my-auto text-end  d-flex align-items-center">
                                    <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Xuất excel"]">
                                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel" onclick="event.preventDefault(); return RLG_MasterExport('source')" data-checkper="1"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-2 table-responsive" style="max-height: 300px">
                                <table class="table vt-table mb-0" id="RLG_SourcedtContent">
                                    <thead>
                                        <tr>
                                            <th style="width: 45px">#</th>
                                            <th class="ps-6">@Local["Loại nguyên vật liệu"]</th>
                                            <th>@Local["Số phiếu"]</th>
                                            <th>@Local["Tỷ lệ"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="RLG_SourcedtContentBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-12 col-lg-4 px-1 ps-lg-2">
                    <div class="">
                        <div class="col-w-300 text-center mx-auto position-relative" style="min-height: 150px;">
                            <div class="fw-bold text-center text-dark text-sm">
                                @Local["Nhà cung cấp"] (@Local["Phiếu"]):
                                <span id="RLG_SupChartTotal" class="fw-bolder"></span>
                            </div>
                            <div class="chart position-absolute mt-4 top-50 start-50 translate-middle">
                                <canvas id="RLG_SupChart" class="chart-canvas" height="150"></canvas>
                            </div>
                        </div>
                        <div class="flex-grow-1 mt-3">
                            <div class="mb-1 text-sm d-flex">
                                <span class="mt-1">@Local["Nhà cung cấp"]</span>
                                <div class="ms-auto my-auto text-end  d-flex align-items-center">
                                    <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Xuất excel"]">
                                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel" onclick="event.preventDefault(); return RLG_MasterExport('sup')" data-checkper="1"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-2 table-responsive" style="max-height: 300px">
                                <table class="table vt-table mb-0" id="RLG_SupdtContent">
                                    <thead>
                                        <tr>
                                            <th style="width: 45px">#</th>
                                            <th class="ps-6">@Local["Nhà cung cấp"]</th>
                                            <th>@Local["Số phiếu"]</th>
                                            <th>@Local["Tỷ lệ"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="RLG_SupdtContentBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="RLG_DetailContainer" style="display: none">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left d-flex">
            <div class="me-3">
                <div class="ui dropdown text-dark fw-bold text-sm border-0" id="RLG_DoctorID">
                    <input type="hidden" />
                    <div class="default text">eg .@Local["Bác sĩ"]</div>
                    <div id="RLG_cbbDoctor" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
            <div class="me-3">
                <div class="ui dropdown text-dark fw-bold text-sm border-0" id="RLG_SuppID">
                    <input type="hidden" />
                    <div class="default text">eg .@Local["Nhà cung cấp"]</div>
                    <div id="RLG_cbbSupp" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
            <div class="me-3">
                <div class="ui dropdown text-dark fw-bold text-sm border-0" id="RLG_SourceID">
                    <input type="hidden" />
                    <div class="default text">eg .@Local["Nguồn khách hàng"]</div>
                    <div id="RLG_cbbSource" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
            <div class="me-3">
                <div class="ui dropdown text-dark fw-bold text-sm border-0" id="RLG_AssistID" onchange="event.preventDefault(); RLG_Filter();">
                    <input type="hidden" />
                    <div class="default text">eg .@Local["Người chịu trách nhiệm"]</div>
                    <div id="RLG_cbbAssist" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
        </div>
        <div class="right overflow-auto">
            <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                <span id="RLG_DetailCurrentData">0</span>
                <span class="mx-2">/</span>
                <span id="RLG_DetailTotalData">0</span>
            </div>
            <div class="icon-hover mx-1 mt-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#RLG_DetailDivArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1 mt-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return RLG_DetailLoaddata()"></i>
            </div>
            <div class="icon-hover mx-1 mt-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["In báo cáo"]">
                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); RLG_DetailPrintReport()"></i>
            </div>
            <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                </div>
                <div class="input-group-text icon-hover w-auto vttech-input-item">
                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLG_DetailExport(0)">@Local["Tất cả"]</i>
                </div>
                <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLG_DetailExport(1)">@Local["Tùy chọn"]</i>
                </div>
            </div>
            <div>
                <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
        <div class="toggle">
            <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                <ul class="card card-body text-dark text-capitalize opacity-10">
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="doctor" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Bác sĩ yêu cầu"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="userto" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Người chịu trách nhiệm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="custsource" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="doccode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã hồ sơ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="detail" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi tiết"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="service" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Dịch vụ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="price" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Giá tiền"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="discount" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Giảm giá"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="receiptdate" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày muốn nhận"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="created" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày yêu cầu"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="branch" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi nhánh"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="labnote" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ghi chú"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetail form-check-input" data-name="teethlayout" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Dáng răng"]</p>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row mx-0 d-flex gap-3 my-3">
        <div class="col-w-200 border border-5 border-bottom-0 border-top-0 border-end-0 border-success py-1 bg-gray-100 rounded-2 border-radius-top-start-0 border-radius-bottom-start-0">
            <p class="text-sm pb-0 mb-0 text-secondary fst-italic">@Local["Số lượng"]</p>
            <h6 id="RLG_lbTotalQuantity" class="font-weight-bolder mb-0 text-end"></h6>
        </div>
        <div class="col-w-200 border border-5 border-bottom-0 border-top-0 border-end-0 border-warning py-1 bg-gray-100 rounded-2 border-radius-top-start-0 border-radius-bottom-start-0">
            <p class="text-sm pb-0 mb-0 text-secondary fst-italic">@Local["Thành tiền"]</p>
            <h6 id="RLG_lbTotalPrice" class="font-weight-bolder mb-0 text-end"></h6>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="RLG_DetailDivArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <div id="RLG_DetailLoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table data-name="RLG_DetailGrid" class="table vt-table mb-0" id="RLG_DetailGrid">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th style="min-width: 200px">@Local["Mã labo"]</th>
                            <th style="min-width: 200px">@Local["Trạng thái labo"]</th>
                            <th style="min-width: 200px" data-name="doctor">@Local["Bác sĩ yêu cầu"]</th>
                            <th style="min-width: 220px" data-name="userto">@Local["Người chịu trách nhiệm"]</th>
                            <th style="min-width: 200px">@Local["Mã khách hàng"]</th>
                            <th style="min-width: 200px">@Local["Khách hàng"]</th>
                            <th style="min-width: 200px" data-name="custsource">@Local["Nguồn khách hàng"]</th>
                            <th style="min-width: 200px" data-name="doccode">@Local["Mã hồ sơ"]</th>
                            <th style="min-width: 200px" data-name="supname">@Local["Nhà cung cấp"]</th>
                            <th style="min-width: 200px">@Local["Số lượng"]</th>
                            <th style="min-width: 200px" data-name="price">@Local["Giá tiền"]</th>
                            <th style="min-width: 200px" data-name="discount">@Local["Giảm giá"]</th>
                            <th style="min-width: 200px">@Local["Thành tiền"]</th>
                            <th style="min-width: 200px">@Local["Thanh toán"]</th>
                            <th style="min-width: 200px" data-name="detail">@Local["Chi tiết"]</th>
                            <th style="min-width: 200px" data-name="service">@Local["Dịch vụ"]</th>
                            <th style="min-width: 200px" data-name="receiptdate">@Local["Ngày muốn nhận"]</th>
                            <th style="min-width: 200px" data-name="created">@Local["Ngày yêu cầu"]</th>
                            <th style="min-width: 200px" data-name="branch">@Local["Chi nhánh"]</th>
                            <th style="min-width: 200px" data-name="labnote">@Local["Ghi chú"]</th>
                            <th style="min-width: 200px" data-name="teethlayout">@Local["Dáng răng"]</th>
                        </tr>
                    </thead>
                    <tbody id="RLG_DetailGridBody">
                    </tbody>
                </table>
            </div>
            <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RLG_DetailRenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>

    </div>
</div>
<script type="text/javascript">
    //#region //INIT
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let RLG_DataSupplier;
    let RLG_keys = {
        'doc': { chartid: 'RLG_DocChart', charttotalid: 'RLG_DocChartTotal', dtcontent: 'RLG_DocdtContent', dtcontentbody: 'RLG_DocdtContentBody', btnView: 'RLG_DocBtnView', nameReport: `${Outlang["Bao_cao_tong_quat_labo"] ?? 'VTtech-Excel'}` }
        , 'sup': { chartid: 'RLG_SupChart', charttotalid: 'RLG_SupChartTotal', dtcontent: 'RLG_SupdtContent', dtcontentbody: 'RLG_SupdtContentBody', btnView: 'RLG_SupBtnView', nameReport: `${Outlang["Bao_cao_tong_quat_labo"] ?? 'VTtech-Excel'}` }
        , 'source': { chartid: 'RLG_SourceChart', charttotalid: 'RLG_SourceChartTotal', dtcontent: 'RLG_SourcedtContent', dtcontentbody: 'RLG_SourcedtContentBody', btnView: 'RLG_SourceBtnView', nameReport: `${Outlang["Bao_cao_tong_quat_labo"] ?? 'VTtech-Excel'}` }
    }
    let RLG_MasterID = 0;
    let RLG_Name = '';
    let RLG_Type = '';

    let xhrLoadList, xhrLoadDetail;
    let DataReportMainDetail, DataReportMainDetailSlice, DataReportMainDetailRoot;
    let IndexReportDetail = 0;
    let timeoutCountDetail;
    let shtableDetail;

    $(document).ready(function () {
        ToolPopper();
        RLG_LoadIni();
        shtableDetail = $("#RLG_DetailGrid").TableExpandColumn({
            shtoogle: $('.shtoogleDetail')
        });
        Checking_TabControl_Permission();
    });

    function RLG_LoadIni() {
        AjaxLoad(url = "/Report/Labo/General/LaboGeneral/?handler=LoadInitialize"
            , data = {}
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let data_doc = data.Doctor ?? [];
                    data_doc.unshift({ ID: 0, Name: "@Local["Khác"]" });
                    data_doc.unshift({ ID: -1, Name: "@Local["Bác sĩ"]" });
                    let data_supp = (data.Supplier ?? []);
                    data_supp.unshift({ ID: 0, Name: "@Local["Khác"]" });
                    data_supp.unshift({ ID: -1, Name: "@Local["Nhà cung cấp"]" });
                    RLG_DataSupplier = (data.Supplier ?? []).reduce((pre, arr) => { if (!pre[arr.ID]) pre[arr.ID] = arr; return pre }, {});
                    RLG_LoadData();

                    Load_Combo(data_doc, "RLG_cbbDoctor", true);
                    Load_Combo(data_supp, "RLG_cbbSupp", true);


                    Load_Combo(Object.values(RP_DataCustomerSource), "RLG_cbbSource", true, "@Local["Nguồn khách hàng"]");

                    $("#RLG_DoctorID").dropdown("refresh");
                    $("#RLG_DoctorID").dropdown("set selected", '-1');

                    $("#RLG_SuppID").dropdown("refresh");
                    $("#RLG_SuppID").dropdown("set selected", '-1');

                    $("#RLG_SourceID").dropdown("refresh");
                    $("#RLG_SourceID").dropdown("set selected", '0');

                    $("#RLG_DoctorID").bind('change').on('change', RLG_DetailLoaddata);
                    $("#RLG_SuppID").bind('change').on('change', RLG_DetailLoaddata);
                    $("#RLG_SourceID").bind('change').on('change', RLG_DetailLoaddata);
                } else {
                    notiError_SW();
                }
            }
        );

    }
    //#endregion

    //#region //LOADDATA
    function RLG_LoadData() {
        _branchID = "@Model._branchID";
        _dateFrom = "@Model._dateFrom";
        _dateTo = "@Model._dateTo";
        $("#RLG_dtMasterBody").empty();
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Labo/General/LaboGeneral/?handler=LoadData"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let datas = JSON.parse(result);
                    let { Table: dataDoc, Table1: dataSup, Table2: dataSource } = datas;
                    RLG_MasterRenderChart(dataDoc, 'doc');
                    RLG_MasterRenderChart(dataSup, 'sup');
                    RLG_MasterRenderChart(dataSource, 'source');
                }
                else if (result == "0") {
                    notiWarning();
                }
            }
            , sender = null
            , before = function (e) {
                $("#RLG_LoaderList").show();
            }
            , complete = function (e) {
                $("#RLG_LoaderList").hide();
            }
        );
        return false;
    }
    //#endregion
    //#region //RENDER DATA
    async function RLG_MasterRenderChart(data, type, isChart = 1) {
        return new Promise(resolve => {
            let Total = data.reduce((pre, arr) => {
                return pre + Number(arr.Total)
            }, 0);
            if (isChart == 1) {
                $(`#${RLG_keys[type].charttotalid}`).html(formatNumber(Number(Total)));
                rp_pie(RLG_keys[type].chartid, data, 'Name', 'Total')
            }
            RLG_ReportPie_Description(data, Total, type, isChart);
            resolve();
        })
    }

    function RLG_ReportPie_Description(data, total, type, isChart = 1) {
        let id = RLG_keys[type].dtcontentbody;
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let = 0;
            let totalProportion = 0;
            let percent = 0;
            if (data && data.length > 0) {
                for (let j = 0; j < data.length; j++) {
                    let item = data[j];
                    let badgeDes = '', strProportion = '';
                    let _color = colorChart[j % colorChart.length];
                    percent = ((item.Total / total) * 100).toFixed(2);

                    if (j == data.length - 1) {
                        percent = (100 - totalProportion).toFixed(2);
                    }
                    totalProportion += Number(percent);
                    strProportion = `<span class="fw-bold"> ${percent}</span>`
                    if (isChart == 1) {
                        badgeDes = `<span class="badge me-4" style="background-color: ${_color}; width: 21px; height: 21px"> </span>`;
                    }

                    let tr = `<td class="vt-number-order"></td>
                                  <td>
                                      <div class="d-flex px-2 py-0">
                                          ${badgeDes}
                                          <div class="d-flex flex-column justify-content-center ps-1">
                                                <a href="#" class="border-1 border-primary border-bottom ${RLG_keys[type].btnView} mb-0 text-sm fw-bold" data-id="${item.ID}" data-name="${item.Name != 'Sys_khac' ? item.Name : '@Local["Khác"]'}">
                                                ${item.Name != 'Sys_khac' ? item.Name : '@Local["Khác"]'}
                                            </a>
                                          </div>
                                      </div>
                                  </td>
                                  <td class="align-middle text-dark text-sm ">
                                      <span class="pe-2 fw-bold me-2"> ${formatNumberToMilion(item.Total)} </span>
                                  </td>
                                  <td class="align-middle text-dark text-sm ">
                                      ${strProportion}
                                  </td>`;
                    stringContent += `<tr class="vt-number"> ${tr} </tr>`;
                }
                stringContent += `<tr class="vt-number mt-2">
                                         <td></td>
                                         <td class="text-start">
                                             <div class="d-flex px-2 py-0">
                                                 ${isChart == 1 ? `<span class="badge bg-gradient bg-primary me-4" style="width: 21px; height: 21px"> </span>` : ''}
                                                 <div class="d-flex flex-column justify-content-center ps-1">
                                                      <a href="#" class="border-1 border-primary border-bottom ${RLG_keys[type].btnView} text-primary mb-0 text-sm fw-bold" data-id="-1" data-name"@Local["Tất cả"]">@Local["Tất cả"]</a>
                                                 </div>
                                             </div>
                                         </td>
                                         <td class="">
                                             <span class="fw-bold me-2 pe-2"> ${formatNumberToMilion(total)} </span>
                                         </td>
                                         <td class="">
                                             <span class="fw-bold"> ${totalProportion}</span>
                                         </td>
                                      </tr>`;
            }
            document.getElementById(id).innerHTML = stringContent;
            RLG_Event();
        }
    }
    //#endregion

    //#region //EVENT
    function RLG_Event() {
        let keyDoc = RLG_keys['doc'];
        let keySup = RLG_keys['sup'];
        let keySource = RLG_keys['source'];
        $(`#${keyDoc.dtcontentbody} .${keyDoc.btnView}`).unbind('click').on("click", function () {
            RLG_MasterID = $(this).attr('data-id');
            RLG_Name = $(this).attr('data-name') ?? '';
            RLG_Type = 'doc';
            $("#RLG_DetailContainer").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RLG_DetailContainer").offset().top
            }, 300);

            RLG_ResetCombo();

            $("#RLG_DoctorID").dropdown("refresh");
            $("#RLG_DoctorID").dropdown("set selected", RLG_MasterID);

            if (RLG_MasterID != "-1") {
                $("#RLG_DoctorID").addClass('disabled bg-body')
            }
            RLG_DetailLoaddata()
        })

        $(`#${keySup.dtcontentbody} .${keySup.btnView}`).unbind('click').on("click", function () {
            RLG_MasterID = $(this).attr('data-id');
            RLG_Name = $(this).attr('data-name') ?? '';
            RLG_Type = 'sup';
            $("#RLG_DetailContainer").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RLG_DetailContainer").offset().top
            }, 300);

            RLG_ResetCombo();

            $("#RLG_SuppID").dropdown("refresh");
            $("#RLG_SuppID").dropdown("set selected", RLG_MasterID);

            if (RLG_MasterID != "-1") {
                $("#RLG_SuppID").addClass('disabled bg-body')
            }
            RLG_DetailLoaddata()
        })

        $(`#${keySource.dtcontentbody} .${keySource.btnView}`).unbind('click').on("click", function () {
            RLG_MasterID = $(this).attr('data-id');
            RLG_Name = $(this).attr('data-name') ?? '';
            RLG_Type = 'source';
            $("#RLG_DetailContainer").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RLG_DetailContainer").offset().top
            }, 300);

            RLG_ResetCombo();

            $("#RLG_SourceID").dropdown("refresh");
            $("#RLG_SourceID").dropdown("set selected", RLG_MasterID);

            if (RLG_MasterID != "-1") {
                $("#RLG_SourceID").addClass('disabled bg-body')
            }
            RLG_DetailLoaddata()
        })
    }

    function RLG_ResetCombo() {
        $("#RLG_DoctorID").removeClass('disabled bg-body');
        $("#RLG_SuppID").removeClass('disabled bg-body');
        $("#RLG_SourceID").removeClass('disabled bg-body');

        $("#RLG_DoctorID").unbind('change');
        $("#RLG_DoctorID").dropdown("refresh");
        $("#RLG_DoctorID").dropdown("set selected", "-1");
        $("#RLG_DoctorID").bind('change').on('change', RLG_DetailLoaddata);

        $("#RLG_SuppID").unbind('change');
        $("#RLG_SuppID").dropdown("refresh");
        $("#RLG_SuppID").dropdown("set selected", "-1");
        $("#RLG_SuppID").bind('change').on('change', RLG_DetailLoaddata);

        $("#RLG_SourceID").unbind('change');
        $("#RLG_SourceID").dropdown("refresh");
        $("#RLG_SourceID").dropdown("set selected", "0");
        $("#RLG_SourceID").bind('change').on('change', RLG_DetailLoaddata);
    }

    function RLG_Filter() {
        if (DataReportMainDetailRoot && DataReportMainDetailRoot.length > 0) {
            let userTo = !isNaN(Number($('#RLG_AssistID').dropdown('get value'))) ? Number($('#RLG_AssistID').dropdown('get value')) : 0;
            DataReportMainDetail = DataReportMainDetailRoot.filter(work => { return userTo == 0 || work["UserToID"] == userTo });
            $("#RLG_DetailTotalData").html(0);
            Count_Up("RLG_DetailTotalData", DataReportMainDetail.length);
            $("#RLG_DetailGridBody").empty();
            let data = [...DataReportMainDetail];
            DataReportMainDetailSlice = sliceIntoChunks(data, 500);
            IndexReportDetail = 0;
            if (DataReportMainDetailSlice && DataReportMainDetailSlice.length != 0) {
                fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RLG_DetailGridBody"
                    , blocknum = 100
                    , fnrender = RLG_DetailRender
                    , fnsuccess = null
                );
            }
        }
    }
    //#endregion

    //#region //LOADDATA DETAIL
    function RLG_DetailLoaddata() {
        _branchID = "@Model._branchID";
        _dateFrom = "@Model._dateFrom";
        _dateTo = "@Model._dateTo";
        let docID = !isNaN(Number($('#RLG_DoctorID').dropdown('get value'))) ? Number($('#RLG_DoctorID').dropdown('get value')) : -1;
        let suppID = !isNaN(Number($('#RLG_SuppID').dropdown('get value'))) ? Number($('#RLG_SuppID').dropdown('get value')) : -1;
        let sourceID = !isNaN(Number($('#RLG_SourceID').dropdown('get value'))) ? Number($('#RLG_SourceID').dropdown('get value')) : 0;
        //let userTo = !isNaN(Number($('#RLG_AssistID').dropdown('get value'))) ? Number($('#RLG_AssistID').dropdown('get value')) : 0;
        $("#RLG_DetailGridBody").empty();
        DataReportMainDetailRoot = [];
        DataReportMainDetail = [];
        DataReportMainDetailSlice = {};
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Labo/General/LaboGeneral/?handler=LoadDataDetail"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
                'docID': docID,
                'suppID': suppID,
                'sourceID': sourceID,
                //'userTo': userTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let datas = JSON.parse(result);
                    let data = datas.Table;
                    let dataUser = datas.Table1;
                    RLG_RenderTotal(data);
                    Load_Combo(dataUser, "RLG_cbbAssist", true, "@Local["Người chịu trách nhiệm"]");
                    $("#RLG_AssistID").dropdown();
                    $("#RLG_AssistID").dropdown("set selected", '0');
                    DataReportMainDetailRoot = JSON.parse(JSON.stringify(data));
                    DataReportMainDetail = JSON.parse(JSON.stringify(data));
                    DataReportMainDetailSlice = sliceIntoChunks(data, 500);
                    if (DataReportMainDetailSlice && DataReportMainDetailSlice.length != 0) {
                        fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RLG_DetailGridBody"
                            , blocknum = 100
                            , fnrender = RLG_DetailRender
                            , fnsuccess = null
                        );
                    }
                    Count_Up("RLG_DetailTotalData", DataReportMainDetail.length);
                }
                else if (result == "0") {
                    notiWarning();
                }
            }
            , sender = null
            , before = function (e) {
                $("#RLG_LoaderList").show();
            }
            , complete = function (e) {
                $("#RLG_LoaderList").hide();
            }
        );
    }

    function RLG_DetailRenderMore() {
        IndexReportDetail += 1;
        if (DataReportMainDetailSlice && DataReportMainDetailSlice[IndexReportDetail]) {
            fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RLG_DetailGridBody"
                , blocknum = 100
                , fnrender = RLG_DetailRender
                , fnsuccess = null
            );
        }
    }

    async function RLG_RenderTotal(data) {
        new Promise(resolve => {
            try {
                let totalQuantity = 0, totalPrice = 0;
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        totalQuantity += item.Quantity;
                        totalPrice += item.PriceDiscounted;
                    }

                }
                Count_Up('RLG_lbTotalQuantity', totalQuantity);
                Count_Up('RLG_lbTotalPrice', totalPrice, 1);
            }
            catch (e) {
                $('#RLG_lbTotalQuantity').html(0);
                $('#RLG_lbTotalPrice').html(0);
            }
        })
    }
    //#endregion

    //#region //RENDER DATA DETAIL
    function RLG_DetailRender_Detail(TeethChoosing, TeethType) {
        try {
            let result = '';
            if (sys_dencos_Main != 0) {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    async function RLG_DetailRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let countGroupEmp = -1, countGroupLab = -1;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = `<tr class="vt-number" role="row">
                                                                      <td class="vt-number-order"></td>
                                                                      <td>${item.LabCode}</td>
                                                                      <td>${item.LabStatus}</td>
                                                                      <td data-name="doctor">${RLG_Render_GetName(RP_DataEmployee, item.DoctorID)}</td>
                                                                      <td data-name="userto">${item.UserTo}</td>
                                                                      <td>
                                                                          <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                                              ${item.CustCode}
                                                                          </a>
                                                                      </td>
                                                                      <td>${item.CustName}</td>
                                                                      <td data-name="custsource">${RLG_Render_GetName(RP_DataCustomerSource, item.CustSource)}</td>
                                                                      <td data-name="doccode">${item.DocCode}</td>
                                                                      <td data-name="supname">${RLG_Render_GetName(RLG_DataSupplier, item.SupID)}</td>
                                                                      <td>${formatNumber(item.Quantity)}</td>
                                                                      <td data-name="price">${formatNumber(item.PriceRoot)}</td>
                                                                      <td data-name="discount">${formatNumber(item.PriceRoot - item.PriceDiscounted)}</td>
                                                                      <td>${formatNumber(item.PriceDiscounted)}</td>
                                                                      <td>${formatNumber(item.Payment)}</td>
                                                                      <td data-name="detail">${RLG_DetailRender_Detail(item.Teeth, item.TeethType)}</td>
                                                                      <td data-name="service">${RLG_Render_GetName(RP_DataService, item.ServiceID)}</td>
                                                                      <td data-name="receiptdate">${ConvertDateTimeUTC_DMYHM(item.ReceiptDate)}</td>
                                                                      <td data-name="created">${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                                                      <td data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>
                                                                      <td data-name="labnote">${item.LabContent}</td>
                                                                      <td  data-name="teethlayout">${item.TeethLayout}</td>
                                                                      `
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableDetail.Refresh();
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() => {
                    Count_Up("RLG_DetailCurrentData", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }

    function RLG_Render_GetName(data, id) {
        try {
            let result = '';
            if (data && data[id] != undefined) {
                result = data[id].Name;
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion

    //#region //EXPORT PRINT
    function RLG_MasterExport(type = 'doc') {
        let id = RLG_keys[type].dtcontent;
        let name = RLG_keys[type].nameReport ?? 'VTtech-Excel';
        syslog_ExpExcel('e', name);
        exportToExcel(id, name);
    }

    async function RLG_DetailExport(isOption = 0) {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#RLG_DetailContainer');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "LabStatus": ["@Local["Trạng thái labo"]"],
                    "DoctorID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='doctor']`)).is(":checked"),
                        data: ["@Local["Bác sĩ yêu cầu"]", (value) => {
                            return RLG_Render_GetName(RP_DataEmployee, value)
                        }]
                    },
                    "UserTo": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='userto']`)).is(":checked"),
                        data: ["@Local["Người chịu trách nhiệm"]"]
                    },
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "CustSource": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='custsource']`)).is(":checked"),
                        data: ["@Local["Nguồn khách hàng"]", (value) => {
                            return RLG_Render_GetName(RP_DataCustomerSource, value)
                        }]
                    },
                    "DocCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='doccode']`)).is(":checked"),
                        data: ["@Local["Mã hồ sơ"]"]
                    },
                    "SupID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='supname']`)).is(":checked"),
                        data: ["@Local["Nhà cung cấp"]", (value) => {
                            return RLG_Render_GetName(RLG_DataSupplier, value)
                        }]
                    },
                    "Quantity": ["@Local["Số lượng"]"],
                    "PriceRoot": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='price']`)).is(":checked"),
                        data: ["@Local["Giá tiền"]"]
                    },
                    "PriceDiscount": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='discount']`)).is(":checked"),
                        data: ["@Local["Giảm giá"]", (value, { PriceRoot, PriceDiscounted }) => {
                            return PriceRoot - PriceDiscounted
                        }]
                    },
                    "PriceDiscounted": ["@Local["Thành tiền"]"],
                    "Payment": ["@Local["Thanh toán"]"],
                    "Teeth": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='detail']`)).is(":checked"),
                        data: ["@Local["Chi tiết"]", (value, { Teeth, TeethType }) => {
                            return RLG_DetailRender_Detail(Teeth, TeethType)
                        }]
                    },
                    "ServiceID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='service']`)).is(":checked"),
                        data: ["@Local["Dịch vụ"]", (value) => {
                            return RLG_Render_GetName(RP_DataService, value)
                        }]
                    },
                    "ReceiptDate": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='receiptdate']`)).is(":checked"),
                        data: ["@Local["Ngày muốn nhận"]", (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }]
                    },
                    "Created": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='created']`)).is(":checked"),
                        data: ["@Local["Ngày yêu cầu"]", (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }]
                    },
                    "BranchID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='branch']`)).is(":checked"),
                        data: ["@Local["Chi nhánh"]", (value, { BranchID }) => {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }]
                    },
                    "LabContent": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='labnote']`)).is(":checked"),
                        data: ["@Local["Ghi chú"]"]
                    },
                    "TeethLayout": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='teethlayout']`)).is(":checked"),
                        data: ["@Local["Dáng răng"]"]
                    }
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RLG_DetailGridBody', PermissionTable_TabControl);
                let fileName = Outlang["Bao_cao_chi_tiet_cong_viec_labo"] ?? "VTtech-Excel" + '-' + xoa_dau(RLG_Name)?.replaceAll(' ', '-');
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, DataReportMainDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function RLG_DetailPrintReport() {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "LabStatus": ["@Local["Trạng thái labo"]"],
                    "DoctorID": ["@Local["Bác sĩ yêu cầu"]", {
                        isShow: $(`.shtoogleDetail[data-name='doctor']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RLG_Render_GetName(RP_DataEmployee, value)
                        }
                    }],
                    "UserTo": ["@Local["Người chịu trách nhiệm"]", {
                        isShow: $(`.shtoogleDetail[data-name='userto']`).is(":checked"),
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.shtoogleDetail[data-name='doccode']`).is(":checked"),
                    }],
                    "SupID": ["@Local["Nhà cung cấp"]", {
                        isShow: $(`.shtoogleDetail[data-name='supname']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RLG_Render_GetName(RLG_DataSupplier, value)
                        }

                    }],
                    "Quantity": ["@Local["Số lượng"]", {
                        isTotalFooter: true
                    }],
                    "PriceRoot": ["@Local["Giá tiền"]", {
                        isShow: $(`.shtoogleDetail[data-name='price']`).is(":checked")
                    }],
                    "PriceDiscount": ["@Local["Giảm giá"]", {
                        isShow: $(`.shtoogleDetail[data-name='discount']`).is(":checked"),
                        callbackRenderValue: (value, { PriceRoot, PriceDiscounted }) => {
                            return PriceRoot - PriceDiscounted;
                        }

                    }],
                    "PriceDiscounted": ["@Local["Thành tiền"]", {
                        isTotalFooter: true
                    }],
                    "Teeth": ["@Local["Chi tiết"]", {
                        isShow: $(`.shtoogleDetail[data-name='detail']`).is(":checked"),
                        callbackRenderValue: (value, { Teeth, TeethType }) => {
                            return RLG_DetailRender_Detail(Teeth, TeethType)
                        }
                    }],
                    "ServiceID": ["@Local["Dịch vụ"]", {
                        isShow: $(`.shtoogleDetail[data-name='service']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RLG_Render_GetName(RP_DataService, value)
                        }
                    }],
                    "ReceiptDate": ["@Local["Ngày muốn nhận"]", {
                        isShow: $(`.shtoogleDetail[data-name='receiptdate']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }
                    }],
                    "Created": ["@Local["Ngày yêu cầu"]", {
                        isShow: $(`.shtoogleDetail[data-name='created']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return ConvertDateTimeUTC_DMYHM(value)
                        }
                    }],
                    "BranchID": ["@Local["Chi nhánh"]", {
                        isShow: $(`.shtoogleDetail[data-name='branch']`).is(":checked"),
                        callbackRenderValue: (value, { BranchID }) => {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }
                    }],
                    "LabContent": ["@Local["Ghi chú"]", {
                        isShow: $(`.shtoogleDetail[data-name='labnote']`).is(":checked")
                    }],
                    "TeethLayout": ["@Local["Dáng răng"]", {
                        isShow: $(`.shtoogleDetail[data-name='teethlayout']`).is(":checked")
                    }]
                }
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let fileName = Outlang["Bao_cao_chi_tiet_cong_viec_labo"] ?? 'VTTech_PrintForm' + ' ' + $("#RLG_DetailTitle").text();
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, DataReportMainDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                                                                                                                    //#endregion

        //#endregion
</script>
<style>

    .higheraver {
        background: #82d61652;
    }

    .loweraver {
        background: #ff888826;
    }

    #RLG_MasterChart .progress {
        width: 100%;
        height: 20px;
        background: #e9ecef00 !important
    }

    #RLG_MasterChart .progress-bar {
        height: 24px;
    }

    #RLG_DoctorID .dropdown.icon {
        margin-left: 0;
    }
</style>

