@page
@model MLunarCoffee.Pages.Report.ServiceStatus.Refund.RefundGrid
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>

<div id="RD_GeneralDetail" style="display: none">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="left">
                <p id="RD_DetailRefund" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#RD_DivGridDetail" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return RD_ExportDetail()"></i>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="RD_DivGridDetail">
            <div class="card-body p-0 overflow-y mh-100">
                <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                    <table data-name="RD_GridDetail" class="table vt-table mb-0" id="RD_GridDetail">
                        <thead>
                            <tr>
                                <th style="width: 60px">#</th>
                                <th style="min-width: 140px">@Local["Mã phiếu"]</th>
                                <th data-name="reason" style="min-width:250px;">@Local["Lý do hoàn tiền"]</th>
                                <th style="min-width:170px;">@Local["Mã khách hàng"]</th>
                                <th style="min-width:170px;" data-name="custcodeold">@Local["Mã khách hàng cũ"]</th>
                                <th style="min-width:170px;">@Local["Tên khách hàng"]</th>
                                <th data-name="service" style="min-width:170px;">@Local["Dịch vụ"]</th>
                                <th style="text-align: center; min-width:110px;">@Local["Tiền hoàn"]</th>
                                <th style="min-width:130px;">@Local["Hình thức"]</th>
                                <th style="min-width:130px;">@Local["Chi nhánh"]</th>
                                <th data-name="type" style="min-width: 160px;">@Local["Loại"]</th>
                                <th style="min-width:150px;">@Local["Ngày hoàn"]</th>
                                <th style="min-width:150px;">@Local["Người hoàn"]</th>
                            </tr>
                        </thead>
                        <tbody id="RD_GridDetailBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
    let xhrLoadList, xhrLoadDetail;
    let shtable;
    $(document).ready(function () {
        shtable = $("#RD_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        ToolPopper();
        Checking_TabControl_Permission();
    });


    //#region // LOAD DETAIL AND RENDER
    function RD_DetailLoad (id) {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        let _branchID = "@Model._branchID";
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        xhrLoadDetail = AjaxLoad(url = "/Report/ServiceStatus/Refund/RefundGrid/?handler=LoadataDetail"
            , data = {
                'branchID': _branchID,
                'reasonID': id,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function() { notiError_SW(); }
            , success = function(result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    $("#RD_GridDetailBody").empty();
                    fnRenderBlock(data, "RD_GridDetailBody"
                        , blocknum = 300
                        , fnrender = RD_DetailRender
                        , fnsuccess = null
                    );
                }
                else {
                    notiError_SW();
                }
            }
        );
    }
    async function RD_DetailRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let mark = 1;
                        let count = 1;
                        let tr = '';
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let obj = Fun_GetObject_ByID(RP_DataEmployee, item.CreatedBy);
                            let CreatedName = (obj != null) ? obj.Name : 'unknown';
                            let type = '';
                            let serviceName = '';
                            switch(item.TypePayment){
                                case 0:
                                    type = '@Local["Dịch vụ/sản phẩm"]';
                                    serviceName = (RP_DataService[item.ServiceID] != undefined) ? RP_DataService[item.ServiceID].Name : '';
                                    break;
                                case 1:
                                    type = '@Local["Thẻ"]';
                                     serviceName = (RP_DataCard[item.CardID] != undefined) ? RP_DataCard[item.CardID].Name : '';
                                    break;
                                case 2:
                                    type = '@Local["Tiền cọc"]';
                                    serviceName = '';
                                    break;
                                case 3:
                                    type = '@Local["Đơn thuốc"]';
                                    serviceName = (RP_DataMedicine[item.MedID] != undefined) ? RP_DataMedicine[item.MedID].Name : '';
                                    break;
                            }
                            let tr = `<tr class="vt-number" role="row">
                                          <td class="vt-number-order"></td>
                                          <td data-name="invoice" class="text-primary">
                                            ${item.InvoiceNum}
                                          </td>
                                          <td>${item.ReasonName}</td>
                                          <td>
                                              <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustomerID}&ver=${versionofWebApplication}">${item.CustomerCode}</a>
                                          </td>
                                          <td data-name="custcodeold">${item.CustOldCode}</td>
                                          <td>${item.CustomerName}</td>
                                          <td data-name="service">${serviceName}</td>
                                          <td data-name="payment">${formatNumber(item.Amount)}</td>
                                          <td data-name="method">${item.MethodName}</td>
                                          <td data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>
                                          <td data-name="type">${type}</td>
                                          <td >${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                          <td>${CreatedName}</td>
                                      </tr>`;
                             myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtable.Refresh();
                resolve();
            }, 10)

        })
    }
    //#endregion

    //#region // Event
    async function RD_ExportDetail () {
        let fileName = xoa_dau($("#RD_DetailRefund").text()).replaceAll(' ', '-');
        syslog_ExpExcel('e', fileName);
        await exportToExcel("RD_GridDetail", fileName);
    }

    //#endregion

</script>