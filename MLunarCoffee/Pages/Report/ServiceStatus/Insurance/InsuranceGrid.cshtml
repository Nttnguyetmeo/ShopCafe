@page
@model MLunarCoffee.Pages.Report.ServiceStatus.Insurance.InsuranceGrid
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="vtcardheader card-header pb-0 px-0">
    <div class="left">
        <h6 class="mb-0">@Local["Bảo hiểm"]</h6>
        <p class="text-sm mb-0">@Local["Báo cáo bảo hiểm được sử dụng"]</p>
    </div>
    <div class="right">
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local["Thu gọn"]">
            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
               data-bs-toggle="collapse" href="#IS_DivPie" aria-expanded="true"></i>
        </div>
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local["Tải lại"]">
            <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
               onclick="event.preventDefault(); return IS_LoadDataReport()"></i>
        </div>
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local["Xuất excel"]">
            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
               onclick="event.preventDefault(); return IS_Export()"></i>
        </div>
    </div>
</div>
<div class="collapsesticky collapse show" id="IS_DivPie">
    <div class="card-body p-0 pt-0">
        <div class="row px-2">
            <div class="col-12 col-sm-12 col-md-12 col-xl-4 p-1">
                <div class="fw-bold text-center text-dark text-sm">
                    @Local["Bảo hiểm"]:
                    <span id="IS_PieTotalPrice" class="fw-bolder"></span>
                </div>
                <div class="position-relative mt-0 mt-md-4 my-2" style="min-height: 150px;">
                    <div class="chart position-absolute top-50 start-50 translate-middle">
                        <canvas id="IS_PiePrice" class="chart-canvas" height="180"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-12 col-xl-8 p-1">
                <div class="mt-2 table-responsive">
                    <table class="table vt-table mb-0" id="IS_Grid">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th class="ps-6">@Local["Bảo hiểm"]</th>
                                <th>@Local["Số lần sử dụng"]</th>
                                <th>@Local["Tiền dịch vụ"]</th>
                                <th>@Local["Tiền bảo hiểm"]</th>
                                <th>@Local["Tỷ lệ"] (%)</th>
                            </tr>
                        </thead>
                        <tbody id="IS_GridBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="IS_GeneralDetail" style="display: none">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="IS_DetailInsurance" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#IS_DivDetail" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return IS_ExportDetail()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="IS_DivDetail">
        <div class="card-body p-0 pt-0">
            <div class="m-0 mb-3 mt-1 mobile-responsive vt-header-sticky">
                <table data-name="IS_GridDetail" class="table vt-table mb-0" id="IS_GridDetail">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th style="min-width: 140px">@Local["Mã khách hàng"]</th>
                            <th style="min-width:230px;">@Local["Khách hàng"]</th>
                            <th style="min-width:230px;">@Local["Người phụ trách"]</th>
                            <th style="min-width:200px;">@Local["Bảo hiểm"]</th>
                            <th style="min-width:170px;">@Local["Dịch vụ/sản phẩm"]</th>
                            <th style="min-width:110px;">@Local["Số tiền"]</th>
                            <th>@Local["Tiền bảo hiểm"]</th>
                            <th style="min-width:130px;">@Local["Chi nhánh"]</th>
                            <th style="min-width:150px;">@Local["Ngày tạo"]</th>
                            <th style="min-width:130px;">@Local["Người tạo"]</th>
                        </tr>
                    </thead>
                    <tbody id="IS_GridDetailBody">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
    let xhrLoadList, xhrLoadDetail;
    let DataEmp;
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    $(document).ready(function () {
        ToolPopper();
        IS_LoadDataReport();
        IS_LoadEmployee();
        Checking_TabControl_Permission();
    });

    function IS_LoadDataReport() {
        AjaxLoad(url = "/Report/ServiceStatus/Insurance/InsuranceGrid?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let pieprice = JSON.parse(result);
                    let TotalInsurAmount = 0;
                    for (let i = 0; i < pieprice.length; i++) {
                        TotalInsurAmount += Number(pieprice[i]['InsurAmount']);
                    }
                    $('#IS_PieTotalPrice').html(formatNumberToMilion(Number(TotalInsurAmount)));
                    IS_ReportPie_Description(pieprice, TotalInsurAmount, 'IS_GridBody');
                    rp_pie("IS_PiePrice", pieprice, 'Name', 'InsurAmount')
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;

    }

    function IS_ReportPie_Description(data, total, id) {

        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let = 0;
            let totalNumber = 0, totalAmountInsur = 0;
            let totalProportion = 0;
            let percent = 0;
            if (data && data.length > 0) {
                for (let j = 0; j < data.length; j++) {
                    let item = data[j];
                    let _color = colorChart[j % colorChart.length];
                    totalNumber += Number(item['NumberOfInsurance']);
                    percent = item['Proportion'].toFixed(2);
                    totalAmountInsur += item['InsurAmount'];

                    if (j == data.length - 1) {
                        percent = (totalProportion != 0 && percent != 0) ? (100 - totalProportion).toFixed(2) : 100
                    }
                    totalProportion += Number(percent);
                    if (totalProportion > 100) {
                        percent = (percent - (totalProportion - 100)).toFixed(2);
                        totalProportion = 100;
                    }
                    let tr = `<td class="vt-number-order"></td>
                              <td>
                                  <div class="d-flex px-2 py-0">
                                      <span class="badge" style="background-color: ${_color}; width: 21px; height: 21px"> </span>
                                      <div class="d-flex flex-column justify-content-center ms-4 ps-1">
                                        <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item['InsuranceID']}" data-name="${item['Name']}">
                                            ${item['Name']}
                                        </a>
                                      </div>
                                  </div>
                              </td>
                              <td class="align-middle text-end text-dark text-sm ">
                                  <span class="pe-2 fw-bold me-2"> ${formatNumber(item['NumberOfInsurance'])} </span>
                              </td>
                              <td class="align-middle text-end text-dark text-sm ">
                                  <span class="pe-2 fw-bold me-2"> ${formatNumber(item['Amount'])} </span>
                              </td>
                              <td class="align-middle text-end text-dark text-sm ">
                                  <span class="pe-2 fw-bold me-2"> ${formatNumber(item['InsurAmount'])} </span>
                              </td>
                              <td class="align-middle text-end text-dark text-sm ">
                                  <span class="fw-normal"> ${percent}</span>
                              </td>`;

                    stringContent += `<tr class="vt-number"> ${tr} </tr>`;
                }
                stringContent += `<tr class="vt-number text-white bg-gradient bg-primary mt-2">
                                                <td></td>
                                                <td class="text-start">
                                                    <div class="d-flex px-2 py-0">
                                                        <span class="badge bg-gradient bg-primary" style="width: 21px; height: 21px"> </span>
                                                        <div class="d-flex flex-column justify-content-center ms-4 ps-1">
                                                             <a href="#" class="border-1 border-white border-bottom buttonViewClass text-white mb-0 text-sm fw-bold" data-id="0">@Local["Tất cả"]</a>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="text-end">
                                                    <span class="fw-normal me-2 pe-2"> ${formatNumberToMilion(totalNumber)} </span>
                                                </td>
                                                <td class="text-end">
                                                    <span class="fw-normal me-2 pe-2"> ${formatNumberToMilion(total)} </span>
                                                </td>
                                                <td class="text-end">
                                                    <span class="fw-normal me-2 pe-2"> ${formatNumberToMilion(totalAmountInsur)} </span>
                                                </td>
                                                <td class="text-end">
                                                    <span class="fw-normal">${totalProportion}</span>
                                                </td>
                                             </tr>`;
            }
            document.getElementById(id).innerHTML = stringContent;
            IS_GeneralEvent();
        }
    }

    //#region // LOAD EMPLOYEE
    function IS_LoadEmployee() {
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee]
            , function (data) {
                DataEmp = data[0];
            });
    }
    //#endregion
    //#region // LOAD DETAIL AND RENDER
    function IS_DetailLoad(id) {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        xhrLoadDetail = AjaxLoad(url = "/Report/ServiceStatus/Insurance/InsuranceGrid?handler=LoadataDetail"
            , data = {
                'branchID': _branchID,
                'insuranceID': id,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    $("#IS_GridDetailBody").empty();
                    fnRenderBlock(data, "IS_GridDetailBody"
                        , blocknum = 300
                        , fnrender = IS_DetailRender
                        , fnsuccess = null
                    );
                }
                else {
                    notiError_SW();
                }
            }
        );
    }
    async function IS_DetailRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let obj = Fun_GetObject_ByID(DataEmp, item.CreatedBy);
                            let CreatedName = (obj != null) ? obj.Name : '@Local["Không có dữ liệu"]';
                            let tr = `<tr class="vt-number" role="row">
                                                      <td class="vt-number-order"></td>
                                                      <td data-name="custcode">
                                                          <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                             ${item.CustCode}
                                                          </a>
                                                      </td>
                                                      <td data-name="custname">${item.CustName}</td>
                                                      <td data-name="emp2">${Fun_GetName_ByID(DataEmp, item.Employee_ID1)}</td>
                                                      <td data-name="insurance">${item.InsuranceName}</td>
                                                      <td data-name="service">${(RP_DataService[item.ServiceID] != undefined ? RP_DataService[item.ServiceID].Name : '')}</td>
                                                      <td data-name="amount">${formatNumber(item.Amount)}</td>
                                                      <td >${formatNumber(item.InsurAmount)}</td>
                                                      <td data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>
                                                      <td>${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                                      <td>${CreatedName}</td>
                                                  </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                resolve();
            }, 10)

        })
    }
    //#endregion

    //#region //Event
    function IS_GeneralEvent() {
        $("#IS_GridBody .buttonViewClass").unbind('click').on("click", function () {
            let id = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            $("#IS_GeneralDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#IS_GeneralDetail").offset().top
            }, 300);
            if (id == "0") {
                $("#IS_DetailInsurance").html('@Local["Tất cả bảo hiểm"]');
            }
            else {
                $("#IS_DetailInsurance").html('@Local["Bảo hiểm"]: ' + name);
            }
            IS_DetailLoad(id);
        })
    }
    function IS_Export() {
        syslog_ExpExcel('e', Outlang["Bao_cao_bao_hiem"]);
        exportToExcel("IS_Grid", Outlang["Bao_cao_bao_hiem"]);
    }
    async function IS_ExportDetail() {
        let fileName = xoa_dau($("#IS_DetailInsurance").text()).replaceAll(' ', '-');
        syslog_ExpExcel('e', fileName);
        await exportToExcel("IS_GridDetail", fileName);
    }
                //#endregion
</script>