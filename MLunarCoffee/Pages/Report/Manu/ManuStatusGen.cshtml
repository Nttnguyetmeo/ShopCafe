@page
@model MLunarCoffee.Pages.Report.Manu.ManuStatusGenModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="collapsesticky collapse show" id="RPManuStatus_General">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="text-md text-dark font-weight-bold mb-1">@Local["Tình trạng sử dụng phòng"]</h6>

        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#RPManuStatus_GeneralDiv" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return RPManuStatus_LoadData()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return RPManuStatus_Export()"></i>
            </div>
        </div>
    </div>
    <div class="card-body p-0 pt-0 collapsesticky collapse show" id=RPManuStatus_GeneralDiv>
        <div class="m-0 my-3 mobile-responsive">
            <div id="RPManuStatus_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <table class="table vt-table mb-0" id="RPManuStatus_Grid">
                <thead>
                    <tr>
                        <th style="width: 60px">#</th>
                        <th>@Local["Phòng"]</th>
                        <th>@Local["Thời gian(phút)"]</th>
                        <th>@Local["Số lần sử dụng"]</th>
                    </tr>
                </thead>
                <tbody id="RPManuStatus_GridBody">
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="RPManuStatus_GeneralDetail" style="display:none;">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="RPManuStatus_DetailCardGeneral" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="text-primary fw-bold d-inline mx-2 text-nowrap">
                <span id="RPManuStatus_currentdetaildata">0</span>
                <span class="mx-2">/</span>
                <span id="RPManuStatus_totaldata">0</span>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#RPManuStatus_GeneralDetailDiv" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return RPManuStatus_DetailLoad()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return RPManuStatus_ExportDetail()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["In báo cáo"]">
                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); RPManuStatus_DetailPrintReport()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="RPManuStatus_GeneralDetailDiv">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <div id="DocTreatGridDetail_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table data-name="RPManuStatus_GridDetail" class="table vt-table mb-0" id="RPManuStatus_GridDetail">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th data-name="doctor">@Local["Phòng"]</th>
                            <th data-name="floor">@Local["Tầng"]</th>
                            <th style="min-width: 140px">@Local["Mã khách hàng"]</th>
                            <th data-name="custname">@Local["Khách hàng"]</th>
                            <th data-name="status">@Local["Trạng thái"]</th>
                            <th data-name="begintime">@Local["Thời gian bắt đầu"]</th>
                            <th data-name="endtime">@Local["Thời gian kết thúc"]</th>
                            <th data-name="time">@Local["Thời gian(phút)"]</th>
                        </tr>
                    </thead>
                    <tbody id="RPManuStatus_GridDetailBody">
                    </tbody>
                </table>
            </div>
            <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RPManuStatus_RenderDetailMore();">
                @Local["Xem thêm"]
            </button>
        </div>

    </div>
</div>
<script type="text/javascript">
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let xhrLoadList, xhrLoadDetail;
    let DataReportMainDetail, DataReportMainDetailSlice;
    let IndexReportDetail = 0;
    let timeoutCountDetail;
    let RPManuStatus_roomID = 0;
    $(document).ready(function ()
    {
        ToolPopper();
        RPManuStatus_LoadData();
        Checking_TabControl_Permission();
    });
    function RPManuStatus_LoadData()
    {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Manu/ManuStatusGen/?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    $("#RPManuStatus_GridBody").empty();
                    RPManuStatus_Render(data, "RPManuStatus_GridBody");
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#RPManuStatus_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#RPManuStatus_LoaderList").hide();
            }
        );
        return false;
    }

    async function RPManuStatus_Render(data, id)
    {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            if (data && data.length != 0) {
                let tr = '';
                let totalTime = 0; totalCase = 0;
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    //calc total
                    totalTime += item.DiffTime;
                    totalCase += item.NumCase;
                    tr = `<tr class="vt-number" role="row">
                                                                              <td class="vt-number-order"></td>
                                                                              <td data-name="cardcode">
                                                                                  <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.RoomID}" data-name="${item.Room}">
                                                                                     ${item.Room}
                                                                                  </a>
                                                                              </td>
                                                                              <td data-name="difftime">${formatNumber(item.DiffTime)}</td>
                                                                              <td data-name="numcase">${formatNumber(item.NumCase)}</td>
                                                                          </tr>`;
                    myNode.insertAdjacentHTML('beforeend', tr);
                }
                tr = `<tr class="vt-number text-white bg-gradient bg-primary mt-2 RPManuStatus_RowTotal" role="row">
                                                                          <td></td>
                                                                          <td class="text-start">
                                                                              <a href="#" class="border-1 border-white border-bottom buttonViewClass text-white" data-id="0">@Local["Tất cả"]</a>
                                                                          </td>
                                                                          <td>${formatNumber(totalTime)}</td>
                                                                          <td>${formatNumber(totalCase)}</td>
                                                                      </tr>`;
                myNode.insertAdjacentHTML('beforeend', tr);
                RPManuStatus_GeneralEvent();
            }
        }
    }
    //#region // LOAD DETAIL AND RENDER
    function RPManuStatus_DetailLoad()
    {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Manu/ManuStatusGen/?handler=LoadataDetail"
            , data = {
                'branchID': _branchID,
                'roomID': RPManuStatus_roomID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    DataReportMainDetail = JSON.parse(JSON.stringify(data));
                    DataReportMainDetailSlice = sliceIntoChunks(data, 500);
                    $("#RPManuStatus_GridDetailBody").empty();
                    if (DataReportMainDetailSlice && DataReportMainDetailSlice.length != 0) {
                        fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RPManuStatus_GridDetailBody"
                            , blocknum = 100
                            , fnrender = RPManuStatus_DetailRender
                            , fnsuccess = null
                        );
                    }
                    Count_Up("RPManuStatus_totaldata", DataReportMainDetail.length);
                }
                else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#DocTreatGridDetail_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#DocTreatGridDetail_LoaderList").hide();
            }
        );
    }

    function RPManuStatus_RenderDetailMore()
    {
        IndexReportDetail += 1;
        if (DataReportMainDetailSlice && DataReportMainDetailSlice[IndexReportDetail]) {
            fnRenderBlock(DataReportMainDetailSlice[IndexReportDetail], "RPManuStatus_GridDetailBody"
                , blocknum = 100
                , fnrender = RPManuStatus_DetailRender
                , fnsuccess = null
            );
        }
    }

    async function RPManuStatus_DetailRender(data, id)
    {
        new Promise((resolve) =>
        {
            setTimeout(() =>
            {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let status = RPManuStatus_GetStatus(item.Status).Value;
                            let endTime = RPManuStatus_Remove1900(item.EndTime) != '' ? GetDateTime_String_DMYHMSS(item.EndTime) : RPManuStatus_Remove1900(item.EndTime);
                            let tr = `<tr class="vt-number" role="row">
                                                      <td class="vt-number-order"></td>
                                                      <td data-name="room">${item.Room}</td>
                                                      <td data-name="floor">${item.Floor}</td>
                                                      <td data-name="custcode">
                                                          <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                             ${item.CustCode}
                                                          </a>
                                                      </td>
                                                      <td data-name="custname">${item.CustName}</td>
                                                      <td data-name="status" class="${RPManuStatus_GetStatus(item.Status).TextColor}">${status}</td>
                                                      <td data-name="begintime">${GetDateTime_String_DMYHMSS(item.BeginTime)}</td>
                                                      <td data-name="endtime">${endTime}</td>
                                                      <td data-name="endtime">${formatNumber(item.DiffTime)}</td>
                                                      </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() =>
                {
                    Count_Up("RPManuStatus_currentdetaildata", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }

    function RPManuStatus_GetStatus(type)
    {
        let status = {
            0: { Value: '@Local["Đang sử dụng"]', TextColor: 'text-primary' },
            1: { Value: '@Local["Đã sử dụng"]', TextColor: 'text-secondary' },
        }
        return status[type] || 'undifined';
    }

    function RPManuStatus_Remove1900(x)
    {
        var d = new Date(x);
        if (d.getFullYear() === 1900) return '';
        return x;
    }
    //#endregion

    //#region // Event
    function RPManuStatus_GeneralEvent()
    {
        $("#RPManuStatus_GridBody .buttonViewClass").unbind('click').on("click", function ()
        {
            RPManuStatus_roomID = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            $("#RPManuStatus_GeneralDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RPManuStatus_GeneralDetail").offset().top
            }, 300);
            if (RPManuStatus_roomID == "0") {
                $("#RPManuStatus_DetailCardGeneral").html('@Local["Tất cả phòng"]');
            }
            else {
                $("#RPManuStatus_DetailCardGeneral").html('@Local["Phòng"] ' + name);
            }
            RPManuStatus_DetailLoad();
        })
    }

    function RPManuStatus_Export()
    {
        syslog_ExpExcel('e', Outlang["Tinh_trang_su_dung_phong"]);
        exportToExcel("RPManuStatus_Grid", Outlang["Tinh_trang_su_dung_phong"]);
    }

    async function RPManuStatus_ExportDetail()
    {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "Room": ["@Local["Phòng"]"],
                    "Floor": ["@Local["Tầng"]"],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "Status": ["@Local["Trạng thái"]", (value) =>
                    {
                        return decodeHtml(RPManuStatus_GetStatus(value).Value);
                    }],
                    "BeginTime": ["@Local["Thời gian bắt đầu"]", (value) => { return GetDateTime_String_DMYHMSS(value) }],
                    "EndTime": ["@Local["Thời gian kết thúc"]", (value) =>
                    {
                        return RPManuStatus_Remove1900(value) != '' ? GetDateTime_String_DMYHMSS(value) : RPManuStatus_Remove1900(value);
                    }],
                    "DiffTime": ["@Local["Thời gian(phút)"]", (value) => { return formatNumber(value) }],
                }
                let fileName = Outlang["Tinh_trang_su_dung_phong"] + '-' + xoa_dau($("#RPManuStatus_DetailCardGeneral").text()).replaceAll(' ', '-');
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, DataReportMainDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function RPManuStatus_DetailPrintReport()
    {
        try {
            if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "Room": ["@Local["Phòng"]"],
                    "Floor": ["@Local["Tầng"]"],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "Status": ["@Local["Trạng thái"]", {
                        callbackRenderValue: (value) =>
                        {
                            return decodeHtml(RPManuStatus_GetStatus(value).Value);
                        }
                    }],
                    "BeginTime": ["@Local["Thời gian bắt đầu"]", {
                        callbackRenderValue: (value) => { return GetDateTime_String_DMYHMSS(value) }
                    }],
                    "EndTime": ["@Local["Thời gian kết thúc"]", {
                        callbackRenderValue: (value) =>
                        {
                            return RPManuStatus_Remove1900(value) != '' ? GetDateTime_String_DMYHMSS(value) : RPManuStatus_Remove1900(value);
                        }
                    }],
                    "DiffTime": ["@Local["Thời gian(phút)"]", {
                        callbackRenderValue: (value) => { return formatNumber(value) }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr)
                    {
                        if (statusTxt == "success") {
                            let fileName = '@Local["Tình trạng sử dụng phòng"]' + ' ' + $("#RPManuStatus_DetailCardGeneral").text();
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, DataReportMainDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                    //#endregion

</script>
