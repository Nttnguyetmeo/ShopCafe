@page
@model MLunarCoffee.Pages.Report.General.GeneralGridModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="card-header p-3 px-0 pb-0">
    <div class="d-lg-flex gap-1">
        <div class="my-auto me-3">
            <h6 class="mb-0">@Local["Báo cáo tổng quát"]</h6>
            <p class="mb-0 text-sm">@Local["Chi tiết khách hàng đã đến chi nhánh"]</p>
        </div>
    </div>
</div>
<div class="card-body p-0 mt-3" id="RPGG_Container">  
    <div class="vtcardheader pb-0 d-block d-lg-flex">
        <div class="left overflow-auto">
            <div class="col-auto my-auto">
                <div class="d-flex align-items-center mb-sm-0 gap-3">
                    <div class="form-check mt-0">
                        <input id="rp_all" onchange="event.preventDefault();return RP_Filter();" class="form-check-input pr-2 checkType" data-type="all" type="radio" checked="checked" name="general">
                        <label for="rp_all" class="custom-control-label mb-0">@Local["Tất cả"]</label>
                    </div>
                    <div class="form-check mt-0">
                        <input id="rp_service" onchange="event.preventDefault();return RP_Filter();" class="form-check-input pr-2 checkType" data-type="tab" type="radio" name="general">
                        <label for="rp_service" class="custom-control-label mb-0">@Local["Phát sinh dịch vụ"]</label>
                    </div>
                    <div class="form-check mt-0">
                        <input id="rp_treatment" onchange="event.preventDefault();return RP_Filter();" class="form-check-input pr-2 checkType" data-type="treat" type="radio" name="general">
                        <label for="rp_treatment" class="custom-control-label mb-0">@Local["Phát sinh điều trị"]</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="right">
            <div class="text-primary fw-bold d-inline me-2 text-nowrap mt-1">
                <span id="Reve_currentdata">0</span>
                <span class="mx-2">/</span>
                <span id="Reve_totaldata">0</span>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#RP_GridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return RP_Load()"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["In báo cáo"]">
                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); RP_PrintReport()"></i>
            </div>
            <div class="my-auto">
                <div class="flex-nowrap input-group rounded-0 vttech-input-group my-auto _tab_control_" data-tab="export_excel">
                    <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                    </div>
                    <div class="input-group-text icon-hover w-auto vttech-input-item">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RP_Export(0)">@Local["Tất cả"]</i>
                    </div>
                    <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RP_Export(1)">@Local["Tùy chọn"]</i>
                    </div>
                </div>
            </div>
            <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                @Local["Xem thêm"]
            </button>
        </div>
        <div class="toggle">
            <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                <ul class="card card-body text-dark text-capitalize opacity-10 max-height-400 overflow-y">
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="doccode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã hồ sơ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="custoldcode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="phone" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Số điện thoại"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="custnew" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Khách mới"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="source" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Nguồn"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="age" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Tuổi"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="gender" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Giới tính"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="address" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Địa chỉ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="district" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Quận huyện"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="city" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Tỉnh/Thành phố"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="service" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Dịch vụ/sản phẩm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="consult" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Tư vấn"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="responsible" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Người chịu trách nhiệm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="symptoms" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Đặc điểm bệnh"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="contenttreat" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Nội dung điều trị"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="detailtreat" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Chi tiết điều trị"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="doctor" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Bác sĩ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="dr2" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Bác sĩ"] 2</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="dr3" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Bác sĩ"] 3</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="dr4" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Bác sĩ"] 4</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="assistant" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["PT/KTV"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="ass2" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["PT/KTV"] 2</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="ass3" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["PT/KTV"] 3</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="ass4" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["PT/KTV"] 4</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="tech1" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Hỗ trợ chuyên môn"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="tech2" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Hỗ trợ chuyên môn"] 2</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="detail" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi tiết"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="percentComplete" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Hoàn thành"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="amounttreat" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi phí điều trị"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="servicecode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã dịch vụ/sản phẩm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="salescode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã lên đơn"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="invoicecode" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Mã phiếu thu"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="quantity" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Số lượng"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="totaltreat" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Số lần điều trị"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="totalcus" type="checkbox" checked="checked">
                        </div>
                        <p class="text-sm">@Local["Công nợ khách hàng"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ghi chú"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="timetreat" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Thời gian điều trị"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="scheduler" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Lịch hẹn"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogle form-check-input" data-name="CusCreated" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày tạo hồ sơ"]</p>
                    </li>

                </ul>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="RP_GridArea">
        <div class=" overflow-y p-0 mt-3">
            <div class="m-0 my-0 mobile-responsive vt-header-sticky">
                <table class="table vt-table mb-0" id="RP_Grid">
                    <thead>
                        <tr>
                            <th rowspan="2">#</th>
                            <th rowspan="2" style="min-width:100px;">@Local["Ngày"]</th>
                            <th rowspan="2" data-name="scheduler" style="min-width:120px;">@Local["Lịch hẹn"]</th>
                            <th rowspan="2" style="min-width:150px;">@Local["Mã khách hàng"]</th>
                            <th rowspan="2" style="min-width:200px;">@Local["Khách hàng"]</th>
                            <th rowspan="2" data-name="doccode" style="min-width:150px;">@Local["Mã hồ sơ"]</th>
                            <th rowspan="2" data-name="custoldcode" style="min-width:150px;">@Local["Mã khách hàng cũ"]</th>
                            <th rowspan="2" data-name="phone">@Local["Số điện thoại"]</th>
                            <th rowspan="2" data-name="custnew" style="min-width:120px;">@Local["Khách mới"]</th>
                            <th rowspan="2" data-name="source" style="min-width:150px;">@Local["Nguồn"]</th>
                            <th rowspan="2" data-name="age" style="min-width:100px;">@Local["Độ tuổi"]</th>
                            <th rowspan="2" data-name="gender" style="min-width: 80px;">@Local["Giới tính"]</th>
                            <th rowspan="2" data-name="address" style="min-width: 120px;">@Local["Địa chỉ"]</th>
                            <th rowspan="2" data-name="district" style="min-width: 120px;">@Local["Quận huyện"]</th>
                            <th rowspan="2" data-name="city" style="min-width: 150px;">@Local["Tỉnh/Thành phố"]</th>
                            <th rowspan="2" data-name="servicecode" style="min-width:200px;">@Local["Mã dịch vụ/sản phẩm"]</th>
                            <th rowspan="2" data-name="salescode">@Local["Mã lên đơn"]</th>
                            <th rowspan="2" data-name="invoicecode">@Local["Mã phiếu thu"]</th>
                            <th rowspan="2" data-name="service" style="min-width:200px;">@Local["Dịch vụ/sản phẩm"]</th>
                            <th rowspan="2" data-name="consult" style="min-width:200px;">@Local["Tư vấn"]</th>
                            <th rowspan="2" data-name="responsible" style="min-width:200px;">@Local["Người chịu trách nhiệm"]</th>
                            <th rowspan="2" data-name="timetreat" style="min-width:200px;">@Local["Thời gian điều trị"]</th>
                            <th rowspan="2" data-name="symptoms" style="min-width:200px;">@Local["Đặc điểm bệnh"]</th>
                            <th rowspan="2" data-name="contenttreat" style="min-width:200px;">@Local["Nội dung điều trị"]</th>
                            <th rowspan="2" data-name="doctor" style="min-width:200px;">@Local["Bác sĩ"]</th>
                            <th rowspan="2" data-name="dr2" style="min-width:200px;">@Local["Bác sĩ"] 2</th>
                            <th rowspan="2" data-name="dr3" style="min-width:200px;">@Local["Bác sĩ"] 3</th>
                            <th rowspan="2" data-name="dr4" style="min-width:200px;">@Local["Bác sĩ"] 4</th>
                            <th rowspan="2" data-name="assistant" style="min-width:200px;">@Local["PT/KTV"]</th>
                            <th rowspan="2" data-name="ass2" style="min-width:200px;">@Local["PT/KTV"] 2</th>
                            <th rowspan="2" data-name="ass3" style="min-width:200px;">@Local["PT/KTV"] 3</th>
                            <th rowspan="2" data-name="ass4" style="min-width:200px;">@Local["PT/KTV"] 4</th>
                            <th rowspan="2" data-name="tech1" style="min-width:200px;">@Local["Hỗ trợ chuyên môn"] 1</th>
                            <th rowspan="2" data-name="tech2" style="min-width:200px;">@Local["Hỗ trợ chuyên môn"] 2</th>
                            <th rowspan="2" data-name="detailtreat" style="min-width:200px;">@Local["Chi tiết"]</th>
                            <th rowspan="2" data-name="totaltreat" style="min-width:200px;">@Local["Số lần điều trị"]</th>
                            <th rowspan="2" data-name="percentComplete" style="min-width:200px;">@Local["Hoàn thành"]</th>
                            <th rowspan="2" data-name="amounttreat" style="min-width:200px;">@Local["Chi phí điều trị"]</th>
                            <th rowspan="2" data-name="quantity" style="min-width: 80px;">@Local["Số lượng"]</th>
                            <th rowspan="2" style="min-width: 100px;">@Local["Giá"]</th>
                            <th rowspan="2" style="min-width: 100px;">@Local["Giảm"]</th>
                            <th rowspan="2" style="min-width: 100px;">@Local["Thành tiền"]</th>
                            <th data-name="detail" colspan="6" style="min-width: 100px;">@Local["Thanh toán"]</th>
                            <th data-name="totalcus" colspan="3" style="min-width: 100px;">@Local["Công nợ khách hàng"]</th>
                            <th rowspan="2" data-name="note" style="min-width: 120px;">@Local["Ghi chú"]</th>
                            <th rowspan="2" data-name="CusCreated" style="min-width: 120px">@Local["Ngày tạo hồ sơ"]</th>
                        </tr>
                        <tr>
                            <th data-name="detail" style="min-width: 120px;">@Local["Thu tiền"]</th>
                            <th data-name="detail" style="min-width: 120px;">@Local["Hoàn tiền"]</th>
                            <th data-name="detail" style="min-width: 120px;">@Local["Tiền cọc"]</th>
                            <th data-name="detail" style="min-width:200px;">@Local["Hình thức TT"]</th>
                            <th data-name="detail" style="min-width:200px;">@Local["Đã thanh toán"]</th>
                            <th data-name="detail" style="min-width:200px;">@Local["Còn lại"]</th>
                            <th data-name="totalcus" style="min-width: 200px;">@Local["Phát sinh"]</th>
                            <th data-name="totalcus" style="min-width: 200px;">@Local["Thanh toán"]</th>
                            <th data-name="totalcus" style="min-width: 200px;">@Local["Còn lại"]</th>
                        </tr>
                    </thead>
                    <tbody id="RP_GridBody">
                    </tbody>
                </table>
            </div>
            <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RP_RenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>

    </div>
</div>


<script type="text/javascript">

    //#region // DECLARE & INIT LOAD LIST

    let xhrLoadList;
    let DataReportMain, DataReportMainSlice;
    let IndexReport = 0;
    let shtable;
    let timeoutCount;
    let ReportDateFrom = 0;
    let _sys_TreatManualamount =  Number('@Model._sys_TreatManualamount');

    $(document).ready(function () {
        shtable = $("#RP_Grid").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        ToolPopper();
        RP_Load();

    });

    function RP_Load() {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        let _branchID = "@Model._branchID";
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        RP_Refresh();
        xhrLoadList = AjaxLoad(url = "/Report/General/GeneralGrid/?handler=Loadata"
            , data = {
                'BranchID': _branchID
                , 'dateFrom': _dateFrom
                , 'dateTo': _dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);

                    if (data && data.lenght != 0) {
                        DataReportMain = JSON.parse(JSON.stringify(data)).reduce((pre, arr) => {
                            if (arr["TabID"] != 0) {
                                arr["New_ServiceName"] = arr["SerName"];
                                arr["New_ServiceCode"] = arr["SerCode"];
                                arr["New_ServiceSale"] = arr["SerSalesCode"];
                                arr["New_InvoiceCode"] = arr["ReceiptsCode"];
                                arr["New_Quantity"] = arr["SerQuantity"];
                                arr["New_PriceRoot"] = arr["SerPriceRoot"];
                                arr["New_PriceDiscounted"] = arr["SerPriceDiscounted"];
                                arr["New_ConsultID"] = arr["SerConsultID"];
                                arr["New_Note"] = arr["SerNote"];
                                arr["New_Paid"] = arr["SerPaid"];
                                arr["New_Debt"] = arr["SerPaid"] - arr["SerPriceDiscounted"];
                            }
                            else if (arr["CardID"] != 0) {
                                arr["New_ServiceName"] = arr["CardName"];
                                arr["New_ServiceCode"] = arr["CardCode"];
                                arr["New_ServiceSale"] = arr["CardSalesCode"];
                                arr["New_InvoiceCode"] = arr["ReceiptsCode"];
                                arr["New_Quantity"] = arr["CardQuantity"];
                                arr["New_PriceRoot"] = arr["CardPriceRoot"];
                                arr["New_PriceDiscounted"] = arr["CardPriceDiscounted"];
                                arr["New_ConsultID"] = arr["CardConsultID"];
                                arr["New_Note"] = arr["CardNote"];
                                arr["New_Paid"] = arr["CardPaid"];
                                arr["New_Debt"] = arr["CardPaid"] - arr["CardPriceDiscounted"];
                            }
                            else {
                                arr["New_ServiceName"] = arr["MedName"];
                                arr["New_ServiceCode"] = arr["MedCode"];
                                arr["New_ServiceSale"] = arr["MedSalesCode"];
                                arr["New_InvoiceCode"] = arr["ReceiptsCode"];
                                arr["New_Quantity"] = arr["MedQuantity"];
                                arr["New_PriceRoot"] = arr["MedPriceRoot"];
                                arr["New_PriceDiscounted"] = arr["MedPriceDiscounted"];
                                arr["New_ConsultID"] = 0;
                                arr["New_Note"] = arr["MedNote"];
                                arr["New_Paid"] = arr["MedPaid"];
                                arr["New_Debt"] = arr["MedPaid"] - arr["MedPriceDiscounted"];
                            };
                            pre.push(arr);
                            return pre;
                        }, []);
                        DataReportMainSlice = sliceIntoChunks(JSON.parse(JSON.stringify(DataReportMain)), 500);
                        fnRenderBlock(DataReportMainSlice[IndexReport], "RP_GridBody"
                            , blocknum = 100
                            , fnrender = RP_RenderTableContent
                            , fnsuccess = null
                        );
                        Count_Up("Reve_totaldata", DataReportMain.length);
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function RP_RenderMore() {
        IndexReport += 1;
        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
            fnRenderBlock(DataReportMainSlice[IndexReport], "RP_GridBody"
                , blocknum = 100
                , fnrender = RP_RenderTableContent
                , fnsuccess = null
            );
        }
    }

    //#endregion



    //#region // RENDER

    async function RP_RenderTableContent(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = '';

                            if (item.DateFrom != ReportDateFrom) {
                                ReportDateFrom = item.DateFrom;
                                tr = `<tr class="dateFirst bg-gray-200"><td colspan="50"><span class="fw-bold">Ngày ${ConvertYMDInt_ToDate(item.DateFrom)}<span></td></tr>`
                            }
                            let detail = item.TabID != 0 ? RP_Render_SerDetail(item.TeethType, item.TeethChoosing, item.TreatIndex, item.TimeToTreatment) : "";
                            let percentComplete = RP_Render_TreatmentOrPercentService(item.Type, item.TreatIndex, item.TimeToTreatment, item.TreatDetail, item.PercentOfService, item.TeethChoosing, item.TreatPercentDetail, item.New_Quantity);
                            let MethodString = '';
                            if (item.PosName != '') MethodString = ' - ' + item.PosName
                            else if (item.Transfer_Type_Name != '') MethodString = ' - ' + item.Transfer_Type_Name;
                            else MethodString = ''
                            tr += `
                                <tr class="vt-number" role="row">
                                    <td class="vt-number-order"></td>
                                    <td >${ConvertYMDInt_ToDate(item.DateFrom)}</td>
                                    <td data-name="scheduler">${item.IsScheduler == "1" ? "@Local["Đã Đến"]" : ""} </td>
                                    <td>
                                        <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                            ${item.CustCode}
                                        </a>
                                    </td>
                                    <td>${item.CustName}</td>
                                    <td data-name="doccode" >${item.DocCode}</td>
                                    <td data-name="custoldcode" >${item.CustOldCode}</td>
                                    <td data-name="phone" ><span class="_tab_control_" data-tab="phone_customer">${item.Phone}</span></td>
                                    <td data-name="custnew" class="text-center" >${(item.IsCustNew == 1) ? `<i class="fas fa-check text-success"></i>` : ``}</td>
                                    <td data-name="source" class="source" >${Fun_GetName_ByID(RP_DataCustomerSource, item.SourceID)}</td>
                                    <td data-name="age" >${item.Birth}</td>
                                    <td data-name="gender" >${RP_Render_Gender(item.GenderID)}</td>
                                    <td data-name="address" class="_tab_control_" data-tab="address_customer">${item.Address}</td>
                                    <td data-name="district" class="_tab_control_" data-tab="address_customer">${item.District}</td>
                                    <td data-name="city" class="_tab_control_" data-tab="address_customer">${item.City}</td>
                                    <td data-name="servicecode">${item.New_ServiceCode}</td>
                                    <td data-name="salescode">${item.New_ServiceSale}</td>
                                    <td data-name="invoicecode">${item.New_InvoiceCode}</td>
                                    <td data-name="service"><h6 class="text-sm mb-0 fw-bold">${item.New_ServiceName}</h6></td>
                                    <td data-name="consult">${Fun_GetName_ByID(RP_DataEmployee, item.New_ConsultID)}</td>
                                    <td data-name="responsible">${Fun_GetName_ByID(RP_DataEmployee, item.Employee_ID1)}</td>
                                    <td data-name="timetreat"> ${item.TimeTreat != "0" ? formatNumber(item.TimeTreat) + " @Local["Phút"]" : ""} </td>
                                    <td data-name="symptoms" >${item.Symptoms}</td>
                                    <td data-name="contenttreat" >${item.ContentTreat}</td>
                                    <td data-name="doctor" >${Fun_GetName_ByID(RP_DataEmployee, item.DoctorID)}</td>
                                    <td data-name="dr2" >${Fun_GetName_ByID(RP_DataEmployee, item.Dr2)}</td>
                                    <td data-name="dr3" >${Fun_GetName_ByID(RP_DataEmployee, item.Dr3)}</td>
                                    <td data-name="dr4" >${Fun_GetName_ByID(RP_DataEmployee, item.Dr4)}</td>
                                    <td data-name="assistant" >${Fun_GetName_ByID(RP_DataEmployee, item.AssisTreatID)}</td>
                                    <td data-name="ass2" >${Fun_GetName_ByID(RP_DataEmployee, item.Ass2)}</td>
                                    <td data-name="ass3" >${Fun_GetName_ByID(RP_DataEmployee, item.Ass3)}</td>
                                    <td data-name="ass4" >${Fun_GetName_ByID(RP_DataEmployee, item.Ass4)}</td>
                                    <td data-name="tech1" >${Fun_GetName_ByID(RP_DataEmployee, item.Tech1)}</td>
                                    <td data-name="tech2" >${Fun_GetName_ByID(RP_DataEmployee, item.Tech2)}</td>
                                    <td data-name="detailtreat" >${detail}</td>
                                    <td data-name="totaltreat" >${item.TotalTreatInday}</td>
                                    <td data-name="percentComplete" >${percentComplete}</td>
                                    <td data-name="amounttreat" >${formatNumber(_sys_TreatManualamount == 1 ? item.ManualAmount : (percentComplete * item.New_PriceDiscounted) / 100)}</td>

                                    <td data-name="quantity"> ${item.New_Quantity}</td>
                                    <td >${formatNumber(item.New_PriceRoot)}</td>
                                    <td >${formatNumber(item.New_PriceRoot - item.New_PriceDiscounted)}</td>
                                    <td >${formatNumber(item.New_PriceDiscounted)}</td>

                                    <td data-name="detail">${item.Amount >= 0 ? formatNumber(item.Amount) : "0"}</td>
                                    <td data-name="detail">${item.Amount < 0 ? formatNumber(Math.abs(item.Amount)) : "0"}</td>
                                    <td data-name="detail">${(item.TabID == "0" && item.CardID == "0" && item.MedID == "0") ? formatNumber(item.Amount) : "0"}</td>
                                    <td data-name="detail">${(item.Method + MethodString)}</td>
                                    <td data-name="detail">${formatNumber(item.New_Paid)}</td>
                                    <td data-name="detail">${formatNumber(item.New_PriceDiscounted - item.New_Paid)}</td>
                                    <td data-name="totalcus">${formatNumber(item.TotalPriceDiscounted)}</td>
                                    <td data-name="totalcus">${formatNumber(item.TotalPaid)}</td>
                                    <td data-name="totalcus">${formatNumber(item.TotalPriceDiscounted - item.TotalPaid)}</td>
                                    <td data-name="note" >${item.New_Note}</td>
                                    <td data-name="CusCreated">${ConvertDateTimeUTC_DMY(item.CustCreated)}</td>
                                </tr>
                            `
                            tr = `${tr}`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }

                        shtable.Refresh();
                        Checking_TabControl_Permission();
                        clearTimeout(timeoutCount);
                        timeoutCount = setTimeout(() => {
                            Count_Up("Reve_currentdata", $("#" + id).children('tr').not('.dateFirst').length);
                        }, 300);
                    }
                }
            }, 100);
        });
    }

    function RP_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment) {
        try {
            let result = '';
            if (sys_dencos_Main == 0) {
                result = `${decodeHtml("@Local["Đã điều trị"]")}: ${TreatIndex} | ${TimeToTreatment}`
            }
            else {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function RP_Render_TreatmentOrPercentService(Type, TreatIndex, TimeToTreatment, TreatDetail, PercentService, Teethchoosing, TreatPercentDetail, Quantity) {
        try {
            let result = 100;
            if (Type == 'service') {
                if (sys_dencos_Main == 0) result = Math.floor(TimeToTreatment != 0 ? (100 * TreatIndex / TimeToTreatment) : 0);
                else {
                    if (TreatDetail == 0) result = PercentService;
                    else {
                        if (Teethchoosing != '') result = Quantity != 0 ? Math.floor(TreatPercentDetail / Quantity) : 0;
                        else result = TreatPercentDetail;
                    }
                }
            }
            return result;
        }
        catch (ex) {
            return 0;
        }
    }

    function RP_Render_Gender(id) {
        try {
            let result = decodeHtml('@Local["Nam"]');
            if (id == 61) result = decodeHtml('@Local["Nữ"]');
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    //#endregion


    //#region

    function RP_Filter() {
        try {
            RP_Refresh();
            let dataFilter = JSON.parse(JSON.stringify(DataReportMain));
            let checkList = $('.checkType[name="general"]:checked')
            if (checkList.length == 0) return;
            let dataType = checkList.attr('data-type');
            if (dataType == 'tab') dataFilter = dataFilter.filter((word) => {return word['IsServiceAraise'] != 0})
            if (dataType == 'treat') dataFilter = dataFilter.filter((word) => {return word['IsTreatmentAraise'] != 0})

            Count_Up("Reve_totaldata", dataFilter.length);
            DataReportMainSlice = sliceIntoChunks(dataFilter, 500);
            fnRenderBlock(DataReportMainSlice[IndexReport], "RP_GridBody"
                , blocknum = 100
                , fnrender = RP_RenderTableContent
                , fnsuccess = null
            );
        }
        catch (ex) {

        }
    }

    function RP_Refresh() {
        IndexReport = 0;
        ReportDateFrom = 0;
        $("#RP_GridBody").empty();
    }

    //#endregion




    //#region // EXPORT - PRINT

    function RP_Export(isOption = 0) {
        if (DataReportMain && DataReportMain.length != 0) {
            let dataFilter = DataReportMain;
            let isAll = (isOption == 0);
            let eleContainer = $('#RPGG_Container');
            var dataHeader = {
                "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                "DateFrom": ["@Local["Ngày"]", (value) => {
                    return ConvertYMDInt_ToDate(value);
                }],
                "IsScheduler": ["@Local["Lịch hẹn"]", (value) => {
                    return value == "1" ? decodeHtml("@Local["Đã Đến"]") : "";
                }],
                "CustCode": ["@Local["Mã khách hàng"]"],
                "CustName": ["@Local["Khách hàng"]"],
                "DocCode": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='doccode']`)).is(":checked"),
                    data: ["@Local["Mã hồ sơ"]"]
                },
                "CustOldCode": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custoldcode']`)).is(":checked"),
                    data: ["@Local["Mã khách hàng cũ"]"]
                },
                "Phone": {
                    dataNamePer: 'phone',
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='phone']`)).is(":checked"),
                    data: ["@Local["Số điện thoại"]"]
                },
                "IsCustNew": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custnew']`)).is(":checked"),
                    data: ["@Local["Khách mới"]", (value) => {
                        return value == "1" ? "x" : "";
                    }]
                },
                "SourceID": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='source']`)).is(":checked"),
                    data: ["@Local["Nguồn"]", (value) => {
                        return Fun_GetName_ByID(RP_DataCustomerSource, value);
                    }]
                },
                "Birth": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='age']`)).is(":checked"),
                    data: ["@Local["Độ tuổi"]"]
                },
                "GenderID": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='gender']`)).is(":checked"),
                    data: ["@Local["Giới tính"]", (value) => {
                        return RP_Render_Gender(value);
                    }]
                },
                "Address": {
                    dataNamePer: 'address',
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='address']`)).is(":checked"),
                    data: ["@Local["Địa chỉ"]"]
                },
                "District": {
                    dataNamePer: 'district',
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='district']`)).is(":checked"),
                    data: ["@Local["Quận huyện"]"]
                },
                "City": {
                    dataNamePer: 'city',
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='city']`)).is(":checked"),
                    data: ["@Local["Tỉnh/Thành phố"]"]
                },
                "New_ServiceCode": ["@Local["Mã dịch vụ/sản phẩm"]"],
                "New_ServiceSale": ["@Local["Mã lên đơn"]"],
                "New_ServiceName": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='service']`)).is(":checked"),
                    data: ["@Local["Dịch vụ"]"]
                },
                "New_ServiceSale": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='Mã lên đơn']`)).is(":checked"),
                    data: ["@Local["Ghi chú"]"]
                },
                "New_InvoiceCode": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='invoicecode']`)).is(":checked"),
                    data: ["@Local["Mã phiếu thu"]"]
                },
                "TimeTreat": ["@Local["Thời gian điều trị"]", (value) => {
                    return value != "0" ? value + decodeHtml(" @Local["Phút"]") : "";
                }],
                "Symptoms": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='symptoms']`)).is(":checked"),
                    data: ["@Local["Đặc điểm bệnh"]"]
                },
                "ContentTreat": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='contenttreat']`)).is(":checked"),
                    data: ["@Local["Nội dung điều trị"]"]
                },
                "TotalTreatInday": ["@Local["Số lần điều trị"]"],

                "Detail": ["@Local["Chi tiết"]", (value, { TabID, TeethType, TeethChoosing, TreatIndex, TimeToTreatment }) => {
                    return TabID != 0 ? RP_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment) : "";
                }],
                "PercentComplete": ["@Local["Hoàn thành"]", (value, { Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity }) => {
                    return RP_Render_TreatmentOrPercentService(Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity);
                }],
                "AmountTreat": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='amounttreat']`)).is(":checked"),
                    data: ["@Local["Chi phí điều trị"]", (value, {New_PriceDiscounted, Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity, ManualAmount }) => {
                        return (_sys_TreatManualamount == 1 ? ManualAmount : New_PriceDiscounted * RP_Render_TreatmentOrPercentService(Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity) / 100);
                    }]
                },

                "DoctorID": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='doctor']`)).is(":checked"),
                    data: ["@Local["Bác sĩ"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Dr2": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='dr2']`)).is(":checked"),
                    data: ["@Local["Bác sĩ"] 2", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Dr3": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='dr3']`)).is(":checked"),
                    data: ["@Local["Bác sĩ"] 3", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Dr4": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='dr4']`)).is(":checked"),
                    data: ["@Local["Bác sĩ"] 4", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "AssisTreatID": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='assistant']`)).is(":checked"),
                    data: ["@Local["PT/KTV"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Ass2": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='ass2']`)).is(":checked"),
                    data: ["@Local["PT/KTV"] 2", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Ass3": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='ass3']`)).is(":checked"),
                    data: ["@Local["PT/KTV"] 3", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Ass4": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='ass4']`)).is(":checked"),
                    data: ["@Local["PT/KTV"] 4", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Tech1": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='tech1']`)).is(":checked"),
                    data: ["@Local["Hỗ trợ chuyên môn"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Tech2": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='tech2']`)).is(":checked"),
                    data: ["@Local["Hỗ trợ chuyên môn"] 2", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },

                "New_ConsultID": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='consult']`)).is(":checked"),
                    data: ["@Local["Tư vấn"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "Employee_ID1": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='responsible']`)).is(":checked"),
                    data: ["@Local["Người chịu trách nhiệm"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value);
                    }]
                },
                "New_Quantity": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='quantity']`)).is(":checked"),
                    data: ["@Local["Số lượng"]"]
                },
                "New_PriceRoot": ["@Local["Giá"]"],
                "New_Discount": ["@Local["Giảm"]", (value, { New_PriceRoot, New_PriceDiscounted }) => {
                    return (New_PriceRoot - New_PriceDiscounted);
                }],
                "New_PriceDiscounted": ["@Local["Thành tiền"]"],
                "NewColumn": ["@Local["Thu tiền"]", (value, { Amount }) => {
                    return Amount >= 0 ? (Amount) : "0";
                }],
                "NewColumn1": ["@Local["Hoàn tiền"]", (value, { Amount }) => {
                    return Amount < 0 ? (Amount) : "0";
                }],
                "NewColumn2": ["@Local["Tiền cọc"]", (value, { Amount, TabID, CardID, MedID }) => {
                    return (TabID == "0" && CardID == "0" && MedID == "0") ? (Amount) : "0";
                }],
                "Method": ["@Local["Hình thức thanh toán"]", (value, { PosName, Transfer_Type_Name }) => {
                    return value + (PosName != '' ? (' - ' + PosName) : '') + (Transfer_Type_Name != '' ? (' - ' + Transfer_Type_Name) : '');
                }],
                "New_Paid": ["@Local["Đã thanh toán"]"],
                "Debt": ["@Local["Còn lại"]", (value, { New_PriceDiscounted, New_Paid }) => {
                    return New_PriceDiscounted - New_Paid;
                }],

                "TotalPriceDiscounted": ["@Local["Tổng phát sinh"]"],
                "TotalPaid": ["@Local["Tổng thanh toán"]"],
                "TotalLeft": ["@Local["Tổng còn lại"]", (value, { TotalPriceDiscounted, TotalPaid }) => {
                    return TotalPriceDiscounted - TotalPaid;
                }],
                "New_Note": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='note']`)).is(":checked"),
                    data: ["@Local["Ghi chú"]"]
                },
                "CustCreated": {
                    isShow: isAll || (eleContainer.find(`.shtoogle[data-name='CusCreated']`)).is(":checked"),
                    data: ["@Local["Ngày tạo hồ sơ"]", (value) => {
                        return ConvertDateTimeUTC_DMY(value);
                    }]
                }
            };
            dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RP_GridBody', PermissionTable_TabControl);
            let checkList = $('.checkType[name="general"]:checked')
            if (checkList.length != 0) {
                let dataType = checkList.attr('data-type');
                if (dataType == 'tab') dataFilter = dataFilter.filter((word) => {return word['IsServiceAraise'] != 0})
                if (dataType == 'treat') dataFilter = dataFilter.filter((word) => {return word['IsTreatmentAraise'] != 0})
            };
            syslog_ExpExcel('e', Outlang["Bao_cao_tong_quat"]);
            exportJsonToExcel(Outlang["Bao_cao_tong_quat"], dataFilter, dataHeader);
        }
        else {
            notiWarning('@Local["Không có dữ liệu để xuất"]!');
        }
    }
    async function RP_PrintReport() {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "DateFrom": ["@Local["Ngày"]", {
                        callbackRenderValue: (value) => {
                            return ConvertYMDInt_ToDate(value);
                        }
                    }],
                    "IsScheduler": ["@Local["Lịch hẹn"]", {
                        callbackRenderValue: (value) => {
                            return value == "1" ? decodeHtml("@Local["Đã Đến"]") : "";
                        }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.shtoogle[data-name='doccode']`).is(":checked")
                    }],
                    "CustOldCode": ["@Local["Mã khách hàng cũ"]", {
                        isShow: $(`.shtoogle[data-name='custoldcode']`).is(":checked")
                    }],
                    "Phone": {
                        dataNamePer: 'phone',
                        data: ["@Local["Số điện thoại"]", {
                            isShow: $(`.shtoogle[data-name='phone']`).is(":checked")
                        }]
                    },
                    "IsCustNew": ["@Local["Khách mới"]", {
                        isShow: $(`.shtoogle[data-name='custnew']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return value == "1" ? "x" : "";
                        }
                    }],
                    "SourceID": ["@Local["Nguồn"]", {
                        isShow: $(`.shtoogle[data-name='source']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataCustomerSource, value);
                        }
                    }],
                    "Birth": ["@Local["Độ tuổi"]", {
                        isShow: $(`.shtoogle[data-name='age']`).is(":checked")
                    }],
                    "GenderID": ["@Local["Giới tính"]", {
                        isShow: $(`.shtoogle[data-name='gender']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return RP_Render_Gender(value);
                        }
                    }],
                    "Address": {
                        dataNamePer: 'address',
                        data: ["@Local["Địa chỉ"]", {
                            isShow: $(`.shtoogle[data-name='address']`).is(":checked")
                        }]
                    },
                    "District": {
                        dataNamePer: 'district',
                        data: ["@Local["Quận huyện"]", {
                            isShow: $(`.shtoogle[data-name='district']`).is(":checked")
                        }]
                    },
                    "City": {
                        dataNamePer: 'city',
                        data: ["@Local["Tỉnh/Thành phố"]", {
                            isShow: $(`.shtoogle[data-name='city']`).is(":checked")
                        }]
                    },
                    "New_ServiceName": ["@Local["Dịch vụ"]", {
                        isShow: $(`.shtoogle[data-name='service']`).is(":checked")
                    }],
                    "TimeTreat": ["@Local["Thời gian điều trị"]", {
                        callbackRenderValue: (value) => {
                            return value != "0" ? value + " @Local["Phút"]" : "";
                        }
                    }],
                    "Symptoms": ["@Local["Đặc điểm bệnh"]", {
                        isShow: $(`.shtoogle[data-name='symptoms']`).is(":checked")
                    }],
                    "ContentTreat": ["@Local["Nội dung điều trị"]", {
                        isShow: $(`.shtoogle[data-name='contenttreat']`).is(":checked")
                    }],
                    "DoctorID": ["@Local["Bác sĩ"]", {
                        isShow: $(`.shtoogle[data-name='doctor']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Dr2": ["@Local["Bác sĩ"] 2", {
                        isShow: $(`.shtoogle[data-name='dr2']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Dr3": ["@Local["Bác sĩ"] 3", {
                        isShow: $(`.shtoogle[data-name='dr3']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Dr4": ["@Local["Bác sĩ"] 4", {
                        isShow: $(`.shtoogle[data-name='dr4']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "AssisTreatID": ["@Local["PT/KTV"]", {
                        isShow: $(`.shtoogle[data-name='assistant']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Ass2": ["@Local["PT/KTV"] 2", {
                        isShow: $(`.shtoogle[data-name='ass2']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Ass3": ["@Local["PT/KTV"] 3", {
                        isShow: $(`.shtoogle[data-name='ass2']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Ass4": ["@Local["PT/KTV"] 4", {
                        isShow: $(`.shtoogle[data-name='ass4']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Tech1": ["@Local["Hỗ trợ chuyên môn"]", {
                        isShow: $(`.shtoogle[data-name='tech1']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "Tech2": ["@Local["Hỗ trợ chuyên môn"] 2", {
                        isShow: $(`.shtoogle[data-name='tech2']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "New_ServiceSale": ["@Local["Mã lên đơn"]", {
                        isShow: $(`.shtoogle[data-name='salescode']`).is(":checked")
                    }],
                    "New_InvoiceCode": ["@Local["Mã phiếu thu"]", {
                        isShow: $(`.shtoogle[data-name='invoicecode']`).is(":checked")
                    }],
                    "Employee_ID1": ["@Local["Người chịu trách nhiệm"]", {
                        isShow: $(`.shtoogle[data-name='responsible']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value);
                        }
                    }],
                    "New_Quantity": ["@Local["Số lượng"]", {
                        isShow: $(`.shtoogle[data-name='quantity']`).is(":checked")
                    }],
                    "New_PriceRoot": ["@Local["Giá"]"],
                    "New_Discount": ["@Local["Giảm"]", {
                        callbackRenderValue: (value, { New_PriceRoot, New_PriceDiscounted }) => {
                            return (New_PriceRoot - New_PriceDiscounted);
                        }
                    }],
                    "New_PriceDiscounted": ["@Local["Thành tiền"]"],
                    "NewColumn4": ["@Local["Hoàn thành"]", {
                            isShow: $(`.shtoogle[data-name='percentComplete']`).is(":checked"),
                            callbackRenderValue: (value, { Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity }) => {
                                return (RP_Render_TreatmentOrPercentService(Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity));
                        }
                    }],
                    "NewColumn3": ["@Local["Chi phí điều trị"]", {
                            isShow: $(`.shtoogle[data-name='amounttreat']`).is(":checked"),
                            callbackRenderValue: (value, {New_PriceDiscounted, Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity, ManualAmount }) => {
                                return (_sys_TreatManualamount == 1 ? ManualAmount : (New_PriceDiscounted * RP_Render_TreatmentOrPercentService(Type, TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, New_Quantity) / 100));
                        }
                    }],
                    "NewColumn": ["@Local["Thu tiền"]", {
                        callbackRenderValue: (value, { Amount }) => {
                            return Amount >= 0 ? (Amount) : "0";
                        }
                    }],
                    "NewColumn1": ["@Local["Hoàn tiền"]", {
                        callbackRenderValue: (value, { Amount }) => {
                            return Amount < 0 ? (Amount) : "0";
                        }
                    }],
                    "NewColumn2": ["@Local["Tiền cọc"]", {
                        callbackRenderValue: (value, { Amount, TabID, CardID, MedID }) => {
                            return (TabID == "0" && CardID == "0" && MedID == "0") ? (Amount) : "0";
                        }
                    }],
                    "Method": ["@Local["Hình thức thanh toán"]", {
                        callbackRenderValue: (value, { PosName, Transfer_Type_Name }) => {
                            return value + (PosName != '' ? (' - ' + PosName) : '') + (Transfer_Type_Name != '' ? (' - ' + Transfer_Type_Name) : '');
                        }
                    }],
                    "New_Paid": ["@Local["Đã thanh toán"]"],
                    "Debt": ["@Local["Còn lại"]", {
                        callbackRenderValue: (value, { New_PriceDiscounted, New_Paid }) => {
                            return New_PriceDiscounted - New_Paid;
                        }
                    }],

                    "TotalPriceDiscounted": ["@Local["Tổng phát sinh"]"],
                    "TotalPaid": ["@Local["Tổng thanh toán"]"],
                    "TotalLeft": ["@Local["Còn lại"]", {
                        callbackRenderValue: (value, { TotalPriceDiscounted, TotalPaid }) => {
                            return TotalPriceDiscounted - TotalPaid;
                        }
                    }],

                    "New_Note": ["@Local["Ghi chú"]", {
                        isShow: $(`.shtoogle[data-name='note']`).is(":checked")
                    }],
                    "CustCreated": ["@Local["Ngày tạo hồ sơ"]", {
                        isShow: $(`.shtoogle[data-name='CusCreated']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return ConvertDateTimeUTC_DMY(value);
                        }
                    }]
                };
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RP_GridBody', PermissionTable_TabControl);
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = "@Local["Báo cáo tổng quát"]", DataReportMain, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                                                            //#endregion

</script>

