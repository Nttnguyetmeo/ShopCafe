@page
@model MLunarCoffee.Pages.Report.Template
@{
    Layout = null;
}

<script>js_require_notasync('/assests/dist/flatpickr/plugins/monthSelect/index.js', true)</script>
<script>css_require('/assests/dist/flatpickr/plugins/monthSelect/style.css')</script>
<div class="vtcondition">
    <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
    <div class="fulllap collapse collapsesticky show">
        <div class="d-lg-flex">
            <div class="w-100">
                <div class="row m-0 gap-2 m-0 align-items-center d-lg-flex">
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_TokenBranchDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid multiple search selection dropdown form-control" id="Report_TokenBranch">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Chi nhánh"]</div>
                                <div id="cbbReport_TokenBranch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_TokenPageDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fab fa-facebook-f" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid multiple search selection dropdown form-control" id="Report_TokenPage">
                                <input type="hidden" name="page" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Trang"]</div>
                                <div id="cbbReport_TokenPage" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_TokenTagDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fas fa-tag" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid multiple search selection dropdown form-control" id="Report_TokenTag">
                                <input type="hidden" name="tag" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Nhãn"]</div>
                                <div id="cbbReport_TokenTag" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_DateDiv">
                        <div class="input-group flex-nowrap rounded-end position-relative">
                            <div class="input-group-text py-0 px-3 position-relative ">
                                <div id="blockTime" class="px-2 rounded-2 bg-gradient-primary text-white d-none" style="border-radius: 10px !important;" title="@Local["Giới hạn ngày"]" data-bs-toggle="tooltip">
                                    <div id="RP_Time_Block" class="text-sm"></div>
                                </div>
                                <i class="fas fa-clock" aria-hidden="true"></i>
                            </div>
                            <input id="Report_Date" class="border-1 border-start flatpickr flatpickr-input form-control hoverpopup" type="text" placeholder="eg .@Local["Ngày"]" />
                            <div id="Report_DateFrom_TempBlock" class="input-group-text border-end position-relative border-end-0" title="@Local["Từ ngày"]" data-bs-toggle="tooltip">
                                <div id="Report_DateFrom_TempText" class="fw-bold">0</div>
                                <input id="Report_DateFrom_Temp" class="flatpickr position-absolute start-0 top-0 w-100 h-100 opacity-0" type="text" placeholder="eg .@Local["Ngày"]" />
                            </div>
                            <div id="Report_DateTo_TempBlock" class="input-group-text border-end  position-relative d-none border-end-0" title="@Local["Đến ngày"]" data-bs-toggle="tooltip">
                                <div id="Report_DateTo_TempText" class="fw-bold">0</div>
                                <input id="Report_DateTo_Temp" class="flatpickr position-absolute start-0 top-0 w-100 h-100 opacity-0" type="text" placeholder="eg .@Local["Ngày"]" />
                            </div>
                            <div class="dropdown fluid max-width-100 border-end-0 search selection ui" id="Report_TypeDate">
                                <input type="hidden" name="branch" readonly="readonly" value="0">
                                <input class="search" autocomplete="off" readonly="readonly" tabindex="0">
                                <i class="dropdown icon me-n3"></i>
                                <div class="text">@Local["Ngày tạo"]</div>
                                <div class="menu" tabindex="-1" id="Report_cbbTypeDate">
                                    <div class="item active selected" data-value="0">@Local["Ngày tạo"]</div>
                                    <div class="item" data-value="1">@Local["Ngày chốt"]</div>
                                </div>
                            </div>
                            <div class="input-group-text border-start-0 border-end ps-2 m-0"> </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_BranchDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid search selection dropdown form-control" id="Report_Branch">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Chi nhánh"]</div>
                                <div id="cbbReport_Branch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_WareDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fas fa-warehouse" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid search selection dropdown form-control" id="Report_Ware">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Kho"]</div>
                                <div id="cbbReport_Ware" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_SourceDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text  px-3">
                                <i class="fab fa-sourcetree"></i>
                            </div>
                            <div class="ui fluid search selection dropdown form-control" id="Report_Source">
                                <input type="hidden" name="source" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Nguồn"]"</div>
                                <div id="cbbReport_Source" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_TokenGroupStaffDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text px-3">
                                <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
                            </div>
                            <div class="ui fluid multiple search selection dropdown form-control" id="Report_TokenGroupStaff" onchange="event.preventDefault(); event.stopPropagation();return Report_FilterTeleByGroup()">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Nhóm tele"]</div>
                                <div id="cbbReport_TokenGroupStaff" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_GroupStaffDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text  px-3">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="ui fluid search selection dropdown form-control" id="Report_GroupStaff" onchange="event.preventDefault(); event.stopPropagation();return Report_FilterTeleByGroup()">
                                <input type="hidden" name="staff" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Nhóm tele"]"</div>
                                <div id="cbbReport_GroupStaff" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm flex-grow-1 px-0" id="Report_StaffDiv">
                        <div class="input-group flex-nowrap">
                            <div class="input-group-text  px-3">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="ui fluid search selection dropdown form-control" id="Report_Staff">
                                <input type="hidden" name="staff" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Tele"]"</div>
                                <div id="cbbReport_Staff" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-auto my-auto flex-grow-0 ps-lg-2">
                <div class="h-100">
                    <div class="d-flex mt-lg-0 mt-2 gap-2 overflow-auto">
                        <button id="Report_ButtonView" class="w-50 btn bg-gradient-primary mb-0 flex-fill" style="min-width: 100px;" onclick="Report_LoadAll()">
                            @Local["OK"]
                        </button>
                        <button id="Report_ButtonReset" class="w-50 btn bg-gradient-dark mb-0 flex-fill" style="min-width: 100px;" onclick="Report_Executed()">@Local["Đặt lại"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="position-relative min-height-200">
    <div id="Report_Loader" class="waitingdiv text-center w-100 mt-3 position-absolute top-5 start-50 translate-middle-x d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div id="Report_Main" class="row  mt-n2"></div>
</div>



<script type="text/javascript">
    let data_template;
    var ser_UseBranch, ser_UseDate, ser_UseWare, ser_UseAllWare, ser_UseMultiBranch, ser_UseAllBranch, ser_AllowRangeDate, ser_DataSheet, ser_UseSource, ser_UseStaff, ser_UseGroupStaff, ser_UseMultiGroupStaff
        , ser_UsePage, ser_UseServiceCare, ser_UseTag;

    $(document).ready(function () {
        Report_Ini();
        ToolPopper();
    });
    function Report_Ini() {
        ser_UseBranch = '@Model._UseBranch';
        ser_UseDate = '@Model._UseDate';
        ser_UseTypeDate = '@Model._UseTypeDate';
        ser_UseWare = '@Model._UseWare';
        ser_UseAllWare = '@Model._UseAllWare';
        ser_UseMultiBranch = '@Model._UseMultiBranch';
        ser_UseAllBranch = '@Model._UseAllBranch';
        ser_AllowRangeDate = '@Model._AllowRangeDate';
        ser_DataSheet = "@Model._DataSheet";
        ser_UseSource = '@Model._UseSource';
        ser_UseStaff = '@Model._UseStaff';
        ser_UseGroupStaff = '@Model._UseGroupStaff';
        ser_UseMultiGroupStaff = '@Model._UseMultiGroupStaff';
        ser_UsePage = '@Model._UsePage';
        ser_UseServiceCare = '@Model._UseServiceCare';
        ser_UseTag = '@Model._UseTag';
        Report_Executed();
    }

    function Report_ExecutedOutside(UseBranch, UseDate, UseTypeDate, UseWare, UseSource, UseStaff, UseGroupStaff, UseMultiGroupStaff
        , UsePage, UseTag, UseServiceCare, UseMultiBranch, UseAllBranch, AllowRangeDate
        , dataSheet
    ) {
        ser_UseBranch = UseBranch;
        ser_UseDate = UseDate;
        ser_UseTypeDate = UseTypeDate;
        ser_UseWare = UseWare;
        ser_UseMultiBranch = UseMultiBranch;
        ser_UseAllBranch = UseAllBranch;
        ser_AllowRangeDate = AllowRangeDate;
        ser_DataSheet = dataSheet;
        ser_UseSource = UseSource;
        ser_UseStaff = UseStaff;
        ser_UseGroupStaff = UseGroupStaff;
        ser_UseMultiGroupStaff = UseMultiGroupStaff;
        ser_UsePage = UsePage;
        ser_UseServiceCare = UseServiceCare;
        ser_UseTag = UseTag;
        Report_Executed();

    }

    function Report_Executed() {
        Report_Setting(ser_DataSheet, ser_UseBranch, ser_UseDate, ser_UseTypeDate
            , ser_UseWare, ser_UseAllWare, ser_UseMultiBranch, ser_UseAllBranch, ser_AllowRangeDate
            , ser_UseSource, ser_UseStaff, ser_UseGroupStaff, ser_UseMultiGroupStaff, ser_UsePage, ser_UseServiceCare, ser_UseTag
        );
    }
    function Report_Setting(sheet, isbranch, isdate, istypedate, isware, isallware, ismubranch, isallbranch, rangedate
        , issource, isstaff, isgroupstaff, ismultigroupstaff, isMLunarCoffee, issercare, istag
    ) {

        //#region // Token Branch
        if (Number(ismubranch) == 1) {
            Load_Combo(Object.values(RP_DataBranch), "cbbReport_TokenBranch", true);
            $("#Report_TokenBranch").dropdown("refresh");
            $("#Report_TokenBranch").dropdown("set selected", Master_branchID);
            $('#Report_TokenBranchDiv').show();
        }
        else {
            $('#Report_TokenBranchDiv').hide();
        }
        //#endregion

        //#region // Token Page
        if (Number(isMLunarCoffee) == 1) {
            Load_Combo(DataFacebookPage, "cbbReport_TokenPage", true);
            $("#Report_TokenPage").dropdown("refresh");
            $("#Report_TokenPage").dropdown("set selected", DataFacebookPage[0].ID);
            $('#Report_TokenPageDiv').show();
        }
        else {
            $('#Report_TokenPageDiv').hide();
        }
        //#endregion

        //#region // Token Tag
        if (Number(istag) == 1) {
            Load_Combo(DataFacebookTag, "cbbReport_TokenTag", true);
            $("#Report_TokenTag").dropdown("refresh");
            $("#Report_TokenTag").dropdown("set selected", DataFacebookTag[0].ID);
            $('#Report_TokenTagDiv').show();
        }
        else {
            $('#Report_TokenTagDiv').hide();
        }
        //#endregion

        //#region // Branch
        if (Number(isbranch) == 1 || Number(isallbranch) == 1) {
            Load_Combo(Object.values(RP_DataBranch), "cbbReport_Branch", true, (isallbranch == 1 ? '@Local["Tất cả chi nhánh"]' : undefined));
            $("#Report_Branch").dropdown("refresh");
            $("#Report_Branch").dropdown("set selected", Master_branchID);
            $('#Report_BranchDiv').show();
        }
        else {
            $('#Report_BranchDiv').hide();
        }
        //#endregion

        //#endregion
        //#region // WareHouse
        if (Number(isware) == 1 || Number(isallware) == 1) {
            let dataWare = Object.values(RP_DataWarehouse);
            Load_Combo(dataWare, "cbbReport_Ware", true, (isallware == 1 ? '@Local["Tất cả kho"]' : undefined));
            $("#Report_Ware").dropdown("refresh");
            $("#Report_Ware").dropdown("set selected", dataWare[0].ID);
            $('#Report_WareDiv').show();
        }
        else {
            $('#Report_WareDiv').hide();
        }
        //#endregion

        //#region // Source
        if (Number(issource) == 1) {

            Load_Combo(Object.values(RP_DataCustomerSource), "cbbReport_Source", true, '@Local["Tất cả nguồn"]');
            $("#Report_Source").dropdown("refresh");
            $("#Report_Source").dropdown("set selected", '0');
            $('#Report_SourceDiv').show();
        }
        else {
            $('#Report_SourceDiv').hide();
        }
        //#endregion

        //#region // GroupStaff
        if (Number(isgroupstaff) == 1) {

            Load_Combo(Object.values(RP_DataGroupStaff), "cbbReport_GroupStaff", true, '@Local["Tất cả nhóm tele"]');
            $("#Report_GroupStaff").dropdown("refresh");
            $("#Report_GroupStaff").dropdown("set selected", '0');
            $('#Report_GroupStaffDiv').show();
        }
        else {
            $('#Report_GroupStaffDiv').hide();
        }
        //#endregion

        //#region // MultiGroupStaff
        
        if (Number(ismultigroupstaff) == 1) {
            Load_Combo(Object.values(RP_DataGroupStaff), "cbbReport_TokenGroupStaff", true);
            $("#Report_TokenGroupStaff").dropdown("refresh");
            $("#Report_TokenGroupStaff").dropdown("set selected", '0');
            $('#Report_TokenGroupStaffDiv').show();

        }
        else {
            $('#Report_TokenGroupStaffDiv').hide();
        }
        //#endregion

        //#region // Staff
        if (Number(isstaff) == 1) {

            Load_Combo(Object.values(RP_DataStaff), "cbbReport_Staff", true, '@Local["Tất cả telesale"]');
            $("#Report_Staff").dropdown("refresh");
            $("#Report_Staff").dropdown("set selected", '0');
            $('#Report_StaffDiv').show();
        }
        else {
            $('#Report_StaffDiv').hide();
        }
        //#endregion

        //#region // DATE
        if (Number(isdate) == 1) {
            // VAR DATE FLATPICKR
            let DateReport, DateFromReport, DateToReport;
            let isAllowDateTo = 0;

            // LIMIT NOTI
            if (rangedate != 0) {
                $("#blockTime").removeClass("d-none").siblings().remove();
                $("#RP_Time_Block").html(formatNumber(rangedate));
            }

            // CHECK DATE LIMIT

            if (rangedate == 0 || rangedate > 31) {
                $("#Report_DateTo_TempBlock").removeClass('d-none');
                isAllowDateTo = 1;
            }

            if (rangedate > 0 && rangedate < 31) {
                $("#Report_DateFrom_TempBlock").addClass('d-none');
            }

            DateReport = $("#Report_Date").flatpickr({
                mode: "range"
                , dateFormat: 'd-m-Y'
                , enableTime: false
                , showMonths: 1
                , onClose: function (selectedDates, dateStr, instance) {
                    if (selectedDates.length == 1) {
                        instance.setDate([selectedDates[0], selectedDates[0]], true);
                    }
                    if (rangedate != 0) {
                        $("#Report_Date").removeClass('errorReport');
                        $('#Report_Date').prop('title', '');
                        if (selectedDates.length != 1) {
                            var diffDays = Math.abs(selectedDates[1] - selectedDates[0]) / (1000 * 60 * 60 * 24);
                            if (diffDays > rangedate) {
                                instance.setDate([selectedDates[0], selectedDates[0]], true);
                                $('#Report_Date').prop('title', '@Local["Phạm vi tối đa"] : ' + rangedate + ' @Local["Ngày"]');
                                $("#Report_Date").addClass('errorReport');

                            }
                        }
                    }
                }
            });

            let date = new Date();
            let firstDay, lastDay;
            if (rangedate > 0 && rangedate < 31) {
                firstDay = new Date(date.getFullYear(), date.getMonth(), date.getDate() - rangedate)
                lastDay = new Date(date);
            }
            else {
                firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
            }

            if (sys_isMobile == 0) {
                DateFromReport = $("#Report_DateFrom_Temp").flatpickr({
                    dateFormat: 'd-m-Y'
                    , enableTime: false
                    , plugins: [
                        new monthSelectPlugin({
                            shorthand: false,
                            dateFormat: "d-m-Y",
                            altFormat: "F Y",
                        })
                    ]
                    , onChange: function (selectedDates, dateStr, instance) {
                        let DF_DateTime = selectedDates[0];
                        let DF_Month = DF_DateTime.getMonth();
                        let DF_Year = DF_DateTime.getFullYear();

                        let DT_Month = DF_DateTime.getMonth();
                        let DT_Year = DF_DateTime.getFullYear();

                        if (isAllowDateTo == 1) {
                            let DT_DateTime = new Date(ConvertString_DMY_To_DateTime($("#Report_DateTo_Temp").val()));
                            DT_Month = DT_DateTime.getMonth();
                            DT_Year = DT_DateTime.getFullYear();
                        }

                        let DF_New = new Date(DF_Year, DF_Month, 1);
                        let DT_New = new Date(DT_Year, DT_Month + 1, 0);
                        if (DF_Year + DF_Month > DT_Year + DT_Month) {
                            DF_New = new Date(DT_Year, DT_Month, 1);
                            DT_New = new Date(DF_Year, DF_Month + 1, 0);
                        }
                        var diffDays = Math.abs(DT_New - DF_New) / (1000 * 60 * 60 * 24);
                        if (rangedate != 0 && diffDays > rangedate) DateReport.setDate([DF_New, DF_New]);
                        else DateReport.setDate([DF_New, DT_New]);
                        $("#Report_DateFrom_TempText").html((DF_Month + 1) + '/' + DF_Year);
                        $("#Report_DateTo_TempText").html((DT_Month + 1) + '/' + DT_Year);

                    }
                })
                DateToReport = $("#Report_DateTo_Temp").flatpickr({
                    dateFormat: 'd-m-Y'
                    , enableTime: false
                    , plugins: [
                        new monthSelectPlugin({
                            shorthand: false,
                            dateFormat: "d-m-Y",
                            altFormat: "F Y",
                        })
                    ]
                    , onChange: function (selectedDates, dateStr, instance) {
                        let DF_DateTime = new Date(ConvertString_DMY_To_DateTime($("#Report_DateFrom_Temp").val()));
                        let DF_Month = DF_DateTime.getMonth();
                        let DF_Year = DF_DateTime.getFullYear();
                        let DT_DateTime = selectedDates[0];
                        let DT_Month = DT_DateTime.getMonth();
                        let DT_Year = DT_DateTime.getFullYear();

                        let DF_New = new Date(DF_Year, DF_Month, 1);
                        let DT_New = new Date(DT_Year, DT_Month + 1, 0);
                        if (DF_Year + DF_Month > DT_Year + DT_Month) {
                            DF_New = new Date(DT_Year, DT_Month, 1);
                            DT_New = new Date(DF_Year, DF_Month + 1, 0);
                        }
                        var diffDays = Math.abs(DT_New - DF_New) / (1000 * 60 * 60 * 24);
                        if (rangedate != 0 && diffDays > rangedate) DateReport.setDate([DF_New, DF_New]);
                        else DateReport.setDate([DF_New, DT_New]);
                        $("#Report_DateFrom_TempText").html((DF_Month + 1) + '/' + DF_Year);
                        $("#Report_DateTo_TempText").html((DT_Month + 1) + '/' + DT_Year);
                    }
                })
                DateFromReport.setDate(firstDay, true)
                DateToReport.setDate(lastDay, true)

            }
            else {
                $('#Report_DateTo_TempBlock').addClass('d-none');
                $('#Report_DateFrom_TempBlock').addClass('d-none');
            }
            $("#Report_Date").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));
            $('#Report_DateDiv').show();

        }
        else {
            $('#Report_DateDiv').hide();
        }
        //#endregion

        //#region // Type Date
        if (Number(istypedate) == 1) {
            $("#Report_TypeDate").dropdown("refresh");
            $("#Report_TypeDate").dropdown("set selected", 0);
            $('#Report_TypeDate').show();
        }
        else {
            $('#Report_TypeDate').hide();
        }
        //#endregion

        if (sheet != undefined && sheet != '') {
            sheet = sheet.replaceAll('&quot;', '');
            let dataArray = [];
            let arraysh = sheet.split(',');
            for (let i = 0; i < arraysh.length; i++) {
                if (!isNaN(arraysh[i]) && arraysh[i] != '') {
                    let v = data_Sheet[Number(arraysh[i])];
                    if (v != undefined) dataArray.push(v[0])
                }
            }
            data_template = dataArray;
            Report_Render(data_template, "Report_Main");
            Report_LoadAll();
        }
    }
    function Report_Render(data, id,) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let dataString = [];
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let dr = '<div class="w-100">'

                        + '<div class="areaReport mt-2" id="Area_' + i + '">'
                        + '</div></div>';
                    dataString.push(dr);
                }
                switch (data.length) {
                    case 1:
                        stringContent = '<div class="fullcolumn">'
                            + dataString[0]
                            + '</div>';

                        break;
                    case 2:
                        stringContent = '<div class="fullcolumn">'
                            + dataString[0]
                            + '</div>'
                            + '<div class="fullcolumn">'
                            + dataString[1]
                            + '</div>';

                        break;
                    case 3:
                        stringContent = '<div class="fullcolumn">'
                            + '<div class="halfcolumn">'
                            + dataString[0]
                            + '</div>'
                            + '<div class="halfcolumn">'
                            + dataString[1]
                            + '</div>'
                            + '</div>'
                            + '<div class="fullcolumn">'
                            + dataString[2]
                            + '</div>';
                        break;
                    default: break;
                }
            }
            myNode.innerHTML = stringContent;
        }
        Report_Event();
    }
    function Report_Event() {
        $('.rp-search').on("click", function (event) {
            $('.rp-searchdiv').addClass('show');
            event.preventDefault();
            event.stopPropagation();
        })
        $('body').on('click', function (event) {
            if (!$(event.target).is('#rp-searchcard')
                && !$(event.target).closest('#rp-searchcard').length
                && !$(event.target).hasClass('item')
                && !$(event.target).closest('.flatpickr-calendar').length
                && $('.rp-searchdiv').hasClass('show')) {
                $('.rp-searchdiv').removeClass('show');
            }
        });

        $('.rp-searchcard .rpclose').on("click", function () {
            $('.rp-searchdiv').removeClass('show');
        })

    }
    function Report_LoadAll() {
        var promisesReport = [];
        $("#Report_ButtonView, #Report_ButtonReset").prop("disabled", true);
        $("#Report_Loader").removeClass("d-none");
        $("#Report_Main").hide();
        for (let i = 0; i < data_template.length; i++) {
            promisesReport.push(Report_LoadEach("#Area_" + i, data_template[i]));
        }
        Promise.all(promisesReport).then((value) => {
            setTimeout(() => {
                $("#Report_ButtonView, #Report_ButtonReset").prop("disabled", false);
                $("#Report_Loader").addClass("d-none");
                $("#Report_Main").fadeIn(200);
            }, 100)
        }).catch(() => {
            $("#Report_ButtonView, #Report_ButtonReset").prop("disabled", false);
            $("#Report_Loader").addClass("d-none");
            $("#Report_Main").fadeIn(200);
        })
    }

    async function Report_LoadEach(idarea, value) {
        return new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    try {
                        Report_LoadEachAsync(idarea, value, resolve);
                    }
                    catch (ex) {
                        reject();
                    }
                }
            )
        })
    };

    function Report_LoadEachAsync(idarea, value, resolve) {

        let link = value.Value;
        let SheetID = value.ID;
        let actionLink = "/" + link + "?ver=" + versionofWebApplication;
        if ($('#Report_Branch').is(":visible")) {
            let branchid = Number($('#Report_Branch').dropdown('get value')) ? Number($('#Report_Branch').dropdown('get value')) : 0;
            actionLink = actionLink + "&branch=" + branchid;
        }
        if ($('#Report_TokenBranch').is(":visible")) {
            let tokenbranch = $('#Report_TokenBranch').dropdown('get value') ? $('#Report_TokenBranch').dropdown('get value') : 0;
            actionLink = actionLink + "&branchToken=" + tokenbranch;
        }
        if ($('#Report_TokenTag').is(":visible")) {
            let tokentag = $('#Report_TokenTag').dropdown('get value') ? $('#Report_TokenTag').dropdown('get value') : 0;
            actionLink = actionLink + "&TokenPage=" + tokentag;
        }
        if ($('#Report_Ware').is(":visible")) {
            let wareid = Number($('#Report_Ware').dropdown('get value')) ? Number($('#Report_Ware').dropdown('get value')) : 0;
            actionLink = actionLink + "&WareID=" + wareid;
        }
        if ($('#Report_Source').is(":visible")) {
            let sourceid = Number($('#Report_Source').dropdown('get value')) ? Number($('#Report_Source').dropdown('get value')) : 0;
            actionLink = actionLink + "&SourceID=" + sourceid;
        }
        if ($('#Report_GroupStaff').is(":visible")) {
            let groupstaffid = Number($('#Report_GroupStaff').dropdown('get value')) ? Number($('#Report_GroupStaff').dropdown('get value')) : 0;
            actionLink = actionLink + "&GroupStaffID=" + groupstaffid;
        }
        if ($('#Report_Staff').is(":visible")) {
            let staffid = Number($('#Report_Staff').dropdown('get value')) ? Number($('#Report_Staff').dropdown('get value')) : 0;
            actionLink = actionLink + "&StaffID=" + staffid;
        }
        if ($('#Report_TokenGroupStaff').is(":visible")) {
            let tokenGroupStaff = $('#Report_TokenGroupStaff').dropdown('get value') ? $('#Report_TokenGroupStaff').dropdown('get value') : '';
            actionLink = actionLink + "&tokenGroupStaff=" + tokenGroupStaff;
        }
        if ($('#Report_TokenPage').is(":visible")) {
            let tokenpage = $('#Report_TokenPage').dropdown('get value') ? $('#Report_TokenPage').dropdown('get value') : 0;
            actionLink = actionLink + "&TokenPage=" + tokenpage;
        }

        if ($('#Report_Date').is(":visible")) {
            let dateFrom = "";
            let dateTo = "";
            let date = $('#Report_Date').val() ? $('#Report_Date').val() : new Date()
            if (date.includes(" to ")) {
                dateFrom = date.split(" to ")[0];
                dateTo = date.split(" to ")[1];
            }
            else {
                dateFrom = date;
                dateTo = date;
            }
            actionLink = actionLink + "&dateFrom=" + dateFrom + "&dateTo=" + dateTo;
        }
        if ($('#Report_TypeDate').is(":visible")) {
            let typedate = $('#Report_TypeDate').dropdown('get value') ? $('#Report_TypeDate').dropdown('get value') : 0;
            actionLink = actionLink + "&TypeDate=" + typedate;
        }

        if ($('#Report_Branch').is(":hidden")
            && $('#Report_TokenBranch').is(":hidden")
            && $('#Report_TokenTag').is(":hidden")
            && $('#Report_Ware').is(":hidden")
            && $('#Report_Source').is(":hidden")
            && $('#Report_Staff').is(":hidden")
            && $('#Report_TokenPage').is(":hidden")
            && $('#Report_Date').is(":hidden")
        ) {
            $('.Report_Main').hide();
        }
        actionLink = actionLink + "&sheet=" + SheetID + "&ViewOnly=1";
        $(idarea).empty();
        $(idarea).load(actionLink, function () {
            resolve();
        });
    }

    function Report_FilterTeleByGroup() {
        let GroupID = $("#Report_GroupStaff").dropdown('get value') ? Number($("#Report_GroupStaff").dropdown('get value')) : 0;
        let tokenGroup = $('#Report_TokenGroupStaff').dropdown('get value') ? $('#Report_TokenGroupStaff').dropdown('get value') : '';
        let perLevel = !isNaN(Number(sys_TeleLevel)) ? Number(sys_TeleLevel) : 0;
        let dataStaff = Object.values(RP_DataStaff);
        let dataFilter = [];
        if (GroupID == 0) {
            if (tokenGroup == '') {
                Load_Combo(dataStaff, "cbbReport_Staff", true, '@Local["Tất cả telesale"]');
                $("#Report_Staff").dropdown("clear");
                $("#Report_Staff").dropdown("refresh");
                $("#Report_Staff").dropdown("set selected", "0");
            }
            else {
                let dtTokenGroup = tokenGroup.split(',');
                dataFilter = dataStaff.filter((word) => { return dtTokenGroup.includes(word.GroupID.toString())});
                if (perLevel == 3 || perLevel == 2) Load_Combo(dataFilter, "cbbReport_Staff", true, "@Local["Tất cả telesale"]");
                else Load_Combo(dataFilter, "cbbReport_Staff", true);
                $("#Report_Staff").dropdown("clear");
                $("#Report_Staff").dropdown("refresh");
                $("#Report_Staff").dropdown("set selected", "0");
            }

        } else {
            dataFilter = dataStaff.filter((word) => { return word.GroupID == GroupID });
            if (perLevel == 3 || perLevel == 2) Load_Combo(dataFilter, "cbbReport_Staff", true, "@Local["Tất cả telesale"]");
            else Load_Combo(dataFilter, "cbbReport_Staff", true);
            $("#Report_Staff").dropdown("clear");
            $("#Report_Staff").dropdown("refresh");
            $("#Report_Staff").dropdown("set selected", dataFilter[0] ? (dataFilter[0].ID).toString() : 0);
        }
        return false;
    }
</script>
<style>
    .rp-searchcard {
        opacity: 0;
        min-height: 700px;
    }

    .rp-searchdiv.show .rp-searchcard {
        opacity: 1;
    }

    .rp-search {
        top: 106px;
        bottom: unset !important;
        opacity: 0.5;
    }

        .rp-search:hover {
            opacity: 1;
        }

    #Report_Main {
        transition: height 0.2s ease-in-out;
    }

    #BodyMain {
        /*overflow-y: scroll;*/
        scrollbar-gutter: stable both-edges;
        overflow-y: overlay !important;
    }
</style>
