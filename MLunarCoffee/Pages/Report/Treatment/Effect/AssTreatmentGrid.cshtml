@page
@model MLunarCoffee.Pages.Report.Treatment.Effect.AssTreatmentGridModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="collapsesticky collapse show" id="AssTreatGrid_General">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="right">
                <ul class="nav nav-pills nav-fill p-1" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link text-sm mb-0 px-2 py-1 active" data-bs-toggle="tab" role="tab" onclick="ATreat_Chart(0)" aria-selected="true">
                            @Local["Số ca"]
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link text-sm mb-0 px-2 py-1" data-bs-toggle="tab" role="tab" onclick="ATreat_Chart(1)" aria-selected="false" tabindex="-1">
                            @Local["Thời gian"]
                        </a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a class="nav-link text-sm mb-0 px-2 py-1" data-bs-toggle="tab" role="tab" onclick="ATreat_Chart(2)" aria-selected="false" tabindex="-1">
                            @Local["Tiền điều trị"]
                        </a>
                    </li>
                </ul>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#AssTreatGrid_GeneralDiv" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return ATreat_LoadData()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return ATreat_Export()"></i>
                </div>
            </div>
        </div>
    
        <div class="card-body p-0 pt-0 collapsesticky collapse show" id=AssTreatGrid_GeneralDiv>
            <div class="m-0 mb-3 mobile-responsive">
                <div id="AssTreatGrid_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div class=" d-sm-flex mb-4">
                    <div class="col-w-250">
                        <div class="card-body border-radius-lg p-3 ps-0 mt-0 mt-lg-n3">
                            <h6 class="ms-2 fw-bold text-dark mb-0">@Local["Tổng thời gian điều trị"]</h6>
                            <p class="text-sm text-dark ms-2 ">@Local["Giá trị trung bình"]</p>
                            <div class="d-flex">
                                <div>
                                    <div class="icon icon-shape bg-danger-soft shadow text-center border-radius-md shadow-none">
                                        <i class="fas fa-clock text-lg text-primary text-gradient opacity-10" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="numbers">
                                        <h6 class="mb-0 fw-bold text-dark text-sm">@Local["Thời gian(phút)"]</h6>
                                        <span class="text-sm text-primary fw-bold">
                                            <a class="fs-6" id="asstreat_difftol"></a>
                                            <a id="asstreat_diffave" class="text-dark fw-normal ps-2" title="@Local["Trung bình"]"></a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex mt-3">
                                <div>
                                    <div class="icon icon-shape bg-success-soft shadow text-center border-radius-md shadow-none">
                                        <i class="fas fa-stream text-lg text-primary text-gradient opacity-10" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="numbers">
                                        <h6 class="mb-0 fw-bold text-dark text-sm">@Local["Số ca"]</h6>
                                        <span class="text-sm text-primary fw-bold">
                                            <a class="fs-6" id="asstreat_casetol"></a>
                                            <a id="asstreat_caseave" class="text-dark fw-normal ps-2" title="@Local["Trung bình"]"></a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex mt-3">
                                <div>
                                    <div class="icon icon-shape bg-warning-soft shadow text-center border-radius-md shadow-none">
                                        <i class="ni ni-money-coins text-lg text-primary text-gradient opacity-10" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="numbers">
                                        <h6 class="mb-0 fw-bold text-dark text-sm">@Local["Tiền điều trị"] (@Local["Triệu"])</h6>
                                        <span class="text-sm text-primary fw-bold">
                                            <a class="fs-6" id="asstreat_amountetol"></a>
                                            <a id="asstreat_amountave" class="text-dark fw-normal ps-2" title="@Local["Trung bình"]"></a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex mt-3">
                                <div>
                                    <div class="icon icon-shape bg-warning-soft shadow text-center border-radius-md shadow-none">
                                        <i class="fas fa-user-md text-lg text-primary text-gradient opacity-10" aria-hidden="true"></i>
                                    </div>
                                </div>
                                <div class="ms-3">
                                    <div class="numbers">
                                        <h6 class="mb-0 fw-bold text-dark text-sm">@Local["PT/KTV"]</h6>
                                        <span class="text-sm text-primary fw-bold">
                                            <a class="fs-5" id="asstreat_doctol"></a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="my-0 w-100" style="overflow-x: auto; overflow-y: hidden;">
                        <div class="chart" style="height:300px;">
                            <canvas id="AssTr_Chart" class="chart-canvas"></canvas>
                        </div>
                    </div>
                </div>
                <table class="table vt-table mb-0" id="AssTreatGrid_Grid">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th>@Local["Kỹ thuật viên/phụ tá"]</th>
                            <th><i onclick="ATreat_Sort(this,2)" class="sort cursor-pointer text-lg text-dark fas fa-sort-alpha-down pe-2"></i>@Local["Thời gian(phút)"]</th>
                            <th><i onclick="ATreat_Sort(this,3)" class="sort cursor-pointer text-lg text-dark fas fa-sort-alpha-down pe-2 "></i>@Local["Số ca"]</th>
                            <th><i onclick="ATreat_Sort(this,4)" class="sort cursor-pointer text-lg text-dark fas fa-sort-alpha-down pe-2"></i>@Local["Tiền điều trị"]</th>
                        </tr>
                    </thead>
                    <tbody id="AssTreatGrid_GridBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="AssTreatGrid_GeneralDetail" style="display:none;">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="left">
                <p id="AssTreatGrid_DetailCardGeneral" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="wrap">
                    <div class="wrapblock">
                        <div class="text-primary fw-bold d-flex my-auto mx-2">
                            <span id="AssTreatGrid_currentdetaildata">0</span>
                            <span class="mx-2">/</span>
                            <span id="AssTreatGrid_totaldata">0</span>
                        </div>
                        <div class="icon-hover mx-1 my-auto"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Thu gọn"]">
                            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                               data-bs-toggle="collapse" href="#AssTreatGrid_GeneralDetailDiv" aria-expanded="true"></i>
                        </div>
                        <div class="icon-hover mx-1 my-auto"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Tải lại"]">
                            <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                               onclick="event.preventDefault(); return ATreat_DetailLoad()"></i>
                        </div>
                        <div class="icon-hover mx-1 my-auto"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Xuất excel"]">
                            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                               onclick="event.preventDefault(); return ATreat_ExportDetail()"></i>
                        </div>
                        <div class="icon-hover mx-1 my-auto"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["In báo cáo"]">
                            <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                               onclick="event.preventDefault(); ATreat_PrintDetail()"></i>
                        </div>
                        <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                            @Local["Xem thêm"]
                        </button>
                    </div> 
                </div>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleDetail form-check-input" data-name="document_code" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã hồ sơ"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="AssTreatGrid_GeneralDetailDiv">
            <div class="card-body p-0 pt-0">
                <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                    <div id="AssTreat_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table data-name="AssTreatGrid_GridDetail" class="table vt-table mb-0" id="AssTreatGrid_GridDetail">
                        <thead>
                            <tr>
                                <th style="width: 60px">#</th>
                                <th>@Local["Kỹ thuật viên/phụ tá"]</th>
                                <th style="min-width: 140px">@Local["Mã khách hàng"]</th>
                                <th data-name="document_code" style="min-width: 140px">@Local["Mã hồ sơ"]</th>
                                <th>@Local["Khách hàng"]</th>
                                <th>@Local["Dịch vụ"]</th>
                                <th>@Local["Ngày điều trị"]</th>
                                <th>@Local["Tiền điều trị"]</th>
                                <th>@Local["Thời gian(phút)"]</th>
                            </tr>
                        </thead>
                        <tbody id="AssTreatGrid_GridDetailBody">
                        </tbody>
                    </table>
                </div>
                <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return AssTreatGrid_RenderDetailMore();">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
</div>
<script>
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let xhrLoadList, xhrLoadDetail;
    let AssTreatChart = [];
    let AssTreatChartType = 0;
    let AssTreat_TreatID = 0;
    let IndexReportDetail = 0;
    let AssTreatMainDetail = [];
    let AddTreatMainDetailSlice = [];
    let AssTreatTimeCountDetail = 0;
    let Assshtable;

    $(document).ready(function () {
        Assshtable = $("#AssTreatGrid_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogleDetail')
        });
        ATreat_LoadData();
    })

    //#region //Load

    function ATreat_LoadData () {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Treatment/Effect/AssTreatmentGrid/?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
                'docid': 0,
                'isgeneral': 1,
            }
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    $("#AssTreatGrid_GridBody").empty();
                    ATreat_Render(data, "AssTreatGrid_GridBody")
                }
                else {
                    ATreat_Chart(1)
                }
            }
            , sender = null
            , before = function (e) {
                $("#AssTreatGrid_LoaderList").show();
            }
            , complete = function (e) {
                $("#AssTreatGrid_LoaderList").hide();
            }
        );
        return false;
    }

    //#endregion

    //#region //Render

    async function ATreat_Render (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            if (data && data.length != 0) {

                AssTreatChart = [];
                let tr = '';
                let totalTime = 0, totalCase = 0, totalAmount = 0;
                let aveTime = 0, aveCase = 0, aveAmount = 0;
                let maxTime = 0, maxCase = 0, maxAmount = 0;
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    totalTime += item.DiffTime;
                    totalCase += item.NumCase;
                    totalAmount += item.Amount;
                    maxTime = maxTime < item.DiffTime ? item.DiffTime : maxTime;
                    maxCase = maxCase < item.NumCase ? item.NumCase : maxCase;
                    maxAmount = maxAmount < item.Amount ? item.Amount : maxAmount;
                }
                if (data.length != 0) {
                    aveTime = totalTime / data.length;
                    aveCase = totalCase / data.length;
                    aveAmount = totalAmount / data.length;
                }
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let AssName = RP_DataEmployee[item.PT] != undefined ? RP_DataEmployee[item.PT].Name : 'unknown';
                    let echart = {};
                    echart.Name = AssName;
                    echart.NumCase = item.NumCase;
                    echart.DiffTime = item.DiffTime;
                    echart.Amount = Number(Math.round(item.Amount / 1000000)) ;
                    AssTreatChart.push(echart);
                    let averdiff = item.DiffTime >= aveTime ? 'higheraver' : 'loweraver';
                    let avercase = item.NumCase >= aveCase ? 'higheraver' : 'loweraver';
                    let averamount = item.Amount >= aveAmount ? 'higheraver' : 'loweraver';
                    let perdiff = maxTime != 0 ? (item.DiffTime / maxTime) * 100 : '100';
                    let percase = maxCase != 0 ? (item.NumCase / maxCase) * 100 : '100';
                    let peramount = maxAmount != 0 ? (item.Amount / maxAmount) * 100 : '100';
                    tr = `<tr id="Asstreat_${item.PT}" class="vt-number treat" role="row">
                              <td class="vt-number-order"></td>
                              <td data-name="cardcode">
                                  <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.PT}" data-name="${AssName}">
                                     ${AssName}
                                  </a>
                              </td>
                              <td data-value="${Number(item.DiffTime)}" data-name="difftime">
                                  <div class="progress">
                                       <div class="text-dark progress-bar align-items-start ps-2 text-sm fw-bold ${averdiff}" role="progressbar" style="width: ${perdiff}%;">
                                        <span class="position-absolute">${formatNumber(item.DiffTime)}</span>
                                        </div>
                                   </div>

                               </td>
                              <td data-value="${Number(item.NumCase)}" data-name="numcase">
                                 <div class="progress">
                                       <div class="text-dark progress-bar align-items-start ps-2 text-sm fw-bold ${avercase}" role="progressbar" style="width: ${percase}%;">
                                        <span class="position-absolute">${formatNumber(item.NumCase)}</span>
                                        </div>
                                   </div>

                               </td>
                              <td data-value="${Number(item.Amount)}" data-name="amount">
                                <div class="progress">
                                       <div class="text-dark progress-bar align-items-start ps-2 text-sm fw-bold ${averamount}" role="progressbar" style="width: ${peramount}%;">
                                        <span class="position-absolute">${formatNumber(item.Amount)}</span>
                                        </div>
                                   </div>
                                </td>
                              </tr>`;
                    myNode.insertAdjacentHTML('beforeend', tr);

                }
                tr = `<tr class="vt-number text-white bg-gradient bg-primary mt-2 DocTreatGrid_RowTotal" role="row">
                          <td></td>
                          <td class="text-start">
                              <a href="#" class="border-1 border-white border-bottom buttonViewClass text-white" data-id="0">@Local["Tất cả"]</a>
                          </td>
                          <td>${formatNumber(totalTime)}</td>
                          <td>${formatNumber(totalCase)}</td>
                           <td>${formatNumber(totalAmount)}</td>
                          </tr>`;
                myNode.insertAdjacentHTML('beforeend', tr);
                ATreat_Event();
                ATreat_Chart();
                $('#asstreat_doctol').html(formatNumber(data.length));
                $('#asstreat_difftol').html(formatNumber(totalTime));
                $('#asstreat_diffave').html(formatNumber(aveTime.toFixed(0)));
                $('#asstreat_casetol').html(formatNumber(totalCase));
                $('#asstreat_caseave').html(formatNumber(aveCase.toFixed(0)));
                $('#asstreat_amountetol').html(formatNumber(Math.round(totalAmount / 1000000)));
                $('#asstreat_amountave').html(formatNumber(Math.round(aveAmount / 1000000)));

            }
        }
    }
    function ATreat_Chart (_type) {
        if (_type != undefined) AssTreatChartType = _type;
        switch (AssTreatChartType) {
            case 1: {
                let cols = [];
                cols.push({'label': '', 'value': 'DiffTime'});
                rp_barcols('AssTr_Chart', AssTreatChart, 'Name', cols, notitle = false);
                break;
            }
            case 0: {
                let cols = [];
                cols.push({'label': '', 'value': 'NumCase'});
                rp_barcols('AssTr_Chart', AssTreatChart, 'Name', cols, notitle = false);
                break;
            }
            case 2: {
                let cols = [];
                cols.push({'label': '', 'value': 'Amount'});
                rp_barcols('AssTr_Chart', AssTreatChart, 'Name', cols, notitle = false);
                break;
            }
        }
    }

    function ATreat_Sort (element, _type) {
        $('#AssTreatGrid_Grid .sort').removeClass('text-danger').addClass('text-dark');
        $(element).removeClass('text-dark').addClass('text-danger');
        var asc = true;
        if ($(element).hasClass('fa-sort-alpha-down')) {
            $(element).removeClass('fa-sort-alpha-down').addClass('fa-sort-alpha-up');
            asc = true;
        }
        else {
            $(element).removeClass('fa-sort-alpha-up').addClass('fa-sort-alpha-down');
            asc = false;
        }
        ReportGeneral_SortNum(tableid = 'AssTreatGrid_Grid'
            , n = _type
            , valuename = 'data-value'
            , isasc = asc
        );

    }
    //#endregion

    //#region //Load And Render Detail

    function ATreat_DetailLoad () {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Treatment/Effect/AssTreatmentGrid/?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
                'docid': AssTreat_TreatID,
                'isgeneral': 0
            }
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    AssTreatMainDetail = JSON.parse(JSON.stringify(data));
                    AddTreatMainDetailSlice = sliceIntoChunks(data, 500);
                    $("#AssTreatGrid_GridDetailBody").empty();
                    if (AddTreatMainDetailSlice && AddTreatMainDetailSlice.length != 0) {
                        fnRenderBlock(AddTreatMainDetailSlice[IndexReportDetail], "AssTreatGrid_GridDetailBody"
                            , blocknum = 100
                            , fnrender = ATreat_DetailRender
                            , fnsuccess = null
                        );
                    }
                    Count_Up("AssTreatGrid_totaldata", AssTreatMainDetail.length);
                }
                else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {
                $("#AssTreat_LoaderList").show();
            }
            , complete = function (e) {
                $("#AssTreat_LoaderList").hide();
            }
        );
    }

    async function ATreat_DetailRender (data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let TreatName = RP_DataEmployee[item.PT] != undefined ? RP_DataEmployee[item.PT].Name : 'unknown';
                            let serName = (RP_DataService[item.ServiceID] != undefined) ? RP_DataService[item.ServiceID].Name : '';
                            let tr = `<tr class="vt-number" role="row">
                                          <td class="vt-number-order"></td>
                                          <td>${TreatName}</td>
                                          <td>
                                              <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                 ${item.CustCode}
                                              </a>
                                          </td>
                                              <td data-name="document_code">${item.Document_Code}</td>
                                          <td>${item.CustName}</td>
                                          <td>${serName}</td>
                                          <td>${ConvertDateTimeUTC_DMY(INTYMDToDate(item.NumCreated))}</td>
                                          <td>${formatNumber(item.Amount)}</td>
                                          <td>${formatNumber(item.DiffTime)}</td>
                                          </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                clearTimeout(AssTreatTimeCountDetail);
                Assshtable.Refresh();
                AssTreatTimeCountDetail = setTimeout(() => {
                    Count_Up("AssTreatGrid_currentdetaildata", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }
    //#endregion

    //#region //Event

    function ATreat_Event () {
        $("#AssTreatGrid_GridBody .buttonViewClass").unbind('click').on("click", function ()
        {
            AssTreat_TreatID = $(this).attr('data-id');
            $('#AssTreatGrid_GridBody .treat').removeClass('active');
            $('#Asstreat_' + AssTreat_TreatID).addClass('active');
            let name = $(this).attr('data-name');
            $("#AssTreatGrid_GeneralDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#AssTreatGrid_GeneralDetail").offset().top
            }, 300);
            if (AssTreat_TreatID == "0") {
                $("#AssTreatGrid_DetailCardGeneral").html('@Local["Tất cả"]');
            }
            else {
                $("#AssTreatGrid_DetailCardGeneral").html(name);
            }
            $("#AssTreatGrid_GridDetailBody").empty();
            ATreat_DetailLoad();
        })
    }

    //#endregion

    //#region //Export

    function ATreat_Export () {
        syslog_ExpExcel('e', typeof Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] != 'undefined' ? Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] : 'Hiệu quả KTV-PT điều trị');
        exportToExcel("AssTreatGrid_Grid", typeof Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] != 'undefined' ? Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] : 'Hiệu quả KTV-PT điều trị');
    }

    function ATreat_ExportDetail () {
        try {
            if (AssTreatMainDetail && AssTreatMainDetail.length != 0) {
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "PT": ["@Local["Kỹ thuật viên/phụ tá"]", (value) =>
                    {
                        return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : 'unknown';
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "Document_Code": ["@Local["Mã hồ sơ"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "ServiceID": ["@Local["Dịch vụ"]", (value) =>
                    {
                        return (RP_DataService[value] != undefined) ? RP_DataService[value].Name : '';
                    }],
                    "NumCreated": ["@Local["Ngày điều trị"]", (value) => {return ConvertDateTimeUTC_DMY(INTYMDToDate(value))}],
                    "Amount": ["@Local["Tiền điều trị"]", (value) => {return formatNumber(value) }],
                    "DiffTime": ["@Local["Thời gian(phút)"]", (value) => { return formatNumber(value) }],
                }
                let fileName = (typeof Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] != 'undefined' ? Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] : 'Hiệu quả KTV-PT điều trị') + '-' + xoa_dau($("#AssTreatGrid_DetailCardGeneral").text()).replaceAll(' ', '-');
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, AssTreatMainDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function ATreat_PrintDetail ()
    {
        try {
            if (AssTreatMainDetail && AssTreatMainDetail.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => {return index + 1;}
                    }],
                    "PT": ["@Local["Kỹ thuật viên/phụ tá"]", {
                        callbackRenderValue: (value) => {
                            return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : 'unknown';
                        }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "Document_Code": ["@Local["Mã hồ sơ"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "ServiceID": ["@Local["Dịch vụ"]", {
                        callbackRenderValue: (value) => {
                            return (RP_DataService[value] != undefined) ? RP_DataService[value].Name : '';
                        }
                    }],
                    "NumCreated": ["@Local["Ngày điều trị"]", {
                        callbackRenderValue: (value) => {return ConvertDateTimeUTC_DMY(INTYMDToDate(value))}
                    }],
                    "Amount": ["@Local["Tiền điều trị"]", {
                        callbackRenderValue: (value) => {
                            return (formatNumber(value));
                        }
                    }],
                    "DiffTime": ["@Local["Thời gian(phút)"]", {
                        callbackRenderValue: (value) => { return formatNumber(value) }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr)
                    {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = (typeof Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] != 'undefined' ? Outlang["Sys_hieu_qua_KTV-PT_dieu_tri"] : 'Hiệu quả KTV-PT điều trị'), AssTreatMainDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
    //#endregion
</script>
<style>
    .higheraver {
        background: #82d61652;
    }

    .loweraver {
        background: #ff888826;
    }

    #AssTreatGrid_GridBody .progress {
        width: 100%;
        height: 20px;
        background: #e9ecef00 !important
    }

    #AssTreatGrid_GridBody .progress-bar {
        height: 24px;
    }
</style>