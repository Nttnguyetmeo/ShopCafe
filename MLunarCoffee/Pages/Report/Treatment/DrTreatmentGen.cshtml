@page
@model MLunarCoffee.Pages.Report.Treatment.DrTreatmentGen
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div id="DRTreat_Container">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="right">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#DRTreat_GridArea" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return DRTreat_Load()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return DRTreat_Export()"></i>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="DRTreat_GridArea">
            <div class="card-body p-0 col-12">
                <div class="m-0 my-3 mobile-responsive">
                    <div id="DRTreat_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table class="table vt-table mb-0" id="DRTreat_Grid">
                        <thead>
                            <tr role="row">
                                <th style="width:40px;">@Local["#"]</th>
                                <th>@Local["Bác sĩ điều trị"]</th>
                                <th>@Local["Số lượng khách"]</th>
                                <th>@Local["Số lần điều trị"]</th>
                                <th>@Local["Tổng tiền hoàn thành"]</th>
                                <th>@Local["Tiền hoàn thành"]</th>
                                <th>@Local["Tổng tiền thanh toán"]</th>
                                <th>@Local["Tiền thanh toán"]</th>
                            </tr>
                        </thead>
                        <tbody id="DRTreat_GridBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="DRTreat_Detail" style="display: none;">
    <div id="DRTreat_DetailByCust">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0">
                <div class="left">
                    <p id="DRTreat_DetailCustDoc" class="text-md text-dark font-weight-bold mb-1"></p>
                </div>
                <div class="right">
                    <div class="wrap">
                        <div class="wrapblock">
                            <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                                <span id="DRTreatDetail_CustCurrentData">0</span>
                                <span class="mx-2">/</span>
                                <span id="DRTreatDetail_CustTotalData">0</span>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Thu gọn"]">
                                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                                   data-bs-toggle="collapse" href="#DRTreatDetail_CustArea" aria-expanded="true"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Tải lại"]">
                                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); return DRTreatDetail_Loaddata()"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["In báo cáo"]">
                                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); DRTreat_DetailPrintReport()"></i>
                            </div>
                            <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                                <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                                     data-bs-toggle="tooltip" data-bs-placement="top"
                                     data-bs-original-title="@Local["Xuất excel"]">
                                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                                </div>
                                <div class="input-group-text icon-hover w-auto vttech-input-item">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DRTreatDetail_Export(0)">@Local["Tất cả"]</i>
                                </div>
                                <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DRTreatDetail_Export(1)">@Local["Tùy chọn"]</i>
                                </div>
                            </div>
                            <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colListsCus">
                                @Local["Xem thêm"]
                            </button>
                        </div> 
                    </div>
                </div>
                <div class="toggle">
                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsCus" style="min-width:250px;">
                        <ul class="card card-body text-dark text-capitalize opacity-10">
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailcustomer form-check-input" data-name="CodeOld" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
            <div class="collapsesticky collapse show" id="DRTreatDetail_CustArea">
                <div class="card-body p-0 pt-0">
                    <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                        <div id="DRTreatDetail_CustLoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="DRTreatDetail_CustTable" class="table vt-table mb-0" id="DRTreatDetail_CustTable">
                            <thead>
                                <tr>
                                    <th style="width: 60px">#</th>
                                    <th>@Local["Mã khách hàng"]</th>
                                    <th data-name="CodeOld">@Local["Mã khách hàng cũ"]</th>
                                    <th>@Local["Khách hàng"]</th>
                                    <th>@Local["Bác sĩ"]</th>
                                    <th data-name="totalarising">@Local["Tổng phát sinh"]</th>
                                    <th data-name="totalpayment">@Local["Tổng tiền thanh toán"]</th>
                                    <th data-name="totaltreat">@Local["Tổng lần điều trị"]</th>
                                </tr>
                            </thead>
                            <tbody id="DRTreatDetail_CustTableBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="DRTreatDetail_CustBtnLoadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return DRTreatDetail_CustRenderMore();">
                        @Local["Xem thêm"]
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div id="DRTreat_DetailByTreat" style="display: none">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0">
                <div class="left">
                    <p id="DRTreat_DetailTreatDoc" class="text-md text-dark font-weight-bold mb-1"></p>
                </div>
                <div class="right">                    
                    <div class="wrap">
                        <div class="wrapblock">
                            <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                                <span id="DRTreatDetail_TreatCurrentData">0</span>
                                <span class="mx-2">/</span>
                                <span id="DRTreatDetail_TreatTotalData">0</span>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Thu gọn"]">
                                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                                   data-bs-toggle="collapse" href="#DRTreatDetail_TreatArea" aria-expanded="true"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Tải lại"]">
                                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); return DRTreatDetail_Loaddata()"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["In báo cáo"]">
                                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); DRTreat_DetailPrintReport()"></i>
                            </div>
                            <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                                <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                                     data-bs-toggle="tooltip" data-bs-placement="top"
                                     data-bs-original-title="@Local["Xuất excel"]">
                                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                                </div>
                                <div class="input-group-text icon-hover w-auto vttech-input-item">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DRTreatDetail_Export(0)">@Local["Tất cả"]</i>
                                </div>
                                <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DRTreatDetail_Export(1)">@Local["Tùy chọn"]</i>
                                </div>
                            </div>
                            <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                @Local["Xem thêm"]
                            </button>
                        </div> 
                    </div>
                </div>
                <div class="toggle">
                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                        <ul class="card card-body text-dark text-capitalize opacity-10">
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="CodeOld" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="custbirth" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Ngày sinh"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="custgender" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Giới tính"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="custaddress" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Địa chỉ"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="doctor2" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Bác sĩ"] 2</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="doctor3" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Bác sĩ"] 3</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="doctor4" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Bác sĩ"] 4</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="assistant2" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Kỹ thuật viên/phụ tá"] 2</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="Tech1" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Hỗ trợ chuyên môn"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="Tech2" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Hỗ trợ chuyên môn"] 2</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="servicecode" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Mã dịch vụ"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="quantity" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Số lượng"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="totalTreat" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Số lần điều trị"]</p>
                            </li>

                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="detail" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Chi tiết"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="paidperiod" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Thanh toán trong kỳ"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="treatdate" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Ngày điều trị"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="content" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Nội dung"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogledetailtreat form-check-input" data-name="branch" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Chi nhánh"]</p>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="collapsesticky collapse show" id="DRTreatDetail_TreatArea">
                <div class="card-body p-0">
                    <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                        <div id="DRTreatDetail_TreatLoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="DRTreatDetail_TreatTable" class="table vt-table mb-0" id="DRTreatDetail_TreatTable">
                            <thead>
                                <tr>
                                    <th rowspan="2" style="width: 60px">#</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Mã khách hàng"]</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Khách hàng"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="CodeOld">@Local["Mã khách hàng cũ"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="custbirth">@Local["Ngày sinh"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="custgender">@Local["Giới tính"]</th>
                                    <th rowspan="2" style="min-width: 250px" data-name="custaddress">@Local["Địa chỉ"]</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Bác sĩ"] 1</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="doctor2">@Local["Bác sĩ"] 2</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="doctor3">@Local["Bác sĩ"] 3</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="doctor4">@Local["Bác sĩ"] 4</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Kỹ thuật viên/phụ tá"] 1</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="assistant2">@Local["Kỹ thuật viên/phụ tá"] 2</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="Tech1">@Local["Hỗ trợ chuyên môn"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="Tech2">@Local["Hỗ trợ chuyên môn"] 2</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="servicecode">@Local["Mã dịch vụ"]</th>
                                    <th rowspan="2">@Local["Dịch vụ"]</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Giá dịch vụ"]</th>
                                    <th rowspan="2" data-name="quantity" style="min-width: 80px;">@Local["Số lượng"]</th>
                                    <th rowspan="2" data-name="totalTreat" style="min-width: 150px;">@Local["Số lần điều trị"]</th>
                                    <th rowspan="2" data-name="detail" style="min-width:150px;">@Local["Chi tiết"]</th>
                                    <th rowspan="2" style="min-width: 150px">@Local["Đã thanh toán"]</th>
                                    <th rowspan="2" data-name="paidperiod" style="min-width: 150px">@Local["Thanh toán trong kỳ"]</th>
                                    <th rowspan="1" colspan="2" style="min-width: 150px" class="PerComplete">@Local["Tổng hoàn thành"]</th>
                                    <th rowspan="1" colspan="2" style="min-width: 150px" class="CompleteMoney">@Local["Hoàn thành"]</th>
                                    <th rowspan="2" style="min-width: 150px" class="TimeToTreat">@Local["Lần điều trị"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="treatdate">@Local["Ngày điều trị"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="content">@Local["Nội dung"]</th>
                                    <th rowspan="2" style="min-width: 150px" data-name="branch">@Local["Chi nhánh"]</th>
                                </tr>
                                <tr>
                                    <th style="min-width: 150px">@Local["Phần trăm"] %</th>
                                    <th style="min-width: 150px">@Local["Thành tiền"]</th>
                                    <th style="min-width: 150px">@Local["Phần trăm"] %</th>
                                    <th style="min-width: 150px">@Local["Thành tiền"]</th>
                                </tr>
                            </thead>
                            <tbody id="DRTreatDetail_TreatTableBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="DRTreatDetail_TreatBtnLoadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return DRTreatDetail_TreatRenderMore();">
                        @Local["Xem thêm"]
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    //#region INIT - DEFINE
    let DRTreat_BranchID, DRTreat_DateFrom, DRTreat_DateTo;
    let xhrLoadList, xhrLoadDetailCust, xhrLoadDetailTreat;
    var DRTreatDetail_DataReport, DRTreatDetail_DataSlice;
    let DRTreatDetail_Index = 0;
    let DRTreat_DocID = 0, DRTreat_Type = '';
    let shtabledetailtreat, timeoutCountDetail, shtabledetialcustomer;

    $(document).ready(function () {
        ToolPopper();
        DRTreat_BranchID = "@Model._branchID";
        DRTreat_DateFrom = "@Model._dateFrom";
        DRTreat_DateTo = "@Model._dateTo";
        shtabledetailtreat = $("#DRTreatDetail_TreatTable").TableExpandColumn({
            shtoogle: $('.shtoogledetailtreat')
        });
        shtabledetialcustomer = $("#DRTreatDetail_CustTable").TableExpandColumn({
            shtoogle: $('.shtoogledetailcustomer')
        });

        DRTreat_Load();
    })
    //#endregion
    //#region //MASTER - LOADDATA
    function DRTreat_Load() {
        if (xhrLoadList && xhrLoadList.readyState != 0) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Treatment/DRTreatmentGen/?handler=Loadata"
            , data = {
                'branchID': DRTreat_BranchID
                , 'dateFrom': DRTreat_DateFrom
                , 'dateTo': DRTreat_DateTo
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    DRTreat_Render(data, 'DRTreat_GridBody');
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {
                $(`#DRTreat_LoaderList`).show();
            }
            , complete = function (e) {
                $(`#DRTreat_LoaderList`).hide();
            }
        );
        return false;
    }

    function DRTreat_Render(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringcontent = '';
                    if (data && data.length > 0) {
                        let trtotal = '';
                        let totalTreat = 0, totalCust = 0, totalAmountComp = 0, totalPayment = 0, amountComp = 0, totalAmount = 0;

                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let docName = RP_DataEmployee[item.DocID] != undefined ? RP_DataEmployee[item.DocID].Name : '@Local["Không có bác sĩ"]';
                            totalTreat += item.TotalTreat;
                            totalCust += item.TotalCust;
                            totalAmountComp += item.TotalAmountComplete;
                            amountComp += item.AmountComplete;
                            totalPayment += item.TotalPayment;
                            totalAmount += item.Amount;

                            let tr = `
                                            <td class="vt-number-order"></td>
                                            <td>
                                                ${docName}
                                            </td>
                                            <td class="text-center cursor-pointer DRTMasterRow">
                                                    <a href="#" class="border-1  border-primary border-bottom"
                                                        data-id="${item.DocID}"
                                                        data-name="@Local["Khách hàng"] - Bác sĩ ${docName}"
                                                        data-type="cust">
                                                        ${formatNumber(item.TotalCust)}
                                                </a>
                                            </td>
                                            <td class="text-center cursor-pointer DRTMasterRow">
                                                <a href="#" class="border-1 border-primary border-bottom"
                                                    data-id="${item.DocID}"
                                                    data-name="@Local["Điều trị"] - Bác sĩ ${docName}"
                                                    data-type="treat">
                                                    ${item.TotalTreat}
                                                </a>
                                            </td>
                                            <td>${formatNumber(item.TotalAmountComplete)}</td>
                                            <td>${formatNumber(item.AmountComplete)}</td>
                                            <td>${formatNumber(item.TotalPayment)}</td>
                                            <td>${formatNumber(item.Amount)}</td>
                                        `;
                            stringcontent = stringcontent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                            if (data.length > 1 && i == data.length - 1) {
                                trtotal = `
                                        <td></td>
                                        <td class="text-white fw-bold">@Local["Tổng"]</td>
                                        <td class="text-center cursor-pointer DRTMasterRow">
                                            <a href="#" class="text-white fw-bold border-1 border-white border-bottom"
                                                data-id="0"
                                                data-name="@Local["Khách hàng"] - @Local["Tất cả bác sĩ"]"
                                                data-type="cust">
                                                ${formatNumber(totalCust)}
                                            </a>
                                        </td>
                                        <td class="text-center cursor-pointer DRTMasterRow">
                                            <a href="#" class="text-white fw-bold border-1 border-white border-bottom"
                                                data-id="0"
                                                    data-name="@Local["Điều trị"] - @Local["Tất cả bác sĩ"]"
                                                    data-type="treat">
                                                ${'@Local["Tất cả"]'}
                                            </a>
                                        </td>
                                        <td>${formatNumber(totalAmountComp)}</td>
                                        <td>${formatNumber(amountComp)}</td>
                                        <td>${formatNumber(totalPayment)}</td>
                                        <td>${formatNumber(totalAmount)}</td>
                                        `;
                                stringcontent = stringcontent + '<tr class="text-white bg-gradient bg-primary" role="row">' + trtotal + '</tr>';
                            }
                        }
                    }
                    document.getElementById(id).innerHTML = stringcontent;
                }
                DRTreat_Event();
            }, 10)
        })
    }
    //#endregion
    //#region //MASTER EVENT
    function DRTreat_Event() {
        $("#DRTreat_GridBody .DRTMasterRow").unbind().on('click', function () {
            DRTreat_DocID = $(this).children('a').attr('data-id') ?? '0';
            let name = $(this).children('a').attr('data-name') ?? 'undefined';
            DRTreat_Type = $(this).children('a').attr('data-type') ?? 'cust';
            $('#DRTreat_Detail').fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#DRTreat_Detail").offset().top
            }, 300);
            if (DRTreat_Type === 'cust') {
                $("#DRTreat_DetailCustDoc").html(name);
                $('#DRTreat_DetailByTreat').hide();
                DRTreatDetail_Loaddata();
                $('#DRTreat_DetailByCust').show();
            }
            else {
                $("#DRTreat_DetailTreatDoc").html(name);
                $('#DRTreat_DetailByCust').hide();
                DRTreatDetail_Loaddata();
                $('#DRTreat_DetailByTreat').show();
            }
        });
    }
    //#endregion

    //#region //DETAIL LOADDATA
    function DRTreatDetail_Loaddata() {
        DRTreatDetail_DataReport = [], DRTreatDetail_DataSlice = []; DRTreatDetail_Index = 0; timeoutCountDetail = 0;
        //default config
        let config = {
            xhr: xhrLoadDetailCust,
            urlhandle: "LoadataDetailCust",
            tbbodyid: "DRTreatDetail_CustTableBody",
            loaderid: "DRTreatDetail_CustLoaderList",
            totalid: "DRTreatDetail_CustTotalData",
            funcRender: DRTreatDetail_CustRender
        }
        if (DRTreat_Type === 'cust') {
            config = {
                xhr: xhrLoadDetailCust,
                urlhandle: "LoadataDetailCust",
                tbbodyid: "DRTreatDetail_CustTableBody",
                loaderid: "DRTreatDetail_CustLoaderList",
                totalid: "DRTreatDetail_CustTotalData",
                funcRender: DRTreatDetail_CustRender
            }
        }
        else if (DRTreat_Type === 'treat') {
            config = {
                xhr: xhrLoadDetailCust,
                urlhandle: "LoadataDetailTreat",
                tbbodyid: "DRTreatDetail_TreatTableBody",
                loaderid: "DRTreatDetail_TreatLoaderList",
                totalid: "DRTreatDetail_TreatTotalData",
                funcRender: DRTreatDetail_TreatRender
            }
        }

        let { xhr, urlhandle, tbbodyid, loaderid, totalid, funcRender } = config;

        if (xhr && xhr.readyState != 0) xhr.abort();
        $(`#${tbbodyid}`).empty();
        xhr = AjaxLoad(url = `/Report/Treatment/DRTreatmentGen/?handler=${urlhandle}`
            , data = {
                'branchID': DRTreat_BranchID,
                'DocID': DRTreat_DocID,
                'dateFrom': DRTreat_DateFrom,
                'dateTo': DRTreat_DateTo,
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    DRTreatDetail_DataReport = JSON.parse(JSON.stringify(data));
                    DRTreatDetail_DataSlice = sliceIntoChunks(data, 500);
                    $(`#${tbbodyid}`).empty();
                    if (DRTreatDetail_DataSlice && DRTreatDetail_DataSlice.length != 0) {
                        fnRenderBlock(DRTreatDetail_DataSlice[DRTreatDetail_Index], tbbodyid
                            , blocknum = 100
                            , fnrender = funcRender
                            , fnsuccess = null
                        );
                    }
                    Count_Up(totalid, DRTreatDetail_DataReport.length);
                }

            }
            , sender = null
            , before = function (e) {
                $(`#${loaderid}`).show();
            }
            , complete = function (e) {
                $(`#${loaderid}`).hide();
            }
        );
    }

    //#region //BY CUST
    function DRTreatDetail_CustRenderMore() {
        DRTreatDetail_Index += 1;
        if (DRTreatDetail_DataSlice && DRTreatDetail_DataSlice[DRTreatDetail_Index]) {
            fnRenderBlock(DRTreatDetail_DataSlice[DRTreatDetail_Index], "DRTreatDetail_CustTableBody"
                , blocknum = 100
                , fnrender = DRTreatDetail_CustRender
                , fnsuccess = null
            );
        }
    }
    async function DRTreatDetail_CustRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            // let colorprogeess = 'bg-gradient-success';
                            let item = data[i];
                            let docName = RP_DataEmployee[item.DocID]?.Name ?? '';
                            let tr =
                                `<tr class="vt-number">
                                        <td class="vt-number-order"></td>
                                        <td>
                                            <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode != undefined ? item.CustCode : ''}</a>
                                        </td>
                                        <td data-name="CodeOld">${item.CustCodeOld}</td>
                                        <td>${item.CustName}</td>
                                        <td>${docName}</td>
                                        <td>${formatNumber(item.TotalArising)}</td>
                                        <td>${formatNumber(item.TotalPayment)}</td>
                                        <td>${formatNumber(item.TotalTreat)}</td>
                                    </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtabledetialcustomer.Refresh();
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() => {
                    Count_Up("DRTreatDetail_CustCurrentData", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }
    //#endregion
    //#region //BY TREAT
    function DRTreatDetail_TreatRenderMore() {
        DRTreatDetail_Index += 1;
        if (DRTreatDetail_DataSlice && DRTreatDetail_DataSlice[DRTreatDetail_Index]) {
            fnRenderBlock(DRTreatDetail_DataSlice[DRTreatDetail_Index], "DRTreatDetail_TreatTableBody"
                , blocknum = 100
                , fnrender = DRTreatDetail_TreatRender
                , fnsuccess = null
            );
        }
    }
    async function DRTreatDetail_TreatRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let colorprogeess = 'bg-gradient-success';
                            let item = data[i];
                            let objCalPercent = DRTreatDetail_TreatRenderPercent(item);
                            let doc1Name = RP_DataEmployee[item.DocID1] != undefined ? RP_DataEmployee[item.DocID1].Name : '';
                            let doc2Name = RP_DataEmployee[item.DocID2] != undefined ? RP_DataEmployee[item.DocID2].Name : '';
                            let doc3Name = RP_DataEmployee[item.DocID3] != undefined ? RP_DataEmployee[item.DocID3].Name : '';
                            let doc4Name = RP_DataEmployee[item.DocID4] != undefined ? RP_DataEmployee[item.DocID4].Name : '';
                            let assist1Name = RP_DataEmployee[item.Assistant1] != undefined && item.Assistant1 ? RP_DataEmployee[item.Assistant1].Name : '';
                            let assist2Name = RP_DataEmployee[item.Assistant2] != undefined && item.Assistant2 ? RP_DataEmployee[item.Assistant2].Name : '';
                            let Tech1Name = RP_DataEmployee[item.Tech1] != undefined && item.Tech1 ? RP_DataEmployee[item.Tech1].Name : '';
                            let Tech2Name = RP_DataEmployee[item.Tech2] != undefined && item.Tech2 ? RP_DataEmployee[item.Tech2].Name : '';
                            let branchName = RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '';
                            let detail = DRTreatDetail_Render_SerDetail(item.TeethType, item.TeethChoosing, item.TreatIndex, item.TimeToTreatment);
                            let tr = `
                                <tr class="vt-number">
                                    <td class="vt-number-order"></td>
                                    <td>
                                        <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode != undefined ? item.CustCode : ''}</a>
                                    </td>
                                    <td>${item.CustName}</td>
                                    <td data-name="CodeOld">${item.CustCodeOld}</td>
                                    <td data-name="custbirth">${ConvertDateTimeUTC_DMY(item.CustBirth)}</td>
                                    <td data-name="custgender">${item.CustGender}</td>
                                    <td data-name="custaddress" class="_tab_control_" data-tab="address_customer">${item.CustAddress}</td>
                                    <td>${doc1Name}</td>
                                    <td data-name="doctor2">${doc2Name}</td>
                                    <td data-name="doctor3">${doc3Name}</td>
                                    <td data-name="doctor4">${doc4Name}</td>
                                    <td>${assist1Name}</td>
                                    <td data-name="assistant2">${assist2Name}</td>
                                    <td data-name="Tech1">${Tech1Name}</td>
                                    <td data-name="Tech2">${Tech2Name}</td>
                                    <td data-name="servicecode">${item.ServiceCode}</td>
                                    <td>${item.ServiceName}</td>
                                    <td>${formatNumber(item.PriceService)}</td>
                                    <td data-name="quantity">${item.Quantity}</td>
                                    <td data-name="totalTreat">${formatNumber(item.TotalTreat)}</td>
                                    <td data-name="detail">${detail} </td>
                                    <td>${formatNumber(item.AmountPaid)}</td>
                                    <td data-name="paidperiod">${formatNumber(item.PaidPeriod)}</td>
                                    <td>${objCalPercent?.perCurrent}</td>
                                    <td>${formatNumber(objCalPercent?.completeAmount)}</td>
                                    <td>${sys_dencos_Main == 1 ? objCalPercent?.perNew : ''}</td>
                                    <td>${(sys_dencos_Main == 1 ? formatNumber(objCalPercent?.newAmount) : 0)}</td>
                                    <td class="TimeToTreat">${item.TreatedTime}/${item.TimeToTreatment}</td>
                                    <td data-name="treatdate">${ConvertDateTimeUTC_DMY(item.TreatDate)}</td>
                                    <td data-name="content">${item.ContentFollow}</td>
                                    <td data-name="branch">${branchName}</td>
                                </tr>
                                `;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        Checking_TabControl_Permission();
                    }

                }
                if (sys_dencos_Main == 1) {
                    //$(".PerComplete").removeClass('d-none');
                    $(".TimeToTreat").addClass('d-none');
                }
                else {
                    $(".TimeToTreat").removeClass('d-none');
                    //$(".PerComplete").addClass('d-none');
                }
                shtabledetailtreat.Refresh();
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() => {
                    Count_Up("DRTreatDetail_TreatCurrentData", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }

    function DRTreatDetail_TreatRenderPercent(item) {
        let completeAmount, perCurrent = 0, newAmount = 0, perNew = 0;
        if (sys_dencos_Main == 1) {
            let TeethChoosing = item.TeethChoosing, Quantity = item.Quantity
                , PercentNewDetail = item.PercentNewDetail, PercentCurentDetail = item.PercentCurentDetail
                , Percent = item.Percent, PercentNew = item.PercentNew;
            if (Percent == 0 && PercentNew == 0) {
                if (TeethChoosing == '') {
                    perNew = (Quantity == 0) ? 0 : PercentNewDetail;
                    perCurrent = (Quantity == 0) ? 0 : PercentCurentDetail;
                }
                else {
                    perNew = (Quantity == 0) ? 0 : PercentNewDetail / Quantity;
                    perCurrent = (Quantity == 0) ? 0 : PercentCurentDetail / Quantity;
                }
            }
            else { perNew = PercentNew; perCurrent = Percent };
            perNew = (Math.round(perNew * 100) / 100);
            perCurrent = (Math.round(perCurrent * 100) / 100);
        }
        else {
            perCurrent = (Number(item.TimeToTreatment) != 0 ? ((Number(item.TreatedTime) / Number(item.TimeToTreatment)) * 100).toFixed(2) : 0);
        }
        completeAmount = (perCurrent / 100) * item.PriceService;
        newAmount = (perNew / 100) * item.PriceService;
        return { perNew, perCurrent, newAmount, completeAmount }
    }
    function DRTreatDetail_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment) {
        try {
            let result = '';
            if (sys_dencos_Main == 0) {
                result = `${decodeHtml("@Local["Đã điều trị"]")} : ${TreatIndex} | ${TimeToTreatment}`
            }
            else {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion
    //#endregion

    //#region EXPORT
    function DRTreat_Export() {
        syslog_ExpExcel('e', Outlang["Sys_dieu_tri_theo_bac_si"]);
        exportToExcel("DRTreat_Grid", Outlang["Sys_dieu_tri_theo_bac_si"]);
    }

    async function DRTreatDetail_Export(isOption = 0) {
        try {
            if (DRTreatDetail_DataReport && DRTreatDetail_DataReport.length != 0) {
                var dataHeader = {}, fileName = '';
                let isAll = (isOption == 0);
                if (DRTreat_Type === 'cust') {
                    let eleContainerCustomer = $('#DRTreat_DetailByCust');
                    dataHeader = {
                        "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                        "CustCode": ["@Local["Mã khách hàng"]"],
                        "CustCodeOld": ["@Local["Mã khách hàng cũ"]"],
                        "CustCodeOld": {
                            isShow: isAll || (eleContainerCustomer.find(`.shtoogledetailcustomer[data-name='CodeOld']`)).is(":checked"),
                            data: ["@Local["Mã khách hàng cũ"]"]
                        },
                        "CustName": ["@Local["Khách hàng"]"],
                        "DocID": ["@Local["Bác sĩ"]", (value) => {
                            return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '';
                        }],
                        "TotalArising": ["@Local["Tổng phát sinh"]", (value) => { return formatNumber(value) }],
                        "TotalPayment": ["@Local["Tổng tiền thanh toán"]", (value) => { return formatNumber(value) }],
                        "TotalTreat": ["@Local["Tổng lần điều trị"]", (value) => { return formatNumber(value) }],
                    }
                    dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'DRTreatDetail_CustTableBody', PermissionTable_TabControl);
                    fileName = Outlang["Bao_cao_bac_si_dieu_tri"] + '-' + xoa_dau($("#DRTreat_DetailCustDoc").text()).replaceAll(' ', '-');
                }
                else {
                    let eleContainer = $('#DRTreat_DetailByTreat');
                    dataHeader = {
                        "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                        "CustCode": ["@Local["Mã khách hàng"]"],
                        "CustName": ["@Local["Khách hàng"]"],
                        "CustCodeOld": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='CodeOld']`)).is(":checked"),
                            data: ["@Local["Mã khách hàng cũ"]"]
                        },
                        "CustBirth": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='custbirth']`)).is(":checked"),
                            data: ["@Local["Ngày sinh"]", (value) => { return ConvertDateTimeUTC_DMY(value) }]
                        },
                        "CustGender": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='custgender']`)).is(":checked"),
                            data: ["@Local["Giới tính"]"]
                        },
                        "CustAddress": {
                            dataNamePer: 'custaddress',
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='custaddress']`)).is(":checked"),
                            data: ["@Local["Địa chỉ"]"]
                        },
                        "DocID1": ["@Local["Bác sĩ"] 1", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }],
                        "DocID2": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='doctor2']`)).is(":checked"),
                            data: ["@Local["Bác sĩ"] 2", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "DocID3": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='doctor3']`)).is(":checked"),
                            data: ["@Local["Bác sĩ"] 3", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "DocID4": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='doctor4']`)).is(":checked"),
                            data: ["@Local["Bác sĩ"] 4", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "Assistant1": ["@Local["Kỹ thuật viên/phụ tá"] 1", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }],
                        "Assistant2": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='assistant2']`)).is(":checked"),
                            data: ["@Local["Kỹ thuật viên/phụ tá"] 2", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "Tech1": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='Tech1']`)).is(":checked"),
                            data: ["@Local["Hỗ trợ chuyên môn"]", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "Tech2": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='Tech2']`)).is(":checked"),
                            data: ["@Local["Hỗ trợ chuyên môn"] 2", (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }]
                        },
                        "ServiceCode": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='servicecode']`)).is(":checked"),
                            data: ["@Local["Mã dịch vụ"]"]
                        },
                        "ServiceName": ["@Local["Dịch vụ"]"],
                        "PriceService": ["@Local["Giá dịch vụ"]"],
                        "Quantity": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='quantity']`)).is(":checked"),
                            data: ["@Local["Số lượng"]"]
                        },
                        "TotalTreat": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='totalTreat']`)).is(":checked"),
                            data: ["@Local["Số lần điều trị"]"]
                        },
                        "Detail": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='detail']`)).is(":checked"),
                            data: ["@Local["Chi tiết"]", (v, { TeethType, TeethChoosing, TreatIndex, TimeToTreatment }) => {
                                return DRTreatDetail_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment);
                            }]
                        },
                        "AmountPaid": ["@Local["Tiền đã thanh toán"]"],
                        "PaidPeriod": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='paidperiod']`)).is(":checked"),
                            data: ["@Local["Thanh toán trong kỳ"]"]
                        },
                        "PercentComplete": ["@Local["Tổng hoàn thành"] (%)", (value, item) => {
                            return DRTreatDetail_TreatRenderPercent(item)?.perCurrent;
                        }],
                        "AmountComplete": ["@Local["Tổng tiền hoàn thành"]", (value, item) => {
                            return DRTreatDetail_TreatRenderPercent(item)?.completeAmount;
                        }],
                        "PercentMew": ["@Local["Hoàn thành"] (%)", (value, item) => {
                            return DRTreatDetail_TreatRenderPercent(item)?.perNew;
                        }],
                        "AmountNew": ["@Local["Tiền hoàn thành"]", (value, item) => {
                            return DRTreatDetail_TreatRenderPercent(item)?.newAmount;
                        }],
                        "TreatedTime": ["@Local["Lần điều trị"]", (value, { TimeToTreatment }) => {
                            return value.toString() + "/" + TimeToTreatment.toString();
                        }],
                        "TreatDate": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='treatdate']`)).is(":checked"),
                            data: ["@Local["Ngày điều trị"]", (value => { return ConvertDateTimeUTC_DMY(value) })]
                        },
                        "ContentFollow": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='content']`)).is(":checked"),
                            data: ["@Local["Nội dung"]"]
                        },
                        "BranchID": {
                            isShow: isAll || (eleContainer.find(`.shtoogledetailtreat[data-name='branch']`)).is(":checked"),
                            data: ["@Local["Chi nhánh"]", (value) => { return RP_DataBranch[value] != undefined ? RP_DataBranch[value].Name : '' }]
                        },
                    }

                    dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'DRTreatDetail_TreatTableBody', PermissionTable_TabControl);
                    if (sys_dencos_Main == 1) {
                        var { TreatedTime, ...densheader } = dataHeader;
                        dataHeader = { ...densheader };
                    }
                    else {
                        var { Percent, Quantity, ...tmdata } = dataHeader;
                        dataHeader = { ...tmdata };
                    }
                    fileName = Outlang["Bao_cao_bac_si_dieu_tri"] + '-' + xoa_dau($("#DRTreat_DetailTreatDoc").text()).replaceAll(' ', '-');
                }
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, DRTreatDetail_DataReport, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function DRTreat_DetailPrintReport() {
        try {
            if (DRTreatDetail_DataReport && DRTreatDetail_DataReport.length != 0) {
                let _branchID = "@Model._branchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                let dataHeader = {}, fileName = '';
                if (DRTreat_Type === 'cust') {
                    dataHeader = {
                        "STT": ["@Local["STT"]", {
                            callbackRenderValue: (value, { }, index) => { return index + 1; }
                        }],
                        "CustCode": ["@Local["Mã khách hàng"]"],
                        "CustCodeOld": ["@Local["Mã khách hàng cũ"]"],
                        "CustName": ["@Local["Khách hàng"]"],
                        "DocID": ["@Local["Bác sĩ"]", {
                            callbackRenderValue: (value) => {
                                return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '';
                            }
                        }],
                        "TotalArising": ["@Local["Tổng phát sinh"]", {
                            callbackRenderValue: (value) => { return formatNumber(value) }
                        }],
                        "TotalPayment": ["@Local["Tổng tiền thanh toán"]", {
                            callbackRenderValue: (value) => { return formatNumber(value) }
                        }],
                        "TotalTreat": ["@Local["Tổng lần điều trị"]", {
                            callbackRenderValue: (value) => { return formatNumber(value) }
                        }],
                    }
                    fileName = Outlang["Bao_cao_bac_si_dieu_tri"] + '-' + $("#DRTreat_DetailCustDoc").text();
                }
                else {
                    dataHeader = {
                        "STT": ["@Local["STT"]", {
                            callbackRenderValue: (value, { }, index) => { return index + 1; }
                        }],
                        "CustCode": ["@Local["Mã khách hàng"]"],
                        "CustName": ["@Local["Khách hàng"]"],
                        "CustCodeOld": ["@Local["Mã khách hàng cũ"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='CodeOld']`).is(":checked")
                        }],
                        "CustBirth": ["@Local["Ngày sinh"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='custbirth']`).is(":checked"),
                            callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMY(value) }
                        }],
                        "CustGender": ["@Local["Giới tính"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='custgender']`).is(":checked")
                        }],
                        "CustAddress": {
                            dataNamePer: 'custaddress',
                            data: ["@Local["Địa chỉ"]", {
                                isShow: $(`.shtoogledetailtreat[data-name='custaddress']`).is(":checked")
                            }]
                        },
                        "DocID1": ["@Local["Bác sĩ"] 1", {
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "DocID2": ["@Local["Bác sĩ"] 2", {
                            isShow: $(`.shtoogledetailtreat[data-name='doctor2']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "DocID3": ["@Local["Bác sĩ"] 3", {
                            isShow: $(`.shtoogledetailtreat[data-name='doctor3']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "DocID4": ["@Local["Bác sĩ"] 4", {
                            isShow: $(`.shtoogledetailtreat[data-name='doctor4']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "Assistant1": ["@Local["Kỹ thuật viên/phụ tá"] 1", {
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "Assistant2": ["@Local["Kỹ thuật viên/phụ tá"] 2", {
                            isShow: $(`.shtoogledetailtreat[data-name='assistant2']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "Tech1": ["@Local["Hỗ trợ chuyên môn"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='Tech1']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],
                        "Tech2": ["@Local["Hỗ trợ chuyên môn"] 2", {
                            isShow: $(`.shtoogledetailtreat[data-name='Tech2']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : '' }
                        }],

                        "ServiceCode": ["@Local["Mã dịch vụ"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='servicecode']`).is(":checked")
                        }],
                        "ServiceName": ["@Local["Dịch vụ"]"],
                        "PriceService": ["@Local["Giá dịch vụ"]"],
                        "Quantity": ["@Local["Số lượng"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='quantity']`).is(":checked")
                        }],
                        "TotalTreat": ["@Local["Số lần điều trị"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='totalTreat']`).is(":checked")
                        }],
                        "Detail": ["@Local["Chi tiết"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='detail']`).is(":checked"),
                            callbackRenderValue: (v, { TeethType, TeethChoosing, TreatIndex, TimeToTreatment }) => {
                                return DRTreatDetail_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment);
                            }
                        }],
                        "AmountPaid": ["@Local["Tiền đã thanh toán"]"],
                        "PaidPeriod": ["@Local["Thanh toán trong kỳ"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='paidperiod']`).is(":checked")
                        }],
                        "PercentComplete": ["@Local["Tổng hoàn thành"] (%)", {
                            callbackRenderValue: (value, item) => {
                                return DRTreatDetail_TreatRenderPercent(item)?.perCurrent;
                            }
                        }],
                        "AmountComplete": ["@Local["Tổng tiền hoàn thành"]", {
                            callbackRenderValue: (value, item) => {
                                return DRTreatDetail_TreatRenderPercent(item)?.completeAmount;
                            }
                        }],
                        "PercentMew": ["@Local["Hoàn thành"] (%)", {
                            callbackRenderValue: (value, item) => {
                                return DRTreatDetail_TreatRenderPercent(item)?.perNew;
                            }
                        }],
                        "AmountNew": ["@Local["Tiền hoàn thành"]", {
                            callbackRenderValue: (value, item) => {
                                return DRTreatDetail_TreatRenderPercent(item)?.newAmount;
                            }
                        }],
                        "TreatedTime": ["@Local["Lần điều trị"]", {
                            callbackRenderValue: (value, { TimeToTreatment }) => {
                                return value.toString() + "/" + TimeToTreatment.toString();
                            }
                        }],
                        "TreatDate": ["@Local["Ngày điều trị"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='treatdate']`).is(":checked"),
                            callbackRenderValue: (value => { return ConvertDateTimeUTC_DMY(value) })
                        }],
                        "ContentFollow": ["@Local["Nội dung"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='content']`).is(":checked"),
                        }],
                        "BranchID": ["@Local["Chi nhánh"]", {
                            isShow: $(`.shtoogledetailtreat[data-name='branch']`).is(":checked"),
                            callbackRenderValue: (value) => { return RP_DataBranch[value] != undefined ? RP_DataBranch[value].Name : '' }
                        }],
                    }
                    
                    if (sys_dencos_Main == 1) {
                        var { TreatedTime, ...densheader } = dataHeader;
                        dataHeader = { ...densheader };
                    }
                    else {
                        var { Percent, Quantity, ...tmdata } = dataHeader;
                        dataHeader = { ...tmdata };
                    }
                    dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'DRTreatDetail_TreatTableBody', PermissionTable_TabControl);
                    fileName = Outlang["Bao_cao_bac_si_dieu_tri"] + ' ' + $("#DRTreat_DetailTreatDoc").text();
                }
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, DRTreatDetail_DataReport, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                                //#endregion
</script>
<style>
    #DRTreat_GridBody .DRTMasterRow:hover {
        background-image: var(--bs-gradient) !important;
        background-color: rgba(var(--bs-primary), 0.1) !important;
        filter: brightness(120%) saturate(120%) contrast(100%);
    }
</style>