@page
@model MLunarCoffee.Pages.Report.Treatment.TreatmentMesure.ReportTreatmentMesureModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div>
    <div class="card-header p-0 pt-3">
        <div class="d-lg-flex">
            <div class="w-lg-50 col-auto my-auto d-flex mb-2 mb-lg-0">
                <div class="ui fluid search selection dropdown form-control w-50" id="RTM_MeasureType" onchange="RTM_ChangeMeaType()">
                    <input type="hidden" name="branch" />
                    <input class="search" autocomplete="off" tabindex="0" />
                    <div class="default text">eg .@Local["Loại trình trạng"]</div>
                    <div id="RTM_cbbMeasureType" class="menu" tabindex="-1">
                    </div>
                </div>
                <div id="RTM_MeasureDiff" class="d-flex ms-2 w-100 d-none">
                    <div class="input-group">
                        <span class="input-group-text">@Local["Từ"]</span>
                        <input id="RTM_MeasureDiffFrom" class="form-control" type="number" name="RTM_MeasureDiffFrom" placeholder="eg .@Local["Từ"]" onchange="RTM_LoadData();" value="0">
                        <span class="input-group-text">@Local["Đến"]</span>
                        <input id="RTM_MeasureDiffTo" class="form-control" type="number" name="RTM_MeasureDiffTo" placeholder="eg .@Local["Đến"]" onchange="RTM_LoadData();" value="1000">
                    </div>
                </div>
                <div class="ui fluid search selection dropdown form-control ms-2 d-none" id="RTM_MeasureContent" onchange="RTM_LoadData()">
                    <input type="hidden" name="branch" />
                    <input class="search" autocomplete="off" tabindex="0" />
                    <div class="default text">eg .@Local["Đánh giá"]</div>
                    <div id="RTM_cbbMeasureContent" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
            <div class="ms-auto my-auto d-flex align-items-center">
                <div class="icon-hover mx-1 my-auto"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#RTM_GridArea" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1 my-auto"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return RTM_LoadData()"></i>
                </div>
                <div class="icon-hover mx-1 my-auto"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="expoRTM_excel"
                       onclick="event.preventDefault(); return RTM_Export()"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="RTM_GridArea">
        <div class="card-body p-0 pt-0 col-12">
            <div class="m-0 my-3 mobile-responsive">
                <div id="RTM_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div class="mobile-responsive vt-header-sticky">
                    <table class="table vt-table mb-0" id="RTM_Grid">
                        <thead>
                            <tr>
                                <th>@Local["#"]</th>
                                <th>@Local["Mã khách hàng"]</th>
                                <th>@Local["Khách hàng"]</th>
                                <th>@Local["Loại tình trạng"]</th>
                                <th>@Local["Đánh giá"]</th>
                                <th>@Local["Giá trị"]</th>
                                <th>@Local["Giá trị thay đổi"]</th>
                                <th>@Local["Nội dung"]</th>
                            </tr>
                        </thead>
                        <tbody id="RTM_GridBody">
                        </tbody>
                    </table>
                </div>
                <button class="btnsysmore btn btn-secondary w-100 p-1  position-relative" onclick="RTM_RenderMore()">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
</div>
<script>
    //#region //DEFINE - INIT
    let RTM_BranchID = "@Model._branchID";
    let RTM_DateFrom = "@Model._dateFrom";
    let RTM_DateTo = "@Model._dateTo";
    let xhrLoadList;
    let RTM_DadaList = [], RTM_DataMain = [];
    let RTM_Index = 0;
    let RTM_MeasureType;
    $(document).ready(function () {
        RTM_LoadInit();
    })

    function RTM_LoadInit() {
        AjaxLoad(url = "/Report/Treatment/TreatmentMesure/ReportTreatmentMesure/?handler=LoadIni"
            , data = {}
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let dataType = datas.MeasureType;
                    let dataContent = datas.MeasureContent;
                    RTM_MeasureType = dataType.reduce((pre, arr) => { if (!pre[arr.ID]) pre[arr.ID] = arr; return pre }, {});

                    Load_Combo(dataType, "RTM_cbbMeasureType", true, "@Local["Tất cả tình trạng"]");
                    $("#RTM_MeasureType").dropdown("refresh");
                    $("#RTM_MeasureType").dropdown("set selected", "0");

                    Load_Combo(dataContent, "RTM_cbbMeasureContent", true, "@Local["Tất cả đánh giá"]");
                    $("#RTM_MeasureContent").dropdown("refresh");
                    $("#RTM_MeasureContent").dropdown("set selected", "0");
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {
            }
            , complete = function (e) {
            }
        );
        return false;
    }
    //#endregion

    //#region //LOAD DATA
    function RTM_LoadData() {
        let measureType = Number($('#RTM_MeasureType').dropdown('get value')) ? Number($('#RTM_MeasureType').dropdown('get value')) : 0;
        let measureContent = Number($('#RTM_MeasureContent').dropdown('get value')) ? Number($('#RTM_MeasureContent').dropdown('get value')) : 0;
        let diffFrom = Number($('#RTM_MeasureDiffFrom').val()) ? Number($('#RTM_MeasureDiffFrom').val()) : 0;
        let diffTo = Number($('#RTM_MeasureDiffTo').val()) ? Number($('#RTM_MeasureDiffTo').val()) : 0;
        $('#RTM_GridBody').empty();
        RTM_Index = 0;
        if (xhrLoadList && xhrLoadList.readyState != 0) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Treatment/TreatmentMesure/ReportTreatmentMesure/?handler=Loaddata"
            , data = {
                'branchID': RTM_BranchID
                , 'dateFrom': RTM_DateFrom
                , 'dateTo': RTM_DateTo
                , 'measureType': measureType
                , 'measureContent': measureContent
                , 'valDiffFrom': diffFrom
                , 'valDiffTo': diffTo
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    RTM_DataMain = JSON.parse(result);
                    if (data && data.length > 0) {
                        RTM_Index = 0;
                        RTM_DadaList = sliceIntoChunks(JSON.parse(JSON.stringify(data)), 500);
                        fnRenderBlock(RTM_DadaList[RTM_Index], "RTM_GridBody"
                            , blocknum = 100
                            , fnrender = RTM_Render
                            , fnsuccess = null
                        );
                    }
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {
            }
            , complete = function (e) {
            }
        );
        return false;
    }
    //#endregion

    //#region //RENDER
    function RTM_RenderMore() {
        RTM_Index = RTM_Index + 1;
        fnRenderBlock(RTM_DadaList[RTM_Index] ?? [], "RTM_GridBody"
            , blocknum = 100
            , fnrender = RTM_Render
            , fnsuccess = null
        );
    }

    async function RTM_Render(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                let stringcontent = '';
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = `
                                  <td class="vt-number-order"></td>
                                  <td><a href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver='${versionofWebApplication}'" target="_blank">${item.CustCode}</a>
                                  </td>
                                  <td>${item.CustName}</td>
                                  <td>${item.TypeName}</td>
                                  <td>${item.MeaContent}</td>
                                  <td>${item.MeaValue}</td>
                                  <td>${item.ValueDiff}</td>
                                  <td>${item.Content}</td>
                                  `
                        stringcontent = stringcontent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                    }
                }
                myNode.insertAdjacentHTML('beforeend', stringcontent);
            }
            resolve();
        })
    }
    //#endregion

    //#region //EVENT
    function RTM_ChangeMeaType() {
        let measureType = Number($('#RTM_MeasureType').dropdown('get value')) ? Number($('#RTM_MeasureType').dropdown('get value')) : 0; debugger
        let isCallDif = RTM_MeasureType[measureType] != undefined ? RTM_MeasureType[measureType].IsCalDiff : 0;
        if (measureType != 0) {
            $('#RTM_MeasureType').removeClass('w-50');
            if (isCallDif == 0) {
                $('#RTM_MeasureDiff').addClass('d-none');
                $('#RTM_MeasureContent').removeClass('d-none');
            }
            else {
                $('#RTM_MeasureDiff').removeClass('d-none');
                $('#RTM_MeasureContent').addClass('d-none');
            }
        }
        else {
            $('#RTM_MeasureType').addClass('w-50');
            $('#RTM_MeasureDiff').addClass('d-none');
            $('#RTM_MeasureContent').addClass('d-none');
        }
        RTM_LoadData();
    }

    //#endregion

    //#region //EXPORT - PRINT
    function RTM_Export() {
        try {
            if (RTM_DataMain && RTM_DataMain.length != 0) {
                var dataHeader = {
                    "STT": ["STT", (value, { }, idx) => { return idx + 1 }]
                    , "CustCode": ["@Local["Mã khách hàng"]"]
                    , "CustName": ["@Local["Khách hàng"]"]
                    , "TypeName": ["@Local["Loại tình trạng"]"]
                    , "MeaContent": ["@Local["Đánh giá"]"]
                    , "MeaValue": ["@Local["Giá trị"]"]
                    , "ValueDiff": ["@Local["Giá trị thay đổi"]"]
                    , "Content": ["@Local["Nội dung"]"]

                }
                syslog_ExpExcel('e', Outlang['Ghi_nhan_tinh_trang_khach_hang']);
                exportJsonToExcel(Outlang['Ghi_nhan_tinh_trang_khach_hang'] ? Outlang['Ghi_nhan_tinh_trang_khach_hang'] : 'Ghi nhận tình trạng khách hàng', RTM_DataMain, dataHeader);
            }
            else {
                notiWarning('@Local["Không xuất được file"]');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]');
        }
    }
                    //#endregion
</script>