@page
@model Report.Telesale.TelesaleGeneral
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="mb-0">@Local["Tổng quan telesale"]</h6>
            <p class="text-sm mb-0">@Local["Tình trạng xử lý, hiệu quả telesale"]</p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#TeleGeneDiv" aria-expanded="true"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="TeleGeneDiv">
        <div class="card-body px-0 pt-0">
            <div class="d-lg-flex mt-3">
                <div class="col-w-300">
                    <div class="fw-bold text-center text-dark mb-1 text-sm">
                        @Local["Tình trạng"]:
                        <span id="TeleCalledTotal" class="fw-bolder"></span>
                    </div>
                    <div class="position-relative mt-3" style="min-height: 150px;">

                        <div class="chart position-absolute top-50 start-50 translate-middle">
                            <canvas id="TeleCalledPie" class="chart-canvas" height="150"></canvas>
                        </div>
                    </div>
                    <div class="mt-2  table-responsive">
                        <table class="table align-items-center mb-0">
                            <tbody id="TeleCalledList">
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="my-0 w-100" style="overflow-x: auto; overflow-y: hidden;">
                    <div class="chart" style="height:300px;">
                        <canvas id="TeleStatusBar" class="chart-canvas"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card card-plain">
    <div class="vtcardheader card-header p-0 px-0 d-block d-lg-flex">
        <div class="left overflow-x">
            <div class="d-flex align-items-center">
                <div class="form-check">
                    <input name="telegenenal" value="1" class="telegenenal form-check-input pr-2" type="radio" checked="checked">
                    <label class="custom-control-label">@Local["Phát sinh dịch vụ/sản phẩm"]</label>
                </div>
                <div class="form-check ms-3">
                    <input name="telegenenal" value="2" class="telegenenal form-check-input pr-2" type="radio">
                    <label class="custom-control-label">@Local["Tag xử lý"]</label>
                </div>

                <div class="form-check ms-3">
                    <input name="telegenenal" value="3" class="telegenenal form-check-input pr-2" type="radio">
                    <label class="custom-control-label">@Local["Trạng thái gọi"]</label>
                </div>
                <div class="form-check ms-3">
                    <input name="telegenenal" value="4" class="telegenenal form-check-input pr-2" type="radio">
                    <label class="custom-control-label">@Local["Trạng thái chi tiết"]</label>
                </div>
                <div class="form-check ms-3">
                    <input name="telegenenal" value="5" class="telegenenal form-check-input pr-2" type="radio">
                    <label class="custom-control-label">@Local["Loại theo dõi"]</label>
                </div>
            </div>
        </div>
        <div class="right overflow-x">
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#TeleGridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return Teledash_Load()"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return Teledash_Export()"></i>
            </div>
            <button class="btn btn-dark btn-sm my-auto mb-0 position-relative dropdown-toggle"
                    data-bs-toggle="collapse" data-bs-target="#colListsmaster">
                @Local["Xem thêm"]
            </button>
        </div>
        <div class="toggle">
            <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsmaster" style="min-width:250px;">
                <ul class="card card-body text-dark text-capitalize opacity-10">
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="group"
                                   checked
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Nhóm"]</p>

                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="data"
                                   checked
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Dữ liệu"]</p>

                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="app"
                                   checked
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Lịch hẹn"]</p>

                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="detailquantity"
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi tiết dịch vụ/sản phẩm"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="detailtarget"
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Doanh số chi tiết"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="mastershtoogle form-check-input" data-name="detailpaid"
                                   type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Doanh thu chi tiết"]</p>
                    </li>
                </ul>
            </div>

        </div>
    </div>
    <div class="collapsesticky collapse show" id="TeleGridArea">
        <div class="card-body px-0 pt-0">
            <div class="m-0 my-3 mobile-responsive position-relative">
                <div id="TeleGridWaiting" class="position-absolute top-0 start-50 translate-middle-x waitingdiv text-center" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table name="TeleGridGeneral" class="table vt-table mb-0" id="TeleGrid">
                    <thead>
                        <tr role="row">
                            <th rowspan="3" colspan="1">@Local["#"]</th>
                            <th data-name="group" rowspan="3" colspan="1">@Local["Nhóm"]</th>
                            <th rowspan="3" colspan="1">@Local["Nhân viên"]</th>
                            <th data-name="data" rowspan="2" colspan="4">@Local["Dữ liệu"]</th>
                            <th data-name="app" class="raise" rowspan="2" colspan="3">@Local["Lịch hẹn"]</th>
                            <th class="raise" rowspan="2" colspan="3">@Local["Dịch vụ/sản phẩm"]</th>
                            <th data-name="detailquantity" class="raise" rowspan="1" colspan="6">@Local["Chi tiết dịch vụ/sản phẩm"]</th>
                            <th class="raise" rowspan="2" colspan="3">@Local["Doanh số"]</th>
                            <th data-name="detailtarget" class="raise" rowspan="1" colspan="6">@Local["Doanh số chi tiết"]</th>
                            <th class="raise" rowspan="2" colspan="3">@Local["Doanh thu"]</th>
                            <th data-name="detailpaid" class="raise" rowspan="1" colspan="6">@Local["Doanh thu chi tiết"]</th>
                            <th class="tag" rowspan="1">@Local["Tag xử lý"]</th>
                            <th class="status" rowspan="1">@Local["Trạng thái gọi"]</th>
                            <th class="statusdetail" rowspan="1">@Local["Trạng thái chi tiết"]</th>
                            <th class="iscalled" rowspan="1">@Local["Theo dõi"]</th>
                        </tr>
                        <tr role="row">
                            <th data-name="detailquantity" class="raise" rowspan="1" colspan="3">@Local["Dịch vụ"]</th>
                            <th data-name="detailquantity" class="raise" rowspan="1" colspan="3">@Local["Sản phẩm"]</th>
                            <th data-name="detailtarget" class="raise" rowspan="1" colspan="3">@Local["Dịch vụ"]</th>
                            <th data-name="detailtarget" class="raise" rowspan="1" colspan="3">@Local["Sản phẩm"]</th>
                            <th data-name="detailpaid" class="raise" rowspan="1" colspan="3">@Local["Dịch vụ"]</th>
                            <th data-name="detailpaid" class="raise" rowspan="1" colspan="3">@Local["Sản phẩm"]</th>
                        </tr>
                        <tr role="row" class="detail">
                            <th style="min-width: 90px" data-name="data" rowspan="1">@Local["Số lượng"]</th>
                            <th style="min-width: 90px" data-name="data" rowspan="1">@Local["Số lượng mới"]</th>
                            <th style="min-width: 90px" data-name="data" rowspan="1">@Local["Số lượng được chia"]</th>
                            <th style="min-width: 90px" data-name="data" rowspan="1">@Local["Số lượng xử lý"]</th>
                            <th style="min-width: 90px" data-name="app" class="raise" rowspan="1">@Local["Số lượng"]</th>
                            <th style="min-width: 90px" data-name="app" class="raise" rowspan="1">@Local["Đã đến"]</th>
                            <th style="min-width: 90px" data-name="app" class="raise" rowspan="1">@Local["Chưa đến"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Số lượng"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Số lượng"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Số lượng"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailquantity" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailtarget" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Tổng"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Ngày đầu"]</th>
                            <th style="min-width: 90px" data-name="detailpaid" class="raise" rowspan="1">@Local["Ngày sau"]</th>
                        </tr>
                    </thead>
                    <tbody id="TeleGridBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="TeleGridAppDetail" class="mt-0" style="display:none;">
    <div id="TeleGridAppDetaiWaiting" class="position-absolute start-50 translate-middle-x waitingdiv text-center" style="display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>

    </div>
    <div class="d-lg-flex">
        <div class="col-auto my-auto">
            <p id="TeleDetail_Title" class="text-md text-dark font-weight-bold mb-1"></p>
            <div class="d-flex align-items-center mb-sm-0 mb-4 overflow-x">
                <div class="form-check">
                    <input name="teledetail" value="1" class="teledetail form-check-input pr-2" type="radio" checked="checked">
                    <label class="custom-control-label text-nowrap">@Local["Lịch hẹn"]</label>
                </div>
                <div class="form-check ms-3">
                    <input name="teledetail" value="2" class="teledetail form-check-input pr-2" type="radio">
                    <label class="custom-control-label text-nowrap">@Local["Phát sinh dịch vụ/sản phẩm"]</label>
                </div>  
            </div>
        </div>
    </div>
    <div id="TeleDetail_App" class="mt-0 mt-lg-n5">
        <div class="vtcardheader card-header p-0">
            <div class="right">
                <div class="text-primary fw-bold d-inline mx-2 text-nowrap my-auto">
                    <span id="TD_AppCurrentdata">0</span>
                    <span class="mx-2">/</span>
                    <span id="TD_AppTotaldata">0</span>
                </div>
                <div class="icon-hover mx-1 mt-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["In báo cáo"]">
                    <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); Teledash_AppDetailPrintReport()"></i>
                </div>
                <div>
                    <div class="flex-nowrap input-group rounded-0 vttech-input-group  my-auto _tab_control_" data-tab="export_excel">
                    <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                    </div>
                    <div class="input-group-text icon-hover w-auto vttech-input-item  my-auto">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Teledash_AppExportDetail(0)">@Local["Tất cả"]</i>
                    </div>
                        <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last  my-auto">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Teledash_AppExportDetail(1)">@Local["Tùy chọn"]</i>
                    </div>
                </div>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colListsapp">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsapp" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="appshtoogle form-check-input" data-name="doccode" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã hồ sơ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="appshtoogle form-check-input" data-name="source" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="appshtoogle form-check-input" data-name="tele" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhân viên"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="appshtoogle form-check-input" data-name="group" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhóm tele"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="appshtoogle form-check-input" data-name="note" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ghi chú"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body px-0 pt-0 collapsesticky collapse show" id="TeleGridAppDetailDiv">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <table data-name="TeleGridAppDetail" class="table vt-table mb-0" id="TeleGridAppDetail">
                    <thead>
                        <tr>
                            <th style="width: 60px">@Local["#"]</th>
                            <th>@Local["Mã khách hàng"]</th>
                            <th data-name="doccode">@Local["Mã hồ sơ"]</th>
                            <th>@Local["Khách hàng"]</th>
                            <th>@Local["Ngày hẹn"]</th>
                            <th>@Local["Chi nhánh"]</th>
                            <th>@Local["Tình trạng"]</th>
                            <th data-name="source">@Local["Nguồn khách hàng"]</th>
                            <th data-name="tele">@Local["Telesale"]</th>
                            <th data-name="group">@Local["Nhóm tele"]</th>
                            <th data-name="note">@Local["Ghi chú"]</th>
                            <th>@Local["Ngày tạo"]</th>
                            <th>@Local["Người tạo"]</th>
                        </tr>
                    </thead>
                    <tbody id="TeleGridAppDetailBody">
                    </tbody>
                </table>
            </div>
            <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return Teledash_AppRenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>
    </div>
    <div id="TeleDetail_Ser" class="mt-0 mt-lg-n5 d-none">
        <div class="vtcardheader card-header p-0">
            <div class="right">
                <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                    <span id="TD_SerCurrentdata">0</span>
                    <span class="mx-2">/</span>
                    <span id="TD_SerTotaldata">0</span>
                </div>
                <div class="icon-hover mx-1 mt-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["In báo cáo"]">
                    <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); Teledash_SerDetailPrintReport()"></i>
                </div>
                <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                    <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                    </div>
                    <div class="input-group-text icon-hover w-auto vttech-input-item">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Teledash_SerExportDetail(0)">@Local["Tất cả"]</i>
                    </div>
                    <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Teledash_SerExportDetail(1)">@Local["Tùy chọn"]</i>
                    </div>
                </div>
                <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colListsser">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsser" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="doccode" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã hồ sơ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="servicecat" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nguồn dịch vụ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="detail" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Chi tiết điều trị"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="source" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="tele" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhân viên"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="group" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhóm tele"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="note" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ghi chú"]</p>
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <div class="card-body px-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <table data-name="TeleGridSerDetail" class="table vt-table mb-0" id="TeleGridSerDetail">
                    <thead>
                        <tr>
                            <th style="width: 60px">@Local["#"]</th>
                            <th>@Local["Mã khách hàng"]</th>
                            <th data-name="doccode">@Local["Mã hồ sơ"]</th>
                            <th>@Local["Khách hàng"]</th>
                            <th>@Local["Dịch vụ/sản phẩm"]</th>
                            <th data-name="servicecat">@Local["Nguồn dịch vụ"]</th>
                            <th>@Local["Số lượng"]</th>
                            <th data-name="detail">@Local["Chi tiết điều trị"]</th>
                            <th>@Local["Giá tiền"]</th>
                            <th>@Local["Thanh toán"]</th>
                            <th>@Local["Chi nhánh"]</th>
                            <th>@Local["Ngày đầu"]</th>
                            <th>@Local["Loại"]</th>
                            <th data-name="source">@Local["Nguồn khách hàng"]</th>
                            <th data-name="tele">@Local["Telesale"]</th>
                            <th data-name="group">@Local["Nhóm tele"]</th>
                            <th data-name="note">@Local["Ghi chú"]</th>
                            <th>@Local["Ngày tạo"]</th>
                            <th>@Local["Người tạo"]</th>
                        </tr>
                    </thead>
                    <tbody id="TeleGridSerDetailBody">
                    </tbody>
                </table>
            </div>
            <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return Teledash_SerRenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>
    </div>
</div>


<script type="text/javascript">
    let xhrLoadList, xhrLoadDetail;
    let DataReportMainApp, DataReportMainAppSlice;
    let DataReportMainSer, DataReportMainSerSlice;
    let shtablemaster, shtableApp, shtableSer;
    let IndexReportApp = 0;
    let IndexReportSer = 0;

    let TLDataTag = [];
    let TLDataStatus = [];
    let TLDataStatusDetail = [];
    let TLDataCalled = [];

    let TLHeaderTag = [];
    let TLHeaderStatus = [];
    let TLHeaderStatusDetail = [];
    let TLHeaderCalled = [];

    let timeoutCount;

    $(document).ready(function () {
        shtablemaster = $("#TeleGrid").TableExpandColumn({
            shtoogle: $('.mastershtoogle')
        });
        shtableApp = $("#TeleGridAppDetail").TableExpandColumn({
            shtoogle: $('.appshtoogle')
        });
        shtableSer = $("#TeleGridSerDetail").TableExpandColumn({
            shtoogle: $('.sershtoogle')
        });
        ToolPopper();
        Teledash_Load();
        Checking_TabControl_Permission();
    });

    function Teledash_Load() {
        TLDataTag = [];
        TLDataStatus = [];
        TLDataStatusDetail = [];
        TLDataCalled = [];

        $('#TeleGrid .detail .tag').remove();
        $('#TeleGrid .detail .status').remove();
        $('#TeleGrid .detail .iscalled').remove();

        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _staffID = "@Model._staffID";
        let _groupStaffID = "@Model._groupStaffID";
        let _tokenGroupStaff = "@Model._tokenGroupStaff";
        //let _teleGroupId = $("#TeleGene_TeleGroupID").dropdown() ? Number($("#TeleGene_TeleGroupID").dropdown("get value")) : 0;
        Teledash_Typeshow(1);
        xhrLoadList = AjaxLoad(url = "/Report/Telesale/TelesaleGeneral/?handler=Loadata"
            , data = {
                'dateFrom': _dateFrom
                , 'dateTo': _dateTo
                , 'staffID': _staffID
                , 'groupStaffID': _groupStaffID
                , 'tokenGroupStaff': _tokenGroupStaff
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let data = datas["Table"];
                    TLDataTag = datas["Table1"];
                    TLDataStatus = datas["Table2"];
                    TLDataStatusDetail = datas["Table3"];

                    TLDataCalled = datas["Table4"];
                    TLHeaderTag = datas["Table5"];
                    TLHeaderStatus = datas["Table6"];
                    TLHeaderStatusDetail = datas["Table7"];
                    TLHeaderCalled = datas["Table8"];

                    Teledash_RenderHeader(TLHeaderTag, "TeleGrid", classname = 'tag', emptyValue = '@Local["Chưa có tag"]');
                    Teledash_RenderHeader(TLHeaderStatus, "TeleGrid", classname = 'status', emptyValue = '@Local["Khác"]');
                    Teledash_RenderHeader(TLHeaderStatusDetail, "TeleGrid", classname = 'statusdetail', emptyValue = '@Local["Khác"]');
                    Teledash_RenderHeader(TLHeaderCalled, "TeleGrid", classname = 'iscalled', emptyValue = '@Local["Khác"]');
                    Teledash_ChartExecuted();
                    Teledash_Executed(data, "TeleGridBody");
                } else {
                    notiError_SW();
                }
            }
            , sender = null,
            before = function (e) {
                $("#TeleGridWaiting").show();
                $("#TeleGeneDiv").addClass('opacity-0');

            },
            complete = function (e) {
                $("#TeleGridWaiting").hide();
                $("#TeleGeneDiv").removeClass('opacity-0');
            }
        );
        return false;
    }
    async function Teledash_ChartExecuted() {
        new Promise((resolve) => {
            let Total = 0;
            for (let i = 0; i < TLHeaderCalled.length; i++) {
                Total += Number(TLHeaderCalled[i]['Total']);
            }
            ReportPie_Description(TLHeaderCalled, 'Name', 'Total', 'TeleCalledList');
            rp_pie("TeleCalledPie", TLHeaderCalled, 'Name', 'Total');
            $("#TeleCalledTotal").html(formatNumberToMilion(Total));
            rp_bar('TeleStatusBar', TLHeaderStatus, "Name", "Total");
        })
    }
    async function Teledash_Executed(data, id) {
        new Promise((resolve) => {
            let App = 0, AppChecked = 0, AppNot = 0;
            let TotalTicket = 0, TicketCreate = 0, TicketDevide = 0;
            let TotalCust = 0, Tab = 0, TabFirst = 0, TabNotFirst = 0;
            let Service = 0, ServiceFirst = 0, ServiceNotFirst = 0;
            let Product = 0, ProductFirst = 0, ProductNotFirst = 0;
            let Amount = 0, AmountFirst = 0, AmountNotFirst = 0;
            let SerAmount = 0, SerAmountFirst = 0, SerAmountNotFirst = 0;
            let ProAmount = 0, ProAmountFirst = 0, ProAmountNotFirst = 0;
            let Paid = 0, PaidFirst = 0, PaidNotFirst = 0;
            let SerPaid = 0, SerPaidFirst = 0, SerPaidNotFirst = 0;
            let ProPaid = 0, ProPaidFirst = 0, ProPaidNotFirst = 0;
            let NumExecuted = 0;
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    //#region // Count Total
                    App = App + item.App;
                    AppChecked = AppChecked + item.AppChecked;
                    AppNot = AppNot + item.AppNot;
                    TotalTicket = TotalTicket + item.TotalTicket;
                    TicketCreate = TicketCreate + item.TicketCreate;
                    TicketDevide = TicketDevide + item.TicketDevide;
                    TotalCust = TotalCust + item.TotalCust;
                    Tab = Tab + item.Tab;
                    TabFirst = TabFirst + item.TabFirst;
                    TabNotFirst = TabNotFirst + item.TabNotFirst;
                    Service = Service + item.Service;
                    ServiceFirst = ServiceFirst + item.ServiceFirst;
                    ServiceNotFirst = ServiceNotFirst + item.ServiceNotFirst;
                    Product = Product + item.Product;
                    ProductFirst = ProductFirst + item.ProductFirst;
                    ProductNotFirst = ProductNotFirst + item.ProductNotFirst;
                    Amount = Amount + item.Amount;
                    AmountFirst = AmountFirst + item.AmountFirst;
                    AmountNotFirst = AmountNotFirst + item.AmountNotFirst;
                    SerAmount = SerAmount + item.SerAmount;
                    SerAmountFirst = SerAmountFirst + item.SerAmountFirst;
                    SerAmountNotFirst = SerAmountNotFirst + item.SerAmountNotFirst;
                    ProAmount = ProAmount + item.ProAmount;
                    ProAmountFirst = ProAmountFirst + item.ProAmountFirst;
                    ProAmountNotFirst = ProAmountNotFirst + item.ProAmountNotFirst;

                    Paid = Paid + item.Paid;
                    PaidFirst = PaidFirst + item.PaidFirst;
                    PaidNotFirst = PaidNotFirst + item.PaidNotFirst;
                    SerPaid = SerPaid + item.SerPaid;
                    SerPaidFirst = SerPaidFirst + item.SerPaidFirst;
                    SerPaidNotFirst = SerPaidNotFirst + item.SerPaidNotFirst;
                    ProPaid = ProPaid + item.ProPaid;
                    ProPaidFirst = ProPaidFirst + item.ProPaidFirst;
                    ProPaidNotFirst = ProPaidNotFirst + item.ProPaidNotFirst;

                    NumExecuted = NumExecuted + item.NumExecuted;
                    //#endregion
                }
                let e = {};
                e.App = App; e.AppChecked = AppChecked; e.AppNot = AppNot;
                e.TotalTicket = TotalTicket; e.TicketCreate = TicketCreate; e.TicketDevide = TicketDevide;
                e.TotalCust = TotalCust; e.Tab = Tab; e.TabFirst = TabFirst; e.TabNotFirst = TabNotFirst;
                e.Service = Service; e.ServiceFirst = ServiceFirst; e.ServiceNotFirst = ServiceNotFirst;
                e.Product = Product; e.ProductFirst = ProductFirst; e.ProductNotFirst = ProductNotFirst;
                e.Amount = Amount; e.AmountFirst = AmountFirst; e.AmountNotFirst = AmountNotFirst;
                e.SerAmount = SerAmount; e.SerAmountFirst = SerAmountFirst; e.SerAmountNotFirst = SerAmountNotFirst;
                e.ProAmount = ProAmount; e.ProAmountFirst = ProAmountFirst; e.ProAmountNotFirst = ProAmountNotFirst;
                e.Paid = Paid; e.PaidFirst = PaidFirst; e.PaidNotFirst = PaidNotFirst;
                e.SerPaid = SerPaid; e.SerPaidFirst = SerPaidFirst; e.SerPaidNotFirst = SerPaidNotFirst;
                e.ProPaid = ProPaid; e.ProPaidFirst = ProPaidFirst; e.ProPaidNotFirst = ProPaidNotFirst;
                e.NumExecuted = NumExecuted;
                data.push(e);

            }
            Teledash_Render(data, id);
        })
    }
    function Teledash_RenderHeader(data, id, classname, emptyValue = '@Local["Khác"]') {
        var myNode = $('#' + id + ' .detail')[0];
        var myNodeParent = $('#' + id + ' .' + classname)[0];
        if (myNode != null) {
            let stringContent = '';
            if (data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    stringContent = stringContent + `<th style="min-width:120px;" class="${classname}">${data[i].Name != "" ? data[i].Name : decodeHtml(emptyValue)}</th >`;
                }
                myNode.innerHTML = myNode.innerHTML + stringContent;
                myNodeParent.setAttribute("colspan", data.length);
            }
            else myNodeParent.classList.add("d-none");

        }

    }
    async function Teledash_Render(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    let ttag = [];
                    let tstatus = [];
                    let tstatusdetail = [];
                    let tcaller = [];
                    let groupname = '', empname = '';
                    let GroupID = -1;
                    let classname = '';
                    let index = '';
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        if (data.length > 1 && i == data.length - 1) {
                            groupname = `<td data-name="group">
                                        <a href="#" class="cursor-pointer border-white text-white border-1 border-primary border-bottom buttonViewClass" data-groupname="@Local["Tất cả"]" data-group="-1" data-usertele="0">
                                        @Local["Tất cả"]
                                        </a></td>`;
                            empname = '<td></td>';
                            classname = 'text-white border-white bg-gradient bg-primary';
                            index = `<td></td>`;
                        }
                        else {
                            if (item.GroupID != GroupID) {
                                GroupID = item.GroupID;
                                groupname = `<td data-name="group" rowspan=${item.Teleingroup}>
                                                <a href="#" class="cursor-pointer border-1 border-primary border-bottom buttonViewClass" data-groupname="${item.GroupID != 0 ? item.GroupName : '@Local["Quản lý"]'}" data-group="${item.GroupID}" data-usertele="0">
                                                    ${item.GroupID != 0 ? item.GroupName : '@Local["Quản lý"]'}
                                                </a>
                                            </td>`;
                            } else groupname = '';
                            empname = `<td>
                                            <a href="#" class="cursor-pointer border-1 border-primary border-bottom buttonViewClass" data-empname="${item.EmpName}" data-group="${item.GroupID}" data-usertele="${item.UserID}">
                                                ${item.EmpName}
                                            </a>
                                        </td>`;
                            classname = 'vt-number';
                            index = '<td class="vt-number-order"></td>';
                        }
                        let tr = `
                            ${index}
                            ${groupname}
                            ${empname}
                            <td data-name="data">${Teledash_ReplaceNum(item.TotalTicket)}</td>
                            <td data-name="data">${Teledash_ReplaceNum(item.TicketCreate)}</td>
                            <td data-name="data">${Teledash_ReplaceNum(item.TicketDevide)}</td>
                            <td data-name="data">${Teledash_ReplaceNum(item.NumExecuted)}</td>
                            <td data-name="app" class="raise">${Teledash_ReplaceNum(item.App)}</td>
                            <td data-name="app" class="raise">${Teledash_ReplaceNum(item.AppChecked)}</td>
                            <td data-name="app" class="raise">${Teledash_ReplaceNum(item.AppNot)}</td>

                            <td class="raise">${Teledash_ReplaceNum(item.Tab)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.TabFirst)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.TabNotFirst)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.Service)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.ServiceFirst)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.ServiceNotFirst)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.Product)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.ProductFirst)}</td>
                            <td data-name="detailquantity" class="raise">${Teledash_ReplaceNum(item.ProductNotFirst)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.Amount)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.AmountFirst)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.AmountNotFirst)}</td>
                            <td data-name="detailtarget" class="raise">${Teledash_ReplaceNum(item.SerAmount)}</td>
                            <td data-name="detailtarget" class="raise">${Teledash_ReplaceNum(item.SerAmountFirst)}</td>
                            <td data-name="detailtarget" class="raise">${Teledash_ReplaceNum(item.SerAmountNotFirst)}</td>
                            <td data-name="detailtarget" class="raise">${Teledash_ReplaceNum(item.ProAmount)}</td>
                            <td data-name="detailtarget" class="raise">${Teledash_ReplaceNum(item.ProAmountFirst)}</td>
                            <td data-name="detailtarget"  class="raise">${Teledash_ReplaceNum(item.ProAmountNotFirst)}</td>

                            <td class="raise">${Teledash_ReplaceNum(item.Paid)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.PaidFirst)}</td>
                            <td class="raise">${Teledash_ReplaceNum(item.PaidNotFirst)}</td>
                            <td data-name="detailpaid" class="raise">${Teledash_ReplaceNum(item.SerPaid)}</td>
                            <td data-name="detailpaid" class="raise">${Teledash_ReplaceNum(item.SerPaidFirst)}</td>
                            <td data-name="detailpaid" class="raise">${Teledash_ReplaceNum(item.SerPaidNotFirst)}</td>
                            <td data-name="detailpaid" class="raise">${Teledash_ReplaceNum(item.ProPaid)}</td>
                            <td data-name="detailpaid" class="raise">${Teledash_ReplaceNum(item.ProPaidFirst)}</td>
                            <td data-name="detailpaid"  class="raise">${Teledash_ReplaceNum(item.ProPaidNotFirst)}</td>

                            `;

                        for (let j = 0; j < TLHeaderTag.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataTag.filter(v => v.TagID === TLHeaderTag[j].ID);
                            else _item = TLDataTag.filter(v => v.TagID === TLHeaderTag[j].ID && v.UserID === item.UserID);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="tag">' + Teledash_ReplaceNum(sum) + '</td>'
                            ttag[j] = (ttag[j] != undefined ? ttag[j] : 0) + sum;
                        }
                        for (let j = 0; j < TLHeaderStatus.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataStatus.filter(v => v.StatusCallID === TLHeaderStatus[j].ID);
                            else _item = TLDataStatus.filter(v => v.StatusCallID === TLHeaderStatus[j].ID && v.UserID === item.UserID);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="status">' + Teledash_ReplaceNum(sum) + '</td>'
                            tstatus[j] = (tstatus[j] != undefined ? tstatus[j] : 0) + sum;
                        }
                        for (let j = 0; j < TLHeaderStatusDetail.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataStatusDetail.filter(v => v.StatusCallDetailID === TLHeaderStatusDetail[j].ID);
                            else _item = TLDataStatusDetail.filter(v => v.StatusCallDetailID === TLHeaderStatusDetail[j].ID && v.UserID === item.UserID);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="statusdetail">' + Teledash_ReplaceNum(sum) + '</td>'
                            tstatusdetail[j] = (tstatusdetail[j] != undefined ? tstatusdetail[j] : 0) + sum;
                        }


                        for (let j = 0; j < TLHeaderCalled.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataCalled.filter(v => v.CalledID === TLHeaderCalled[j].ID);
                            else _item = TLDataCalled.filter(v => v.CalledID === TLHeaderCalled[j].ID && v.UserID === item.UserID);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="iscalled">' + Teledash_ReplaceNum(sum) + '</td>'
                            tcaller[j] = (tcaller[j] != undefined ? tcaller[j] : 0) + sum;
                        }
                        stringContent = stringContent + '<tr class="' + classname + '" role="row">' + tr + '</tr>';

                    }

                }
                document.getElementById(id).innerHTML = stringContent;
            }
            shtablemaster.Refresh();
            Teledash_Event();
            Teledash_Typeshow(1);
        })
    }
    function Teledash_ReplaceNum (Num) {
        try {
            let result = ``;

            if (Num == 0 || Num == '0') {
                result = '-'
            } else {
                result = formatNumber(Num);
            };

            return result;
        } catch (ex) {
            return '';
        }
    }

    //#region // DETAIL APP
    async function Teledashdetail_Load(group, usertele) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                IndexReportSer = 0;
                IndexReportApp = 0;
                $('#TD_AppCurrentdata').html(0);
                $('#TD_AppTotaldata').html(0);
                $('#TD_SerCurrentdata').html(0);
                $('#TD_SerTotaldata').html(0);

                $("input[name=teledetail][value=" + 1 + "]").prop('checked', true);
                let _tokenGroupStaff = "@Model._tokenGroupStaff";
                xhrLoadDetail = AjaxLoad(url = "/Report/Telesale/TelesaleGeneral/?handler=AppDetail"
                    , data = {
                        'usertele': usertele,
                        'groupid': group,
                        'grouptoken': _tokenGroupStaff,
                        'dateFrom': _dateFrom,
                        'dateTo': _dateTo,
                    }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        if (result != "0") {
                            let datas = JSON.parse(result);
                            let dataapp = datas.Table;
                            let dataser = datas.Table1;
                            TeledashDetail_Typeshow(1);
                            Teledash_DetailEvent();
                            DataReportMainApp = JSON.parse(JSON.stringify(dataapp));
                            DataReportMainAppSlice = sliceIntoChunks(dataapp, 200);
                            $("#TeleGridAppDetailBody").empty();
                            if (DataReportMainAppSlice.length > 0) {
                                Count_Up("TD_AppTotaldata", DataReportMainApp.length);
                                fnRenderBlock(DataReportMainAppSlice[IndexReportApp], "TeleGridAppDetailBody"
                                    , blocknum = 200
                                    , fnrender = Teledetail_AppRender
                                    , fnsuccess = () => {
                                        $("#TeleGridAppDetaiWaiting").hide();
                                        $("#TeleGridAppDetai").removeClass('opacity-0');
                                    }
                                    , fnbegin = () => {
                                        $("#TeleGridAppDetaiWaiting").show();
                                        $("#TeleGridAppDetai").addClass('opacity-0');
                                    }
                                );

                            }

                            DataReportMainSer = JSON.parse(JSON.stringify(dataser));
                            DataReportMainSerSlice = sliceIntoChunks(dataser, 200);
                            $("#TeleGridSerDetailBody").empty();
                            if (DataReportMainSerSlice.length > 0) {
                                Count_Up("TD_SerTotaldata", DataReportMainSer.length);
                                fnRenderBlock(DataReportMainSerSlice[IndexReportSer], "TeleGridSerDetailBody"
                                    , blocknum = 200
                                    , fnrender = Teledetail_SerRender
                                    , fnsuccess = () => {
                                        $("#TeleGridAppDetaiWaiting").hide();
                                        $("#TeleGridAppDetai").removeClass('opacity-0');
                                    }
                                    , fnbegin = () => {
                                        $("#TeleGridAppDetaiWaiting").show();
                                        $("#TeleGridAppDetai").addClass('opacity-0');
                                    }
                                );
                            }
                        }
                        else {
                            notiError_SW();
                        }
                    }
                    , sender = null
                    , before = function (e) {
                        $("#TeleGridAppDetaiWaiting").show();
                        $("#TeleGridAppDetai").addClass('opacity-0');

                    }
                    , complete = function (e) {
                        $("#TeleGridAppDetaiWaiting").hide();
                        $("#TeleGridAppDetai").removeClass('opacity-0');
                    }
                );
                resolve();
            }, 10)
        })
    }
    function Teledash_DetailEvent() {
        $(".teledetail").unbind().change(function () {
            let val = Number($(this).val());
            TeledashDetail_Typeshow(val);
        })
    }
    function TeledashDetail_Typeshow(val) {
        switch (val) {
            case 1:
                $('#TeleDetail_App').removeClass('d-none');
                $('#TeleDetail_Ser').addClass('d-none');
                break;
            case 2:
                $('#TeleDetail_App').addClass('d-none');
                $('#TeleDetail_Ser').removeClass('d-none');
                break;

        }
    }
    function Teledash_AppRenderMore() {
        IndexReportApp += 1;
        if (DataReportMainAppSlice && DataReportMainAppSlice[IndexReportApp]) {
            fnRenderBlock(DataReportMainAppSlice[IndexReportApp], "TeleGridAppDetailBody"
                , blocknum = 100
                , fnrender = Teledetail_AppRender
                , fnsuccess = null
            );
        }
    }
    async function Teledetail_AppRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let status = '';
                            if (item.AppChecked == 1) {
                                status = `<span class="text-primary fw-bold">@Local["Đã đến"]</span>`
                            } else {
                                status = `<span class="text-secondary">@Local["Chưa đến"]</span>`
                            }
                            let tr = `
                                <tr class="vt-number">
                                    <td class="vt-number-order"></td>
                                    <td>
                                        <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode}</a>
                                    </td>
                                    <td data-name="doccode">${item.DocCode}</td>
                                    <td>${item.CustName}</td>
                                    <td>${ConvertDateTimeUTC_DMY(item.DateFrom)}</td>
                                    <td>${item.BranchName}</td>
                                    <td>${status}</td>
                                    <td data-name="source">${item.SourceName}</td>
                                    <td data-name="tele">${item.TeleName}</td>
                                    <td data-name="group">${item.GroupName}</td>
                                    <td data-name="note">${item.Note}</td>
                                    <td>${ConvertDateTimeUTC_DMY(item.Created)}</td>
                                    <td>${Fun_GetName_ByID(RP_DataEmployee, item.CreatedBy)}</td>
                                </tr>
                            `
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableApp.Refresh();
                clearTimeout(timeoutCount);
                timeoutCount = setTimeout(() => {
                    Count_Up("TD_AppCurrentdata", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)

        })
    }
    async function Teledash_AppExportDetail(isOption = 0) {
        try {
            if (DataReportMainApp && DataReportMainApp.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#TeleDetail_App');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": {
                        isShow: isAll || (eleContainer.find(`.appshtoogle[data-name='doccode']`)).is(":checked"),
                        data: ["@Local["Mã hồ sơ"]"]
                    },
                    "DateFrom": ["@Local["Ngày hẹn"]", (value) => { return ConvertDateTimeUTC_DMYHM(value) }],
                    "AppChecked": ["@Local["Checked in"]", (value, { AppChecked }) => {
                        return (AppChecked == 1 ? 'x' : '');
                    }],
                    "SourceName": {
                        isShow: isAll || (eleContainer.find(`.appshtoogle[data-name='source']`)).is(":checked"),
                        data: ["@Local["Nguồn"]"]
                    },
                    "TeleName": {
                        isShow: isAll || (eleContainer.find(`.appshtoogle[data-name='tele']`)).is(":checked"),
                        data: ["@Local["Nhân viên"]"]
                    },
                    "GroupName": {
                        isShow: isAll || (eleContainer.find(`.appshtoogle[data-name='group']`)).is(":checked"),
                        data: ["@Local["Nhóm"]"]
                    },
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "Note": {
                        isShow: isAll || (eleContainer.find(`.appshtoogle[data-name='note']`)).is(":checked"),
                        data: ["@Local["Ghi chú"]"]
                    },
                    "Created": ["@Local["Ngày tạo"]", (value) => { return ConvertDateTimeUTC_DMYHM(value) }],
                    "CreatedBy": ["@Local["Người tạo"]", (value) => { return Fun_GetName_ByID(RP_DataEmployee, value) }]
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'TeleGridAppDetailBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang['Danh_sach_lich_hen']);
                exportJsonToExcel(Outlang['Danh_sach_lich_hen'], DataReportMainApp, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function Teledash_AppDetailPrintReport() {
        try {
            if (DataReportMainApp && DataReportMainApp.length != 0) {
                let _branchID = 0;
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.appshtoogle[data-name='doccode']`).is(":checked")
                    }],
                    "DateFrom": ["@Local["Ngày hẹn"]", {
                        callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMYHM(value) }
                    }],
                    "AppChecked": ["@Local["Checked in"]", {
                        callbackRenderValue: (value, { AppChecked }) => {
                            return (AppChecked == 1 ? 'x' : '');
                        }
                    }],
                    "SourceName": ["@Local["Nguồn"]", {
                        isShow: $(`.appshtoogle[data-name='source']`).is(":checked")
                    }],
                    "TeleName": ["@Local["Nhân viên"]", {
                        isShow: $(`.appshtoogle[data-name='tele']`).is(":checked")
                    }],
                    "GroupName": ["@Local["Nhóm nhân viên"]", {
                        isShow: $(`.appshtoogle[data-name='group']`).is(":checked")
                    }],
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "Note": ["@Local["Ghi chú"]", {
                        isShow: $(`.appshtoogle[data-name='note']`).is(":checked")
                    }],
                    "Created": ["@Local["Ngày tạo"]", {
                        callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMYHM(value) }
                    }],
                    "CreatedBy": ["@Local["Người tạo"]", {
                        callbackRenderValue: (value) => { return Fun_GetName_ByID(RP_DataEmployee, value) }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang['Danh_sach_lich_hen'], DataReportMainApp, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
    //#endregion
    //#region // DETAIL Ser
    function Teledash_SerRenderMore() {
        IndexReportSer += 1;
        if (DataReportMainSerSlice && DataReportMainSerSlice[IndexReportSer]) {
            fnRenderBlock(DataReportMainSerSlice[IndexReportSer], "TeleGridSerDetailBody"
                , blocknum = 100
                , fnrender = Teledetail_SerRender
                , fnsuccess = null
            );
        }
    }
    async function Teledetail_SerRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let firstday = '', type;
                            let percentTreat = Teledash_Render_TreatmentOrPercentService(item.TreatIndex, item.TreatTime, item.TreatDetail, item.PercentOfService, item.TeethChoosing, item.TreatPercentDetail, item.Quantity);
                            let iconTeeth = sys_dencos_Main == 1 ? '<i class="vtt-icon vttech-icon-labo text-xs text-gradient text-info ms-n1"></i>' : '';
                            if (item.FirstDay == 1) firstday = `<span class="text-primary fw-bold">@Local["Ngày đầu"]</span>`
                            else firstday = `<span class="text-secondary">@Local["Ngày sau"]</span>`
                            if (item.IsProduct == 1) type = `<span class="text-dark fw-bold">@Local["Sản phẩm"]</span>`
                            else type = `<span class="text-dark fw-bold">@Local["Dịch vụ"]</span>`
                            let tr = `
                                              <tr class="vt-number">
                                                  <td class="vt-number-order"></td>
                                                  <td>
                                                      <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode}</a>
                                                  </td>
                                                  <td data-name="doccode">${item.DocCode}</td>
                                                  <td>${item.CustName}</td>
                                                  <td>${Teledash_Render_GetName(item.ServiceID)}</td>
                                                  <td data-name="servicecat">${Fun_GetName_ByID(RP_DataServiceCat, item.ServiceTypeID)}</td>
                                                  <td>${item.Quantity}</td>
                                                  <td data-name="detail">
                                                  <div class="text-dark text-sm d-flex">
                                                  <span style="min-width:max-content">${percentTreat} %</span>
                                                  <div class="progress-wrapper ms-2 mt-2">
                                                  <div class="progress-info"></div>
                                                  <div class="progress">
                                                  <div class="progress-bar bg-gradient-success serprogress" role="progressbar" aria-valuenow="${percentTreat}" aria-valuemin="0" aria-valuemax="100" data-value="0" style="width: ${percentTreat}%;"></div>
                                                  </div>
                                                  </div>
                                                  </div>
                                                  <div class="mt-1">${iconTeeth + Teledash_Render_Detail(item.TeethType, item.TeethChoosing, item.TreatTime, item.TreatIndex)}</div>
                                                  </td>
                                                  <td>${formatNumber(item.Amount)}</td>
                                                  <td>${formatNumber(item.Paid)}</td>
                                                  <td>${item.BranchName}</td>
                                                  <td>${firstday}</td>
                                                  <td>${type}</td>
                                                  <td data-name="source">${item.SourceName}</td>
                                                  <td data-name="tele">${item.TeleName}</td>
                                                  <td data-name="group">${item.GroupName}</td>
                                                  <td data-name="note">${item.Note}</td>
                                                  <td>${ConvertDateTimeUTC_DMY(item.Created)}</td>
                                                  <td>${Fun_GetName_ByID(RP_DataEmployee, item.CreatedBy)}</td>
                                              </tr>`
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableSer.Refresh();
                Count_Up("TD_SerCurrentdata", $("#" + id).children().length);
                resolve();
            }, 10)

        })
    }

    function Teledash_Render_TreatmentOrPercentService(TreatIndex, TimeToTreatment, TreatDetail, PercentOfService, TeethChoosing, Treat_Percent_Detail, Quantity) {
        try {
            let result = 100;
            if (sys_dencos_Main == 0) result = TimeToTreatment != 0 ? (100 * TreatIndex / TimeToTreatment) : 0;
            else {
                if (TreatDetail == 0) result = PercentOfService;
                else {
                    if (TeethChoosing != '') result = (Quantity != 0) ? (Treat_Percent_Detail / Quantity) : 0;
                    else result = Treat_Percent_Detail;
                }
            }
            return result;
        }
        catch (ex) {
            return 0;
        }
    }

    function Teledash_Render_Detail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment) {
        try {
            let result = '';
            if (sys_dencos_Main == 0) {
                result = `${decodeHtml("@Local["Đã điều trị"]")}: ${TreatIndex} | ${TimeToTreatment}`
            }
            else {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    async function Teledash_SerExportDetail(isOption = 0) {
        try {
            if (DataReportMainSer && DataReportMainSer.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#TeleDetail_Ser');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "DocCode": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='doccode']`)).is(":checked"),
                        data: ["@Local["Mã hồ sơ"]"]
                    },
                    "CustName": ["@Local["Khách hàng"]"],
                    "Service": ["@Local["Dịch vụ/sản phẩm"]", (value, { ServiceID }) => {
                        return Teledash_Render_GetName(ServiceID);
                    }],
                    "ServiceTypeID": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='servicecat']`)).is(":checked"),
                        data: ["@Local["Nguồn dịch vụ"]", (value) => {
                            return Fun_GetName_ByID(RP_DataServiceCat, value)
                        }]
                    },
                    "Quantity": ["@Local["Số lượng"]"],
                    "Detail": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='detail']`)).is(":checked"),
                        data: ["@Local["Chi tiết điều trị"]", (value, { TreatIndex, TreatTime, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, Quantity, TeethType }) => {
                            return Teledash_Render_TreatmentOrPercentService(TreatIndex, TreatTime, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, Quantity)
                                + `% ${Teledash_Render_Detail(TeethType, TeethChoosing, TreatTime, TreatIndex) != "" ? "," + decodeHtml('@Local["Chi tiết"]') + ": " + Teledash_Render_Detail(TeethType, TeethChoosing, TreatTime, TreatIndex) : ""}`;
                        }]
                    },
                    "Amount": ["@Local["Giá tiền"]"],
                    "Paid": ["@Local["Thanh toán"]"],
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "FirstDay": ["@Local["Ngày đầu"]", (value, { FirstDay }) => {
                        return (FirstDay == 1 ? 'x' : '');
                    }],
                    "IsProduct": ["@Local["Loại"]", (value, { IsProduct }) => {
                        return Teledash_Render_GetType(IsProduct);
                    }],
                    "SourceName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='source']`)).is(":checked"),
                        data: ["@Local["Nguồn khách hàng"]"]
                    },
                    "TeleName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='tele']`)).is(":checked"),
                        data: ["@Local["Nhân viên"]"]
                    },
                    "GroupName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='group']`)).is(":checked"),
                        data: ["@Local["Nhóm tele"]"]
                    },
                    "Note": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='note']`)).is(":checked"),
                        data: ["@Local["Ghi chú"]"]
                    },
                    "Created": ["@Local["Ngày tạo"]", (value) => {
                        return ConvertDateTimeUTC_DMY(value)
                    }],
                    "CreatedBy": ["@Local["Người tạo"]", (value) => {
                        return Fun_GetName_ByID(RP_DataEmployee, value)
                    }],
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'TeleGridSerDetailBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang['Dich_vu_san_pham']);
                exportJsonToExcel(Outlang['Dich_vu_san_pham'], DataReportMainSer, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function Teledash_SerDetailPrintReport() {
        try {
            if (DataReportMainSer && DataReportMainSer.length != 0) {
                let _branchID = 0;
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.shtoogle[data-name='doccode']`).is(":checked")
                    }],
                    "CustName": ["@Local["Khách hàng"]"],
                    "Service": ["@Local["Dịch vụ"]", {
                        callbackRenderValue: (value, { ServiceID }) => {
                            return Teledash_Render_GetName(ServiceID);
                        }
                    }],
                    "ServiceTypeID": ["@Local["Nhóm dịch vụ"]", {
                        isShow: $(`.sershtoogle[data-name='servicecat']`).is(":checked"),
                        callbackRenderValue: (value) => {
                            return Fun_GetName_ByID(RP_DataServiceCat, value)
                        }
                    }],
                    "Quantity": ["@Local["Số lượng"]"],
                    "Detail": ["@Local["Chi tiết điều trị"]", {
                        isShow: $(`.sershtoogle[data-name='detail']`).is(":checked"),
                        callbackRenderValue: (value, { TreatIndex, TreatTime, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, Quantity, TeethType }) => {
                            return Teledash_Render_TreatmentOrPercentService(TreatIndex, TreatTime, TreatDetail, PercentOfService, TeethChoosing, TreatPercentDetail, Quantity)
                                + `% ${Teledash_Render_Detail(TeethType, TeethChoosing, TreatTime, TreatIndex) != "" ? "," + decodeHtml('@Local["Chi tiết"]') + ": " + Teledash_Render_Detail(TeethType, TeethChoosing, TreatTime, TreatIndex) : ""}`;
                        }
                    }],
                    "Amount": ["@Local["Giá tiền"]"],
                    "Paid": ["@Local["Thanh toán"]"],
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "FirstDay": ["@Local["Ngày đầu"]", {
                        callbackRenderValue: (value, { FirstDay }) => {
                            return (FirstDay == 1 ? 'x' : '');
                        }
                    }],
                    "IsProduct": ["@Local["Loại"]", {
                        callbackRenderValue: (value, { IsProduct }) => {
                            return Teledash_Render_GetType(IsProduct);
                        }
                    }],
                    "SourceName": ["@Local["Nguồn khách hàng"]", {
                        isShow: $(`.sershtoogle[data-name='source']`).is(":checked")
                    }],
                    "TeleName": ["@Local["Nhân viên"]", {
                        isShow: $(`.sershtoogle[data-name='tele']`).is(":checked")
                    }],
                    "GroupName": ["@Local["Nhóm tele"]", {
                        isShow: $(`.sershtoogle[data-name='group']`).is(":checked")
                    }],
                    "Note": ["@Local["Ghi chú"]", {
                        isShow: $(`.sershtoogle[data-name='note']`).is(":checked")
                    }],
                    "Created": ["@Local["Ngày tạo"]", {
                        callbackRenderValue: (value, { IsProduct }) => {
                            return ConvertDateTimeUTC_DMY(value)
                        }
                    }],
                    "CreatedBy": ["@Local["Người tạo"]", {
                        callbackRenderValue: (value, { IsProduct }) => {
                            return Fun_GetName_ByID(RP_DataEmployee, value)
                        }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang['Dich_vu_san_pham'], DataReportMainSer, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
    //#endregion
    //#region // Event
    function Teledash_Render_GetName(serid) {
        try {
            let result = (RP_DataService[serid] != undefined) ? RP_DataService[serid].Name : '';
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function Teledash_Render_GetType(isproduct) {
        try {
            let result = '';
            switch (isproduct) {
                case 1:
                    result = decodeHtml('@Local["Sản phẩm"]')
                    break;
                case 0:
                    result = decodeHtml('@Local["Dịch vụ"]')
                    break;
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function Teledash_Event() {
        $(".telegenenal").unbind().change(function () {
            let val = Number($(this).val());
            Teledash_Typeshow(val);

        })
        $("#TeleGridBody .buttonViewClass").unbind('click').on("click", function () {
            let usertele = $(this).attr('data-usertele');
            let group = $(this).attr('data-group') ?? 0;
            let groupname = $(this).attr('data-groupname');
            let empname = $(this).attr('data-empname');
            $("#TeleGridAppDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#TeleGridAppDetail").offset().top
            }, 300);
            if (group == "-1" && usertele == "0") {
                $("#TeleDetail_Title").html('@Local["Tất cả telesale"]');
            }
            else {
                if (usertele != "0")
                    $("#TeleDetail_Title").html(empname);
                else
                    $("#TeleDetail_Title").html(groupname);

            }
            Teledashdetail_Load(group, usertele);
        })
    }

    function Teledash_Typeshow(val) {
        switch (val) {
            case 1:
                $('#TeleGrid .raise').removeClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                $('#TeleGrid .statusdetail').addClass('d-none');
                break;
            case 2:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').removeClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                $('#TeleGrid .statusdetail').addClass('d-none');
                break;
            case 3:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').removeClass('d-none');
                $('#TeleGrid .statusdetail').addClass('d-none');
                break;
            case 4:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                $('#TeleGrid .statusdetail').removeClass('d-none');
                break;
            case 5:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').removeClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                $('#TeleGrid .statusdetail').addClass('d-none');
                break;
        }
    }
    function Teledash_Export() {
        syslog_ExpExcel('e', Outlang["Danh_sach_tele"]);
        exportToExcel('TeleGrid', Outlang["Danh_sach_tele"]);
    }

                                                            //#endregion

</script>

