@page
@model Report.Telesale.SourceGeneral
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>


<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="mb-0">@Local["Hiệu quả theo nguồn"]</h6>
            <p class="text-sm mb-0">@Local["Tình trạng xử lý, hiệu quả theo nguồn"]</p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#SourceGendiv" aria-expanded="true"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="SourceGendiv">
        <div class="card-body p-0 pt-0">
            <div class="row px-2">
                <div class="col-12 col-sm-6 col-xl-4 p-1">
                    <div class="fw-bold text-center text-dark mb-1 text-sm">
                        @Local["Doanh thu"]:
                        <span id="SourceGenFirstTotal" class="fw-bolder"></span>
                    </div>
                    <div class="position-relative mt-3" style="min-height: 150px;">
                        <div class="chart position-absolute top-50 start-50 translate-middle">
                            <canvas id="SourceGenFirst" class="chart-canvas" height="150"></canvas>
                        </div>
                    </div>
                    <div class="mt-2  table-responsive">
                        <table class="table align-items-center mb-0">
                            <tbody id="SourceGenFirstList">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-xl-4 p-1">
                    <div class="fw-bold text-center text-dark mb-1 text-sm">
                        @Local["Trạng thái lịch hẹn"] :
                        <span id="SourceGenAppTotal" class="fw-bolder"></span>
                    </div>
                    <div class="position-relative mt-3" style="min-height: 150px;">
                        <div class="chart position-absolute top-50 start-50 translate-middle">
                            <canvas id="SourceGenApp" class="chart-canvas" height="150"></canvas>
                        </div>
                    </div>
                    <div class="mt-2  table-responsive">
                        <table class="table align-items-center mb-0">
                            <tbody id="SourceGenAppList">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-12 col-sm-12 col-xl-4 p-1">
                    <div class="fw-bold text-center text-dark mb-1 text-sm">
                        @Local["Trạng thái follow"] :
                        <span id="TeleCalledTotal" class="fw-bolder"></span>
                    </div>
                    <div class="position-relative mt-3" style="min-height: 150px;">
                        <div class="chart position-absolute top-50 start-50 translate-middle">
                            <canvas id="TeleCalledPie" class="chart-canvas" height="150"></canvas>
                        </div>
                    </div>
                    <div class="mt-2  table-responsive">
                        <table class="table align-items-center mb-0">
                            <tbody id="TeleCalledList">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card card-plain">
    <div class="vtcardheader card-header p-0 pt-3">
        <div class="left d-flex overflow-x">
            <div class="form-check">
                <input name="telegenenal" value="1" class="telegenenal form-check-input pr-2" type="radio" checked="checked">
                <label class="custom-control-label">@Local["Phát sinh dịch vụ/sản phẩm"]</label>
            </div>
            <div class="form-check ms-3">
                <input name="telegenenal" value="2" class="telegenenal form-check-input pr-2" type="radio">
                <label class="custom-control-label">@Local["Tag xử lý"]</label>
            </div>

            <div class="form-check ms-3">
                <input name="telegenenal" value="3" class="telegenenal form-check-input pr-2" type="radio">
                <label class="custom-control-label">@Local["Trạng thái gọi"]</label>
            </div>
            <div class="form-check ms-3">
                <input name="telegenenal" value="4" class="telegenenal form-check-input pr-2" type="radio">
                <label class="custom-control-label">@Local["Loại theo dõi"]</label>
            </div>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#TeleGridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return Telesource_Load()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return Telesource_Export()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="TeleGridArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive position-relative">
                <div id="TeleGridWaiting" class="position-absolute top-0 start-50 translate-middle-x waitingdiv text-center" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table name="TeleGridGeneral" class="table vt-table mb-0" id="TeleGrid">
                    <thead>
                        <tr role="row">
                            <th rowspan="3" colspan="1">@Local["#"]</th>
                            <th rowspan="3" colspan="1">@Local["Nguồn"]</th>
                            <th rowspan="1" colspan="4">@Local["Dữ liệu"]</th>
                            <th class="raise" rowspan="1" colspan="3">@Local["Lịch hẹn"]</th>
                            <th class="raise" rowspan="1" colspan="3">@Local["Tiền phát sinh"]</th>
                            <th class="tag" rowspan="1">@Local["Tag xử lý"]</th>
                            <th class="status" rowspan="1">@Local["Trạng thái gọi"]</th>
                            <th class="iscalled" rowspan="1">@Local["Theo dõi"]</th>
                        </tr>
                        <tr role="row">
                            <th rowspan="2">@Local["Số lượng"]</th>
                            <th rowspan="2">@Local["Số lượng mới"]</th>
                            <th rowspan="2">@Local["Số lượng được chia"]</th>
                            <th rowspan="2">@Local["Số lượng xử lý"]</th>
                            <th class="raise" rowspan="2">@Local["Số lượng"]</th>
                            <th class="raise" rowspan="2">@Local["Đã đến"]</th>
                            <th class="raise" rowspan="2">@Local["Chưa đến"]</th>
                            <th class="raise" rowspan="2">@Local["Tổng"]</th>
                            <th class="raise" rowspan="2">@Local["Ngày đầu"]</th>
                            <th class="raise" rowspan="2">@Local["Ngày sau"]</th>
                        </tr>
                        <tr role="row" class="detail">
                        </tr>
                    </thead>
                    <tbody id="TeleGridBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="TeleGridAppDetail" class="mt-0" style="display:none;">

    <div class="card card-plain">
        <div class="vtcardheader card-header p-0">
            <div class="left">
                <p id="TeleDetail_Title" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="wrap">
                    <div class="wrapblock">
                        <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                            <span id="TD_Currentdata">0</span>
                            <span class="mx-2">/</span>
                            <span id="TD_Totaldata">0</span>
                        </div>
                        <div class="icon-hover mx-1 mt-1"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Thu gọn"]">
                            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                               data-bs-toggle="collapse" href="#SourceTele_DetailDiv" aria-expanded="true"></i>
                        </div>
                        <div class="icon-hover mx-1 mt-1"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["In báo cáo"]">
                            <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                               onclick="event.preventDefault(); Telesource_DetailPrintReport()"></i>
                        </div>
                        <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                            <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Xuất excel"]">
                                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                            </div>
                            <div class="input-group-text icon-hover w-auto vttech-input-item">
                                <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Telesource_SerExportDetail(0)">@Local["Tất cả"]</i>
                            </div>
                            <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return Telesource_SerExportDetail(1)">@Local["Tùy chọn"]</i>
                            </div>
                        </div>
                        <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colListsser">
                            @Local["Xem thêm"]
                        </button>
                    </div> 
                </div>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsser" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="doccode" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã hồ sơ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="source" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="tele" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhân viên"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="sershtoogle form-check-input" data-name="group" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhóm nhân viên"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body p-0 pt-0 collapsesticky collapse show" id="SourceTele_DetailDiv">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <table data-name="SourceTele_Detail" class="table vt-table mb-0" id="SourceTele_Detail">
                    <thead>
                        <tr>
                            <th style="width: 60px">@Local["#"]</th>
                            <th>@Local["Mã khách hàng"]</th>
                            <th data-name="doccode">@Local["Mã hồ sơ"]</th>
                            <th>@Local["Khách hàng"]</th>
                            <th>@Local["Dịch vụ/sản phẩm"]</th>
                            <th>@Local["Số lượng"]</th>
                            <th>@Local["Giá tiền"]</th>
                            <th>@Local["Chi nhánh"]</th>
                            <th>@Local["Ngày đầu"]</th>
                            <th>@Local["Loại"]</th>
                            <th data-name="source">@Local["Nguồn khách hàng"]</th>
                            <th data-name="tele">@Local["Telesale"]</th>
                            <th data-name="group">@Local["Nhóm Tele"]</th>
                            <th>@Local["Ngày tạo"]</th>
                        </tr>
                    </thead>
                    <tbody id="SourceTele_DetailBody">
                    </tbody>
                </table>
            </div>
            <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return Telesource_SerRenderMore();">
                @Local["Xem thêm"]
            </button>
        </div>
    </div>
</div>


<script type="text/javascript">
    let xhrLoadList, xhrLoadDetail;
    let DataReportMain, DataReportMainSlice;
    let shtablemaster, shtableSer;
    let IndexReport = 0;
    let TLDataTag = [];
    let TLDataStatus = [];
    let TLDataCalled = [];
    let TLHeaderTag = [];
    let TLHeaderStatus = [];
    let TLHeaderCalled = [];
    $(document).ready(function () {
        shtablemaster = $("#TeleGrid").TableExpandColumn({
            shtoogle: $('.mastershtoogle')
        });
        shtableSer = $("#SourceTele_Detail").TableExpandColumn({
            shtoogle: $('.sershtoogle')
        });
        ToolPopper();
        Telesource_Load();
        Checking_TabControl_Permission();
    });
    function Telesource_Load() {
        TLDataTag = [];
        TLDataStatus = [];
        TLDataCalled = [];
        $('#TeleGrid .detail').html('');
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _staffID = "@Model._staffID";
        Telesource_Typeshow(1);
        xhrLoadList = AjaxLoad(url = "/Report/Telesale/SourceGeneral/?handler=Loadata"
            , data = {
                'dateFrom': _dateFrom
                , 'dateTo': _dateTo
                , 'staffID': _staffID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let datas = JSON.parse(result);
                    let data = datas["Table"];
                    TLDataTag = datas["Table1"];
                    TLDataStatus = datas["Table2"];
                    TLDataCalled = datas["Table3"];
                    TLHeaderTag = datas["Table4"];
                    TLHeaderStatus = datas["Table5"];
                    TLHeaderCalled = datas["Table6"];
                    Telesource_RenderHeader(TLHeaderTag, "TeleGrid", classname = 'tag');
                    Telesource_RenderHeader(TLHeaderStatus, "TeleGrid", classname = 'status');
                    Telesource_RenderHeader(TLHeaderCalled, "TeleGrid", classname = 'iscalled');
                    Telesource_Executed(data, "TeleGridBody");
                } else if (result == "[]") {

                } else {
                    notiError_SW();
                }
            }
            , sender = null,
            before = function (e) {
                $("#TeleGridWaiting").show();
                $("#SourceGendiv").addClass('opacity-0');

            },
            complete = function (e) {
                $("#TeleGridWaiting").hide();
                $("#SourceGendiv").removeClass('opacity-0');
            }
        );
        return false;
    }

    async function Telesource_Executed(data, id) {
        new Promise((resolve) => {
            let App = 0, AppChecked = 0, AppNot = 0;
            let TotalTicket = 0, TicketCreate = 0, TicketDevide = 0;
            let Amount = 0, AmountFirst = 0, AmountNotFirst = 0;
            let NumExecuted = 0;
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    //#region // Count Total
                    App = App + item.App;
                    AppChecked = AppChecked + item.AppChecked;
                    AppNot = AppNot + item.AppNot;
                    TotalTicket = TotalTicket + item.TotalTicket;
                    TicketCreate = TicketCreate + item.TicketCreate;
                    TicketDevide = TicketDevide + item.TicketDevide;
                    Amount = Amount + item.Amount;
                    AmountFirst = AmountFirst + item.AmountFirst;
                    AmountNotFirst = AmountNotFirst + item.AmountNotFirst;
                    NumExecuted = NumExecuted + item.NumExecuted;
                    //#endregion
                }
                let e = {};
                e.App = App; e.AppChecked = AppChecked; e.AppNot = AppNot;
                e.TotalTicket = TotalTicket; e.TicketCreate = TicketCreate; e.TicketDevide = TicketDevide;
                e.Amount = Amount; e.AmountFirst = AmountFirst; e.AmountNotFirst = AmountNotFirst;
                e.NumExecuted = NumExecuted;
                data.push(e);
                Telesource_Render(data, id);
            }
            let dataFirst = [{ 'Name': decodeHtml('@Local["Ngày đầu"]'), 'Amount': AmountFirst }, { 'Name': decodeHtml('@Local["Ngày sau"]'), 'Amount': AmountNotFirst }];
            let dataApp = [{ 'Name': decodeHtml('@Local["Đã đến"]'), 'Amount': AppChecked }, { 'Name': decodeHtml('@Local["Chưa đến"]'), 'Amount': AppNot }];

            ReportPie_Description(dataFirst, 'Name', 'Amount', 'SourceGenFirstList');
            rp_pie("SourceGenFirst", dataFirst, 'Name', 'Amount');
            $("#SourceGenFirstTotal").html(formatNumberToMilion(Number(Amount)));

            ReportPie_Description(dataApp, 'Name', 'Amount', 'SourceGenAppList');
            rp_pie("SourceGenApp", dataApp, 'Name', 'Amount');
            Count_Up("SourceGenAppTotal", App);


            let Total = 0;
            for (let i = 0; i < TLHeaderCalled.length; i++) {
                Total += Number(TLHeaderCalled[i]['Total']);
            }
            ReportPie_Description(TLHeaderCalled, 'Name', 'Total', 'TeleCalledList');
            rp_pie("TeleCalledPie", TLHeaderCalled, 'Name', 'Total');
            Count_Up("TeleCalledTotal", Total);

        })
    }
    function Telesource_RenderHeader(data, id) {
        var myNode = $('#' + id + ' .detail')[0];
        var myNodeParent = $('#' + id + ' .' + classname)[0];
        if (myNode != null) {
            let stringContent = '';
            if (data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    stringContent = stringContent + `<th style="min-width:120px;" class="${classname}">${data[i].Name}</th >`;
                }
                myNode.innerHTML = myNode.innerHTML + stringContent;
                myNodeParent.setAttribute("colspan", data.length);
            }
            else myNodeParent.classList.add("d-none");

        }

    }
    async function Telesource_Render(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    let ttag = [];
                    let tstatus = [];
                    let tcaller = [];
                    let sourcename = '';
                    let classname = '';
                    let index = '';
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        if (data.length > 1 && i == data.length - 1) {
                            sourcename = `<td>
                                                        <a href="#" class="cursor-pointer border-white text-white border-1 border-primary border-bottom buttonViewClass" data-source="0">
    @Local["Tất cả"]
                                                        </a></td>`;
                            classname = 'text-white border-white bg-gradient bg-primary';
                            index = `<td></td>`;
                        }
                        else {
                            sourcename = `<td rowspan=${item.Teleingroup}>
                                                        <a href="#" class="cursor-pointer border-1 border-primary border-bottom buttonViewClass" data-sourcename="${item.SourceName}" data-source="${item.Source}">
                                                            ${item.SourceName}
                                                        </a></td>`;
                            classname = 'vt-number';
                            index = '<td class="vt-number-order"></td>';
                        }
                        let tr = `
                                                    ${index}
                                                    ${sourcename}
                                                    <td>${formatNumber(item.TotalTicket)}</td>
                                                    <td>${formatNumber(item.TicketCreate)}</td>
                                                    <td>${formatNumber(item.TicketDevide)}</td>
                                                    <td>${formatNumber(item.NumExecuted)}</td>
                                                    <td class="raise">${formatNumber(item.App)}</td>
                                                    <td class="raise">${formatNumber(item.AppChecked)}</td>
                                                    <td class="raise">${formatNumber(item.AppNot)}</td>
                                                    <td class="raise">${formatNumber(item.Amount)}</td>
                                                    <td class="raise">${formatNumber(item.AmountFirst)}</td>
                                                    <td class="raise">${formatNumber(item.AmountNotFirst)}</td>
                                                    `;

                        for (let j = 0; j < TLHeaderTag.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataTag.filter(v => v.TagID === TLHeaderTag[j].ID);
                            else _item = TLDataTag.filter(v => v.TagID === TLHeaderTag[j].ID && v.Source === item.Source);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="tag">' + formatNumber(sum) + '</td>'
                            ttag[j] = (ttag[j] != undefined ? ttag[j] : 0) + sum;
                        }
                        for (let j = 0; j < TLHeaderStatus.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataStatus.filter(v => v.StatusCallID === TLHeaderStatus[j].ID);
                            else _item = TLDataStatus.filter(v => v.StatusCallID === TLHeaderStatus[j].ID && v.Source === item.Source);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="status">' + formatNumber(sum) + '</td>'
                            tstatus[j] = (tstatus[j] != undefined ? tstatus[j] : 0) + sum;
                        }
                        for (let j = 0; j < TLHeaderCalled.length; j++) {
                            let _item;
                            if (data.length > 1 && i == data.length - 1)
                                _item = TLDataCalled.filter(v => v.CalledID === TLHeaderCalled[j].ID);
                            else _item = TLDataCalled.filter(v => v.CalledID === TLHeaderCalled[j].ID && v.Source === item.Source);
                            let sum = _item.map(item => item.NumTicket).reduce((prev, curr) => prev + curr, 0);
                            tr = tr + '<td class="iscalled">' + formatNumber(sum) + '</td>'
                            tcaller[j] = (tcaller[j] != undefined ? tcaller[j] : 0) + sum;
                        }
                        stringContent = stringContent + '<tr class="' + classname + '" role="row">' + tr + '</tr>';

                    }

                }
                document.getElementById(id).innerHTML = stringContent;
            }
            shtablemaster.Refresh();
            Telesource_Event();
            Telesource_Typeshow(1);
        })
    }

    //#region // DETAIL SOURCE
    function Telesourcedetail_Load(source) {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _staffID = "@Model._staffID";
        IndexReport = 0;
        $('#TD_Currentdata').html(0);
        $('#TD_Totaldata').html(0);
        xhrLoadDetail = AjaxLoad(url = "/Report/Telesale/SourceGeneral/?handler=LoadDetail"
            , data = {
                'source': source
                , 'dateFrom': _dateFrom
                , 'dateTo': _dateTo
                , 'staffID': _staffID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let dataser = JSON.parse(result);
                    DataReportMain = JSON.parse(JSON.stringify(dataser));
                    DataReportMainSlice = sliceIntoChunks(dataser, 200);
                    $("#SourceTele_DetailBody").empty();
                    fnRenderBlock(DataReportMainSlice[IndexReport], "SourceTele_DetailBody"
                        , blocknum = 200
                        , fnrender = Teledetail_SerRender
                        , fnsuccess = null
                    );
                    Count_Up("TD_Totaldata", DataReportMain.length);

                }
                else if (result == "[]") {
                    notiWarning('@Local["Không có dữ liệu"]!');
                }
                else {
                    notiError_SW();
                }
            }
        );
    }

    function Telesource_SerRenderMore() {
        IndexReport += 1;
        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
            fnRenderBlock(DataReportMainSlice[IndexReport], "SourceTele_DetailBody"
                , blocknum = 100
                , fnrender = Teledetail_SerRender
                , fnsuccess = null
            );
        }
    }
    async function Teledetail_SerRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let firstday = '', type;
                            if (item.FirstDay == 1) firstday = `<span class="text-primary fw-bold">@Local["Ngày đầu"]</span>`
                            else firstday = `<span class="text-secondary">@Local["Ngày sau"]</span>`
                            if (item.IsProduct == 1) type = `<span class="text-info fw-bold">@Local["Sản phẩm"]</span>`
                            else type = `<span class="text-success fw-bold">@Local["Dịch vụ"]</span>`

                            let tr = `
                                                      <tr class="vt-number">
                                                          <td class="vt-number-order"></td>
                                                          <td>
                                                              <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode}</a>
                                                          </td>
                                                          <td data-name="doccode">${item.DocCode}</td>
                                                          <td>${item.CustName}</td>
                                                          <td>${Telesource_Render_GetName(item.ServiceID)}</td>
                                                          <td>${item.Quantity}</td>
                                                          <td>${formatNumber(item.Amount)}</td>
                                                          <td>${item.BranchName}</td>
                                                          <td>${firstday}</td>
                                                          <td>${type}</td>
                                                          <td data-name="source">${item.SourceName}</td>
                                                          <td data-name="tele">${item.TeleName}</td>
                                                          <td data-name="group">${item.GroupName}</td>
                                                          <td>${ConvertDateTimeUTC_DMY(item.Created)}</td>
                                                      </tr>
                                                        `
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableSer.Refresh();
                Count_Up("TD_Currentdata", $("#" + id).children().length);
                resolve();
            }, 10)

        })
    }
    async function Telesource_SerExportDetail(isOption = 0) {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#TeleGridAppDetail');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='doccode']`)).is(":checked"),
                        data: ["@Local["Mã hồ sơ"]"]
                    },
                    "Service": ["@Local["Dịch vụ"]", (value, { ServiceID }) => {
                        return Telesource_Render_GetName(ServiceID);
                    }],
                    "Quantity": ["@Local["Số lượng"]"],
                    "Amount": ["@Local["Giá tiền"]"],
                    "SourceName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='source']`)).is(":checked"),
                        data: ["@Local["Nguồn"]"],
                    },
                    "TeleName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='tele']`)).is(":checked"),
                        data: ["@Local["Nhân viên"]"]
                    },
                    "GroupName": {
                        isShow: isAll || (eleContainer.find(`.sershtoogle[data-name='group']`)).is(":checked"),
                        data: ["@Local["Nhóm"]"]
                    },
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "IsProduct": ["@Local["Loại"]", (value, { IsProduct }) => {
                        return Telesource_Render_GetType(IsProduct);
                    }],
                    "FirstDay": ["@Local["Ngày đầu"]", (value, { FirstDay }) => {
                        return (FirstDay == 1 ? 'x' : '');
                    }],
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'SourceTele_DetailBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang['Hieu_qua_chi_tiet_nguon']);
                exportJsonToExcel(Outlang['Hieu_qua_chi_tiet_nguon'], DataReportMain, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function Telesource_DetailPrintReport() {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let _branchID = 0;
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustName": ["@Local["Khách hàng"]"],
                    "DocCode": ["@Local["Mã hồ sơ"]", {
                        isShow: $(`.sershtoogle[data-name='doccode']`).is(":checked")
                    }],
                    "Service": ["@Local["Dịch vụ"]", {
                        callbackRenderValue: (value, { ServiceID }) => {
                            return Telesource_Render_GetName(ServiceID);
                        }
                    }],
                    "Quantity": ["@Local["Số lượng"]"],
                    "Amount": ["@Local["Giá tiền"]"],
                    "SourceName": ["@Local["Nguồn"]", {
                        isShow: $(`.sershtoogle[data-name='source']`).is(":checked")
                    }],
                    "TeleName": ["@Local["Nhân viên"]", {
                        isShow: $(`.sershtoogle[data-name='tele']`).is(":checked")
                    }],
                    "GroupName": ["@Local["Nhóm nhân viên"]", {
                        isShow: $(`.sershtoogle[data-name='group']`).is(":checked")
                    }],
                    "BranchName": ["@Local["Chi nhánh"]"],
                    "IsProduct": ["@Local["Loại"]", {
                        callbackRenderValue: (value, { IsProduct }) => {
                            return Telesource_Render_GetType(IsProduct);
                        }
                    }],
                    "FirstDay": ["@Local["Ngày đầu"]", {
                        callbackRenderValue: (value, { FirstDay }) => {
                            return (FirstDay == 1 ? 'x' : '');
                        }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang['Hieu_qua_chi_tiet_nguon'], DataReportMain, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
    //#endregion

    //#region // Event
    function Telesource_Render_GetName(serid) {
        try {
            let result = (RP_DataService[serid] != undefined) ? RP_DataService[serid].Name : '';
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function Telesource_Render_GetType(isproduct) {
        try {
            let result = '';
            switch (isproduct) {
                case 1:
                    result = decodeHtml('@Local["Sản phẩm"]')
                    break;
                case 0:
                    result = decodeHtml('@Local["Dịch vụ"]')
                    break;
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function Telesource_Event() {
        $(".telegenenal").unbind().change(function () {
            let val = Number($(this).val());
            Telesource_Typeshow(val);

        })
        $("#TeleGridBody .buttonViewClass").unbind('click').on("click", function () {
            let source = $(this).attr('data-source');
            let sourcename = $(this).attr('data-sourcename');
            $("#TeleGridAppDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#TeleGridAppDetail").offset().top
            }, 300);
            if (source == "0") {
                $("#TeleDetail_Title").html('@Local["Tất cả"]');
            }
            else {
                $("#TeleDetail_Title").html(sourcename);

            }

            Telesourcedetail_Load(source);
        })
    }
    function Telesource_Typeshow(val) {
        switch (val) {
            case 1:
                $('#TeleGrid .raise').removeClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                break;
            case 2:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').removeClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                break;
            case 3:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').addClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').removeClass('d-none');

                break;
            case 4:
                $('#TeleGrid .raise').addClass('d-none');
                $('#TeleGrid .iscalled').removeClass('d-none');
                $('#TeleGrid .tag').addClass('d-none');
                $('#TeleGrid .status').addClass('d-none');
                break;
        }
    }
    function Telesource_Export() {
        syslog_ExpExcel('e', Outlang['Hieu_qua_nguon']);
        exportToExcel("TeleGrid", Outlang['Hieu_qua_nguon']);
    }

                            //#endregion

</script>

