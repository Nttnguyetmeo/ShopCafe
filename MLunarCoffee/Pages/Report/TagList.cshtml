@page
@model MLunarCoffee.Pages.Report.TagList
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12 px-0">
            <!--Master-->
            <div class="card card-plain">
                <div class="card-header pt-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <!-- #region header -->
                                <h6 class="mb-0">@Local["Tag báo cáo"]</h6>
                                <p class="text-sm mb-0">@Local["Danh sách tag"]</p>
                                <!-- #endregion -->
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1">
                            <button class="btn bg-gradient-primary btn-sm mt-1" onclick="AddNewReportTag()">@Local["Thêm mới"]</button>
                        </div>
                    </div>

                </div>

                <div class="card-body pt-2 ">

                    <!-- #region table-->
                    <div class="m-0 my-3 mobile-responsive">

                        <table class="table vt-table mb-0" id="dtContentReportTag">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width:20px;">@Local["#"]</th>
                                    <th>@Local["Tên tag"]</th>
                                    <th>@Local["Ngày tạo"]</th>
                                    <th style="width:20px;">@Local["Xử lí"]</th>

                                </tr>
                            </thead>
                            <tbody id="dtContentReportTagBody">
                            </tbody>
                        </table>
                    </div>
                    <!-- #endregion -->

                </div>

            </div>

        </div>
    </div>

</div>
<script type="text/javascript">

    function LoadTagAjax() {

        AjaxLoad(url = "/Report/TagList/?handler=Loadata"
            , data = {}
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                let ListTag = JSON.parse(result);
                RenderReportTagList(ListTag, "dtContentReportTagBody");
            });
        return false;
    }
    function RenderReportTagList(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order">'
                        + '<td>' + item.TagName + '</td>'

                        + '<td>' + item.Created + '</td>'
                        + '<td>' + RenderReportTagList_Button(item.ID, item.DeleteButton) + '</td>'

                    stringContent = stringContent + '<tr  class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function RenderReportTagList_Button(ID, DeleteButton) {
        let buttons = [];
        buttons.push('<button class="buttonGrid" value="' + ID + '"><i class="buttonEditClass vtt-icon vttech-icon-edit"></i></button>')

        // Delete
        if (DeleteButton == 1) {
            buttons.push('<button class="buttonGrid" value="'
                + ID
                + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>')

        }

        return Render_Button_Grid(buttons)

    }
    function DeleteReportTag(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteReportTag(id); }, function () { });
    }
    function ExecuteDeleteReportTag(id) {
        AjaxLoad(url = "/Report/TagList/?handler=DeleteItem"
            , data = { id: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    LoadTagAjax();
                } else {
                    notiError(result);
                }
            });

    }
    $(document).ready(function () {
        LoadTagAjax();
        $('#dtContentReportTag tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            EditReportTag(ID);
        });
        $('#dtContentReportTag tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteReportTag(ID)
        });
        $("#divReportViewDetail table").closest("table").parent().addClass("stickytable");
    });
    function AddNewReportTag() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Report/TagDetail" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function EditReportTag(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Report/TagDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>

