@page
@model MLunarCoffee.Pages.Report.Medicine.CustomerMedicineModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div id="CM_Container">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="left">
                <div class="vtcondition">
                    <a class="sign" data-open="Hiển thị" data-close="Thu gọn" data-bs-toggle="collapse" aria-expanded="true"></a>
                    <div class="fulllap collapse collapsesticky show">
                        <div class="d-lg-flex">
                            <div class="input-group col-w-400 py-1 p-lg-0 pe-lg-2" id="searchApp">
                                <span class="input-group-text"><i class="fas fa-search"></i></span>
                                <input id="CM_txtFilter" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm"] (@Local["Mã"], @Local["Tên"])">
                                <div class="input-group-text" id="CM_AreaBtnSearch">
                                    <i class="btn_clear fas fa-minus-circle opacity-1"></i>
                                    <div class="spinner-border spinner-border-sm d-none"></div>
                                </div>
                                <div class="input-group-text p-0">
                                    <div class="position-relative d-inline px-2">
                                        <a class="cursor-pointer px-2" data-bs-toggle="collapse" role="tab" data-bs-target="#colsearch" aria-expanded="true">
                                            <i class=" text-gradient text-primary fas fa-filter"></i>
                                        </a>
                                        <div class="collapsesticky position-absolute z-index-3 end-1 top-100 mt-1 collapse" id="colsearch" style="min-width: 285px; left: -244.344px;">
                                            <div class="card card-body text-dark text-capitalize opacity-10">
                                                <div class="col-12 mt-2">
                                                    <div class="ui fluid search selection dropdown form-control" id="CM_SellerID">
                                                        <input type="hidden" name="branch" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Bán thuốc"] (@Local["Nhân viên"])</div>
                                                        <div id="CM_cbbSellerID" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-12 mt-2">
                                                    <div class="ui fluid search selection dropdown form-control" id="CM_DocID">
                                                        <input type="hidden" name="branch" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Bác sĩ kê toa"]</div>
                                                        <div id="CM_cbbDocID" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-12 mt-2">
                                                    <div class="ui fluid search selection dropdown form-control" id="CM_CreatedID">
                                                        <input type="hidden" name="branch" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Người kê toa"]</div>
                                                        <div id="CM_cbbCreatedID" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-12 mt-2">
                                                    <div class="ui fluid search selection dropdown form-control" id="CM_DebtID">
                                                        <i class="remove icon"></i><i class="dropdown icon"></i>
                                                        <input type="hidden" name="branch" value="0">
                                                        <input class="search" autocomplete="off" tabindex="0">
                                                        <div class="text">@Local["Công nợ"]</div>
                                                        <div id="CM_cbbDebtID" class="menu transition hidden" tabindex="-1">
                                                            <div class="item active" data-value="0">@Local["Công nợ"]</div>
                                                            <div class="item" data-value="1">@Local["Có công nợ"]</div>
                                                            <div class="item" data-value="2">@Local["Không"]</div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <button class="btn btn-dark btn-sm mt-3 mb-2" onclick="CM_CloseFilter()">@Local["Đóng"]</button>
                                                <button class="btn btn-primary btn-sm" onclick="CM_Fillter()">@Local["Ok"]</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="right">
                <div class="wrap">
                    <div class="wrapblock mb-0 pb-0">
                        <div class="ms-auto my-auto d-flex align-items-center">
                            <div class="text-primary fw-bold d-inline me-2 text-nowrap mt-1">
                                <span id="CM_currentdata">0</span>
                                <span class="mx-2">/</span>
                                <span id="CM_totaldata">0</span>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Thu gọn"]">
                                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                                   data-bs-toggle="collapse" href="#CM_GridArea" aria-expanded="true"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Tải lại"]">
                                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); return CM_Load()"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["In báo cáo"]">
                                <i class="vtt-icon vttech-icon-print text-lg text-primary" onclick="CM_Print()"></i>
                            </div>
                            <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel" data-checkper="1">
                                <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Xuất excel"]">
                                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                                </div>
                                <div class="input-group-text icon-hover w-auto vttech-input-item">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return CM_Export(0)">@Local["Tất cả"]</i>
                                </div>
                                <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return CM_Export(1)">@Local["Tùy chọn"]</i>
                                </div>
                            </div>
                            <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle collapsed" data-bs-toggle="collapse" data-bs-target="#colListsMed" aria-expanded="false">
                                @Local["Xem thêm"]
                            </button>
                        </div> 
                    </div>
                </div>
            </div>
            <div class="toggle">
                <div class="position-absolute z-index-3 end-1 top-100 mt-2 collapse" id="colListsMed" style="min-width: 250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleMed form-check-input" data-name="seller" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Bán thuốc"] (@Local["Nhân viên"])</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleMed form-check-input" data-name="doctor" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Bác sĩ kê toa"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleMed form-check-input" data-name="createdby" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người kê toa"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleMed form-check-input" data-name="created" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày tạo"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="card-body pt-2 px-0">
            <div class="row mb-3 m-0">
                <div class="col-12 col-md-6 col-lg-4 px-0 pe-md-2">
                    <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                        <h6 class="text-sm text-primary text-gradient mb-0" data-fontchanged="true">@Local["Phát sinh"]</h6>
                        <h6 class="font-weight-bolder"> <span id="CM_TotalTarget">0</span></h6>
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-4 px-0 pe-lg-2">
                    <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                        <h6 class="text-sm text-primary text-gradient mb-0" data-fontchanged="true">@Local["Thanh toán"]</h6>
                        <h6 class="font-weight-bolder"> <span id="CM_TotalPayment">0</span></h6>
                    </div>
                </div>
                <div class="col-12 col-md-12 col-lg-4 px-0">
                    <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                        <h6 class="text-sm text-primary text-gradient mb-0" data-fontchanged="true">@Local["Công nợ"]</h6>
                        <h6 class="font-weight-bolder"> <span id="CM_TotalLeft">0</span></h6>
                    </div>
                </div>
            </div>
            <div class="collapsesticky collapse show" id="CM_GridArea">
                <div class="m-0 my-0 mobile-responsive vt-header-sticky">
                    <table data-name="CM_Grid" class="table vt-table mb-0" id="CM_Grid">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th class="d-none">ID</th>
                                <th>@Local["Khách hàng"]</th>
                                <th>@Local["Mã đơn thuốc"]</th>
                                <th>@Local["Tên đơn thuốc"]</th>
                                <th>@Local["Chi nhánh"]</th>
                                <th>@Local["Nguồn dịch vụ"]</th>
                                <th data-name="seller" class="no-sort vtt-filter">@Local["Bán thuốc"] (@Local["Nhân viên"])</th>
                                <th data-name="doctor" class="no-sort vtt-filter">@Local["Bác sĩ kê toa"]</th>
                                <th data-name="createdby" class="no-sort vtt-filter">@Local["Người kê toa"]</th>
                                <th data-name="created">@Local["Ngày tạo"]</th>
                                <th>@Local["Chẩn đoán"]</th>
                                <th>@Local["Phát sinh"]</th>
                                <th>@Local["Thanh toán"]</th>
                                <th>@Local["Công nợ"]</th>
                            </tr>
                        </thead>
                        <tbody id="CM_GridBody">
                        </tbody>
                    </table>
                </div>
                <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return CM_RenderMore();">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
</div>
<div id="CM_Detail" class="mt-3" style="display:none;">
    <div class="card card-plain">
        <div class="vtcardheader card-header p-0">
            <div class="left">
                <p id="CM_NameMedicine" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return CM_DetailExport()"></i>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="detailpres" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Kê toa"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ghi chú"]</p>
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <div class="collapsesticky collapse show" id="CM_icineDetail">
            <div class="card-body p-0">
                <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                    <table class="table vt-table mb-0" id="CM_GridDetail">
                        <thead>
                            <tr>
                                <th rowspan="2">#</th>
                                <th rowspan="2">@Local["Tên thuốc"]</th>
                                <th rowspan="2">@Local["Đơn giá"]</th>
                                <th rowspan="2">@Local["Số lượng"]</th>
                                <th rowspan="2">@Local["Đơn vị"]</th>
                                <th rowspan="1" colspan="3" data-name="detailpres">@Local["Kê toa"]</th>
                                <th rowspan="1" colspan="3" data-name="note">@Local["Ghi chú"]</th>
                            </tr>
                            <tr>
                                <th rowspan="1" data-name="detailpres">@Local["Tên thuốc"]</th>
                                <th rowspan="1" data-name="detailpres">@Local["Số lượng"]</th>
                                <th rowspan="1" data-name="detailpres">@Local["Đơn vị"]</th>
                                <th rowspan="1" data-name="note">@Local["Sáng"]</th>
                                <th rowspan="1" data-name="note">@Local["Trưa"]</th>
                                <th rowspan="1" data-name="note">@Local["Tối"]</th>
                            </tr>
                        </thead>
                        <tbody id="CM_GridDetailBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    let xhrLoadList, xhrLoadDetail;
    let DataReportMainSlice;
    let IndexReport = 0;
    let CM_TimeOutCount;
    let _branchID = "@Model._BranchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let CM_DataMain = [];
    let shtable, shtablemed;
    let CM_Timer;
    $(document).ready(function () {
        $('#CM_Grid').tablecontrol();
        shtable = $("#CM_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        shtablemed = $("#CM_Grid").TableExpandColumn({
            shtoogle: $('.shtoogleMed')
        });
                let dataEmp = Object.values(RP_DataEmployee);
        Load_Combo(dataEmp, "CM_cbbSellerID", false, '@Local["Bán hàng"]');
        $("#CM_SellerID").dropdown("refresh");
        $("#CM_SellerID").dropdown("set selected", "0");

        Load_Combo(dataEmp, "CM_cbbCreatedID", false, '@Local["Người tạo"]');
        $("#CM_CreatedID").dropdown("refresh");
        $("#CM_CreatedID").dropdown("set selected", "0");

        let dataDoc = dataEmp.filter(e => e.GroupID == 14);

        Load_Combo(dataDoc, "CM_cbbDocID", false, '@Local["Bác sĩ kê toa"]');
        $("#CM_DocID").dropdown("refresh");
        $("#CM_DocID").dropdown("set selected", "0");
        CM_Load();
    })
    //#region //Load
    function CM_Load() {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        let _branchID = "@Model._BranchID";
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";

        IndexReport = 0;
        $("#CM_GridBody").empty();
        CM_DataMain = [];

        $("#CM_SellerID").dropdown("refresh");
        $("#CM_SellerID").dropdown("set selected", "0");

        $("#CM_CreatedID").dropdown("refresh");
        $("#CM_CreatedID").dropdown("set selected", "0");

        $("#CM_DocID").dropdown("refresh");
        $("#CM_DocID").dropdown("set selected", "0");

        $("#CM_DebtID").dropdown("refresh");
        $("#CM_DebtID").dropdown("set selected", "0");
        xhrLoadList = AjaxLoad(url = "/Report/Medicine/CustomerMedicine/?handler=Loadata"
            , data = {
                'BranchID': _branchID
                , 'dateFrom': _dateFrom
                , 'dateTo': _dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data && data.length != 0) {
                        CM_LoadTotal(data);
                        CM_DataMain = JSON.parse(JSON.stringify(data));
                        DataReportMainSlice = sliceIntoChunks(JSON.parse(result), 500);
                        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
                            fnRenderBlock(DataReportMainSlice[IndexReport], "CM_GridBody"
                                , blocknum = 100
                                , fnrender = CM_Render
                                , fnsuccess = null
                            );
                        }
                        Count_Up("CM_totaldata", data.length);
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }
    async function CM_LoadTotal(data) {
        new Promise(resolve => {
            let totalPrice = 0, totalAmount = 0, totalDemand = 0;
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    totalPrice += data[i].MedPrice;
                    totalAmount += data[i].MedAmount;
                }
            }
            totalDemand = Number(totalPrice) - Number(totalAmount);
            Count_Up("CM_TotalTarget", totalPrice, 1);
            Count_Up("CM_TotalPayment", totalAmount, 1);
            Count_Up("CM_TotalLeft", totalDemand, 1);
            resolve();
        })
    }

    function CM_RenderMore() {
        IndexReport += 1;
        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
            fnRenderBlock(DataReportMainSlice[IndexReport], "CM_GridBody"
                , blocknum = 100
                , fnrender = CM_Render
                , fnsuccess = null
            );
        }
    }

    //#endregion


    //#region //Render
    async function CM_Render(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr =
                                `<td class="vt-number-order"></td>
                                    <td class="d-none">${item.ID}</td>
                                    <td>
                                        <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CusID}&ver=${versionofWebApplication}">
                                            ${item.CusCode} ${item.CustOldCode != '' ? `<span class="text-secondary text-sm ps-1">${item.CustOldCode}</span>` : ''}
                                        </a><br/>
                                        <span>${item.CusName}</span>
                                    </td>
                                    <td class=""><a class="border-1 border-primary border-bottom buttonViewDetail" data-id="${item.ID}" data-code="${item.MedCode}">${item.MedCode}</a></td>
                                    <td>${item.MedName}</td>
                                    <td>${item.BranchName}</td>
                                    <td>${item.SourceName}</td>
                                    <td data-name="seller">${Fun_GetName_ByID(RP_DataEmployee, item.SellerID)}</td>
                                    <td data-name="doctor">${Fun_GetName_ByID(RP_DataEmployee, item.DocID)}</td>
                                    <td data-name="createdby">${Fun_GetName_ByID(RP_DataEmployee, item.CreatedBy)}</td>
                                    <td data-name="created">${ConvertDateTimeUTC_DMY(ConvertToDateRemove1900(item.Created))}</td>
                                    <td>${item.Diagnosis}</td>
                                    <td>${formatNumber(item.MedPrice)}</td>
                                    <td>${formatNumber(item.MedAmount)}</td>
                                    <td>${formatNumber(item.MedPrice - item.MedAmount)}</td>
                                    `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        clearTimeout(CM_TimeOutCount);
                        CM_TimeOutCount = setTimeout(() => {
                            Count_Up("CM_currentdata", $("#" + id).children().length);
                        })
                    }
                    shtablemed.Refresh();
                    $('#CM_Grid').tablesort();
                    CM_Event();
                }
            }, 100);
            resolve();
        })
    }

    //#endregion

    //#region //Event

    function CM_Event() {
        $("#CM_GridBody .buttonViewDetail").unbind("click").click(function () {
            let ID = $(this).attr('data-id');
            let Code = $(this).attr('data-code');

            $("#CM_Detail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#CM_Detail").offset().top
            }, 300);
            $("#CM_NameMedicine").html(Code);

            CM_DetailLoad(ID);
        })
        $("#CM_txtFilter").on("keyup", function () {
            clearTimeout(CM_Timer);
            $("#CM_AreaBtnSearch .btn_clear").addClass('d-none');
            $("#CM_AreaBtnSearch .spinner-border").removeClass('d-none');
            CM_Timer = setTimeout(() => {
                CM_Fillter();
            }, 500);
        })

        $("#CM_AreaBtnSearch .btn_clear").on("click", function () {
            $("#CM_txtFilter").val("");
            CM_Fillter();
        })
    }
    function CM_CloseFilter() {
        $('#colsearch').collapse('hide');
    }

    function CM_Fillter() {
        if (CM_DataMain && CM_DataMain.length > 0) {
            let _Dt = [...CM_DataMain];
            let sellerID = $("#CM_SellerID").dropdown("get value") ? Number($("#CM_SellerID").dropdown("get value")) : 0;
            let docID = $("#CM_DocID").dropdown("get value") ? Number($("#CM_DocID").dropdown("get value")) : 0;
            let createdBy = $("#CM_CreatedID").dropdown("get value") ? Number($("#CM_CreatedID").dropdown("get value")) : 0;
            let debtid = $("#CM_DebtID").dropdown("get value") ? Number($("#CM_DebtID").dropdown("get value")) : 0;
            let SearchText = $("#CM_txtFilter").val() ? xoa_dau($("#CM_txtFilter").val()).toLowerCase().trim() : '';

            if (sellerID != 0) {
                _Dt = _Dt.filter((item) => { return (item?.SellerID ?? -1) == sellerID });
            }
            if (docID != 0) {
                _Dt = _Dt.filter((item) => { return (item?.DocID ?? -1) == docID });
            }
            if (createdBy != 0) {
                _Dt = _Dt.filter((item) => { return (item?.CreatedBy ?? -1) == createdBy });
            }
            if (debtid != 0) {
                _Dt = _Dt.filter((item) => {
                    let debt = Number(item?.MedPrice ?? 0) - Number(item?.MedAmount ?? 0);
                    return (debtid == 1 && debt > 0) || (debtid == 2 && debt <= 0)
                });
            }
            if (SearchText != '' && SearchText.length > 3) {
                _Dt = _Dt.filter((item) => {
                    return ((xoa_dau(item["CusCode"])).toLowerCase().trim().includes(SearchText)
                        || (xoa_dau(item["CusName"])).toLowerCase().trim().includes(SearchText)
                        || (xoa_dau(item["MedCode"])).toLowerCase().trim().includes(SearchText)
                        || (xoa_dau(item["MedName"])).toLowerCase().trim().includes(SearchText)

                    )
                })
            }
            $("#CM_AreaBtnSearch .btn_clear").removeClass('d-none');
            $("#CM_AreaBtnSearch .spinner-border").addClass('d-none');
            if (SearchText == '' || SearchText.length > 3) {
                IndexReport = 0;
                $("#CM_GridBody").empty();
                Count_Up("CM_totaldata", _Dt.length);
                $("#CM_currentdata").html(0);
                CM_LoadTotal(_Dt);
                DataReportMainSlice = sliceIntoChunks(_Dt, 500);
                if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
                    fnRenderBlock(DataReportMainSlice[IndexReport], "CM_GridBody"
                        , blocknum = 100
                        , fnrender = CM_Render
                        , fnsuccess = null
                    );
                }


            }
        }
    }
    //#endregion

    //#region // Export - Print
    function CM_Export(isOption = 0) {
        try {
            if (CM_DataMain && CM_DataMain.length != 0) {

                let isAll = (isOption == 0);
                let eleContainer = $('#CM_GridArea');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": ["@Local["Mã khách hàng cũ"]"]
                    , "CusName": ["@Local["Tên khách hàng"]"]
                    , "MedCode": ["@Local["Mã đơn thuốc"]"]
                    , "MedName": ["@Local["Tên đơn thuốc"]"]
                    , "BranchName": ["@Local["Chi nhánh"]"]
                    , "SourceName": ["@Local["Nguồn dịch vụ"]"]
                    , "SellerID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleMed[data-name='seller']`)).is(":checked"),
                        data: ["@Local["Bán thuốc"]", (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }]
                    }
                    , "DocID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleMed[data-name='doctor']`)).is(":checked"),
                        data: ["@Local["Bác sĩ kê toa"]", (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }]
                    }
                    , "CreatedBy": {
                        isShow: isAll || (eleContainer.find(`.shtoogleMed[data-name='createdby']`)).is(":checked"),
                        data: ["@Local["Người kê toa"]", (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }]
                    }
                    , "Created": {
                        isShow: isAll || (eleContainer.find(`.shtoogleMed[data-name='created']`)).is(":checked"),
                        data: ["@Local["Ngày tạo"]", (v) => { return ConvertDateTimeUTC_DMY(v) }]
                    }
                    , "Diagnosis": ["@Local["Chẩn đoán"]"]
                    , "MedPrice": ["@Local["Phát sinh"]"]
                    , "MedAmount": ["@Local["Thanh toán"]"]
                    , "AmountLeft": ["@Local["Còn lại"]", (v, { MedPrice, MedAmount }) => { return Number(MedPrice) - Number(MedAmount) }]
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'CM_Grid', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang["Sys_don_thuoc_khach_hang"]);
                exportJsonToExcel((Outlang["Sys_don_thuoc_khach_hang"] != undefined ? Outlang["Sys_don_thuoc_khach_hang"] : "Đơn thuốc khách hàng"), CM_DataMain, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }

    async function CM_Print() {
        try {
            let dataRoot = CM_DataMain;
            if (dataRoot && dataRoot.length != 0) {
                let _branchID = "@Model._BranchID";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, idx) => { return idx + 1 }
                    }]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": ["@Local["Mã khách hàng cũ"]"]
                    , "CusName": ["@Local["Tên khách hàng"]"]
                    , "MedCode": ["@Local["Mã đơn thuốc"]"]
                    , "MedName": ["@Local["Tên đơn thuốc"]"]
                    , "BranchName": ["@Local["Chi nhánh"]"]
                    , "SourceName": ["@Local["Nguồn dịch vụ"]"]
                    , "SellerID": ["@Local["Bán thuốc"]", {
                        isShow: $(`.shtoogleMed[data-name='seller']`).is(":checked"),
                        callbackRenderValue: (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }
                    }]
                    , "DocID": ["@Local["Bác sĩ kê toa"]", {
                        isShow: $(`.shtoogleMed[data-name='doctor']`).is(":checked"),
                        callbackRenderValue: (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }
                    }]
                    , "CreatedBy": ["@Local["Người kê toa"]", {
                        isShow: $(`.shtoogleMed[data-name='createdby']`).is(":checked"),
                        callbackRenderValue: (v) => { return Fun_GetName_ByID(RP_DataEmployee, v) }
                    }]
                    , "Created": ["@Local["Ngày tạo"]", {
                        isShow: $(`.shtoogleMed[data-name='created']`).is(":checked"),
                        callbackRenderValue: (v) => { return ConvertDateTimeUTC_DMY(v) }
                    }]
                    , "Diagnosis": ["@Local["Chẩn đoán"]"]
                    , "MedPrice": ["@Local["Phát sinh"]"]
                    , "MedAmount": ["@Local["Thanh toán"]"]
                    , "AmountLeft": ["@Local["Còn lại"]", {
                        callbackRenderValue: (v, { MedPrice, MedAmount }) => { return Number(MedPrice) - Number(MedAmount) }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = '@Local["Đơn thuốc khách hàng"]', dataRoot, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
    //#endregion


    //#region //Detail Medicine

    function CM_DetailLoad(ID) {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();

        $("#CM_GridDetailBody").empty("");
        xhrLoadDetail = AjaxLoad(url = "/Report/Medicine/CustomerMedicine/?handler=LoadataDetail"
            , data = {
                'ID': ID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data && data.length > 0) {
                        fnRenderBlock(data, "CM_GridDetailBody"
                            , blocknum = 100
                            , fnrender = CM_DetailRender
                            , fnsuccess = null
                        );
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
    }

    async function CM_DetailRender(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length != 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = `
                                    <tr class="vt-number">
                                        <td class="vt-number-order"></td>
                                        <td>${item.ProductName}</td>
                                        <td>${formatNumber(item.Price)}</td>
                                        <td>${item.Quantity}</td>
                                        <td>${item.UnitName}</td>
                                        <td data-name="detailpres">${item.PresMedicineName}</td>
                                        <td data-name="detailpres">${item.PresQuantity}</td>
                                        <td data-name="detailpres">${item.PresUnitName}</td>
                                        <td data-name="note">${item.Dosage1}</td>
                                        <td data-name="note">${item.Dosage2}</td>
                                        <td data-name="note">${item.Dosage3}</td>
                                    </tr>
                                    `
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
                shtable.Refresh();
            }
            resolve();

        })
    }

    async function CM_DetailExport() {
        let fileName = xoa_dau($("#CM_NameMedicine").text()).replaceAll(' ', '-');
        syslog_ExpExcel('e', fileName);
        await exportToExcel("CM_GridDetail", fileName);
    }

        //#endregion
</script>
