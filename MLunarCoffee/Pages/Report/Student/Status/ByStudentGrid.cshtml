@page
@model MLunarCoffee.Pages.Report.Student.Status.ByStudentGridModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="collapsesticky collapse show" id="SSBStu_General">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="text-md text-dark font-weight-bold mb-1">@Local["Tình trạng học viên"]</h6>

        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#SSBStu_GeneralDiv" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return SSBStu_LoadData()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return SSBStu_Export()"></i>
            </div>
        </div>
    </div>
    <div class="card-body p-0 pt-0 collapsesticky collapse show" id=SSBStu_GeneralDiv>
        <div class="m-0 my-3 mobile-responsive">
            <div id="SSBStu_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <table class="table vt-table mb-0" id="SSBStu_Grid">
                <thead>
                    <tr>
                        <th style="width: 60px">#</th>
                        <th>@Local["Học viên"]</th>
                        <th>@Local["Tổng khóa học"]</th>
                        <th>@Local["Tổng học phí"]</th>
                        <th>@Local["Tổng thanh toán"]</th>
                        <th>@Local["Tổng buổi học"]</th>
                        <th>@Local["Tiền còn nợ"]</th>
                    </tr>
                </thead>
                <tbody id="SSBStu_GridBody">
                </tbody>
            </table>
        </div>
    </div>
</div>
<div id="SSBStuDetailByClass_Container" style="display:none;">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="SSBStuDetailByClass_Title" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#SSBStuDetailByClass_DivArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return SSBStuDetailByClass_Loaddata()"></i>
            </div>
            <div class="icon-hover mx-1 my-auto"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return SSBStuDetailByClass_Export()"></i>
            </div>
            <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                @Local["Xem thêm"]
            </button>
        </div>
        <div class="toggle">
            <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                <ul class="card card-body text-dark text-capitalize opacity-10">
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="certificate" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chứng chỉ"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="revestatus" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Tình trạng"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="levelstatus" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Đánh giá"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="branch" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Chi nhánh"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="created" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Ngày ghi danh"]</p>
                    </li>
                    <li class="d-flex">
                        <div class="form-check form-switch">
                            <input class="shtoogleDetailByClass form-check-input" data-name="createdby" type="checkbox">
                        </div>
                        <p class="text-sm">@Local["Người ghi danh"]</p>
                    </li>
                </ul>
            </div>

        </div>
    </div>
    <div class="collapsesticky collapse show" id="SSBStuDetailByClass_DivArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <div id="SSBStuDetailByClass_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table data-name="SSBStuDetailByClass_Grid" class="table vt-table mb-0" id="SSBStuDetailByClass_Grid">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th style="min-width: 140px">@Local["Khóa học"]</th>
                            <th data-name="certificate" style="min-width: 140px">@Local["Chứng chỉ"]</th>
                            <th data-name="revestatus" style="min-width: 140px">@Local["Tình trạng"]</th>
                            <th data-name="levelstatus" style="min-width: 140px">@Local["Đánh giá"]</th>
                            <th style="min-width: 220px">@Local["Môn học"]</th>
                            <th style="min-width: 140px">@Local["Học phí"]</th>
                            <th style="min-width: 170px">@Local["Học phí đã đóng"]</th>
                            <th style="min-width: 170px">@Local["Tiền còn nợ"]</th>
                            <th style="min-width: 170px">@Local["Thời gian bắt đầu"]</th>
                            <th style="min-width: 170px">@Local["Thời gian kết thúc"]</th>
                            <th style="min-width: 170px">@Local["Số buổi học"]</th>
                            <th style="min-width: 170px">@Local["Số buổi đã học"]</th>
                            <th style="min-width: 160px" data-name="branch">@Local["Chi nhánh"]</th>
                            <th style="min-width: 160px" data-name="created">@Local["Ngày ghi danh"]</th>
                            <th style="min-width: 160px" data-name="createdby">@Local["Người ghi danh"]</th>
                        </tr>
                    </thead>
                    <tbody id="SSBStuDetailByClass_GridBody">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<div id="SSBStuDetail_Container" style="display:none;">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="SSBStuDetail_Title" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#SSBStuDetail_DivArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return SSBStuDetail_Loaddata()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return SSBStuDetail_Export()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="SSBStuDetail_DivArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <div id="SSBStuDetail_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <table data-name="SSBStuDetailByClass_Grid" class="table vt-table mb-0" id="SSBStuDetail_Grid">
                    <thead>
                        <tr>
                            <th style="width: 60px">#</th>
                            <th style="min-width: 140px">@Local["Mã học viên"]</th>
                            <th style="min-width: 140px">@Local["Học viên"]</th>
                            <th style="min-width: 170px" data-name="timestart">@Local["Thời gian bắt đầu"]</th>
                            <th style="min-width: 170px" data-name="timeend">@Local["Thời gian kết thúc"]</th>
                            <th style="min-width: 170px" data-name="teacher">@Local["Giáo viên"]</th>
                            <th style="min-width: 170px">@Local["Phòng học"]</th>
                            <th style="min-width: 190px">@Local["Trạng thái buổi học"]</th>
                            <th style="min-width: 140px">@Local["Điểm danh"]</th>
                            <th style="min-width: 140px">@Local["Đánh giá"]</th>
                        </tr>
                    </thead>
                    <tbody id="SSBStuDetail_GridBody">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<script type="text/javascript">
    let _branchID = "@Model._branchID";
    let _dateFrom = "@Model._dateFrom";
    let _dateTo = "@Model._dateTo";
    let xhrLoadList, xhrLoadDetail;
    let DataReportMainDetail;
    let SSBStu_StudentID = 0;
    let SSBStu_ClassID = 0;
    let shtableDetailByClass;
    $(document).ready(function ()
    {
        ToolPopper();
        SSBStu_LoadData();
        shtableDetailByClass = $("#SSBStuDetailByClass_Grid").TableExpandColumn({
            shtoogle: $('.shtoogleDetailByClass')
        });
        Checking_TabControl_Permission();
    });
    function SSBStu_LoadData()
    {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Student/Status/ByStudentGrid/?handler=Loadata"
            , data = {
                'branchID': _branchID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    $("#SSBStu_GridBody").empty();
                    SSBStu_Render(data, "SSBStu_GridBody");
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#SSBStu_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#SSBStu_LoaderList").hide();
            }
        );
        return false;
    }

    async function SSBStu_Render(data, id)
    {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            if (data && data.length != 0) {
                let tr = '';
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    //calc total
                    tr = `<tr class="vt-number" role="row">
                                  <td class="vt-number-order"></td>
                                  <td>
                                      <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.StudentID}" data-name="${item.StudentName}">
                                         ${item.StudentName}
                                      </a>
                                  </td>
                                  <td>${formatNumber(item.TotalCourse)}</td>
                                  <td>${formatNumber(item.TotalTutuition)}</td>
                                  <td>${formatNumber(item.TotalPayment)}</td>
                                  <td>${formatNumber(item.TotalLesson)}</td>
                                  <td>${formatNumber(item.TotalTutuition - item.TotalPayment)}</td>
                              </tr>`;
                    myNode.insertAdjacentHTML('beforeend', tr);
                }
                SSBStu_GeneralEvent();
            }
        }
    }
    //#region // LOAD DETAIL BY CLASS AND RENDER
    function SSBStuDetailByClass_Loaddata()
    {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Student/Status/ByStudentGrid/?handler=LoadataDetailByClass"
            , data = {
                'branchID': _branchID,
                'studentID': SSBStu_StudentID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    DataReportMainDetail = JSON.parse(JSON.stringify(data));
                    $('#SSBStuDetailByClass_GridBody').empty();
                    if (DataReportMainDetail && DataReportMainDetail.length != 0) {
                        fnRenderBlock(DataReportMainDetail, "SSBStuDetailByClass_GridBody"
                            , blocknum = 100
                            , fnrender = SSBStuDetailByClass_Render
                            , fnsuccess = null
                        );
                    }
                }
                else if (result == "0") {
                    notiWarning();
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#SSBStuDetailByClass_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#SSBStuDetailByClass_LoaderList").hide();
            }
        );
    }

    async function SSBStuDetailByClass_Render(data, id)
    {
        new Promise((resolve) =>
        {
            setTimeout(() =>
            {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        let countGroup = 0;
                        let count = 1;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let createdName = RP_DataEmployee[item.CreatedBy] != undefined ? RP_DataEmployee[item.CreatedBy].Name : 'unknown';
                            let td = '';

                            if (i == 0 || item.CourseID != data[i - 1]?.CourseID) {
                                if (i != 0) {
                                    $(`.SSBStuRowGroup_${data[i - 1]?.CourseID}`).attr('rowspan', countGroup);
                                }
                                td = `<td class="SSBStuRowGroup_${item.CourseID}">${count}</td>
                                      <td class="SSBStuRowGroup_${item.CourseID}">${item.Course}</td>
                                      <td data-name="certificate" class="SSBStuRowGroup_${item.CourseID}">${item.IsCer == 1 ? `${item.CerName} - ${ConvertDateTimeUTC_DMY(item.CerDate)}` : ``}</td>
                                      <td data-name="revestatus" class="SSBStuRowGroup_${item.CourseID}">${item.ReviStatus}</td>
                                      <td data-name="levelstatus" class="SSBStuRowGroup_${item.CourseID}">${item.LevelStatus}</td>
                                      `;
                                count++;
                                countGroup = 0;
                            }
                            countGroup++;
                            if (i == data.length - 1) {
                                $(`.SSBStuRowGroup_${data[i - 1]?.CourseID}`).attr('rowspan', countGroup);
                            }
                            let tr = `<tr class="vt-number" role="row">
                                          ${td}
                                          <td>
                                              <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.ClassID}" data-name="${item.Subject}">
                                                 ${item.Subject}
                                              </a>
                                          </td>
                                          <td>${formatNumber(item.Tutuition)}</td>
                                          <td>${formatNumber(item.TotalPayment)}</td>
                                          <td>${formatNumber(item.Tutuition - item.TotalPayment)}</td>
                                          <td>${ConvertYMDInt_ToDate(item.TimeBegin)}</td>
                                          <td>${ConvertYMDInt_ToDate(item.TimeEnd)}</td>
                                          <td>${formatNumber(item.TotalLesson)}</td>
                                          <td>${formatNumber(item.LearntLesson)}</td>
                                          <td data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>
                                          <td data-name="created">${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                          <td data-name="createdby">${createdName}</td>
                                          </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableDetailByClass.Refresh();
                SSBStuDetailByClass_Event();
                resolve();
            }, 10)
        })
    }

    //#endregion

    //#region // LOAD DETAIL AND RENDER
    function SSBStuDetail_Loaddata()
    {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        xhrLoadDetail = AjaxLoad(url = "/Report/Student/Status/ByStudentGrid/?handler=LoadataDetail"
            , data = {
                'branchID': _branchID,
                'studentID': SSBStu_StudentID,
                'classID': SSBStu_ClassID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    $('#SSBStuDetail_GridBody').empty();
                    if (data && data.length != 0) {
                        fnRenderBlock(data, "SSBStuDetail_GridBody"
                            , blocknum = 100
                            , fnrender = SSBStuDetail_Render
                            , fnsuccess = null
                        );
                    }
                }
                else if (result == "0") {
                    notiWarning();
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#SSBStuDetail_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#SSBStuDetail_LoaderList").hide();
            }
        );
    }

    async function SSBStuDetail_Render(data, id)
    {
        new Promise((resolve) =>
        {
            setTimeout(() =>
            {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        let countGroup = 0;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let createdName = RP_DataEmployee[item.CreatedBy] != undefined ? RP_DataEmployee[item.CreatedBy].Name : 'unknown';
                            let begintime = ConvertDateTimeUTC_DMYHM(INTYMDHMToDate(item.Dayint.toString() + item.TimeStart.toString()));
                            let endtime = ConvertDateTimeUTC_DMYHM(INTYMDHMToDate(item.Dayint.toString() + item.TimeEnd.toString()));
                            let {EnrollDate, Dayint, TimeStart} = item;
                            let status = SSBStuDetail_RenderStatus(EnrollDate, Dayint, TimeStart) ? decodeHtml("@Local["Có đăng ký"]") : decodeHtml("@Local["Không đăng ký"]");
                            let tr = `<tr class="vt-number" role="row">
                                      <td class="vt-number-order"></td>
                                      <td data-name="stucode">
                                              <a target="_blank" href="/Student/student/studentmain?studentid=${item.StudentID}">
                                                  ${item.StudentCode}
                                          </a>
                                      </td>
                                      <td>${item.StudentName}</td>
                                      <td data-name="timestart">${begintime}</td>
                                      <td data-name="timeend">${endtime}</td>
                                      <td data-name="teacher">${item.TeacherName}</td>
                                      <td>${item.Room}</td>
                                      <td class="${!SSBStuDetail_RenderStatus(EnrollDate, Dayint, TimeStart) ? 'text-secondary' : ''}">
                                      ${status}
                                      </td>
                                      <td>${SSBStuDetail_RenderStatus(EnrollDate, Dayint, TimeStart) ? item.AttendStatus : ''}</td>
                                      <td>${SSBStuDetail_RenderStatus(EnrollDate, Dayint, TimeStart) ? item.RatingStatus : ''}</td>
                                      </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                resolve();
            }, 10)
        })
    }

    function SSBStuDetail_RenderStatus(EnrollDate, Dayint, TimeStart){
        let enrollDate = (ConvertDateTimeToTimeSpan(EnrollDate));
        let timein = ConvertDateTimeToTimeSpan(INTYMDHMToDate(Dayint.toString() + TimeStart.toString()));

        if (enrollDate > timein) {
            return false;
        }
        else if(enrollDate <= timein) {
            return true;
        }
    }
    //#endregion

    //#region // Event
    function SSBStu_GeneralEvent()
    {
        $("#SSBStu_GridBody .buttonViewClass").unbind('click').on("click", function ()
        {
            SSBStu_StudentID = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            $("#SSBStuDetail_Container").hide();
            $("#SSBStuDetailByClass_Container").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#SSBStuDetailByClass_Container").offset().top
            }, 300);
            if (SSBStu_StudentID == "0") {
                $("#SSBStuDetailByClass_Title").html('@Local["Tất cả học viên"]');
            }
            else {
                $("#SSBStuDetailByClass_Title").html(name);
            }
            SSBStuDetailByClass_Loaddata();
        })
    }

    function SSBStuDetailByClass_Event()
    {
        $("#SSBStuDetailByClass_GridBody .buttonViewClass").unbind('click').on("click", function ()
        {
            SSBStu_ClassID = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            $("#SSBStuDetail_Container").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#SSBStuDetail_Container").offset().top
            }, 300);
            if (SSBStu_ClassID == "0") {
                $("#SSBStuDetail_Title").html('@Local["Tất cả lớp học"]');
            }
            else {
                $("#SSBStuDetail_Title").html(name);
            }
            SSBStuDetail_Loaddata();
        })
    }

    function SSBStu_Export()
    {
        syslog_ExpExcel('e', Outlang["Bao_cao_tinh_trang_hoc_vien"]);
        exportToExcel("SSBStu_Grid", Outlang["Bao_cao_tinh_trang_hoc_vien"]);
    }

    function SSBStuDetailByClass_Export()
    {
        let fileName = Outlang["Bao_cao_tinh_trang_hoc_vien"] + '_' + xoa_dau($("#SSBStuDetailByClass_Title").text()).replaceAll(' ', '_');
        syslog_ExpExcel('e', fileName);
        exportToExcel("SSBStuDetailByClass_Grid", fileName);
    }

    function SSBStuDetail_Export()
    {
        let fileName = Outlang["Bao_cao_tinh_trang_hoc_vien"]
                       + '_' + xoa_dau($("#SSBStuDetailByClass_Title").text()).replaceAll(' ', '_')
            + '_' + xoa_dau($("#SSBStuDetail_Title").text()).replaceAll(' ', '_');
        syslog_ExpExcel('e', fileName);
        exportToExcel("SSBStuDetail_Grid", fileName);
    }
    //#endregion

</script>

