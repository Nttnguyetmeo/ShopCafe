@page
@model MLunarCoffee.Pages.Report.Revenue.Labo.LaboGeneralModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div id="LaboGeneral_MainContainer">
    <div id="LaboGeneral_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>

    <div id="LaboGeneral_MainDivDoc">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0">
                <div class="right">
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Thu gọn"]">
                        <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                           data-bs-toggle="collapse" href="#LaboGeneral_GridAreaDoc" aria-expanded="true"></i>
                    </div>
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Tải lại"]">
                        <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                           onclick="event.preventDefault(); return LaboGeneral_Load()"></i>
                    </div>
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                           onclick="event.preventDefault(); return LaboGeneral_Export()"></i>
                    </div>
                </div>
            </div>
            <div class="collapsesticky collapse show" id="LaboGeneral_GridAreaDoc">
                <div class="card-body p-0 overflow-y">
                    <div class="m-0 my-3 mobile-responsive">
                        <table class="table vt-table mb-0" id="LaboGeneral_GridDoc">
                            <thead>
                                <tr role="row">
                                    <th rowspan="2">#</th>
                                    <th rowspan="2">@Local["Bác sĩ"]</th>
                                    <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                                    <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                                    <th rowspan="1" colspan="3">@Local["Công nợ với nhà cung cấp"]</th>
                                </tr>
                                <tr role="row">
                                    <th>@Local["Số lượng phiếu labo"]</th>
                                    <th>@Local["Phát sinh"]</th>
                                    <th>@Local["Số lượng phiếu labo"]</th>
                                    <th>@Local["Thanh toán"]</th>
                                    <th>@Local["Phát sinh"]</th>
                                    <th>@Local["Thanh toán"]</th>
                                    <th>@Local["Nợ còn lại"]</th>
                                </tr>
                            </thead>
                            <tbody id="LaboGeneral_GridBodyDoc">
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div id="LaboGeneral_MainDivSup" style="display:none;">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0">
                <div class="right">
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Thu gọn"]">
                        <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                           data-bs-toggle="collapse" href="#LaboGeneral_GridAreaSup" aria-expanded="true"></i>
                    </div>
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Tải lại"]">
                        <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                           onclick="event.preventDefault(); return LaboGeneral_Load()"></i>
                    </div>
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                           onclick="event.preventDefault(); return LaboGeneral_Export()"></i>
                    </div>
                </div>
            </div>
            <div class="collapsesticky collapse show" id="LaboGeneral_GridAreaSup">
                <div class="card-body p-0">
                    <div class="m-0 my-3 mobile-responsive">
                        <table class="table vt-table mb-0" id="LaboGeneral_GridSup">
                            <thead>
                                <tr role="row">
                                    <th rowspan="2">#</th>
                                    <th rowspan="2">@Local["Nhà cung cấp"]</th>
                                    <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                                    <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                                    <th rowspan="1" colspan="3">@Local["Công nợ với nhà cung cấp"]</th>
                                </tr>
                                <tr role="row">
                                    <th>@Local["Số lượng phiếu labo"]</th>
                                    <th>@Local["Phát sinh"]</th>
                                    <th>@Local["Số lượng phiếu labo"]</th>
                                    <th>@Local["Thanh toán"]</th>
                                    <th>@Local["Phát sinh"]</th>
                                    <th>@Local["Thanh toán"]</th>
                                    <th>@Local["Nợ còn lại"]</th>
                                </tr>
                            </thead>
                            <tbody id="LaboGeneral_GridBodySup">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="LaboGeneral_GeneralDetail" style="display:none;">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 px-0">
            <div class="left">
                <p id="LaboGeneralDetail_Title" class="text-md text-dark font-weight-bold mb-0 mt-1"></p>
            </div>
            <div class="right">
                <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                    <span id="LaboGeneralDetail_CurrentData">0</span>
                    <span class="mx-2">/</span>
                    <span id="LaboGeneralDetail_TotalData">0</span>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#LaboGeneralDetail_Div" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return LaboGeneral_LoadDetail()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["In báo cáo"]">
                    <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); LaboGeneralDetail_PrintReport()"></i>
                </div>
                <div>
                    <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                        <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Xuất excel"]">
                            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                        </div>
                        <div class="input-group-text icon-hover w-auto vttech-input-item">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return LaboGeneralDetail_Export(0)">@Local["Tất cả"]</i>
                        </div>
                        <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return LaboGeneralDetail_Export(1)">@Local["Tùy chọn"]</i>
                        </div>
                    </div>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleDetail form-check-input" data-name="branch" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Chi nhánh"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleDetail form-check-input" data-name="created" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày tạo"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleDetail form-check-input" data-name="createdby" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người tạo"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogleDetail form-check-input" data-name="custcodeold" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="LaboGeneralDetail_Div">
            <div class="card-body p-0">
                <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                    <div id="LaboGeneralDetail_LoaderList" class="waitingdiv text-center w-100 mt-2 position-absolute start-50 translate-middle-x" style="display:none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table data-name="LaboGeneralDetail_GridDetail" class="table vt-table mb-0" id="LaboGeneralDetail_GridDetail">
                        <thead>
                            <tr>
                                <th style="width: 60px">#</th>
                                <th data-name="labocode">@Local["Mã labo"]</th>
                                <th data-name="doctor">@Local["Bác sĩ"]</th>
                                <th style="min-width: 140px">@Local["Mã khách hàng"]</th>
                                <th style="min-width: 140px" data-name="custcodeold">@Local["Mã khách hàng cũ"]</th>
                                <th data-name="custname">@Local["Khách hàng"]</th>
                                <th data-name="supplier">@Local["Nhà cung cấp"]</th>
                                <th data-name="labo">@Local["Labo"]</th>
                                <th data-name="status">@Local["Trạng thái"]</th>
                                <th data-name="quantity">@Local["Số lượng"]</th>
                                <th data-name="price">@Local["Giá mua"]</th>
                                <th data-name="amount">@Local["Đã thanh toán"]</th>
                                <th data-name="debt">@Local["Nợ"]</th>
                                <th data-name="target">@Local["Doanh số"]</th>
                                <th data-name="revenue">@Local["Doanh thu"]</th>
                                <th data-name="branch">@Local["Chi nhánh"]</th>
                                <th data-name="created">@Local["Ngày tạo"]</th>
                                <th data-name="createdby">@Local["Người tạo"]</th>
                            </tr>
                        </thead>
                        <tbody id="LaboGeneralDetail_GridDetailBody">
                        </tbody>
                    </table>
                </div>
                <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return LaboGeneral_RenderDetailMore();">
                    @Local["Xem thêm"]
                </button>
            </div>

        </div>
    </div>
</div>
<script type="text/javascript">
    //#region //INIT - DEFINE
    let _dateFrom, _dateTo, _branch;
    let LaboGeneral_DocID = 0, LaboGeneral_SupID = 0;

    let xhrLoadDetail;
    let shtableDetail;
    let LaboGeneral_DataRpDetail, LaboGeneral_DataRpDetailSlice;
    let IndexReportDetail = 0;
    let timeoutCountDetail;
    $(document).ready(function ()
    {
        LaboGeneral_Load();
        ToolPopper();
        shtableDetail = $("#LaboGeneralDetail_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogleDetail')
        });
        Checking_TabControl_Permission();
    });
    //#endregion
    //#region //MASTER GRID
    function LaboGeneral_Load()
    {
        _dateFrom = "@Model._dateFrom";
        _dateTo = "@Model._dateTo";
        _branch = "@Model._branch";
        AjaxLoad(url = "/Report/Revenue/Labo/LaboGeneral/?handler=Loadata"
            , data = {
                'branchID': _branch,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let { Table: dataDoc, Table1: dataSup } = datas;

                    LaboGeneral_Render(dataDoc, "LaboGeneral_GridBodyDoc");
                    LaboGeneral_Render(dataSup, "LaboGeneral_GridBodySup");
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#LaboGeneral_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#LaboGeneral_LoaderList").hide();
            }
        );
        return false;
    }
    async function LaboGeneral_Render(data, id)
    {
        new Promise((resolve) =>
        {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    let trtotal = '';
                    let targetQuantity = 0, targeAmount = 0, revenueQuantity = 0, revenueAmount = 0;
                    let debtArising = 0, debtPayment = 0, debSup = 0;
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        targetQuantity += item.TotalTarget;
                        targeAmount += item.TotalTargetAmount;
                        revenueQuantity += item.TotalRevenue;
                        revenueAmount += item.TotalRevenueAmount;

                        debtArising += item.SupAmount;
                        debtPayment += item.SupPaid;
                        debSup += item.SupDebt;
                        let tr =
                            '<td class="vt-number-order"></td>'
                            + '<td>'
                            + '<a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="' + item.ID + '" data-name="' + item.Name + '">'
                            + item.Name
                            + '</a>'
                            + '</td>'
                            + '<td>' + formatNumber(item.TotalTarget) + '</td>'
                            + '<td>' + formatNumber(item.TotalTargetAmount) + '</td>'
                            + '<td>' + formatNumber(item.TotalRevenue) + '</td>'
                            + '<td>' + formatNumber(item.TotalRevenueAmount) + '</td>'

                            + '<td>' + formatNumber(item.SupAmount) + '</td>'
                            + '<td>' + formatNumber(item.SupPaid) + '</td>'
                            + '<td>' + formatNumber(item.SupDebt) + '</td>'
                            ;

                        stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                        if (data.length > 1 && i == data.length - 1) {
                            trtotal =
                                '<td></td>'
                                + '<td>'
                                + '<a href="#" class="border-1 border-white border-bottom buttonViewClass text-white" data-id="0" data-name="@Local["Tất cả"]">Total</a>'
                                + '</td>'
                                + '<td>' + formatNumber(targetQuantity) + '</td>'
                                + '<td>' + formatNumber(targeAmount) + '</td>'
                                + '<td>' + formatNumber(revenueQuantity) + '</td>'
                                + '<td>' + formatNumber(revenueAmount) + '</td>'
                                + '<td>' + formatNumber(debtArising) + '</td>'
                                + '<td>' + formatNumber(debtPayment) + '</td>'
                                + '<td>' + formatNumber(debSup) + '</td>'
                                ;
                            stringContent = stringContent + '<tr class="text-white bg-gradient bg-primary" role="row">' + trtotal + '</tr>';
                        }
                    }
                }
                myNode.innerHTML = stringContent;
                LaboGeneral_Event();
            }
        })
    }
    function LaboGeneral_Export()
    {
        let LaboPie_IsDoc = Number($(".LaboPie_ChartTab:checked").val());
        if (LaboPie_IsDoc == 0) {
            syslog_ExpExcel('e', Outlang['Bao_cao_labo_theo_bac_si']);
            exportToExcel("LaboGeneral_GridDoc", Outlang['Bao_cao_labo_theo_bac_si']);
        }
        else if (LaboPie_IsDoc == 1) {
            syslog_ExpExcel('e', Outlang['Bao_cao_labo_theo_nha_cung_cap']);
            exportToExcel("LaboGeneral_GridSup", Outlang['Bao_cao_labo_theo_nha_cung_cap']);
        }

    }

    function LaboGeneral_Event()
    {
        $("#LaboGeneral_MainContainer .buttonViewClass").unbind('click').on("click", function ()
        {
            let id = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            let title = '';
            let LaboPie_IsDoc = Number($(".LaboPie_ChartTab:checked").val());
            if (LaboPie_IsDoc == 0) {
                LaboGeneral_DocID = id;
                LaboGeneral_SupID = 0;
                title = `@Local["Bác sĩ"] ${name}`;
            }
            else if (LaboPie_IsDoc == 1) {
                LaboGeneral_DocID = 0;
                LaboGeneral_SupID = id;
                title = `@Local["Nhà cung cấp"] ${name}`;
            }
            $("#LaboGeneral_GeneralDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#LaboGeneral_GeneralDetail").offset().top
            }, 300);
            if (id == "0") {
                $("#LaboGeneralDetail_Title").html('@Local["Tất cả phiếu labo"]');
            }
            else {
                $("#LaboGeneralDetail_Title").html(title);
            }
            LaboGeneral_LoadDetail();

        })
    }

    function LaboGeneral_CheckTab()
    {
        let LaboPie_IsDoc = Number($(".LaboPie_ChartTab:checked").val());
        if (LaboPie_IsDoc == 0) {
            $('#LaboGeneral_MainDivDoc').show(500);
            $('#LaboGeneral_MainDivSup').hide(500);
        }
        else if (LaboPie_IsDoc == 1) {
            $('#LaboGeneral_MainDivDoc').hide(500);
            $('#LaboGeneral_MainDivSup').show(500);
        }
    }
    //#endregion
    //#region // LOAD DETAIL AND RENDER
    function LaboGeneral_LoadDetail()
    {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        IndexReportDetail = 0;
        _dateFrom = "@Model._dateFrom";
        _dateTo = "@Model._dateTo";
        _branch = "@Model._branch";
        xhrLoadDetail = AjaxLoad(url = "/Report/Revenue/Labo/LaboGeneral/?handler=LoadataDetail"
            , data = {
                'branchID': _branch,
                'docID': LaboGeneral_DocID,
                'supID': LaboGeneral_SupID,
                'dateFrom': _dateFrom,
                'dateTo': _dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    LaboGeneral_DataRpDetail = JSON.parse(JSON.stringify(data));
                    LaboGeneral_DataRpDetailSlice = sliceIntoChunks(data, 500);
                    $("#LaboGeneralDetail_GridDetailBody").empty();
                    if (LaboGeneral_DataRpDetailSlice && LaboGeneral_DataRpDetailSlice.length != 0) {
                        fnRenderBlock(LaboGeneral_DataRpDetailSlice[IndexReportDetail], "LaboGeneralDetail_GridDetailBody"
                            , blocknum = 100
                            , fnrender = LaboGeneral_DetailRender
                            , fnsuccess = null
                        );
                    }
                    Count_Up("LaboGeneralDetail_TotalData", LaboGeneral_DataRpDetail.length);
                }
                else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e)
            {
                $("#LaboGeneralDetail_LoaderList").show();
            }
            , complete = function (e)
            {
                $("#LaboGeneralDetail_LoaderList").hide();
            }
        );
    }

    function LaboGeneral_RenderDetailMore()
    {
        IndexReportDetail += 1;
        if (LaboGeneral_DataRpDetailSlice && LaboGeneral_DataRpDetailSlice[IndexReportDetail]) {
            fnRenderBlock(LaboGeneral_DataRpDetailSlice[IndexReportDetail], "LaboGeneralDetail_GridDetailBody"
                , blocknum = 100
                , fnrender = LaboGeneral_DetailRender
                , fnsuccess = null
            );
        }
    }

    async function LaboGeneral_DetailRender(data, id)
    {
        new Promise((resolve) =>
        {
            setTimeout(() =>
            {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let createdName = RP_DataEmployee[item.CreatedBy] != undefined ? RP_DataEmployee[item.CreatedBy].Name : 'unknown';
                            let docName = RP_DataEmployee[item.DoctorID] != undefined ? RP_DataEmployee[item.DoctorID].Name : 'unknown';
                            let serName = (RP_DataService[item.ServiceID] != undefined) ? RP_DataService[item.ServiceID].Name : '';
                            let status = `<h6 class="text-sm fw-bold mt-0 mb-0" style = "color:${item.StatusColor}" > ${item.StatusName} </h6>`;

                            let tr = `<tr class="vt-number" role="row">
                                                         <td class="vt-number-order"></td>
                                                         <td data-name="labocode">${item.LabCode}</td>
                                                         <td data-name="doctor">${docName}</td>
                                                         <td data-name="custcode">
                                                             <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">
                                                                ${item.CustCode}
                                                             </a>
                                                         </td>
                                                             <td data-name="custcodeold">${item.CustOldCode}</td>
                                                         <td data-name="custname">${item.CustName}</td>
                                                         <td data-name="supplier">${item.SupplierName}</td>
                                                         <td data-name="labo">${serName}</td>
                                                         <td data-name="status">${status}</td>
                                                         <td data-name="quantity">${formatNumber(item.Quantity)}</td>
                                                         <td data-name="price">${formatNumber(item.Price)}</td>
                                                         <td data-name="amount">${formatNumber(item.Paid)}</td>
                                                         <td data-name="debt">${formatNumber(item.Debt)}</td>
                                                         <td data-name="target">${formatNumber(item.TargetAmount)}</td>
                                                         <td data-name="revenue">${formatNumber(item.RevenueAmount)}</td>
                                                         <td data-name="branch">${(RP_DataBranch[item.BranchID] != undefined ? RP_DataBranch[item.BranchID].Name : '')}</td>
                                                         <td data-name="created">${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                                                         <td data-name="createdby">${createdName}</td>
                                                     </tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                shtableDetail.Refresh();
                clearTimeout(timeoutCountDetail);
                timeoutCountDetail = setTimeout(() =>
                {
                    Count_Up("LaboGeneralDetail_CurrentData", $("#" + id).children().length);
                }, 300)
                resolve();
            }, 10)
        })
    }
    //#endregion

    //#region // Event
    async function LaboGeneralDetail_Export(isOption = 0)
    {
        try {
            if (LaboGeneral_DataRpDetail && LaboGeneral_DataRpDetail.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#LaboGeneral_GeneralDetail');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "DoctorID": ["@Local["Bác sĩ"]", (value) =>
                    {
                        return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : 'unknown';
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustOldCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='custcodeold']`)).is(":checked"),
                        data: ["@Local["Mã khách hàng cũ"]", (value) => { return value }]
                    },
                    "CustName": ["@Local["Khách hàng"]"],
                    "SupplierName": ["@Local["Nhà cung cấp"]"],
                    "ServiceID": ["@Local["Labo"]", (value, { ServiceID }) =>
                    {
                        return (RP_DataService[ServiceID] != undefined) ? RP_DataService[ServiceID].Name : '';
                    }],
                    "StatusName": ["@Local["Trạng thái"]"],
                    "Quantity": ["@Local["Số lượng"]"],
                    "Price": ["@Local["Giá mua"]"],
                    "Paid": ["@Local["Đã thanh toán"]"],
                    "Debt": ["@Local["Nợ"]"],
                    "TargetAmount": ["@Local["Doanh số"]"],
                    "RevenueAmount": ["@Local["Doanh thu"]"],
                    "BranchID": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='branch']`)).is(":checked"),
                        data: ["@Local["Chi nhánh"]", (value, { BranchID }) => {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }]
                    },
                    "Created": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='created']`)).is(":checked"),
                        data: ["@Local["Ngày tạo"]", (value) => { return ConvertDateTimeUTC_DMYHM(value) }]
                    },
                    "CreatedBy": {
                        isShow: isAll || (eleContainer.find(`.shtoogleDetail[data-name='createdby']`)).is(":checked"),
                        data: ["@Local["Người tạo"]", (value, { CreatedBy }) => {
                            return (DataEmp[CreatedBy] != undefined) ? DataEmp[CreatedBy].Name : '';
                        }]
                    },
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'LaboGeneralDetail_GridDetailBody', PermissionTable_TabControl);
                let fileName = Outlang["Bao_cao_labo"] + '-' + xoa_dau($("#LaboGeneralDetail_Title").text()).replaceAll(' ', '-');
                syslog_ExpExcel('e', fileName);
                exportJsonToExcel(fileName, LaboGeneral_DataRpDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function LaboGeneralDetail_PrintReport()
    {
        try {
            if (LaboGeneral_DataRpDetail && LaboGeneral_DataRpDetail.length != 0) {
                let _branchID = "@Model._branch";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }],
                    "LabCode": ["@Local["Mã labo"]"],
                    "DoctorID": ["@Local["Bác sĩ"]", {
                        callbackRenderValue: (value) =>
                        {
                            return RP_DataEmployee[value] != undefined ? RP_DataEmployee[value].Name : 'unknown';
                        }
                    }],
                    "CustCode": ["@Local["Mã khách hàng"]"],
                    "CustOldCode": ["@Local["Mã khách hàng cũ"]", {
                        isShow: $(`.shtoogle[data-name='custcodeold']`).is(":checked"),
                        callbackRenderValue: (value) => { return value }
                    }],
                    "CustName": ["@Local["Khách hàng"]"],
                    "SupplierName": ["@Local["Nhà cung cấp"]"],
                    "ServiceID": ["@Local["Labo"]", {
                        callbackRenderValue: (value, { ServiceID }) =>
                        {
                            return (RP_DataService[ServiceID] != undefined) ? RP_DataService[ServiceID].Name : '';
                        }
                    }],
                    "StatusName": ["@Local["Trạng thái"]"],
                    "Quantity": ["@Local["Số lượng"]"],
                    "Price": ["@Local["Giá mua"]"],
                    "Paid": ["@Local["Đã thanh toán"]"],
                    "Debt": ["@Local["Nợ"]"],
                    "TargetAmount": ["@Local["Doanh số"]"],
                    "RevenueAmount": ["@Local["Doanh thu"]"],
                    "BranchID": ["@Local["Chi nhánh"]", {
                        isShow: $(`.shtoogle[data-name='branch']`).is(":checked"),
                        callbackRenderValue: (value, { BranchID }) =>
                        {
                            return (RP_DataBranch[BranchID] != undefined) ? RP_DataBranch[BranchID].Name : '';
                        }
                    }],
                    "Created": ["@Local["Ngày tạo"]", {
                        isShow: $(`.shtoogle[data-name='created']`).is(":checked"),
                        callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMYHM(value) }
                    }],
                    "CreatedBy": ["@Local["Người tạo"]", {
                        isShow: $(`.shtoogle[data-name='createdby']`).is(":checked"),
                        callbackRenderValue: (value, { CreatedBy }) =>
                        {
                            return (RP_DataEmployee[CreatedBy] != undefined) ? RP_DataEmployee[CreatedBy].Name : '';
                        }
                    }],
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr)
                    {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            let fileName = Outlang["Bao_cao_labo"] + ' ' + $("#LaboGeneralDetail_Title").text();
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, LaboGeneral_DataRpDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                                        //#endregion
</script>