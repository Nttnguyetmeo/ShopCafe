@page
@model MLunarCoffee.Pages.Report.Revenue.CustomerGroup.GroupGridModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#GG_GridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return GGrid_LoadTotal()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return GGrid_Export()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="GG_GridArea">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="GG_Grid">
                    <thead>
                        <tr role="row">
                            <th rowspan="3">#</th>
                            <th rowspan="3">@Local["Tên"]</th>
                            <th rowspan="1" colspan="4">@Local["Tổng"]</th>
                            <th rowspan="1" colspan="4">@Local["Khách mới"]</th>
                            <th rowspan="1" colspan="4">@Local["Khách cũ"]</th>
                        </tr>
                        <tr role="row">
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                        </tr>
                        <tr role="row">
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                        </tr>
                    </thead>
                    <tbody id="GG_GridBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="GG_DivDetail" style="display: none;">
    <div class="d-lg-flex">
        <div class="w-lg-50 col-auto my-auto">
            <div class="d-flex align-items-center mb-sm-0 mb-4">
                <div class="form-check">
                    <input name="GGridTab" value="2" class="GGridTab form-check-input pr-2 cursor-pointer" type="radio" checked="checked">
                    <label class="custom-control-label cursor-pointer" for="target">@Local["Doanh số"]</label>
                </div>
                <div class="form-check ms-3">
                    <input name="GGridTab" value="1" class="GGridTab form-check-input pr-2 cursor-pointer" type="radio">
                    <label class="custom-control-label cursor-pointer" for="revenue">@Local["Doanh thu"]</label>
                </div>
            </div>
        </div>
    </div>
    <div class="card card-plain">
        <div class="vtcardheader card-header p-0">
            <div class="left">
                <p class="text-md text-dark font-weight-bold mb-1" id="GG_TitleDetail">@Local["Doanh số"]</p>
            </div>
            <div class="right">
                <div class="icon-hover mx-1 my-auto"
                        data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                        data-bs-toggle="collapse" href="#GG_DivTableDetail" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1 my-auto"
                        data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                        onclick="event.preventDefault(); return GGrid_LoadDetail()"></i>
                </div>
                <div class="my-auto">
                    <div class="flex-nowrap input-group rounded-0 vttech-input-group _tab_control_" data-tab="export_excel">
                        <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first  my-auto pe-none"
                                data-bs-toggle="tooltip" data-bs-placement="top"
                                data-bs-original-title="@Local["Xuất excel"]">
                            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                        </div>
                        <div class="input-group-text icon-hover w-auto vttech-input-item  my-auto">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return GGrid_ExportDetail(0)">@Local["Tất cả"]</i>
                        </div>
                        <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last  my-auto">
                            <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return GGrid_ExportDetail(1)">@Local["Tùy chọn"]</i>
                        </div>
                    </div>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custcodeold" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custnew" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Khách hàng mới"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="salecode" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã lên đơn"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="type" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Loại"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="group" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nhóm"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Chi nhánh"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="created" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày thanh toán"]</p>
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <div class="collapsesticky collapse show" id="GG_DivTableDetail">
            <div class="card-body p-0 pt-0">
                <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                    <table data-name="GG_GridDetail" class="table vt-table mb-0" id="GG_GridDetail">
                        <thead>
                            <tr>
                                <th style="width: 60px">#</th>
                                <th style="min-width: 140px">@Local["Mã khách hàng"]</th>
                                <th data-name="custcodeold" style="min-width: 120px;">@Local["Mã khách hàng cũ"]</th>
                                <th style="min-width: 120px;">@Local["Mã hồ sơ"]</th>
                                <th style="min-width: 180px;">@Local["Khách hàng"]</th>
                                <th data-name="custnew" style="min-width: 160px;">@Local["Khách hàng mới"]</th>
                                <th data-name="salecode" style="min-width: 100px;">@Local["Mã lên đơn"]</th>
                                <th style="min-width: 120px;" id="GG_NamePrice">@Local["Phát sinh"]</th>
                                <th data-name="type" style="min-width: 160px;">@Local["Loại"]</th>
                                <th style="min-width: 150px;">@Local["Dịch vụ"]</th>
                                <th data-name="group" style="min-width: 120px;">@Local["Nhóm"]</th>
                                <th data-name="branch" style="min-width: 120px;">@Local["Chi nhánh"]</th>
                                <th data-name="created" style="min-width: 165px;">@Local["Ngày thanh toán"]</th>
                            </tr>
                        </thead>
                        <tbody id="GG_GridDetailBody">
                        </tbody>
                    </table>
                </div>
                <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return GGrid_LoadDetail(1);">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
         
</div>

<script>
    //IsRevenue == 1: Doanh thu
    //IsRevenue == 2: Doanh số

    let _DateFrom = "@Model._dateFrom";
    let _DateTo = "@Model._dateTo";
    let _BranchToken = "@Model._TokenBranch";
    let DataTotal = [], DataDetail = [];
    let GroupID = 0, IsRevenue = 1;
    let limit = 500;
    let beginID = 0;
    let shTable;


    $(document).ready(function () {
        GGrid_LoadTotal();
        GGrid_EventInit();
        shTable = $("#GG_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
    })

    //#region // Load

    function GGrid_LoadTotal () {
        AjaxLoad(url = "/Report/Revenue/CustomerGroup/GroupGrid/?handler=Loadata"
            , data = {
                'branchToken': _BranchToken
                , 'dateFrom': _DateFrom
                , 'dateTo': _DateTo
            }
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    DataTotal = data["Table"];
                    GGrid_Render(DataTotal, "GG_GridBody");

                } else {
                    notiError_SW();
                }
            }
        );
    }

    function GGrid_LoadDetail (isLoadMore = 0) {

        if (isLoadMore == 0) {
            $("#GG_GridDetailBody").empty();
            DataDetail = [];
            beginID = 0;
        }

        AjaxLoad(url = "/Report/Revenue/CustomerGroup/GroupGrid/?handler=LoadDetail"
            , data = {
                'branchToken': _BranchToken
                , 'dateFrom': _DateFrom
                , 'dateTo': _DateTo
                , 'groupID': GroupID
                , 'isRevenue': IsRevenue
                , 'limit': limit
                , 'beginID': beginID
            }
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);

                    DataDetail = DataDetail.concat(data["Table1"]);
                    beginID = DataDetail[DataDetail.length - 1].ID
                    fnRenderBlock(data["Table1"], "GG_GridDetailBody"
                        , blocknum = 100
                        , fnrender = GGrid_RenderDtail
                        , fnsuccess = null
                    );
                } else {
                    notiError_SW();
                }
            }
        );
    }

    //#endregion

    //#region //Render

    async function GGrid_Render (data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {

                    let T_TarCus = 0, T_TarAmount = 0, T_RevCus = 0, T_RevAmount = 0;
                    let N_TarCus = 0, N_TarAmount = 0, N_RevCus = 0, N_RevAmount = 0;
                    let O_TarCus = 0, O_TarAmount = 0, O_RevCus = 0, O_RevAmount = 0;

                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];

                        T_TarCus += item["TolTarCus"];
                        T_TarAmount += item["TolTarAmount"];
                        T_RevCus += item["TolRevCus"];
                        T_RevAmount += item["TolRevAmount"];

                        N_TarCus += item["NewTarCus"];
                        N_TarAmount += item["NewTarAmount"];
                        N_RevCus += item["NewRevCus"];
                        N_RevAmount += item["NewRevAmount"];

                        O_TarCus += item["OldTarCus"];
                        O_TarAmount += item["OldTarAmount"];
                        O_RevCus += item["OldRevCus"];
                        O_RevAmount += item["OldRevAmount"];


                        let tr = `
                            <td class="vt-number-order"></td>
                            <td><a href="#" class="border-1 border-primary border-bottom fw-bold btnGroup" data-id="${item.GroupID}">${RP_DataCustomerGroup[item.GroupID].Name}</a></td>
                            <td>${item.TolTarCus}</td>
                            <td>${formatNumber(item.TolTarAmount)}</td>
                            <td>${item.TolRevCus}</td>
                            <td>${formatNumber(item.TolRevAmount)}</td>
                            <td>${item.NewTarCus}</td>
                            <td>${formatNumber(item.NewTarAmount)}</td>
                            <td>${item.NewRevCus}</td>
                            <td>${formatNumber(item.NewRevAmount)}</td>
                            <td>${item.OldTarCus}</td>
                            <td>${formatNumber(item.OldTarAmount)}</td>
                            <td>${item.OldRevCus}</td>
                            <td>${formatNumber(item.OldRevAmount)}</td>
                        `;
                        stringContent = stringContent + `<tr class="vt-number" role="row">${tr}</tr>`;
                        if (data.length > 1 && i == data.length - 1) {
                            let trTotal = `
                                <td class="vt-number-order"></td>
                                <td><a href="#" class="border-1 border-white border-bottom fw-bold text-white btnGroup" data-id="${0}">@Local["Tất cả"]</a></td>
                                <td>${T_TarCus}</td>
                                <td>${formatNumber(T_TarAmount)}</td>
                                <td>${T_RevCus}</td>
                                <td>${formatNumber(T_RevAmount)}</td>
                                <td>${N_TarCus}</td>
                                <td>${formatNumber(N_TarAmount)}</td>
                                <td>${N_RevCus}</td>
                                <td>${formatNumber(N_RevAmount)}</td>
                                <td>${O_TarCus}</td>
                                <td>${formatNumber(O_TarAmount)}</td>
                                <td>${O_RevCus}</td>
                                <td>${formatNumber(O_RevAmount)}</td>
                            `;
                            stringContent = stringContent + `<tr class="vt-number text-white bg-gradient bg-primary">${trTotal}</tr>`
                        }
                    }
                }
                myNode.innerHTML = stringContent;
                GGrid_Event();
            }
        })
    }
    async function GGrid_RenderDtail (data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length != 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = `
                            <tr class="vt-number">
                                <td class="vt-number-order"></td>
                                <td>${item.CusCode}</td>
                                <td data-name="custcodeold">${item.CusCodeOld}</td>
                                <td>${item.CusDoc}</td>
                                <td>${item.CusName}</td>
                                <td data-name="custnew">${item.IsNew == 1 ? `<span class="badge bg-gradient-success">@Local["Khách mới"]</span>` : ''}</td>
                                <td data-name="salecode">${item.SaleCode}</td>
                                <td>${formatNumber(item.Amount)}</td>
                                <td data-name="type">${GGrid_RenderType(item.Type)}</td>
                                <td>${GGrid_RenderSerName(item.Type, item.IDSer)}</td>
                                <td data-name="group">${RP_DataCustomerGroup[item.GroupID].Name}</td>
                                <td data-name="branch">${RP_DataBranch[item.BranchID].Name}</td>
                                <td data-name="created">${GetDateTime_String_DMY(item.DateCreated)}</td>
                            </tr>
                        `;
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                    shTable.Refresh();
                }
            }
        })
    }
    function GGrid_RenderType (Type) {
        try {
            let result = ``;

            switch (Type) {
                case 1:
                    result = decodeHtml("@Local["Dịch vụ/sản phẩm"]");
                    break;
                case 2:
                    result = decodeHtml("@Local["Thẻ"]");
                    break;
                case 3:
                    result = decodeHtml("@Local["Thuốc"]");
                    break;
                case 4:
                    result = decodeHtml("@Local["Tiền cọc"]");
                    break;
                default:
            }

            return result;
        } catch (ex) {
            return '';
        }
    }

    function GGrid_RenderSerName (Type, SerID) {
        try {
            let result = ``;

            switch (Type) {
                case 1:
                    result = RP_DataService[SerID].Name != 'undefined' ? RP_DataService[SerID].Name : '';
                    break;
                case 2:
                    result = RP_DataCard[SerID].Name != 'undefined' ? RP_DataCard[SerID].Name : '';
                    break;
                case 3:
                    result = RP_DataMedicine[SerID].Name != 'undefined' ? RP_DataMedicine[SerID].Name : '';
                    break;
                default:
            }
            return result;
        } catch (ex) {
            return '';
        }
    }
    //#endregion

    //#region //Event

    function GGrid_EventInit () {
        $(".GGridTab").change(function () {
            IsRevenue = Number($(this).val());
            let NameType = IsRevenue == 1 ? "@Local["Doanh thu"]" : "@Local["Doanh số"]";
            let NameGroup = GroupID == 0 ? "@Local["Tất cả"]" : RP_DataCustomerGroup[GroupID].Name;
            let NamePrice = IsRevenue == 1 ? "@Local["Thanh toán"]" : "@Local["Phát sinh"]";

            $("#GG_DivDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#GG_DivDetail").offset().top
            }, 300);

            $("#GG_NamePrice").html(NamePrice);
            $("#GG_TitleDetail").html(NameType + ' - ' + NameGroup);
            GGrid_LoadDetail();
        })
    }

    function GGrid_Event () {
        $("#GG_GridBody .btnGroup").unbind("click").click(function () {
            GroupID = Number($(this).attr("data-id"));
            IsRevenue = $("input[name='GGridTab']:checked").val();

            let NameType = IsRevenue == 1 ? "@Local["Doanh thu"]" : "@Local["Doanh số"]";
            let NameGroup = GroupID == 0 ? "@Local["Tất cả"]" : RP_DataCustomerGroup[GroupID].Name;

            $("#GG_DivDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#GG_DivDetail").offset().top
            }, 300);

            $("#GG_TitleDetail").html(NameType + ' - ' + NameGroup);
            GGrid_LoadDetail();
        })
    }

    //#endregion

    //#region //Execel

    function GGrid_Export () {
        syslog_ExpExcel('e', Outlang["Sys_nhom_khach_hang"]);
        exportToExcel("GG_Grid", Outlang["Sys_nhom_khach_hang"]);
    }

    async function GGrid_ExportDetail (isOption = 0) {
        let fileName = $("#GG_TitleDetail").html();
        let dataRoot = DataDetail;
        let eleContainer = $('#GG_DivDetail');
        let isAll = (isOption == 0);
        let dataExport = {
            "STT": ["@Local["STT"]", (value, { }, idx) => {return idx + 1}]
            , "CusCode": "@Local["Mã khách hàng"]"
            , "CusCodeOld": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custcodeold']`)).is(":checked"),
                data: "@Local["Mã khách hàng cũ"]"
            }
            , "CusDoc": "@Local["Mã hồ sơ"]"
            , "CusName": "@Local["Khách hàng"]"
            , "IsNew": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custnew']`)).is(":checked"),
                data: ["@Local["Khách hàng mới"]", (v) => {return v == "1" ? decodeHtml("@Local["Khách mới"]") : ""}]
            }
            , "SaleCode": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='salecode']`)).is(":checked"),
                data: "@Local["Mã lên đơn"]"
            }
            , "Amount": "@Local["Phát sinh"]"
            , "Type": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='type']`)).is(":checked"),
                data: ["@Local["Loại"]", (v) => {return GGrid_RenderType(v)}]
            }
            , "IDSer": ["@Local["Dịch vụ"]", (v, {Type}) => {return GGrid_RenderSerName(Type, v)}]
            , "GroupID": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='group']`)).is(":checked"),
                data: ["@Local["Nhóm"]", (v) => {return RP_DataCustomerGroup[v].Name == 'undefined' ? '' : RP_DataCustomerGroup[v].Name}]
            }
            , "BranchID": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='branch']`)).is(":checked"),
                data: ["@Local["Chi nhánh"]", (v) => {return RP_DataBranch[v].Name == 'undefined' ? '' : RP_DataBranch[v].Name}]
            }
            , "DateCreated": {
                isShow: isAll || (eleContainer.find(`.shtoogle[data-name='created']`)).is(":checked"),
                data: ["@Local["Ngày thanh toán"]", (v) => {return GetDateTime_String_DMY(v)}]
            }
        };
        dataExport = Checking_TabControl_System_RebuildHeader(dataExport, tableBodyId = 'GG_GridDetailBody', PermissionTable_TabControl);
        let nameFile = fileName;
        await exportJsonToExcel(nameFile, dataRoot, dataExport);
        return false;
    }

    //#endregion
</script>