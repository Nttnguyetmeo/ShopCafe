@page
@model MLunarCoffee.Pages.Report.RevenuePayment.Tab.ServiceFreeGridModel
@{
    Layout = null;
}

<div class="card-header p-3 px-0 pb-0">
    <div class="d-lg-flex gap-1">
        <div class="my-auto me-3">
            <h6 class="mb-0">Dịch Vụ Miễn Phí</h6>
            <p class="mb-0 text-sm">Dịch vụ miễn phí là tiền lên dịch vụ trong khoản thời gian tìm kiếm</p>
        </div>
        <div class="ms-auto my-auto">
            <div class="text-primary fw-bold d-inline mx-2">
                <span id="RP_SFTotalRender">0</span>
                <span class="mx-2">/</span>
                <span id="RP_SFTotalData">0</span>
            </div>
            <i class="vtt-icon vttech-icon-all text-sm text-gradient text-info"
               data-bs-toggle="collapse" data-bs-placement="top"
               href="#RP_SerFreeArea" aria-expanded="true"
               data-bs-original-title="Collapse"></i>
            <i class="vtt-icon  vttech-icon-refesh text-sm text-gradient text-info"
               data-bs-toggle="tooltip" data-bs-placement="top"
               data-bs-original-title="Refresh" onclick="event.preventDefault(); return RP_SerFreeLoadData()"></i>
            <i class="vtt-icon  vttech-icon-export-ex text-sm text-gradient text-info"
               data-bs-toggle="tooltip" data-bs-placement="top"
               data-bs-original-title="Excel" onclick="event.preventDefault(); return RP_SerFreeExport()"></i>
            <div class="position-relative d-inline">
                <button data-languagestatic="button_more" class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    Xem Thêm
                </button>
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Employee" type="checkbox" />
                                <p data-languagestatic="Employee" class="text-sm">Tư Vấn</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Phone" type="checkbox" />
                                <p data-languagestatic="Phone" class="text-sm">Số Điện Thoại</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Service" type="checkbox" />
                                <p data-languagestatic="Service" class="text-sm">Dịch Vụ</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custnew" type="checkbox" />
                                <p data-languagestatic="custnew" class="text-sm">Khách Mới</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="source" type="checkbox" />
                                <p data-languagestatic="source" class="text-sm">Nguồn</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="age" type="checkbox" />
                                <p data-languagestatic="age" class="text-sm">Độ Tuổi</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="gender" type="checkbox" />
                                <p data-languagestatic="gender" class="text-sm">Giới Tính</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="district" type="checkbox" />
                                <p data-languagestatic="district" class="text-sm">Quận/Huyện</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="city" type="checkbox" />
                                <p data-languagestatic="city" class="text-sm">Thành Phố/Tỉnh</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox" />
                                <p data-languagestatic="branch" class="text-sm">Chi Nhánh</p>
                            </div>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="DateCreate" type="checkbox" />
                                <p data-languagestatic="DateCreate" class="text-sm">Ngày Tạo</p>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-6">
            <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                <h6 class="text-sm text-primary text-gradient mb-0" data-fontchanged="true">Tổng Tiền Dịch Vụ</h6>
                <h6 class="font-weight-bolder"><span id="RP_SFPriceTotal">0</span></h6>
            </div>
        </div>
    </div>
</div>
<div class="collapsesticky collapse show" id="RP_SerFreeArea">
    <div class="card-body p-0 mt-3">
        <div class="m-0 my-0 mobile-responsive">
            <table class="table vt-table mb-0" id="RP_SFGrid">
                <thead>
                    <tr role="row">
                        <th>#</th>
                        <th data-languagestatic="CusCode">Mã KH</th>
                        <th data-languagestatic="CusName">Tên Khách Hàng</th>
                        <th data-languagestatic="CusDoc">Mã Hồ Sơ</th>
                        <th data-languagestatic="Employee" data-name="Employee">Tư Vấn</th>
                        <th data-languagestatic="Phone" data-name="Phone">SĐT</th>
                        <th data-languagestatic="ServiceName" data-name="Service">Dịch Vụ</th>
                        <th data-languagestatic="Price">Giá</th>
                        <th data-languagestatic="CusNew" data-name="custnew">Khách Mới</th>
                        <th data-languagestatic="Source" data-name="source">Nguồn</th>
                        <th data-languagestatic="Age" data-name="age">Tuổi</th>
                        <th data-languagestatic="Gender" data-name="gender">Giới Tính</th>
                        <th data-languagestatic="District" data-name="district">Quận/Huyện</th>
                        <th data-languagestatic="City" data-name="city">Tỉnh</th>
                        <th data-languagestatic="Branch" data-name="branch">Chi Nhánh</th>
                        <th data-languagestatic="ReasonFree">Lý Do Free</th>
                        <th data-languagestatic="Create" data-name="DateCreate">Ngày Tạo</th>
                    </tr>
                </thead>
                <tbody data-languagestatic="grid" id="RP_SFGridBody"></tbody>
            </table>
        </div>
        <button class="btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RP_SerFreeRenderMore();">
            Render More
        </button>
    </div>
</div>
<!--#region old-->
@*<div class="row px-1 form3">
    <div class="col-12 col-md-5 col-xl-4 px-1 mt-2">
        <div>
            <div class="card-header p-3 pb-0">
                <div class="d-lg-flex">
                    <div class=" col-auto my-auto">
                        <p data-languagestatic="free_serv" class="text-md text-dark font-weight-bold mb-1">
                            Dịch vụ miễn phí
                        </p>
                        <p class="text-sm mb-0">Some text </p>
                    </div>
                    <div class="ms-auto my-auto mt-1">
                        <i class="vtt-icon  vttech-icon-refesh text-sm text-gradient text-info"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-original-title="Refresh" onclick="LoadDataReport()"></i>
                        <i data-tab="export_excel" class="_tab_control_ vtt-icon  vttech-icon-export-ex text-sm text-gradient text-info"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-original-title="Excel" onclick="exportData()"></i>
                    </div>
                </div>
                <div class="row p-2 pb-0 ps-0">
                    <div class="col-lg-12">
                        <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                            <h6 data-languagestatic="total" class="text-sm text-primary text-gradient mb-0">Tổng</h6>
                            <h6 class="font-weight-bolder"> <span id="lbTotalReason">0</span></h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="field col-12 col-md-7 col-xl-8 px-1 mt-2">
        <div class="card" id="detailShow" style="display: none;">
            <div class="card-header p-3 pb-0">
                <div class="d-lg-flex">
                    <div class="w-70 col-auto my-auto">
                        <p id="lbDetailReason" class="text-md text-dark font-weight-bold mb-1">
                        </p>
                        <p class="text-sm mb-0">Some text of detail sub</p>
                    </div>
                    <div class="ms-auto my-auto mt-1">
                        <i data-tab="export_excel" class="_tab_control_ vtt-icon  vttech-icon-export-ex text-sm text-gradient text-info"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-original-title="Excel" onclick="exportData_Detail()"></i>
                    </div>
                </div>
            </div>
            <div class="card-body p-3 pt-0">
                <div class="m-0 my-3 mobile-responsive">
                    <table class="table vt-table mb-0" id="dtDetail">
                        <thead>
                            <tr>
                                <th data-languagestatic="no" style="width: 60px">#</th>
                                <th data-languagestatic="cust_code" style="width: 150px">MSKH</th>
                                <th data-languagestatic="cust">Khách Hàng</th>
                                <th data-languagestatic="servicename">Tên Dịch Vụ</th>
                                <th data-languagestatic="price">Mệnh Giá</th>
                                <th data-languagestatic="creator">Ngày Tạo</th>
                            </tr>
                        </thead>
                        <tbody data-languagedyn="grid" id="dtBodyDetail">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>*@

<!--#endregion-->
<script>js_require('/js/comon/initialize_setting.js');</script>
<script type="text/javascript">

    let RP_SFSpliceData;
    let RP_SFIndexData = 0;
    let RP_SFTimeoutCount;
    let RP_SFDataExcel;

    $(document).ready(function () {
        shtable = $("#RP_SFGrid").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });

        RP_SerFreeLoadData();
        //Checking_TabControl_Permission();
    });


    //#region //LOAD
    function RP_SerFreeLoadData () {
        let RP_SFDateFrom = "@Model._dateFrom";
        let RP_SFDateTo = "@Model._dateTo";
        let RP_SFBranchID = "@Model._BranchID";
        let RP_SFTokenBranchUser = "@Model._TokenBranchUser";
        RP_SFIndexData = 0;
        $("#RP_SFGridBody").empty();
        AjaxLoad(url = "/Report/RevenuePayment/Tab/ServiceFreeGrid/?handler=Loadata"
            , data = {
                'dateFrom': RP_SFDateFrom
                , 'dateTo': RP_SFDateTo
                , 'branchID': RP_SFBranchID
                , 'TokenBranchUser': RP_SFTokenBranchUser
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data && data.length > 0) {
                        RP_SFDataExcel = JSON.parse(result);
                        RP_SFSpliceData = sliceIntoChunks(JSON.parse(result), 500);
                        fnRenderBlock(RP_SFSpliceData[RP_SFIndexData], "RP_SFGridBody"
                            , blocknum = 100
                            , fnrender = RP_SerFreeRender
                            , fnsuccess = null
                        );
                        RP_SerFreeCalTotal(data);
                    }
                } else {
                    notiError_SW();
                }
            }
        );
        return false;
    }
    function RP_SerFreeRenderMore () {
        RP_SFIndexData += 1;
        if (RP_SFSpliceData && RP_SFSpliceData[RP_SFIndexData]) {
            fnRenderBlock(RP_SFSpliceData[RP_SFIndexData], "RP_SFGridBody"
                , blocknum = 100
                , fnrender = RP_SerFreeRender
                , fnsuccess = null
            );
        }
    }
    //#endregion


    //#region // RENDER
    async function RP_SerFreeRender (data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = `
                                <td class="vt-number-order"></td>
                                <td class="d-none">${item.CusID}</td>
                                <td>
                                    <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CusID}&ver=${versionofWebApplication}">
                                        ${item.CusCode}
                                    </a>
                                </td>
                                <td>${item.CusName}</td>
                                <td>${item.CusDoc}</td>
                                <td data-name="Employee">${item.NameEmployee}</td>
                                <td data-name="Phone"><span class="_tab_control_" data-tab="phone_customer">${item.CusPhone}</span></td>
                                <td data-name="Service">${item.ServiceName}</td>
                                <td>${formatNumber(item.PriceRoot)}</td>
                                <td data-name="custnew">${(item.IsCusNew == 1) ? `<i class="fas fa-check text-success"></i>` : ``}</td>
                                <td data-name="source">${RP_SerFreeGetName(RP_DataCustomerSource, item.SourceID)}</td>
                                <td data-name="age">${RP_SerFreeTypeAge(item.Birthday)}</td>
                                <td data-name="gender">${RP_SerFreeGetGender(item.Gender)}</td>
                                <td data-name="district">${item.District}</td>
                                <td data-name="city">${item.City}</td>
                                <td data-name="branch">${RP_SerFreeGetName(RP_DataBranch, item.BranchID)}</td>
                                <td>${item.ReasonFree}</td>
                                <td data-name="DateCreate">${ConvertDateTimeUTC_DMYHM(item.Created)}</td>
                            `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        shtable.Refresh();
                        clearTimeout(RP_SFTimeoutCount);
                        RP_SFTimeoutCount = setTimeout(() => {
                            Count_Up("RP_SFTotalRender", $("#" + id).children().length);
                        }, 300)
                        //Checking_TabControl_Permission();
                    }
                }
            }, 100);
        })
    }
    function RP_SerFreeGetName (data, id) {
        try {
            let result = '';
            if (data && data[id] != undefined) {
                result = data[id].Name;
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function RP_SerFreeTypeAge (date) {
        try {
            let age = 0;
            let result = '';
            if (!date.includes('1900')) {
                age = RP_SerFreeGetAge(date);
            }
            if (age > 0) {
                if (age <= 16) result = '< 16'
                else if (age > 16 && age <= 30) result = '17 - 30'
                else if (age > 30 && age <= 40) result = '31 - 40'
                else if (age > 40 && age <= 50) result = '41 - 50'
                else if (age > 50) result = '> 51'
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function RP_SerFreeGetAge (datestring) {
        try {
            var today = new Date();
            var birthDate = new Date(datestring);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }
        catch (ex) {
            return 0;
        }
    }
    function RP_SerFreeGetGender (id) {
        try {
            let result = 'Nam';
            if (id == 61) result = 'Nữ';
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    async function RP_SerFreeCalTotal (data) {
        new Promise((resolve) => {
            let RP_SFTotalPrice = 0;
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    RP_SFTotalPrice += item.PriceRoot;
                }
            }
            Count_Up($("#RP_SFPriceTotal").html(formatNumber(RP_SFTotalPrice)));
            Count_Up($("#RP_SFTotalData").html(data.length));
            resolve();
        })
    }
    //#endregion

    //#region //RENDER
    function RP_SerFreeExport () {
        try {
            if (RP_SFDataExcel && RP_SFDataExcel.length > 0) {
                let RP_SFExport = RP_SFDataExcel.reduce((pre, arr, index) => {
                    let e = {};
                    e[''] = index + 1;
                    e['Mã KH'] = arr.CusCode;
                    e['Tên KH'] = arr.CusName;
                    e['Mã Hồ Sơ'] = arr.CusDoc;
                    e['Tư Vấn'] = arr.NameEmployee
                    e['Số Điện Thoại'] = arr.CusPhone;
                    e['Dịch Vụ'] = arr.ServiceName;
                    e['Giá'] = arr.PriceRoot;
                    e['Khách Mới'] = (arr.IsCusNew == 1) ? 'x' : '';
                    e['Nguồn'] = RP_SerFreeGetName(RP_DataCustomerSource, arr.SourceID);
                    e['Tuổi'] = RP_SerFreeTypeAge(arr.Birthday);
                    e['Giới Tính'] = RP_SerFreeGetGender(arr.Gender);
                    e['Quận/Huyện'] = arr.District;
                    e['Tỉnh'] = arr.City;
                    e['Chi Nhánh'] = RP_SerFreeGetName(RP_DataBranch, arr.BranchID);
                    e['Lý Do Miễn Phí'] = arr.ReasonFree;
                    e['Ngày Tạo'] = ConvertDateTimeUTC_DMYHM(arr.Created);
                    pre.push(e);
                    return pre
                }, []);
                exportJsonToExcel('dich-vu-mien-phi', RP_SFExport);
            }
            else {
                notiWarning('Không có dữ liệu để xuất!');
            }
        }
        catch (ex) {
            notiWarning('Không xuất được File!');
        }
    }
    //#endregion
</script>
