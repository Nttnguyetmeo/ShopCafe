@page
@model MLunarCoffee.Pages.Report.Revenue.Service.ServiceGridModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left w-md-50 w-100">
            <div class="ui fluid search selection dropdown form-control" id="Des_Service" onchange="DeS_FillService()">
                <input type="hidden" name="branch" />
                <input class="search" autocomplete="off" tabindex="0" />
                <div class="default text">eg .@Local["Dịch vụ"]</div>
                <div id="Des_CbbService" class="menu" tabindex="-1">
                </div>
            </div>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#DeS_GridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return DeS_Load()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return DeS_Export()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="DeS_GridArea">
        <div class="card-body p-0">
            <div class="m-0 my-3 mobile-responsive" style="max-height: calc(90vh - 350px);">
                <table class="table vt-table mb-0" id="DeS_Grid">
                    <thead>
                        <tr role="row">
                            <th rowspan="3">#</th>
                            <th rowspan="3">@Local["Tên"]</th>
                            <th rowspan="1" colspan="4">@Local["Tổng"]</th>
                            <th rowspan="1" colspan="4">@Local["Khách mới"]</th>
                            <th rowspan="1" colspan="4">@Local["Khách cũ"]</th>
                        </tr>
                        <tr role="row">
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh số"]</th>
                            <th rowspan="1" colspan="2">@Local["Doanh thu"]</th>
                        </tr>
                        <tr role="row">
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Phát sinh"]</th>
                            <th>@Local["Số lượng khách"]</th>
                            <th>@Local["Thanh toán"]</th>
                        </tr>
                    </thead>
                    <tbody id="DeS_GridBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="DeS_GridAreaDetail" class="mt-1" style="display:none;">
    <div class="d-lg-flex">
        <div class="w-lg-50 col-auto my-auto">
            <div class="d-flex align-items-center mb-sm-0 mb-4">
                <div class="form-check">
                    <input id="DeS_target" name="BtnRevenue" value="0" class="form-check-input pr-2 cursor-pointer BtnRevenue" type="radio" checked="checked">
                    <label class="custom-control-label cursor-pointer" for="DeS_target">@Local["Doanh số"]</label>
                </div>
                <div class="form-check ms-3">
                    <input id="DeS_revenue" name="BtnRevenue" value="1" class="form-check-input pr-2 cursor-pointer BtnRevenue" type="radio">
                    <label class="custom-control-label cursor-pointer" for="DeS_revenue">@Local["Doanh thu"]</label>
                </div>
            </div>
        </div>
    </div>
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-3 p-0">
            <div class="left">
                <p class="text-md text-dark font-weight-bold mb-1"><span id="DeS_TitleDetail"></span></p>
            </div>
            <div class="right">
                <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                    <span id="DeS_currentdata">0</span>
                    <span class="mx-2">/</span>
                    <span id="DeS_totaldata">0</span>
                </div>
                <div class="icon-hover mx-1 mt-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#DeS_DivGridDetail" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1 mt-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["In báo cáo"]">
                    <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); DeS_DetailPrintReport()"></i>
                </div>
                <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                    <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                    </div>
                    <div class="input-group-text icon-hover w-auto vttech-input-item">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DeS_ExecelDetail(0)">@Local["Tất cả"]</i>
                    </div>
                    <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return DeS_ExecelDetail(1)">@Local["Tùy chọn"]</i>
                    </div>
                </div>
                <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custcodeold" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="CusNew" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Khách hàng mới"]</p>
                        </li>
                        <li class="d-flex" id="DeS_liPayDeposit">
                            <div class="form-check form-switch">
                                <input id="DeS_ckbPayDeposit" class="shtoogle form-check-input" data-name="paymentdeposit" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Tiền cọc cấn trừ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="timetotreatment" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Số lần điều trị"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="detail" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Chi tiết"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="CusSource" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nguồn"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="CusBranch" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Chi nhánh"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="PayDay" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày thanh toán"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="SerDay" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày lên dịch vụ"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="CusDay" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày tạo hồ sơ"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="DeS_DivGridDetail">
            <div class="card-body p-0">
                <div class="m-0 my-0 mobile-responsive position-relative vt-header-sticky">
                    <table data-name="DeS_GridDetail" class="table vt-table mb-0" id="DeS_GridDetail">
                        <thead>
                            <tr role="row">
                                <th>#</th>
                                <th>@Local["Mã khách hàng"]</th>
                                <th data-name="custcodeold">@Local["Mã khách hàng cũ"]</th>
                                <th>@Local["Mã hồ sơ"]</th>
                                <th>@Local["Khách hàng"]</th>
                                <th data-name="CusNew">@Local["Khách hàng mới"]</th>
                                <th>@Local["Phát sinh"]</th>
                                <th data-name="paymentdeposit">@Local["Tiền cọc cấn trừ"]</th>
                                <th>@Local["Loại"]</th>
                                <th>@Local["Dịch vụ"]</th>
                                <th data-name="quantity" style="min-width: 80px;">@Local["Số lượng"]</th>
                                <th data-name="timetotreatment" style="min-width: 80px;">@Local["Số lần điều trị"]</th>
                                <th data-name="detail" style="min-width:150px;">@Local["Chi tiết"]</th>
                                <th data-name="CusSource">@Local["Nguồn"]</th>
                                <th data-name="CusBranch">@Local["Chi nhánh"]</th>
                                <th data-name="PayDay">@Local["Ngày thanh toán"]</th>
                                <th data-name="SerDay">@Local["Ngày lên dịch vụ"]</th>
                                <th data-name="CusDay">@Local["Ngày tạo hồ sơ"]</th>
                            </tr>
                        </thead>
                        <tbody id="DeS_GridDetailBody">
                        </tbody>
                    </table>
                </div>
                <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return DeS_RenderMore();">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    //#region //Init & Load & Combo
    let DeS_DataJson = {
        "Service": {
            "ID": 0,
            "Name": "Dịch vụ/sản phẩm"
        },
        "Card": {
            "ID": 1,
            "Name": "Thẻ trả trước"
        },
        "Medicine": {
            "ID": 2,
            "Name": "Đơn thuốc"
        },
        "Deposit": {
            "ID": 3,
            "Name": "Tiền cọc"
        }
    };
    let DeS_TypeID = 0, DeS_ServiceID = 0, DeS_Revenue = 0;
    let DataReportMain, DataReportMainSlice;
    let IndexReport = 0;
    let timeoutCount;
    let Des_Shtable;
    let Des_DtService = [], Des_DataMain = [];

    let DeS_dateFrom = "@Model._dateFrom";
    let DeS_dateTo = "@Model._dateTo";
    let DeS_branch = "@Model._branch";

    $(document).ready(function () {
        Des_Shtable = $("#DeS_GridDetail").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        DeS_CheckTypeRev();
        ToolPopper();
        DeS_Load();
        DeS_Event();

        Checking_TabControl_Permission();
    });



    function DeS_Load() {

        AjaxLoad(url = "/Report/Revenue/Service/ServiceGrid/?handler=Loadata"
            , data = {
                'branchID': DeS_branch,
                'dateFrom': DeS_dateFrom,
                'dateTo': DeS_dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    Des_DataMain = datas["Table"];
                    DeS_Render(Des_DataMain, "DeS_GridBody");
                    DeS_LoadCombo(Des_DataMain);
                } else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function DeS_LoadCombo (data) {
        let str = ',';

        for (let i = 0; i < data.length; i++) {
            let item = data[i];

            if (!str.includes(',' + item + ',') && item["Service"] != 0) {
                let y = {};
                y.ID = item["Service"];
                y.Name = RP_DataService[item["Service"]].Name;

                str += item["Service"] + ',';
                Des_DtService.push(y);
            }
        }
        Load_Combo(Des_DtService, "Des_CbbService", true, '@Local["Tất cả dịch vụ"]');
        $("#Des_Service").dropdown("refresh");
        $("#Des_Service").dropdown("set selected", '0');
    }

    //#endregion



    //#region //Render

    async function DeS_Render(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    let trtotal = '';
                    let t_targetsl = 0, t_targetam = 0, t_revenuesl = 0, t_revenueam = 0;
                    let n_targetsl = 0, n_targetam = 0, n_revenuesl = 0, n_revenueam = 0;
                    let o_targetsl = 0, o_targetam = 0, o_revenuesl = 0, o_revenueam = 0;
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let name = '';

                        if (item.Deposit == 1) name = '@Local["Tiền cọc"]';
                        else if (item.Medicine == 1) name = '@Local["Thuốc"]';
                        else if (item.Card == 1) name = '@Local["Thẻ"]';
                        else {
                            let _item = RP_DataService[item.Service];
                            name = _item != undefined ? _item.Name : '';
                        }



                        t_targetsl = t_targetsl + item.TotalTarget;
                        t_targetam = t_targetam + item.TotalTargetAmount;
                        t_revenuesl = t_revenuesl + item.TotalRevenue;
                        t_revenueam = t_revenueam + item.TotalRevenueAmount;

                        n_targetsl = n_targetsl + item.NewTarget;
                        n_targetam = n_targetam + item.NewTargetAmount;
                        n_revenuesl = n_revenuesl + item.NewRevenue;
                        n_revenueam = n_revenueam + item.NewRevenueAmount;

                        o_targetsl = o_targetsl + item.OldTarget;
                        o_targetam = o_targetam + item.OldTargetAmount;
                        o_revenuesl = o_revenuesl + item.OldRevenue;
                        o_revenueam = o_revenueam + item.OldRevenueAmount;
                        let tr =
                            '<td class="vt-number-order"></td>'
                            + '<td>'
                            + '<a href="#" class="border-1 border-primary border-bottom btnClickTitle" data-service="' + item.Service + '" data-id="' + DeS_GetIdDetail(item.Deposit, item.Medicine, item.Card) + '">' + name + '</a>'
                            + '</td>'
                            + '<td>' + formatNumber(item.TotalTarget) + '</td>'
                            + '<td>' + formatNumber(item.TotalTargetAmount) + '</td>'
                            + '<td>' + formatNumber(item.TotalRevenue) + '</td>'
                            + '<td>' + formatNumber(item.TotalRevenueAmount) + '</td>'

                            + '<td>' + formatNumber(item.NewTarget) + '</td>'
                            + '<td>' + formatNumber(item.NewTargetAmount) + '</td>'
                            + '<td>' + formatNumber(item.NewRevenue) + '</td>'
                            + '<td>' + formatNumber(item.NewRevenueAmount) + '</td>'

                            + '<td>' + formatNumber(item.OldTarget) + '</td>'
                            + '<td>' + formatNumber(item.OldTargetAmount) + '</td>'
                            + '<td>' + formatNumber(item.OldRevenue) + '</td>'
                            + '<td>' + formatNumber(item.OldRevenueAmount) + '</td>';

                        stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                        if (data.length > 1 && i == data.length - 1) {
                            trtotal =
                                '<td></td>'
                                + '<td>'
                                + '<a href="#" class="border-1 border-primary border-bottom btnClickTitle text-white" data-service="0" data-id="0">@Local["Tổng"]</a>'
                                + '</td>'
                                + '<td>' + formatNumber(t_targetsl) + '</td>'
                                + '<td>' + formatNumber(t_targetam) + '</td>'
                                + '<td>' + formatNumber(t_revenuesl) + '</td>'
                                + '<td>' + formatNumber(t_revenueam) + '</td>'
                                + '<td>' + formatNumber(n_targetsl) + '</td>'
                                + '<td>' + formatNumber(n_targetam) + '</td>'
                                + '<td>' + formatNumber(n_revenuesl) + '</td>'
                                + '<td>' + formatNumber(n_revenueam) + '</td>'
                                + '<td>' + formatNumber(o_targetsl) + '</td>'
                                + '<td>' + formatNumber(o_targetam) + '</td>'
                                + '<td>' + formatNumber(o_revenuesl) + '</td>'
                                + '<td>' + formatNumber(o_revenueam) + '</td>'
                                ;
                            stringContent = stringContent + '<tr class="text-white bg-gradient bg-primary" role="row">' + trtotal + '</tr>';
                        }
                    }
                }
                myNode.innerHTML = stringContent;
            }
            DeS_EventMaster();
        })
    }
    function DeS_GetIdDetail(IsDeposit, IsMedicine, IsCard) {
        try {
            let Result = 0;
            if (IsDeposit == 1) {
                Result = Number(DeS_DataJson["Deposit"]["ID"]);
            } else if (IsMedicine == 1) {
                Result = Number(DeS_DataJson["Medicine"]["ID"]);
            } else if (IsCard == 1) {
                Result = Number(DeS_DataJson["Card"]["ID"]);
            } else {
                Result = 0
            }
            return Result;
        }
        catch {
            return 0;
        }
    }
    //#endregion

    //#region //Event
    function DeS_EventMaster() {
        $('#DeS_GridBody .btnClickTitle').unbind('click').click(function () {
            let Name = $(this).html();
            DeS_TypeID = Number($(this).attr('data-id'));
            DeS_ServiceID = Number($(this).attr('data-service'));

            $("#DeS_GridAreaDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#DeS_GridAreaDetail").offset().top
            }, 300);
            $('#DeS_TitleDetail').html(((DeS_TypeID == "0" && DeS_ServiceID == "0") ? "@Local["Tất cả loại"]" : Name));

            DeS_LoadDetail(DeS_TypeID, DeS_ServiceID, DeS_Revenue);
        })
    }

    function DeS_FillService () {
        let ServiceID = $("#Des_Service").dropdown("get value") ? Number($("#Des_Service").dropdown("get value")) : 0;
        let data = Des_DataMain;
        if (ServiceID != 0) {
            data = data.filter((item) => {return item["Service"] == ServiceID});
        }
        DeS_Render(data, "DeS_GridBody");
    }


    //#endregion

    //#region //Detail
    function DeS_LoadDetail(TypeID, ServiceID, IsRevenue) {
        IndexReport = 0;
        $('#DeS_GridDetailBody').empty();
        AjaxLoad(url = "/Report/Revenue/Service/ServiceGrid/?handler=LoadataDetail"
            , data = {
                'branchID': DeS_branch
                , 'dateFrom': DeS_dateFrom
                , 'dateTo': DeS_dateTo
                , 'TypeID': TypeID
                , 'ServiceID': ServiceID
                , 'IsRevenue': IsRevenue
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result)['Table1'];
                    DataReportMain = datas;
                    DataReportMainSlice = sliceIntoChunks(JSON.parse(result)['Table1'], 500);
                    fnRenderBlock(DataReportMainSlice[IndexReport] ?? [], 'DeS_GridDetailBody'
                        , blocknum = 100
                        , fnrender = Des_RenderDetail
                        , fnsuccess = function (e) { }
                        , fnbegin = function (e) { }
                    )
                    Count_Up("DeS_totaldata", datas.length);
                    $('#DeS_currentdata').html('0');

                } else {
                    notiError_SW();
                }
            }
        );
    }

    function DeS_RenderMore() {
        IndexReport += 1;
        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
            fnRenderBlock(DataReportMainSlice[IndexReport], "DeS_GridDetailBody"
                , blocknum = 100
                , fnrender = Des_RenderDetail
                , fnsuccess = null
            );
        }
    }

    async function Des_RenderDetail(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let isNew = item?.IsNew == 1 ? '<i class="fas fa-check text-primary"></i>' : '';
                            let detail = Des_Render_SerDetail(item.TeethType, item.TeethChoosing, item.TreatIndex, item.TimeToTreatment);
                            let tr = `
                                    <td class="vt-number-order"></td>
                                    <td>
                                        <a href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}" target="_blank">${item.CusCode}</a>
                                    </td>
                                    <td data-name="custcodeold">${item.CustOldCode}</td>
                                    <td>${item.CusDoc}</td>
                                    <td>${item.CusName}</td>
                                    <td data-name="CusNew" class="text-center">${isNew}</td>
                                    <td>${formatNumber(item.Amount)}</td>
                                    <td data-name="paymentdeposit">${formatNumber(item.PaymentDeposit)}</td>
                                    <td>${Des_Render_GetType(item.Deposit, item.Medicine, item.Card)}</td>
                                    <td>${Des_render_GetName(item.Deposit, item.Medicine, item.Card, item.CardID, item.MedicineID, item.Service)}</td>
                                    <td data-name="quantity"> ${item.Quantity} </td>
                                    <td data-name="timetotreatment"> ${(sys_dencos_Main == 0) && (item.TimeToTreatment != 0) ? item.TimeToTreatment : ''} </td>
                                    <td data-name="detail"> ${detail} </td>
                                    <td data-name="CusSource">${(RP_DataCustomerSource[item.Source] != undefined) ? RP_DataCustomerSource[item.Source].Name : ''}</td>
                                    <td data-name="CusBranch">${(RP_DataBranch[item.BranchID] != undefined) ? RP_DataBranch[item.BranchID].Name : ''}</td>
                                    <td data-name="PayDay">${!item.PayCreated.includes('1900') ? ConvertDateTimeUTC_DMY(item.PayCreated) : ''}</td>
                                    <td data-name="SerDay">${!item.SerCreated.includes('1900') ? ConvertDateTimeUTC_DMY(item.SerCreated) : ''}</td>
                                    <td data-name="CusDay">${!item.SerCreated.includes('1900') ? ConvertDateTimeUTC_DMY(item.CusCreated) : ''}</td>
                                `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        clearTimeout(timeoutCount);
                        timeoutCount = setTimeout(() => {
                            Count_Up("DeS_currentdata", $("#" + id).children().length);
                        }, 300)
                    }
                }
                Des_Shtable.Refresh();
            }, 100);
        })
    }
    function Des_Render_GetType(IsDeposit, IsMedicine, IsCard) {
        try {
            let result = '';
            if (IsDeposit == 1) {
                result = DeS_DataJson["Deposit"]["Name"];
            } else if (IsMedicine == 1) {
                result = DeS_DataJson["Medicine"]["Name"];
            } else if (IsCard == 1) {
                result = DeS_DataJson["Card"]["Name"];
            } else {
                result = DeS_DataJson["Service"]["Name"];
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function Des_render_GetName(IsDeposit, IsMedicine, IsCard, CardID, MedicineID, ServiceID) {
        try {
            let result = '';
            if (IsDeposit == 1) {
                result = '';
            } else if (IsMedicine == 1) {
                result = (RP_DataMedicine[MedicineID] != undefined) ? RP_DataMedicine[MedicineID].Name : ''
            } else if (IsCard == 1) {
                result = (RP_DataCard[CardID] != undefined) ? RP_DataCard[CardID].Name : ''
            } else {
                result = (RP_DataService[ServiceID] != undefined) ? RP_DataService[ServiceID].Name : ''
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function Des_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment) {
        try {
            let result = '';
            if (sys_dencos_Main == 0) {
                result = `${decodeHtml("@Local["Đã điều trị"]")}: ${TreatIndex} | ${TimeToTreatment}`
            }
            else {
                result = `${(TeethChoosing != '') ? Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType) : ''}`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion
    //#region //Event
    function DeS_Event() {
        $('#DeS_GridAreaDetail .BtnRevenue').on('change', function () {
            DeS_Revenue = !isNaN(Number($("input[name='BtnRevenue']:checked").val())) ? Number($("input[name='BtnRevenue']:checked").val()) : 0;
            DeS_CheckTypeRev();
            DeS_LoadDetail(DeS_TypeID, DeS_ServiceID, DeS_Revenue);
        })
    }
    function DeS_CheckTypeRev() {
        if(DeS_Revenue) {
            $('#DeS_liPayDeposit').removeClass('d-none');
        }
        else {
            $("#DeS_ckbPayDeposit").prop("checked", false);
            $('#DeS_liPayDeposit').addClass('d-none');
        }
    }
    //#endregion
    //#region //Execel

    function DeS_Export () {
        exportToExcel("DeS_Grid", Outlang["Dich_vu"]);
        syslog_ExpExcel('e', Outlang["Dich_vu"]);
    }

    function DeS_ExecelDetail(isOption = 0) {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#DeS_GridAreaDetail');
                let dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, idx) => { return idx + 1 }]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custcodeold']`)).is(":checked"),
                        data: ["@Local["Mã khách hàng cũ"]", (value) => { return value }]
                    }
                    , "CusDoc": ["@Local["Mã hồ sơ"]"]
                    , "CusName": ["@Local["Khách hàng"]"]
                    , "IsNew": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='CusNew']`)).is(":checked"),
                        data: ["@Local["Khách hàng mới"]", (value) => { return value == 1 ? 'x' : '' }]
                    }
                    , "Amount": ["@Local["Phát sinh"]"]
                    , "PaymentDeposit": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='paymentdeposit']`)).is(":checked"),
                        data: ["@Local["Tiền cọc cấn trừ"]"]
                    }
                    , "Deposit1": ["@Local["Loại"]", (value, { Deposit, Medicine, Card }) => { return Des_Render_GetType(Deposit, Medicine, Card) }]
                    , "Deposit2": ["@Local["Dịch vụ"]", (value, { Deposit, Medicine, Card, CardID, MedicineID, Service }) => { return Des_render_GetName(Deposit, Medicine, Card, CardID, MedicineID, Service) }]
                    , "Quantity": ["@Local["Số lượng"]"]
                    , "TimeToTreatment": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='timetotreatment']`)).is(":checked"),
                        data: ["@Local["Số lần điều trị"]", (value, { }) => {
                            return (sys_dencos_Main == 0) && (value != 0) ? value : ''
                        }]
                    }
                    , "Detail": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='detail']`)).is(":checked"),
                        data: ["@Local["Chi tiết"]", (v, { TeethType, TeethChoosing, TreatIndex, TimeToTreatment }) => {
                            return Des_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment);
                        }]
                    }
                    , "Source": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='CusSource']`)).is(":checked"),
                        data: ["@Local["Nguồn"]", (value) => { return RP_DataCustomerSource[value] != undefined ? RP_DataCustomerSource[value].Name : '' }]
                    }
                    , "BranchID": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='CusBranch']`)).is(":checked"),
                        data: ["@Local["Chi nhánh"]", (value) => { return (RP_DataBranch[value] != undefined) ? RP_DataBranch[value].Name : '' }]
                    }
                    , "PayCreated": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='PayDay']`)).is(":checked"),
                        data: ["@Local["Ngày thanh toán"]", (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}]
                    }
                    , "SerCreated": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='SerDay']`)).is(":checked"),
                        data: ["@Local["Ngày lên dịch vụ"]", (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}]
                    }
                    , "CusCreated": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='CusDay']`)).is(":checked"),
                        data: ["@Local["Ngày tạo hồ sơ"]", (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}]
                    }
                };
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'DeS_GridDetailBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang["Chi_tiet_dich_vu"]);
                exportJsonToExcel(Outlang["Chi_tiet_dich_vu"], DataReportMain, dataHeader);
            }
            else notiWarning('@Local["Không có dữ liệu để xuất"]!');
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
    async function DeS_DetailPrintReport() {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let _branchID = "@Model._branch";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, idx) => { return idx + 1 }
                    }]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": ["@Local["Mã khách hàng cũ"]", {
                        isShow: $(`.shtoogle[data-name='custcodeold']`).is(":checked"),
                        callbackRenderValue: (value) => { return value }
                    }]
                    , "CusDoc": ["@Local["Mã hồ sơ"]"]
                    , "CusName": ["@Local["Khách hàng"]"]
                    , "IsNew": ["@Local["Khách hàng mới"]", {
                        isShow: $(`.shtoogle[data-name='CusNew']`).is(":checked"),
                        callbackRenderValue: (value) => { return value == 1 ? 'x' : '' }
                    }]
                    , "Amount": ["@Local["Phát sinh"]", {
                        callbackRenderValue: (value) => { return formatNumber(value) }
                        , isTotalFooter: true
                    }]
                    , "PaymentDeposit": ["@Local["Tiền cọc cấn trừ"]", {
                        isShow: $(`.shtoogle[data-name='paymentdeposit']`).is(":checked")
                        , isTotalFooter: true
                    }]
                    , "Deposit1": ["@Local["Loại"]", {
                        callbackRenderValue: (value, { Deposit, Medicine, Card }) => { return Des_Render_GetType(Deposit, Medicine, Card) }
                    }]
                    , "Deposit2": ["@Local["Dịch vụ"]", {
                        callbackRenderValue: (value, { Deposit, Medicine, Card, CardID, MedicineID, Service }) => {
                            return Des_render_GetName(Deposit, Medicine, Card, CardID, MedicineID, Service)
                        }
                    }]
                    , "Quantity": ["@Local["Số lượng"]", {
                        isTotalFooter: true
                    }]
                    , "TimeToTreatment": ["@Local["Số lần điều trị"]", {
                        isShow: $(`.shtoogle[data-name='timetotreatment']`).is(":checked"),
                        callbackRenderValue: (value, { }) => {
                            return (sys_dencos_Main == 0) && (value != 0) ? value : ''
                        }
                        , isTotalFooter: true
                    }]
                    , "Detail": ["@Local["Chi tiết"]", {
                        isShow: $(`.shtoogle[data-name='detail']`).is(":checked"),
                        callbackRenderValue: (v, { TeethType, TeethChoosing, TreatIndex, TimeToTreatment }) => {
                            return Des_Render_SerDetail(TeethType, TeethChoosing, TreatIndex, TimeToTreatment);
                        }
                    }]
                    , "Source": ["@Local["Nguồn"]", {
                        isShow: $(`.shtoogle[data-name='CusSource']`).is(":checked"),
                        callbackRenderValue: (value) => { return RP_DataCustomerSource[value] != undefined ? RP_DataCustomerSource[value].Name : '' }
                    }]
                    , "BranchID": ["@Local["Chi nhánh"]", {
                        isShow: $(`.shtoogle[data-name='CusBranch']`).is(":checked"),
                        callbackRenderValue: (value) => { return (RP_DataBranch[value] != undefined) ? RP_DataBranch[value].Name : '' }
                    }]
                    , "PayCreated": ["@Local["Ngày thanh toán"]", {
                        isShow: $(`.shtoogle[data-name='PayDay']`).is(":checked"),
                        callbackRenderValue: (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}
                    }]
                    , "SerCreated": ["@Local["Ngày lên dịch vụ"]", {
                        isShow: $(`.shtoogle[data-name='SerDay']`).is(":checked"),
                        callbackRenderValue: (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}
                    }]
                    , "CusCreated": ["@Local["Ngày tạo hồ sơ"]", {
                        isShow: $(`.shtoogle[data-name='CusDay']`).is(":checked"),
                        callbackRenderValue: (value) => {return (!value.includes('1900') ? ConvertDateTimeUTC_DMY(value) : '')}
                    }]
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang["Chi_tiet_dich_vu"], DataReportMain, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                                            //#endregion
</script>
