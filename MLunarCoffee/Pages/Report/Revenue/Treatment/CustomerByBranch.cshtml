@page
@model MLunarCoffee.Pages.Report.RevenuePayment.Treatment.CustomerByBranchModel
@{
    Layout = null;
}

<div class="card">
    <div class="card-header p-3 ">
        <div class="d-lg-flex">
            <div class="w-70 col-auto my-auto">
                <p data-languagestatic="treatment_customer_bybranch_header"
                   class="text-md text-dark font-weight-bold mb-1">Danh sách khách hàng điều trị theo chi nhánh</p>
                <p class="text-sm mb-0">Some text of detail sub</p>
            </div>
            <div class="ms-auto my-auto mt-1">
                <i class="vtt-icon vttech-icon-all text-sm text-gradient text-info"
                   data-bs-toggle="collapse" data-bs-placement="top"
                   href="#CustomerByBranchGrid" aria-expanded="true"
                   data-bs-original-title="Collapse"></i>

                <i class="vtt-icon  vttech-icon-refesh text-sm text-gradient text-info"
                   data-bs-toggle="tooltip" data-bs-placement="top"
                   data-bs-original-title="Refresh" onclick="LoadDataReport_TreatmentCustomer()"></i>
                <i class="vtt-icon  vttech-icon-export-ex text-sm text-gradient text-info"
                   data-bs-toggle="tooltip" data-bs-placement="top"
                   data-bs-original-title="Excel" onclick="exportData_TreatmentCustomer()"></i>
                
            </div>
        </div>
        <div class="row p-2 pb-0 ps-0">
            <div class="col-lg-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 data-languagedyn="total" class="text-sm text-primary text-gradient mb-0">Tổng</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotal">0</span></h6>
                </div>
            </div>
            <div class="col-lg-6 mt-2">
                <div title="Branch" class="ui fluid search selection dropdown form-control" id="DoctorID" onchange="onchange_filter_doctor()">
                    <input type="hidden" name="doctor" />
                    <i class="dropdown icon"></i>
                    <input class="search" autocomplete="off" tabindex="0" />
                    <div class="default text">eg .doctor</div>
                    <div id="cbbDoctor" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class="collapsesticky collapse show" id="CustomerByBranchGrid">
        <div class="card-body p-3 pt-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="dtContent_CustomerTreatment">
                    <thead>
                        <tr>
                            <th data-languagestatic="no" style="width: 60px">#</th>
                            <th data-languagestatic="date" style="min-width: 100px;">Ngày</th>
                            <th data-languagestatic="branch" style="min-width: 80px;">Chi Nhánh</th>
                            <th data-languagestatic="cust_code" style="min-width: 100px;">Mã Khách Hàng</th>
                            <th data-languagestatic="customer_name" style="min-width: 150px;">Tên Khách Hàng</th>
                            <th data-languagestatic="year_of_birth" style="min-width: 80px;">Năm Sinh</th>
                            <th data-languagestatic="gender" style="min-width: 80px;">Giới Tính</th>
                            <th data-languagestatic="address" style="min-width: 180px;">Địa Chỉ</th>
                            <th data-languagestatic="code" style="min-width: 100px;">Mã Dịch Vụ</th>
                            <th data-languagestatic="service" style="min-width: 180px;">Tên Dịch Vụ</th>
                            <th data-languagestatic="teeth" style="min-width: 100px;">Răng Hàm</th>
                            <th data-languagestatic="stagetreat" style="min-width: 120px;">Bước Điều Trị</th>
                            <th data-languagestatic="quantity" style="min-width: 70px;">Số Lượng</th>
                            <th data-languagestatic="price" style="min-width: 150px;">Đơn Giá</th>
                            <th data-languagestatic="totalamount" style="min-width: 150px;">Tổng Tiền</th>
                            <th data-languagestatic="order_discount" style="min-width: 150px;">Giảm Giá Theo Bác Sĩ</th>
                            <th data-languagestatic="discount_info" style="min-width: 150px;">Giảm Khác</th>
                            <th data-languagestatic="needtopay" style="min-width: 150px;">Tổng Tiền Phải Thu Của KH</th>
                            <th data-languagestatic="num_treat" style="min-width: 150px;">Tổng Tiền Theo Treatment Phát Sinh</th>

                        </tr>
                    </thead>
                    <tbody data-languagedyn="grid" id="dtContent_CustomerTreatmentBody">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script type="text/javascript">
    var DataListTreatment;
    var DataServiceStage = {}; var DataTeeth;
    var ser_sys_DetailTeeth = "@Model.sys_isDetailTeeth";
    $(document).ready(function () {
 
        $("#FilterTreatment").dropdown("clear");
        $("#FilterTreatment").dropdown("set selected", "0");
    

        Master_IndexDB_Reads(_Session_Data, [ _Session_Teeth]
            , function (data) {
                DataTeeth = data[0];
                LoadDataReport_TreatmentCustomer();
            });

        Checking_TabControl_Permission();
    });

    function LoadDataReport_TreatmentCustomer() {
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _branch = Number("@Model._branch");

        AjaxLoad(url = "/Report/RevenuePayment/Treatment/CustomerByBranch/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'branchID': _branch }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    DataListTreatment = JSON.parse(result).Table;
                    let dataDoctor = JSON.parse(result).Table1;
                    let serstage = JSON.parse(result).Table2;
                    for (let i = 0; i < serstage.length; i++) {
                        DataServiceStage[serstage[i].ID] = serstage[i];
                    }

                    Load_Combo(dataDoctor, "cbbDoctor", true);
                    $("#DoctorID").dropdown("refresh");
                    $("#DoctorID").dropdown("set selected", '0');
                    RenderReport(DataListTreatment, "dtContent_CustomerTreatmentBody");
                }
            }
        );
        return false;
    }

    function RenderReport(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let per_new = 0;
                    if (ser_sys_DetailTeeth == 0) {
                        per_new = item.PercentOfService_New;
                    }
                    else {
                        if (item.TeethChoosing == '') {
                            per_new = (item.Quantity == 0) ? 0 : item.PercentNewDetail;
                        }
                        else {
                            per_new = (item.Quantity == 0) ? 0 : item.PercentNewDetail / item.Quantity;
                        }
                    }
                    let tr = '<td class="vt-number-order"></td>'
                        + '<td>' + formatDateClient(item.Created) + '</td>'
                        + '<td>' + item.BranchCode + '</td>'
                        + '<td>'
                        + '<a target="_blank" href="/Customer/MainCustomer?CustomerID=' + Number(item.Customer_ID) + '&ver=' + versionofWebApplication + '">' + item.CustomerCode + '</a> </br>'
                        + '</td>'
                        + '<td>' + item.CustomerName + '</td>'
                        + '<td>' + item.YearOfBirth + '</td>'
                        + '<td>' + ((item.Gender_ID == 60) ? ('Nam') : ('Nữ')) + '</td>'
                        + '<td>' + item.Address + '</td>'
                        + '<td>' + item.ServiceCode + '</td>'
                        + '<td>'+ item.ServiceName+ '</td>'
                        + '<td>' + ('<span class="cur_teeth">' + Fun_GetTeeth_ByToken(DataTeeth, item.TeethTreat, item.TeethType)   + ' </span>')+ '</td>'
                        + '<td>' + Fun_GetString_ByToken(DataServiceStage, item.ServiceStage + ',') + '</td>'
                        + '<td>' + item.Quantity + '</td>'
                        + '<td style="text-align:right">' + formatNumber(item.Price_Root/item.Quantity) + '</td>'
                        + '<td style="text-align:right">' + formatNumber(item.Price_Root) + '</td>'
                        + '<td style="text-align:right">' + formatNumber(item.Discount_Doctor) + '</td>'
                        + '<td style="text-align:right">' + formatNumber(item.Discount_Other) + '</td>'
                        + '<td style="text-align:right">' + formatNumber(item.Price_Discounted) + '</td>'
                        + '<td style="text-align:right">' + formatNumber(Math.ceil((per_new * item.Price_Discounted) / 100))  + '</td>'
 
                    stringContent = stringContent + '<tr role="row" class="vt-number rowService" data-id="' + item.Tab + '">' + tr + '</tr>';
                }
                document.getElementById(id).innerHTML = stringContent;
 
                Count_Up('lbTotal', data.length)
            }

        }
    }

    //filter Treatment
    function onchange_filter_doctor() {
        let Data = DataListTreatment;
        let DoctorID = Number($('#DoctorID').dropdown('get value')) ? Number($('#DoctorID').dropdown('get value')) : 0;
        if (DoctorID != 0) {
            Data = Data.filter(word =>  Number(word["DocID"]) == DoctorID)
        }
        if (Data != undefined) {
            RenderReport(Data, "dtContent_CustomerTreatmentBody");
        }
    }


    function exportData_TreatmentCustomer() {
        exportToExcel("dtContent_CustomerTreatment", 'Danh-Sach-Sach-Khach-Hang-Dieu-Tri');
    }

</script>
<style>
 
</style>
