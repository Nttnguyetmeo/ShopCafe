@page
@model SourceMain.Pages.Report.RevenuePayment.CustomerSource.NewCust_SourceGridModel
@{ 
    Layout = null;
}
<div class="card">
    <div class="card-header p-3 ">
        <div class="d-lg-flex">
            <div class="w-70 col-auto my-auto">
                <p data-languagestatic="newcustomer_by_source"
                   class="text-md text-dark font-weight-bold mb-1">Doanh thu theo nguồn</p>
                <p class="text-sm mb-0">Some text of detail sub</p>
            </div>
            <div class="ms-auto my-auto mt-1">
                <i class="vtt-icon vttech-icon-all text-sm text-gradient text-info"
                   data-bs-toggle="collapse" data-bs-placement="top"
                   href="#NewCust_SourceGrid" aria-expanded="true"
                   data-bs-original-title="Collapse"></i>

                <i class="vtt-icon  vttech-icon-refesh text-sm text-gradient text-info"
                   data-bs-toggle="tooltip" data-bs-placement="top"
                   data-bs-original-title="Refresh" onclick="LoadDataReport_RevenueByBranchGrid()"></i>
                <i class="vtt-icon  vttech-icon-export-ex text-sm text-gradient text-info"
                   data-bs-toggle="tooltip" data-bs-placement="top"
                   data-bs-original-title="Excel" onclick="exportData_RevenueBySourceGrid()"></i>
                
            </div>
        </div>
        <div class="row p-2 pb-0 ps-0">
            <div class="col-lg-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 data-languagedyn="number" class="text-sm text-primary text-gradient mb-0">Tổng</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalPayment">0</span></h6>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 data-languagedyn="total" class="text-sm text-primary text-gradient mb-0">Tổng</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalAmount_RevenueBySourceGrid">0</span></h6>
                </div>
            </div>
        </div>


    </div>
    <div class="collapsesticky collapse show" id="NewCust_SourceGrid">
        <div class="card-body p-3 pt-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="dtContentReport_RevenueBySourceGrid">
                    <thead class="hiddenCollapse" id="HerderReport_Target_BranchService" data-languagedyn="div2">
                    </thead>
                    <tbody data-languagedyn="grid" id="dtContentReportBody_RevenueBySourceGrid">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>


<script>js_require('/js/comon/initialize_setting.js')</script>
<script>js_require('/js/main.js');</script>
<script type="text/javascript">

    $(document).ready(function () {
         
        LoadDataReport_RevenueBySourceGrid();
        //$("#divReportViewDetail table").closest("table").parent().addClass("stickytable");
        Checking_TabControl_Permission();
    });

    function LoadDataReport_RevenueBySourceGrid() {
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _TokenBranch = "@Model._TokenBranch";
        AjaxLoad(url = "/Report/RevenuePayment/CustomerSource/NewCust_SourceGrid/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'TokenBranch': _TokenBranch  }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result)["Table"];
                    let dataMaster = JSON.parse(result)["Table1"];
                    let dataBranch = JSON.parse(result)["Table2"];
                    let dataDetail = JSON.parse(result)["Table3"];

                    RenderReport_HeaderBranch(dataBranch, 'HerderReport_Target_BranchService');
                    Count_Up('lbTotalPayment', dataMaster[0].TotalCustomer)
                    Count_Up('lbTotalAmount_RevenueBySourceGrid', dataMaster[0].TotalAmount)
 
                    RenderReport_RevenueCustomer_SourceGrid(dataBranch, data, dataDetail, "dtContentReportBody_RevenueBySourceGrid")

                }
            }
        );
        return false;
    }

    function RenderReport_HeaderBranch(dataBranch, id) {
        if (dataBranch && dataBranch.length > 0) {
            let stringContent = '';
            let tr =
                '<th rowspan="2" style = "width:50px" >#</th>'
                + '<th rowspan="2">Nguồn Khách Hàng</th>'
                + '<th rowspan="2">Tổng Khách</th>'
                + '<th rowspan="2">Doanh Thu</th>';
            let tr2 = '';
            for (var i = 0; i < dataBranch.length; i++) {
                let item = dataBranch[i];
                tr = tr
                    + '<th colspan="2">' + item.Name + ' <span class="_amount_branch">' + formatNumber(item.TotalAmount) + '</span>' + '</th>';
                tr2 += '<th style="border-left: 1px solid rgba(34,36,38,.1);">Tổng Khách</th>'
                    + '<th>Doanh Thu</th>'
            }
            stringContent += '<tr role="row">' + tr + '</tr>'
                + '<tr>' + tr2 + '</tr>';
            document.getElementById(id).innerHTML = stringContent;
        }
    }

    function RenderReport_RevenueCustomer_SourceGrid(dataBranch, data, dataDetail, id) {

        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (dataDetail && dataDetail.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let sv = data[i];
                    let items = dataDetail.filter(_d => _d.TypeID == data[i].ID);
                    let tr =
                        '<td class="vt-number-order"></td>'
                        + '<td>' + sv.TypeName + '</td>'
                        + '<td>' + sv.TotalCustomer + '</td>'
                        + '<td>' + formatNumber(sv.Amount) + '</td>'

                    for (let j = 0; j < dataBranch.length; j++) {
                        let AmountBranch = dataBranch[j].TotalAmount;

                        let item = items.filter(_d => _d.BranchID == dataBranch[j].ID);
                        if (item.length > 0) {
                            tr = tr
                                + '<td>' + item[0].TotalCustomer + '</td>'
                                + '<td>' + formatNumber(item[0].Amount) + ' <span class="_percent_branch">' + runTwoTo(item[0].Amount / AmountBranch) + '</span>' + '</td>'
                        } else {
                            tr = tr
                                + '<td>0</td>'
                                + '<td>0</td>'
                        }
                    }
                    stringContent = stringContent + '<tr class="vt-number"  role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }

    function exportData_RevenueBySourceGrid() {
        exportToExcel("dtContentReport_RevenueBySourceGrid", 'Doanh-Thu-Theo-Nguon');
    }
    function runTwoTo(num) {
        var num;
        num = (Math.round(num * 10000) / 100);
        return num + '%';
    }
</script>
<style>
    ._amount_branch {
        display: block;
        color: #a333c8;
        
    }

    ._percent_branch {
        display: block;
        color: #db2828;
        
    }
</style>
