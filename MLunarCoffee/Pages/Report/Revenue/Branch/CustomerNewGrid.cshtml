@page
@model MLunarCoffee.Pages.Report.Revenue.Branch.CustomerNewGridModel
@{
    Layout = null;
}


<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p class="text-md text-dark font-weight-bold mb-0">
                @Local["Doanh thu khách mới theo chi nhánh"]
            </p>
            <p class="text-sm mb-0 mt-n1">@Local["Báo cáo doanh thu khách mới theo chi nhánh"]</p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#CustomerNewGrid" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return LoadDataReport_RevenueByCustomerNewGrid()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return exportData_RevenueByCustomerNewGrid()"></i>
            </div>
        </div>
    </div>
    <div class="card-body pt-0 px-0">
        <div class="row p-2">
            <div class="col-12 col-sm-6 px-1">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng khách cũ"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalAmount">0</span></h6>
                </div>
            </div>
            <div class="col-12 col-sm-6 px-1">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng khách mới"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalAmountNew">0</span></h6>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="CustomerNewGrid">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="dtContentReport_RevenueByCustomerNewGrid">
                    <thead>
                        <tr></tr>
                        <tr role="row">
                            <th style="width: 20px; display: none !important;"></th>
                            <th class="no-sort" colspan="4"></th>
                            <th class="no-sort" colspan="6">@Local["Khách mới"]</th>
                            <th class="no-sort" colspan="6">@Local["Khách cũ"]</th>
                        </tr>
                        <tr role="row">
                            <th style="width: 20px; display: none !important;"></th>
                            <th class="_allcustomer" style="width: 60px">#</th>
                            <th class="_allcustomer">@Local["Chi nhánh"]</th>
                            <th class="_allcustomer">@Local["Đã thanh toán"]</th>
                            <th class="_allcustomer">@Local["Số khách"]</th>
                            <th class="_newcustomer">@Local["Đã thanh toán"]</th>
                            <th class="_newcustomer">@Local["Số khách"]</th>
                            <th class="_newcustomer">@Local["Đã thanh toán/khách"]</th>
                            <th class="_newcustomer">@Local["Phát sinh"]</th>
                            <th class="_newcustomer">@Local["Tổng tiền thanh toán"]</th>
                            <th class="_newcustomer">@Local["Tiền cọc"]</th>
                            <th class="_oldcustomer">@Local["Đã thanh toán"]</th>
                            <th class="_oldcustomer">@Local["Số khách"]</th>
                            <th class="_oldcustomer">@Local["Đã thanh toán/khách"]</th>
                            <th class="_oldcustomer">@Local["Phát sinh"]</th>
                            <th class="_oldcustomer">@Local["Tổng tiền thanh toán"]</th>
                            <th class="_oldcustomer">@Local["Tiền cọc"]</th>
                        </tr>
                    </thead>
                    <tbody id="dtContentReportBody_RevenueByCustomerNewGrid">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="detailShow" style="display: none">
    <div class="card card-plain">
        <div class="vtcardheader card-header pb-0 p-0">
            <div class="left">
                <p id="lbDetail" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#CustomerNewGridDetail" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return LoadDataReport_RevenueByCustomerNewGrid_Detail()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return exportData_Detail()"></i>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custcodeold" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="CustomerNewGridDetail">
            <div class="card-body p-0">
                <div class="m-0 my-3 mobile-responsive">
                    <table class="table vt-table mb-0" id="dtDetail">
                        <thead>
                            <tr>
                                <th style="width: 60px">#</th>
                                <th style="width: 150px">@Local["Mã khách hàng"]</th>
                                <th style="width: 150px" data-name="custcodeold">@Local["Mã khách hàng cũ"]</th>
                                <th>@Local["Khách hàng"]</th>
                                <th>@Local["Loại"]</th>
                                <th>@Local["Đã thanh toán"]</th>
                                <th>@Local["Tổng phát sinh"]</th>
                                <th>@Local["Tổng tiền thanh toán"]</th>
                                <th>@Local["Công nợ"]</th>
                                <th>@Local["Khách mới"]</th>
                            </tr>
                        </thead>
                        <tbody id="dtBodyDetail">
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>

<script>js_require('/js/main.js');</script>
<script type="text/javascript">
    var dataDetail;
    var nameType;
    var __CurrentDetail;
    let shtable;
    $(document).ready(function ()
    {
        ToolPopper();
        shtable = $("#CustomerNewGridDetail").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        LoadDataReport_RevenueByCustomerNewGrid();
        $('#dtContentReport_RevenueByCustomerNewGrid tbody').on('click', 'tr', function ()
        {
            $("#detailShow").show();
            $(this).parent().children().removeClass('active')
            $(this).closest('tr').addClass('active');
            __CurrentDetail = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            $(this).closest('tr')[0].childNodes[1].style.color = "red";
            nameType = $(this).closest('tr')[0].childNodes[2].innerHTML;
            $('#lbDetail').html(nameType);
            LoadDataReport_RevenueByCustomerNewGrid_Detail();
            $('html, body').animate({
                scrollTop: $("#detailShow").offset().top
            }, 300);
        });

        // $("#divReportViewDetail table").closest("table").parent().addClass("stickytable");
        Checking_TabControl_Permission();
    });

    function LoadDataReport_RevenueByCustomerNewGrid_Detail()
    {
        let dataCust = dataDetail.filter(dataDetail => dataDetail.BranchID == __CurrentDetail);
        RenderDetail(dataCust, 'dtBodyDetail');
    }
    function LoadDataReport_RevenueByCustomerNewGrid()
    {
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _TokenBranch = "@Model._TokenBranch";
        AjaxLoad(url = "/Report/Revenue/Branch/CustomerNewGrid/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'tokenBranch': _TokenBranch }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result)
            {
                if (result != "") {
                    let data = JSON.parse(result)["Table1"];
                    dataDetail = JSON.parse(result)["Table"];
                    let dataMaster = JSON.parse(result)["Table2"];
                    Count_Up('lbTotalAmountNew', dataMaster[0].TotalAmount_New)
                    Count_Up('lbTotalAmount', dataMaster[0].TotalAmount_Old)

                    $("#detailShow").hide();
                    RenderReport_RevenueByCustomerNewGrid(data, "dtContentReportBody_RevenueByCustomerNewGrid");
                }
            }
        );
        return false;
    }
    function RenderReport__RevenueByNewOld_Average(a, b)
    {
        if (Number(b) == 0) return 0;
        else return formatNumber((a / b));
    }

    function RenderReport_RevenueByCustomerNewGrid(data, id)
    {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important">' + item.BranchID + '</td>'
                        + '<td class="vt-number-order _allcustomer"></td>'
                        + '<td class="_allcustomer" style="cursor: pointer;">'
                        + item.BranchName
                        + '</td>'
                        + '<td class="_allcustomer">' + formatNumber(item.Paid_Old + item.Paid_New) + '</td>'
                        + '<td class="_allcustomer" >' + formatNumber(item.NumCustomer_New + item.NumCustomer_Old) + '</td>'

                        + '<td class="_newcustomer">' + formatNumber(item.Paid_New) + '</td>'
                        + '<td class="_newcustomer">' + formatNumber(item.NumCustomer_New) + '</td>'
                        + '<td class="_newcustomer">' + RenderReport__RevenueByNewOld_Average(item.Paid_New, item.NumCustomer_New) + '</td>'
                        + '<td class="_newcustomer">' + formatNumber(item.Price_New) + '</td>'
                        + '<td class="_newcustomer">' + formatNumber(item.TotalPaid_New) + '</td>'
                        + '<td class="_newcustomer">' + formatNumber(item.Desposit_New) + '</td>'

                        + '<td class="_oldcustomer">' + formatNumber(item.Paid_Old) + '</td>'
                        + '<td class="_oldcustomer">' + formatNumber(item.NumCustomer_Old) + '</td>'
                        + '<td class="_oldcustomer">' + RenderReport__RevenueByNewOld_Average(item.Paid_Old, item.NumCustomer_Old) + '</td>'
                        + '<td class="_oldcustomer">' + formatNumber(item.Price_Old) + '</td>'
                        + '<td class="_oldcustomer">' + formatNumber(item.TotalPaid_Old) + '</td>'
                        + '<td class="_oldcustomer">' + formatNumber(item.Desposit_Old) + '</td>'


                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function RenderDetail(data, id)
    {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr = '<td class="vt-number-order"></td>'

                        + '<td> <a target="_blank" href="/Customer/MainCustomer?CustomerID=' + item.CustomerID + '&ver=' + versionofWebApplication + '">' + item.CustCode + '</a></td>'
                        + '<td data-name="custcodeold">' + item.CustOldCode + '</td>'
                        + '<td>' + item.CustName + '</td>'
                        + '<td>' + Return_Type_SER_PRO_MED_CARD_DEP(item.Type) + '</td>'
                        + '<td>' + formatNumber(item.Paid) + '</td>'
                        + '<td>' + formatNumber(item.Price) + '</td>'
                        + '<td>' + formatNumber(item.TotalPaid) + '</td>'
                        + '<td>' + formatNumber(item.Price - item.TotalPaid) + '</td>'
                        + '<td>'
                        + ((item.ISNEW == 1) ? '<span class="badge bg-gradient-success">New</span>' : '')
                        + '</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        shtable.Refresh();
    }
    async function exportData_RevenueByCustomerNewGrid()
    {
        var elm = $("#dtContentReport_RevenueByCustomerNewGrid");
        var tr = elm.find('thead').find('tr')[0];
        elm.find('thead').find('tr')[0].remove();
        syslog_ExpExcel('e', Outlang['Theo_chi_nhanh']);
        await exportToExcel("dtContentReport_RevenueByCustomerNewGrid", Outlang['Theo_chi_nhanh']);
        elm.find('thead').prepend(tr);
    }
    function exportData_Detail()
    {
        let fileName = Outlang['Chi-nhanh'];
        syslog_ExpExcel('e', fileName + '-' + xoa_dau(nameType));
        exportToExcel("dtDetail", fileName + '-' + xoa_dau(nameType));
    }
</script>
<style>
    ._allcustomer {
        background: #2185d014 !important;
    }

    ._newcustomer {
        background: #21ba451a !important;
    }

    ._oldcustomer {
        background: #fbbd0814 !important;
    }
</style>
