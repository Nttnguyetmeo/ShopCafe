@page
@model MLunarCoffee.Pages.Report.RevenuePayment.Deposit.DepositBarModel
@{
    Layout = null;
}

<div class="card">
    <div class="card-header p-3">
        <div class="d-lg-flex">
            <div class="w-70 col-auto my-auto">
                <p data-languagestatic="chart_deposit_customer_header"
                   class="text-md text-dark font-weight-bold mb-1">Biều Đồ Tiền Cọc Khách Hàng</p>
                <p class="text-xs text-muted mb-0 ">ĐV-Triệu</p>
            </div>
            <div class="ms-auto my-auto mt-1">
                <i class="vtt-icon vttech-icon-all text-sm text-gradient text-info"
                   data-bs-toggle="collapse" data-bs-placement="top"
                   href="#DepositBarDiv" aria-expanded="true"
                   data-bs-original-title="Collapse"></i>

                <i class="vtt-icon  vttech-icon-refesh text-sm text-gradient text-info"
                   data-bs-toggle="tooltip" data-bs-placement="top"
                   data-bs-original-title="Refresh" onclick="LoadData_ReportDepositBar()"></i>
              
            </div>
        </div>

    </div>
    <div class="collapsesticky collapse show" id="DepositBarDiv">
        <div class="card-body p-3 pt-0">
            <div class="chart">
                <canvas id="DepositBar" class="chart-canvas" height="300"></canvas>
            </div>
        </div>

    </div>

</div>


<script>js_require('/js/comon/initialize_setting.js');</script>
<script>
    $(document).ready(function () {
         
        LoadData_ReportDepositBar();
    });
    function LoadData_ReportDepositBar() {
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _branchToken = "@Model._TokenBranch";
        AjaxLoad(url = "/Report/RevenuePayment/Deposit/DepositGrid/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'branchID': _branchToken }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result)["Table2"];
                    for (let i = 0; i < data.length; i++) {
                        data[i]['DepositPaid'] = Math.round(data[i]['DepositPaid'] / 1000000);
                        data[i]['DepositUsing'] = Math.round(data[i]['DepositUsing'] / 1000000);
                    }
                    let cols = [];
                    cols.push({'label': 'Total Deposit', 'value': 'DepositPaid'});
                    cols.push({'label': 'Total Deposit Used', 'value': 'DepositUsing'});
                    rp_barcols('DepositBar', data, 'ShortName', cols);

                     
                } else {
                    notiError_SW();
                }
            }
        );
    }

</script>
