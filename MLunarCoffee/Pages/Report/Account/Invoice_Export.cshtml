@page
@model MLunarCoffee.Pages.Report.Account.Invoice_ExportModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="card card-plain">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <h6 class="mb-0">@Local["Thu chi theo chi nhánh"]</h6>
            <p class="text-sm mb-0">@Local["Danh sách tất cả hóa đơn thu chi chi nhánh"]</p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#IE_GridArea" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local["Tải lại"]">
                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); return IE_LoadMaster()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="IE_GridArea">
        <div class="card-body p-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="IE_GridMaster">
                    <thead>
                        <tr role="row">
                            <th rowspan="2">#</th>
                            <th>@Local["Loại"]</th>
                            <th>@Local["Tổng thu"]</th>
                            <th>@Local["Tổng chi"]</th>
                            <th>@Local["Còn lại"]</th>
                        </tr>
                    </thead>
                    <tbody id="IE_GridMasterBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="IE_GridDivTotalType" style="display:none;">
    <div class="card-header px-0 pb-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0 pt-0">
                <div class="left">
                    <p class="text-md text-dark font-weight-bold mb-1"><span id="IE_TitleTotalType"></span></p>
                </div>
                <div class="right">
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Thu gọn"]">
                        <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                           data-bs-toggle="collapse" href="#IE_DivGridTotalType" aria-expanded="true"></i>

                    </div>
                    <div class="icon-hover mx-1"
                         data-bs-toggle="tooltip" data-bs-placement="top"
                         data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary _tab_control_" data-tab="export_excel"
                           data-bs-toggle="tooltip" data-bs-placement="top"
                           data-bs-original-title="@Local["Xuất excel"]" onclick="event.preventDefault(); return IE_ExportDetail()"></i>
                    </div>
                </div>
            </div>
            <div class="collapsesticky collapse show" id="IE_DivGridTotalType">
                <div class="card-body p-0 mt-3">
                    <div class="m-0 my-0 mobile-responsive position-relative vt-header-sticky">
                        <table class="table vt-table mb-0" id="IE_GridTotalType">
                            <thead>
                                <tr role="row">
                                    <th>#</th>
                                    <th>@Local["Tên"]</th>
                                    <th>@Local["Tổng thu"]</th>
                                    <th>@Local["Tổng chi"]</th>
                                    <th>@Local["Còn lại"]</th>
                                </tr>
                            </thead>
                            <tbody id="IE_GridBodyTotalType">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
</div>
</div>

<div id="IE_GridAreaDetail" class="mt-3" style="display:none;">
    <div class="card card-plain">
        <div class="vtcardheader card-header px-0 pb-0">
            <div class="left">
                <p class="text-md text-dark font-weight-bold mb-1"><span id="IE_TitleDetail"></span></p>
            </div>
            <div class="right">
                <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                    <span id="Reve_currentdata">0</span>
                    <span class="mx-2">/</span>
                    <span id="Reve_totaldata">0</span>
                </div>
                <div class="icon-hover mx-1 mt-1"
                        data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                        data-bs-toggle="collapse" href="#IE_DivGridDetail" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1 mt-1"
                        data-bs-toggle="tooltip" data-bs-placement="top"
                        data-bs-original-title="@Local["In báo cáo"]">
                    <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                        onclick="event.preventDefault(); IE_PrintReport()"></i>
                </div>
                <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                    <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                            data-bs-toggle="tooltip" data-bs-placement="top"
                            data-bs-original-title="@Local["Xuất excel"]">
                        <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                    </div>
                    <div class="input-group-text icon-hover w-auto vttech-input-item">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return IE_Export(0)">@Local["Tất cả"]</i>
                    </div>
                    <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                        <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return IE_Export(1)">@Local["Tùy chọn"]</i>
                    </div>
                </div>
                <button class="btn btn-dark btn-sm mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                    @Local["Xem thêm"]
                </button>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="applicant" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người nộp"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="receiver" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người nhận"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="applicantOther" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người nộp khác"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="receiverOther" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người nhận khác"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Create_By" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Người tạo"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Create" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ngày tạo"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="Note" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Nội dung"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogle form-check-input" data-name="custcodeold" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                        </li>
                    </ul>
                </div>

            </div>
        </div>
        <div class="collapsesticky collapse show" id="IE_DivGridDetail">
            <div class="card-body p-0 mt-3">
                <div class="m-0 my-0 mobile-responsive position-relative vt-header-sticky">
                    <table class="table vt-table mb-0" id="IE_Grid">
                        <thead>
                            <tr role="row">
                                <th rowspan="2">#</th>
                                <th rowspan="2">@Local["Số phiếu"]</th>
                                <th rowspan="2">@Local["Mã khách hàng"]</th>
                                <th rowspan="2" data-name="custcodeold">@Local["Mã khách hàng cũ"]</th>
                                <th rowspan="2">@Local["Khách hàng"]</th>
                                <th colspan="2">@Local["Số tiền"]</th>
                                <th rowspan="2">@Local["Loại"]</th>
                                <th rowspan="2">@Local["Hình thức"]</th>
                                <th rowspan="2">@Local["Chuyển khoản"]</th>
                                <th rowspan="2">@Local["Pos"]</th>
                                <th rowspan="2" data-name="applicant">@Local["Người nộp"]</th>
                                <th rowspan="2" data-name="receiver">@Local["Người nhận"]</th>
                                <th rowspan="2" data-name="applicantOther">@Local["Người nộp khác"]</th>
                                <th rowspan="2" data-name="receiverOther">@Local["Người nhận khác"]</th>
                                <th rowspan="2" data-name="Create_By">@Local["Người tạo"]</th>
                                <th rowspan="2" data-name="Create">@Local["Ngày tạo"]</th>
                                <th rowspan="2" data-name="Note">@Local["Nội dung"]</th>
                            </tr>
                            <tr role="row">
                                <th>@Local["Thu"]</th>
                                <th>@Local["Chi"]</th>
                            </tr>
                        </thead>
                        <tbody id="IE_GridBody">
                        </tbody>
                    </table>
                </div>
                <button class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return IE_RenderMore();">
                    @Local["Xem thêm"]
                </button>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    //#region // DECLARE & INIT

    let xhrLoadList;
    let DataReportMain, DataReportMainSlice;
    var DataMainDetail;
    let IndexReport = 0;
    let shtable;
    let timeoutCount;

    let IE_JsonData = {
        "1": "Dịch vụ/sản phẩm"
        , "2": "Tiền cọc"
        , "3": "Thẻ trả trước"
        , "4": "Thuốc"
        , "5": "Khác"
        , "6": "Nhà cung cấp"
        , "7": "Giới thiệu"
        , "8": "Labo"
    }
    let IE_branchID = "@Model._branch";
    let IE_dateFrom = "@Model._dateFrom";
    let IE_dateTo = "@Model._dateTo";

    $(document).ready(function () {
        shtable = $("#IE_Grid").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        ToolPopper();
        IE_LoadMaster();
        Checking_TabControl_Permission();
    });
    //#endregion


    //#region //Load Master

    function IE_LoadMaster() {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        xhrLoadList = AjaxLoad(url = "/Report/Account/Invoice_Export/?handler=Loadata"
            , data = {
                'branchID': IE_branchID
                , 'dateFrom': IE_dateFrom
                , 'dateTo': IE_dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let data = datas["Table"];
                    IE_RenderMaster(data, "IE_GridMasterBody");
                } else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    //#endregion

    //#region //Render Master

    async function IE_RenderMaster(data, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                let stringContent = '';
                if (data && data.length > 0) {
                    let T_AmountIn = 0, T_AmountOut = 0;
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        T_AmountIn = T_AmountIn + item.AmountIn;
                        T_AmountOut = T_AmountOut + item.AmountOut;

                        let tr = `
                                                <td class="vt-number-order"></td>
                                                <td>
                                                    <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.TypeMaster}">${IE_JsonData[item.TypeMaster] != '' ? IE_JsonData[item.TypeMaster] : ''}</a>
                                                </td>
                                                <td>${formatNumber(item.AmountIn)}</td>
                                                <td>${formatNumber(item.AmountOut)}</td>
                                                <td>${formatNumber(item.AmountIn - item.AmountOut)}</td>
                                            `
                        stringContent = stringContent + `<tr class="vt-number" role="row">${tr}</tr>`;
                        if (data.length > 1 && i == data.length - 1) {
                            let trTotal = `
                                                    <td></td>
                                                    <td class="text-white">@Local["Tổng"]</td>
                                                    <td>${formatNumber(T_AmountIn)}</td>
                                                    <td>${formatNumber(T_AmountOut)}</td>
                                                    <td>${formatNumber(T_AmountIn - T_AmountOut)}</td>
                                                `;
                            stringContent = stringContent + `<tr class="text-white bg-gradient bg-primary" role="row">${trTotal}</tr>`
                        }
                    }
                }
                document.getElementById(id).innerHTML = stringContent;
            }
            IE_MasterEvent();
        })
    }

    //#endregion

    //#region //Event Master

    function IE_MasterEvent() {
        $("#IE_GridMasterBody .buttonViewClass").unbind('click').on("click", function () {
            let id = $(this).attr('data-id');
            let Name = $(this).html();
            $("#IE_GridDivTotalType").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#IE_GridDivTotalType").offset().top
            }, 300);

            $('#IE_TitleTotalType').html((id == "0" ? "@Local["Tất cả loại"]" : Name));
            IE_LoadDetail(id);
        })
    }

    //#endregion

    //#region //Load Detail

    function IE_LoadDetail(Type) {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        IndexReport = 0;
        $("#IE_GridBodyTotalType").empty();
        xhrLoadList = AjaxLoad(url = "/Report/Account/Invoice_Export/?handler=LoadataDetail"
            , data = {
                'branchID': IE_branchID
                , 'dateFrom': IE_dateFrom
                , 'dateTo': IE_dateTo
                , 'Type': Type
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let dataType = data['Table'];

                    fnRenderBlock(dataType, 'IE_GridBodyTotalType'
                        , blocknum = 100
                        , fnrender = IE_RenderType
                        , fnsuccess = function (e) { }
                        , fnbegin = function (e) { }
                    )

                    DataMainDetail = data['Table1'];

                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    //#region //Render TotalType

    async function IE_RenderType(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let TypeName = '';
                            if ((item.TypeDetail == "0") && (item.TypeName == "9" || item.TypeName == "10")) {
                                TypeName = item?.TypeName == "9" ? '@Local["Dịch vụ"]' : '@Local["Sản phẩm"]';
                            } else {
                                TypeName = item?.TypeName != "0" ? item?.TypeName : '';
                            }
                            let tr = `
                                    <td class="vt-number-order"></td>
                                    <td>
                                        <a href="#" class="border-1 border-primary border-bottom btn-Detail mb-0 text-sm fw-bold" data-id="${item.TypeDetail}">${TypeName}</a>
                                    </td>
                                    <td>${formatNumber(item.AmountIn)}</td>
                                    <td>${formatNumber(item.AmountOut)}</td>
                                    <td>${formatNumber(item.AmountIn - item.AmountOut)}</td>
                                                `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        setTimeout(function () { $('#IE_GridBodyTotalType .btn-Detail:first').trigger('click') }, 100);
                    }
                }

                IE_MasterDetail();
            }, 100);
        })
    }

    //#endregion

    //#region //EventDetail

    function IE_MasterDetail() {
        $("#IE_GridBodyTotalType .btn-Detail").unbind('click').on('click', function () {
            let ID = $(this).attr('data-id');
            let Name = $(this).html();
            let DataFill = '';
            $('#IE_GridBody').empty();
            DataFill = DataMainDetail.filter((value) => {
                return value['TypeDetail'] == ID;
            })

            $("#IE_GridAreaDetail").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#IE_GridAreaDetail").offset().top
            }, 300);
            $('#IE_TitleDetail').html(Name);

            DataReportMain = DataFill;
            DataReportMainSlice = sliceIntoChunks(JSON.parse(JSON.stringify(DataFill)), 500);
            fnRenderBlock(DataReportMainSlice[IndexReport], 'IE_GridBody'
                , blocknum = 100
                , fnrender = IE_RenderDetail
                , fnsuccess = function (e) { }
                , fnbegin = function (e) { }
            )
            Count_Up("Reve_totaldata", DataReportMain.length);
        })
    }

    function IE_RenderMore() {
        IndexReport += 1;
        if (DataReportMainSlice && DataReportMainSlice[IndexReport]) {
            fnRenderBlock(DataReportMainSlice[IndexReport], "IE_GridBody"
                , blocknum = 100
                , fnrender = IE_RenderDetail
                , fnsuccess = null
            );
        }
    }

    //#endregion

    //#region //Render Detail

    async function IE_RenderDetail(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let obj = Fun_GetObject_ByID(RP_DataEmployee, item.Created_By);
                            let objReceive = item.Reciever != 0 ? Fun_GetObject_ByID(RP_DataEmployee, item.Reciever) : {};
                            let MethodName = author_get("UserLang") == 'en' ? Outlang[item.MEthodNameLangKey] : item.MethodName;
                            let tr = `
                                                    <td class="vt-number-order"></td>
                                                    <td>${item.Invoice_Num}</td>
                                                    <td>
                                                        <a href="/Customer/MainCustomer?CustomerID=${item.CusID}&ver=${versionofWebApplication}" target="_blank">${item.CusCode}</a>
                                                    </td>
                                                        <td data-name="custcodeold">${item.CustOldCode}</td>
                                                    <td>${item.CusName}</td>
                                                    <td>${(item.Inout == 1 ? formatNumber(item.Amount) : '')}</td>
                                                    <td>${(item.Inout == 2 ? formatNumber(item.Amount) : '')}</td>
                                                    <td>${IE_GetTypeDetail(item.NameDetail, item.TypeMaster)}</td>
                                                    <td>${MethodName}</td>
                                                    <td>${item.BankName}</td>
                                                    <td>${item.PosName}</td>
                                                    <td data-name="applicant">${item.Inout == 1 ? (objReceive?.Name ?? '') : ''}</td>
                                                    <td data-name="receiver">${item.Inout == 2 ? (objReceive?.Name ?? '') : ''}</td>
                                                    <td data-name="applicantOther">${item.Inout == 1 ? item.RecieverOther : ''}</td>
                                                    <td data-name="receiverOther">${item.Inout == 2 ? item.RecieverOther : ''}</td>
                                                    <td data-name="Create_By">${(obj != null) ? obj.Name : 'unknown'}</td>
                                                    <td data-name="Create">${ConvertDateTimeToString_D_M_Y(item.Created)}</td>
                                                    <td data-name="Note">${item.Note}</td>
                                                `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        shtable.Refresh();
                        Checking_TabControl_Permission();
                        clearTimeout(timeoutCount);
                        timeoutCount = setTimeout(() => {
                            Count_Up("Reve_currentdata", $("#" + id).children().length);
                        }, 300)
                    }
                }
            }, 100);
        })
    }

    function IE_GetTypeDetail(Name, TypeID) {
        try {
            let result = '';
            if (Name == '') {
                result = IE_JsonData[TypeID];
            } else {
                result = Name;
            }
            return result;
        } catch (ex) {
            return '';
        }
    }
    //#endregion

    //#region // EXPORT

    function IE_ExportDetail () {
        syslog_ExpExcel('e', Outlang["Sys_hoa_don_thu_chi"]);
        exportToExcel("IE_GridTotalType", Outlang["Sys_hoa_don_thu_chi"]);
    }

    function IE_Export(isOption = 0) {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#IE_GridAreaDetail');
                let dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, idx) => { return idx + 1 }]
                    , "Invoice_Num": ["@Local["Số phiếu"]"]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='custcodeold']`)).is(":checked"),
                        data: ["@Local["Mã khách hàng cũ"]"]
                    }
                    , "CusName": ["@Local["Khách hàng"]"]
                    , "Amount1": ["@Local["Tiền thu"]", (value, { Inout, Amount }) => { return Inout == 1 ? formatNumber(Amount) : 0 }]
                    , "Amount2": ["@Local["Tiền chi"]", (value, { Inout, Amount }) => { return Inout == 2 ? formatNumber(Amount) : 0 }]
                    , "TypeMaster": ["@Local["Loại"]", (value, { NameDetail }) => { return IE_GetTypeDetail(NameDetail, value) }]
                    , "MethodName": ["@Local["Hình thức"]", (value, { MEthodNameLangKey }) => { return author_get("UserLang") == 'en' ? Outlang[MEthodNameLangKey] : value }]
                    , "BankName": ["@Local["Chuyển khoản"]"]
                    , "PosName": ["@Local["Pos"]"]
                    , "applicant": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='applicant']`)).is(":checked"),
                        data: ["@Local["Người nộp"]", (value, { Inout, Reciever }) => { return Inout == 1 && Reciever != 0 ? Fun_GetObject_ByID(RP_DataEmployee, Reciever).Name : '' }]
                    }
                    , "receiver": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='receiver']`)).is(":checked"),
                        data: ["@Local["Người nhận"]", (value, { Inout, Reciever }) => { return Inout == 2 && Reciever != 0 ? Fun_GetObject_ByID(RP_DataEmployee, Reciever).Name : '' }]
                    }
                    , "applicantOther": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='applicantOther']`)).is(":checked"),
                        data: ["@Local["Người nộp khác"]", (value, { Inout, RecieverOther }) => { return Inout == 1 ? RecieverOther : '' }]
                    }
                    , "receiverOther": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='receiverOther']`)).is(":checked"),
                        data: ["@Local["Người nhận khác"]", (value, { Inout, RecieverOther }) => { return Inout == 2 ? RecieverOther : '' }]
                    }
                    , "Created_By": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='Create_By']`)).is(":checked"),
                        data: ["@Local["Người tạo"]", (value) => { return Fun_GetObject_ByID(RP_DataEmployee, value).Name }]
                    }
                    , "Created": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='Create']`)).is(":checked"),
                        data: ["@Local["Ngày tạo"]", (value) => { return ConvertDateTimeToString_D_M_Y(value) }]
                    }
                    , "Note": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='Note']`)).is(":checked"),
                        data: ["@Local["Nội dung"]"]
                    }
                };
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'IE_GridBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang["Sys_hoa_don_thu_chi"]);
                exportJsonToExcel(Outlang["Sys_hoa_don_thu_chi"], DataReportMain, dataHeader);
            }
            else notiWarning('@Local["Không có dữ liệu để xuất"]!');
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }

    async function IE_PrintReport() {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let _branchID = "@Model._branch";
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, idx) => { return idx + 1 }
                    }]
                    , "Invoice_Num": ["@Local["Số phiếu"]"]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CustOldCode": ["@Local["Mã khách hàng cũ"]", {
                        isShow: $(`.shtoogle[data-name='custcodeold']`).is(":checked")
                    }]
                    , "CusName": ["@Local["Khách hàng"]"]
                    , "Amount1": ["@Local["Tiền thu"]", {
                        callbackRenderValue: (value, { Inout, Amount }) => { return Inout == 1 ? formatNumber(Amount) : 0 }
                    }]
                    , "Amount2": ["@Local["Tiền chi"]", {
                        callbackRenderValue: (value, { Inout, Amount }) => { return Inout == 2 ? formatNumber(Amount) : 0 }
                    }]
                    , "TypeMaster": ["@Local["Loại"]", {
                        callbackRenderValue: (value, { NameDetail }) => { return IE_GetTypeDetail(NameDetail, value) }
                    }]
                    , "MethodName": ["@Local["Hình thức"]", {
                        callbackRenderValue: (value, { MEthodNameLangKey }) => { return author_get("UserLang") == 'en' ? Outlang[MEthodNameLangKey] : value }
                    }]
                    , "BankName": ["@Local["Chuyển khoản"]"]
                    , "PosName": ["@Local["Pos"]"]
                    , "applicant": ["@Local["Người nộp"]", {
                        isShow: $(`.shtoogle[data-name='applicant']`).is(":checked"),
                        callbackRenderValue: (value, { Inout, Reciever }) => { return Inout == 1 ? Fun_GetObject_ByID(RP_DataEmployee, Reciever).Name : '' }
                    }]
                    , "receiver": ["@Local["Người nhận"]", {
                        isShow: $(`.shtoogle[data-name='receiver']`).is(":checked"),
                        callbackRenderValue: (value, { Inout, Reciever }) => { return Inout == 2 ? Fun_GetObject_ByID(RP_DataEmployee, Reciever).Name : '' }
                    }]
                    , "applicantOther": ["@Local["Người nộp khác"]", {
                        isShow: $(`.shtoogle[data-name='applicantOther']`).is(":checked"),
                        callbackRenderValue: (value, { Inout, RecieverOther }) => { return Inout == 1 ? RecieverOther : '' }
                    }]
                    , "receiverOther": ["@Local["Người nhận khác"]", {
                        isShow: $(`.shtoogle[data-name='receiverOther']`).is(":checked"),
                        callbackRenderValue: (value, { Inout, RecieverOther }) => { return Inout == 2 ? RecieverOther : '' }
                    }]
                    , "Created_By": ["@Local["Người tạo"]", {
                        isShow: $(`.shtoogle[data-name='Create_By']`).is(":checked"),
                        callbackRenderValue: (value) => { return Fun_GetObject_ByID(RP_DataEmployee, value).Name }
                    }]
                    , "Created": ["@Local["Ngày tạo"]", {
                        isShow: $(`.shtoogle[data-name='Create']`).is(":checked"),
                        callbackRenderValue: (value) => { return ConvertDateTimeToString_D_M_Y(value) }
                    }]
                    , "Note": ["@Local["Nội dung"]", {
                        isShow: $(`.shtoogle[data-name='Note']`).is(":checked")
                    }]
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang["Sys_hoa_don_thu_chi"], DataReportMain, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
                        //#endregion

</script>
