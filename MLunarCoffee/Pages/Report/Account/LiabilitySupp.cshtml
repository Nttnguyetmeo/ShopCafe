@page
@model MLunarCoffee.Pages.Report.Account.LiabilitySuppModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>
<div id="RLS_MainContainer">
    <div id="RLS_MasterContainer">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-0">
                <div class="right">
                    <div class="wrap">
                        <div class="wrapblock">
                            <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                                <span id="RLS_CurrentData">0</span>
                                <span class="mx-2">/</span>
                                <span id="RLS_TotalData">0</span>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Thu gọn"]">
                                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                                   data-bs-toggle="collapse" href="#RLS_GridArea" aria-expanded="true"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Tải lại"]">
                                <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); return RLS_Load()"></i>
                            </div>
                            <div class="icon-hover mx-1 mt-1"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["In báo cáo"]">
                                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                                   onclick="event.preventDefault(); RLS_PrintReport()"></i>
                            </div>
                            <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                                <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                                     data-bs-toggle="tooltip" data-bs-placement="top"
                                     data-bs-original-title="@Local["Xuất excel"]">
                                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                                </div>
                                <div class="input-group-text icon-hover w-auto vttech-input-item">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLS_Export(0)">@Local["Tất cả"]</i>
                                </div>
                                <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                    <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLS_Export(1)">@Local["Tùy chọn"]</i>
                                </div>
                            </div>
                            <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                @Local["Xem thêm"]
                            </button>
                        </div> 
                    </div>
                </div>
                <div class="toggle">
                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                        <ul class="card card-body text-dark text-capitalize opacity-10">
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="person" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Người đại diện"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="phone" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Số điện thoại"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="email" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Email"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="banknumber" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Số tài khoản"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="bankcode" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Mã ngân hàng"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Ghi chú"]</p>
                            </li>
                        </ul>
                    </div>

                </div>
            </div>
            <div class="card-body pt-0 px-0">
                <div class="row">
                    <div class="col-12 col-md-12 col-lg-4">
                        <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                            <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng tiền phát sinh"]</h6>
                            <h6 class="font-weight-bolder"> <span id="lbTotalAmount">0</span></h6>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-lg-4">
                        <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                            <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng tiền thanh toán"]</h6>
                            <h6 class="font-weight-bolder"> <span id="lbTotalAmountPaid">0</span></h6>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-lg-4">
                        <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                            <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng tiền công nợ"]</h6>
                            <h6 class="font-weight-bolder"> <span id="lbTotalAmountDebt">0</span></h6>
                        </div>
                    </div>
                </div>
                <div class="collapsesticky collapse show" id="RLS_GridArea">
                    <div class="m-0 my-0 mt-3 mobile-responsive vt-header-sticky">
                        <table class="table vt-table mb-0" id="RLS_Grid">
                            <thead>
                                <tr role="row">
                                    <th>@Local["#"]</th>
                                    <th style="min-width:150px;">@Local["Mã nhà cung cấp"]</th>
                                    <th style="min-width:200px;">@Local["Nhà cung cấp"]</th>
                                    <th data-name="person" style="min-width:150px;">@Local["Người đại diện"]</th>
                                    <th data-name="phone">@Local["Số điện thoại"]</th>
                                    <th data-name="email">@Local["Email"]</th>
                                    <th data-name="banknumber">@Local["Số tài khoản"]</th>
                                    <th data-name="bankcode">@Local["Mã ngân hàng"]</th>
                                    <th data-name="note">@Local["Ghi chú"]</th>
                                    <th style="min-width:120px;">@Local["Phát sinh"]</th>
                                    <th style="min-width:120px;">@Local["Thanh toán"]</th>
                                    <th style="min-width:120px;">@Local["Công nợ"]</th>
                                </tr>
                            </thead>
                            <tbody id="RLS_GridBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="RLS_DetailContainer"  style="display:none;">
        <div class="vtcardheader card-header p-0">
            <div class="left">
                <p id="RLS_DetailHeader" class="text-md text-dark font-weight-bold mb-1"></p>
            </div>
            <div class="right">
                <div class="wrap">
                    <div class="wrapblock">
                        <div class="text-primary fw-bold d-inline mx-2 text-nowrap mt-1">
                            <span id="RLS_DetailCurrentData">0</span>
                            <span class="mx-2">/</span>
                            <span id="RLS_DetailTotalData">0</span>
                        </div>
                        <div class="icon-hover mx-1 mt-1"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Thu gọn"]">
                            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                               data-bs-toggle="collapse" href="#RLS_DetailGridArea" aria-expanded="true"></i>
                        </div>
                        <div class="icon-hover mx-1 mt-1"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["Tải lại"]">
                            <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                               onclick="event.preventDefault(); return RLS_DetailLoadData()"></i>
                        </div>
                        <div class="icon-hover mx-1 mt-1"
                             data-bs-toggle="tooltip" data-bs-placement="top"
                             data-bs-original-title="@Local["In báo cáo"]">
                            <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                               onclick="event.preventDefault(); RLS_DetailPrintReport()"></i>
                        </div>
                        <div class="flex-nowrap input-group rounded-0 vttech-input-group mt-1 _tab_control_" data-tab="export_excel">
                            <div class="icon-hover mx-1 me-0 input-group-text vttech-input-item vttech-input-item-first"
                                 data-bs-toggle="tooltip" data-bs-placement="top"
                                 data-bs-original-title="@Local["Xuất excel"]">
                                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer"></i>
                            </div>
                            <div class="input-group-text icon-hover w-auto vttech-input-item">
                                <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLS_ExportDetail(0)">@Local["Tất cả"]</i>
                            </div>
                            <div class="icon-hover input-group-text w-auto vttech-input-item vttech-input-item-last">
                                <i class="text-xs text-primary fw-bold" onclick="event.preventDefault(); return RLS_ExportDetail(1)">@Local["Tùy chọn"]</i>
                            </div>
                        </div>
                        <button class="btn btn-dark btn-sm mt-1 mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colListsdetail">
                            @Local["Xem thêm"]
                        </button>
                    </div>
                </div>
            </div>
            <div class="toggle">
                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colListsdetail" style="min-width:250px;">
                    <ul class="card card-body text-dark text-capitalize opacity-10">
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogledetail form-check-input" data-name="receiptnote" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ghi chú phiếu nhập"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogledetail form-check-input" data-name="paynote" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Ghi chú phiếu chi"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogledetail form-check-input" data-name="ware" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Kho"]</p>
                        </li>
                        <li class="d-flex">
                            <div class="form-check form-switch">
                                <input class="shtoogledetail form-check-input" data-name="fileattach" type="checkbox">
                            </div>
                            <p class="text-sm">@Local["Tệp đính kèm"]</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="collapsesticky collapse show" id="RLS_DetailGridArea">
            <div class="card-body p-0 mt-3">
                <div class="m-0 my-0 mobile-responsive vt-header-sticky">
                    <table class="table vt-table mb-0" id="RLS_DetailGrid">
                        <thead>
                            <tr role="row">
                                <th>@Local["#"]</th>
                                <th style="min-width:150px;">@Local["Mã nhà cung cấp"]</th>
                                <th style="min-width:200px;">@Local["Nhà cung cấp"]</th>
                                <th data-name="receiptcode" style="min-width:150px;">@Local["Phiếu nhập"]</th>
                                <th style="min-width:150px;">@Local["Ngày nhập"]</th>
                                <th style="min-width:150px;">@Local["Tiền nhập hàng"]</th>
                                <th data-name="receiptnote" style="min-width:120px;">@Local["Ghi chú phiếu nhập"]</th>
                                <th data-name="paycode" style="min-width:120px;">@Local["Phiếu chi"]</th>
                                <th data-name="paydate" style="min-width:120px;">@Local["Ngày thanh toán"]</th>
                                <th data-name="paid" style="min-width:120px;">@Local["Tiền thanh toán"]</th>
                                <th data-name="paynote" style="min-width:120px;">@Local["Ghi chú phiếu chi"]</th>
                                <th data-name="ware" style="min-width:120px;">@Local["Kho"]</th>
                                <th data-name="fileattach" style="min-width:120px;">@Local["Tệp đính kèm"]</th>
                            </tr>
                        </thead>
                        <tbody id="RLS_DetailGridBody">
                        </tbody>
                    </table>
                </div>
                <button class="btnsysmore btn btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return RLS_DetailRenderMore();">
                    @Local["Xem thêm"]
                </button>
            </div>

        </div>
    </div>
</div>
<div id="RLS_ViewFormContainer" class="card-body" style="display:none;"></div>
<script type="text/javascript">

    //#region // DECLARE & INIT LOAD LIST
    let DataReportMain;
    let xhrLoadList, xhrLoadDetail;
    let DataReportDetail, DataReportDetailSlice;
    let IndexReportDetail = 0;
    let shtable, shtableDetail;
    let timeoutCount, timeoutCountDetail;
    let RLS_DetailSupID = 0;
    $(document).ready(function () {
        shtable = $("#RLS_Grid").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        shtableDetail = $("#RLS_DetailGrid").TableExpandColumn({
            shtoogle: $('.shtoogledetail')
        });
        ToolPopper();
        RLS_Load();
        Checking_TabControl_Permission();
    });

    function RLS_Load() {
        if (xhrLoadList && xhrLoadList.readyState != 4) xhrLoadList.abort();
        let _wareID = "@Model._wareID";
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        IndexReport = 0;
        $("#RLS_GridBody").empty();
        xhrLoadList = AjaxLoad(url = "/Report/Account/LiabilitySupp/?handler=Loadata"
            , data = {
                'wareID': _wareID
                , 'dateFrom': _dateFrom
                , 'dateTo': _dateTo
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    DataReportMain = JSON.parse(result);
                    RLS_CalculatorTotal(data);

                    if (data && data.length != 0) {
                        fnRenderBlock(data, "RLS_GridBody"
                            , blocknum = 100
                            , fnrender = RLS_Render
                            , fnsuccess = null
                        );
                    }
                    Count_Up("RLS_TotalData", data.length);
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }


    //#endregion


    //#region // RENDER

    async function RLS_Render(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        let totalTarget = 0; totalPaid = 0; totalDebt = 0;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let debt = item.AmountRaise - item.AmountPaid;
                            totalTarget += item.AmountRaise;
                            totalPaid += item.AmountPaid;
                            totalDebt += debt;
                            let tr = `
                                                 <td class="vt-number-order"></td>
                                                 <td>
                                                     <a href="#" class="border-1 border-primary border-bottom buttonViewClass mb-0 text-sm fw-bold" data-id="${item.SupID}" data-name="${item.Name}">
                                                        ${item.Code}
                                                     </a>
                                                 </td>
                                                 <td data-name="name">
                                                    ${item.Name}
                                                 </td>
                                                 <td data-name="person">${item.Person}</td>
                                                 <td data-name="phone">${item.Phone}</td>
                                                 <td data-name="email">${item.Email}</td>
                                                 <td data-name="banknumber">${item.BankNumber}</td>
                                                 <td data-name="bankcode">${item.BankCode}</td>
                                                 <td data-name="note">${item.Note}</td>
                                                 <td >${formatNumber(item.AmountRaise)}</td>
                                                 <td >${formatNumber(item.AmountPaid)}</td>
                                                 <td >${formatNumber(debt)}</td>
                                                `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        tr = `<tr class="vt-number text-white bg-gradient bg-primary mt-2 SSBCourse_RowTotal" role="row">
                                          <td></td>
                                          <td class="text-start">
                                              <a href="#" class="border-1 border-white border-bottom buttonViewClass text-white" data-id="0">@Local["Tất cả"]</a>
                                          </td>
                                          <td data-name="name">-</td>
                                          <td data-name="person">-</td>
                                          <td data-name="phone">-</td>
                                          <td data-name="email">-</td>
                                          <td data-name="banknumber">-</td>
                                          <td data-name="bankcode">-</td>
                                          <td data-name="note">-</td>
                                          <td>${formatNumber(totalTarget)}</td>
                                          <td>${formatNumber(totalPaid)}</td>
                                          <td>${formatNumber(totalDebt)}</td>
                                          </tr>`;
                        myNode.insertAdjacentHTML('beforeend', tr);
                        RLS_GeneralEvent();
                        shtable.Refresh();
                        Checking_TabControl_Permission();
                        clearTimeout(timeoutCount);
                        timeoutCount = setTimeout(() => {
                            Count_Up("RLS_CurrentData", data.length);
                        }, 300)
                    }
                }
            }, 100);
        })
    }

    async function RLS_CalculatorTotal(data) {
        new Promise((resolve) => {
            let totalAmount = 0;
            let totalAmountPaid = 0;
            let totalDebt = 0;
            if (data && data.length != 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    totalAmount += item.AmountRaise;
                    totalAmountPaid += item.AmountPaid;
                }
            }
            totalDebt = totalAmount - totalAmountPaid;
            Count_Up("lbTotalAmount", totalAmount, 1);
            Count_Up("lbTotalAmountPaid", totalAmountPaid, 1);
            Count_Up("lbTotalAmountDebt", totalAmount - totalAmountPaid, 1);
            resolve();
        })
    }
    //#endregion

    //#region //LOAD DETAIL
    function RLS_DetailLoadData() {
        if (xhrLoadDetail && xhrLoadDetail.readyState != 4) xhrLoadDetail.abort();
        let _wareID = "@Model._wareID";
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        IndexReportDetail = 0;
        $("#RLS_DetailGridBody").empty();
        xhrLoadList = AjaxLoad(url = "/Report/Account/LiabilitySupp/?handler=LoadDataDetail"
            , data = {
                'wareID': _wareID
                , 'dateFrom': _dateFrom
                , 'dateTo': _dateTo
                , 'supID': RLS_DetailSupID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    DataReportDetail = JSON.parse(result);
                    DataReportDetailSlice = sliceIntoChunks(JSON.parse(result), 500);
                    if (DataReportDetailSlice && DataReportDetailSlice.length != 0) {
                        fnRenderBlock(DataReportDetailSlice[IndexReportDetail], "RLS_DetailGridBody"
                            , blocknum = 100
                            , fnrender = RLS_DetailRender
                            , fnsuccess = null
                        );
                    }

                    Count_Up("RLS_DetailTotalData", data.length);
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function RLS_DetailRenderMore() {
        IndexReportDetail += 1;
        if (DataReportDetailSlice && DataReportDetailSlice[IndexReportDetail]) {
            fnRenderBlock(DataReportDetailSlice[IndexReportDetail], "RLS_DetailGridBody"
                , blocknum = 100
                , fnrender = RLS_DetailRender
                , fnsuccess = null
            );
        }
    }
    //#endregion

    //#region //RENDER DETAIL
    async function RLS_DetailRender(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = `
                                            <td class="d-none">${item.ReceiptID}</td>
                                            <td class="vt-number-order"></td>
                                            <td>
                                                ${item.SupCode}
                                            </td>
                                            <td >${item.SupName}</td>
                                            <td data-name="receiptcode">
                                            <a data-code="${item.ReceiptCode}" class="buttonDetailClass cursor-pointer">${item.ReceiptCode}</a>
                                            </td>
                                            <td>${ConvertDateTimeUTC_DMYHM(item.ReceiptDate)}</td>
                                            <td >${formatNumber(item.AmountRaise)}</td>
                                            <td data-name="receiptnote" >${item.ReceiptNote}</td>
                                            <td >${item.PayCode}</td>
                                            <td >${ConvertDateTimeUTC_DMYHM(ConvertToDateRemove1900(item.PayDate))}</td>
                                            <td >${formatNumber(item.Paid)}</td>
                                            <td data-name="paynote" >${item.PayNote}</td>
                                            <td data-name="ware" >${Fun_GetName_ByID(RP_DataWarehouse, item.WareID)}</td>
                                            <td data-name="fileattach" class="text-center">
                                                ${item.FileAttach != 0
                                                    ? `<span class="text-primary fileAttashView cursor-pointer fw-bold" data-receipt="${item.ReceiptID}" data-code="${item.ReceiptCode}" data-createdcode="${item.Created}">${item.FileAttach} @Local["Tệp"]<span>`
                                                    : `<span class="text-secondary">@Local["Không có tệp đính kèm"]<span>`
                                                }
                                            </td>
                                          `
                            tr = `<tr class="vt-number" role="row">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        RLS_DetailEvent();
                        shtableDetail.Refresh();
                        Checking_TabControl_Permission();
                        clearTimeout(timeoutCountDetail);
                        timeoutCountDetail = setTimeout(() => {
                            Count_Up("RLS_DetailCurrentData", $("#" + id).children().length);
                        }, 300)
                    }
                }
            }, 100);
        })
    }
    //#endregion

    //#region //EVENT
    function RLS_GeneralEvent() {
        $("#RLS_GridBody .buttonViewClass").unbind('click').on("click", function () {
            RLS_DetailSupID = $(this).attr('data-id');
            let name = $(this).attr('data-name');
            $("#RLS_DetailContainer").fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#RLS_DetailContainer").offset().top
            }, 300);
            if (RLS_DetailSupID == "0") {
                $("#RLS_DetailHeader").html('@Local["Tất cả nhà cung cấp"]');
            }
            else {
                $("#RLS_DetailHeader").html(name);
            }
            RLS_DetailLoadData();
        })
        $(document).on('click', '.fileAttashView', function () {
            let Code = encodeURIComponent($(this).attr('data-code'));
            if (Code != "") {
                $("#DetailModal_Content").html('');
                $("#DetailModal_Content").load(`/Library/LibraryAttach/LibraryAttachDetail?OriginCode=${Code}&IsView=1&ver=${versionofWebApplication}`
                    , function (responseTxt, statusTxt, xhr) {
                    })

                $('#DetailModal').modal('show');
            }
            else {
                notiWarning("@Local["Không có mã"]");
            }
        });
    }

    function RLS_DetailEvent() {
        $("#RLS_DetailGridBody .buttonDetailClass").unbind().click(function () {
            $("#RLS_ViewFormContainer").fadeIn(200);
            $("#RLS_MainContainer").hide();
            let ID = Number($(this).closest('tr').children('td')[0].innerHTML);
            let Code = encodeURIComponent($(this).attr('data-code'));
            $("#RLS_ViewFormContainer").empty();

            if (Code != "") {
                $("#RLS_ViewFormContainer").html('');
                $("#RLS_ViewFormContainer").load(`/Report/Account/LiabilitySuppViewForm?code=${Code}&ver=${versionofWebApplication}`
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            let data = [...DataReportDetail];
                            let index = data.findIndex(e => e.ReceiptID == ID);
                            let item = data[index];
                            if (typeof LSVF_LoadInfo === 'function')
                                LSVF_LoadInfo(item);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })

            }
            else {
                notiWarning("@Local["Không có mã"]");
            }
        });
    }

    //#endregion

    //#region // EXPORT - PRINT
    async function RLS_Export(isOption = 0) {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#RLS_MasterContainer');
                var dataHeader = {
                    "STT": ["STT", (value, { }, idx) => { return idx + 1 }],
                    "Code": ["@Local["Mã nhà cung cấp"]"],
                    "Name": ["@Local["Nhà cung cấp"]"],
                    "Person": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='person']`)).is(":checked"),
                        data: ["@Local["Người đại diện"]"]
                    },
                    "Phone": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='phone']`)).is(":checked"),
                        data: ["@Local["Số điện thoại"]"]
                    },
                    "Email": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='email']`)).is(":checked"),
                        data: ["@Local["Email"]"]
                    },
                    "BankNumber": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='banknumber']`)).is(":checked"),
                        data: ["@Local["Số tài khoản"]"]
                    },
                    "BankCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='bankcode']`)).is(":checked"),
                        data: ["@Local["Mã ngân hàng"]"]
                    },
                    "Note": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='note']`)).is(":checked"),
                        data: ["@Local["Ghi chú"]"]
                    },
                    "AmountRaise": ["@Local["Phát sinh"]"],
                    "AmountPaid": ["@Local["Thanh toán"]"],
                    "debt": ["@Local["Công nợ"]", (value, { AmountRaise, AmountPaid }) => { return AmountRaise - AmountPaid }]
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RLS_GridBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang['Bao_cao_cong_no_nha_cung_cap']);
                exportJsonToExcel(Outlang['Bao_cao_cong_no_nha_cung_cap'], DataReportMain, dataHeader);
            }
            else {
                notiWarning('@Local["Không xuất được file"]');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]');
        }
    }
    async function RLS_PrintReport() {
        try {
            if (DataReportMain && DataReportMain.length != 0) {
                let _branchID = 0;
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["STT", {
                        callbackRenderValue: (value, { }, idx) => { return idx + 1 }
                    }],
                    "Code": ["@Local["Mã nhà cung cấp"]"],
                    "Name": ["@Local["Nhà cung cấp"]"],
                    "Person": ["@Local["Người đại diện"]", {
                        isShow: isAll || $(`.shtoogle[data-name='person']`).is(":checked"),
                    }],
                    "Phone": {
                        dataNamePer: 'phone',
                        data: ["@Local["Số điện thoại"]", {
                            isShow: isAll || $(`.shtoogle[data-name='phone']`).is(":checked"),
                        }]
                    },
                    "Email": ["@Local["Email"]", {
                        isShow: isAll || $(`.shtoogle[data-name='email']`).is(":checked"),
                    }],
                    "BankNumber": ["@Local["Số tài khoản"]", {
                        isShow: isAll || $(`.shtoogle[data-name='banknumber']`).is(":checked"),
                    }],
                    "BankCode": ["@Local["Mã ngân hàng"]", {
                        isShow: isAll || $(`.shtoogle[data-name='bankcode']`).is(":checked"),
                    }],
                    "Note": ["@Local["Ghi chú"]", {
                        isShow: isAll || $(`.shtoogle[data-name='note']`).is(":checked"),
                    }],
                    "AmountRaise": ["@Local["Phát sinh"]"],
                    "AmountPaid": ["@Local["Thanh toán"]"],
                    "debt": ["@Local["Công nợ"]", {
                        callbackRenderValue: (value, { AmountRaise, AmountPaid }) => { return AmountRaise - AmountPaid }
                    }]
                };
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RLS_GridBody', PermissionTable_TabControl);
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang['Bao_cao_cong_no_nha_cung_cap'], DataReportMain, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }

    async function RLS_ExportDetail() {
        try {
            if (DataReportDetail && DataReportDetail.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#RLS_DetailContainer');
                var dataHeader = {
                    "STT": ["STT", (value, { }, idx) => { return idx + 1 }],
                    "SupCode": ["@Local["Mã nhà cung cấp"]"],
                    "SupName": ["@Local["Nhà cung cấp"]"],
                    "ReceiptCode": ["@Local["Phiếu nhập"]"],
                    "ReceiptDate": ["@Local["Ngày nhập"]", (value) => { return ConvertDateTimeUTC_DMYHM(value) }],
                    "AmountRaise": ["@Local["Tiền nhập hàng"]"],
                    "ReceiptNote": {
                        isShow: isAll || isAll || (eleContainer.find(`.shtoogledetail[data-name='receiptnote']`)).is(":checked"),
                        data: ["@Local["Ghi chú phiếu nhập"]"]
                    },
                    "PayCode": ["@Local["Phiếu chi"]"],
                    "PayDate": ["@Local["Ngày thanh toán"]", (value) => { return ConvertDateTimeUTC_DMYHM(ConvertToDateRemove1900(value)) }],
                    "Paid": ["@Local["Tiền thanh toán"]"],
                    "PayNote": {
                        isShow: isAll || isAll || (eleContainer.find(`.shtoogledetail[data-name='paynote']`)).is(":checked"),
                        data: ["@Local["Ghi chú phiếu chi"]"]
                    },
                    "WareID": {
                        isShow: isAll || isAll || (eleContainer.find(`.shtoogledetail[data-name='ware']`)).is(":checked"),
                        data: ["@Local["Kho"]", (value) => { return Fun_GetName_ByID(RP_DataWarehouse, value) }]
                    }
                }
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'RLS_DetailGridBody', PermissionTable_TabControl);
                syslog_ExpExcel('e', Outlang['Chi_tiet_cong_no_nha_cung_cap']);
                exportJsonToExcel(Outlang['Chi_tiet_cong_no_nha_cung_cap'], DataReportDetail, dataHeader);
            }
            else {
                notiWarning('@Local["Không xuất được file"]');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]');
        }
    }
    async function RLS_DetailPrintReport() {
        try {
            if (DataReportDetail && DataReportDetail.length != 0) {
                let _branchID = 0;
                let _dateFrom = "@Model._dateFrom";
                let _dateTo = "@Model._dateTo";
                var dataHeader = {
                    "STT": ["STT", {
                        callbackRenderValue: (value, { }, idx) => { return idx + 1 }
                    }],
                    "SupCode": ["@Local["Mã nhà cung cấp"]"],
                    "SupName": ["@Local["Nhà cung cấp"]"],
                    "ReceiptCode": ["@Local["Phiếu nhập"]"],
                    "ReceiptDate": ["@Local["Ngày nhập"]", {
                        callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMYHM(value) }
                    }],
                    "AmountRaise": ["@Local["Tiền nhập hàng"]"],
                    "ReceiptNote": ["@Local["Ghi chú phiếu nhập"]", {
                        isShow: isAll || $(`.shtoogledetail[data-name='receiptnote']`).is(":checked")
                    }],
                    "PayCode": ["@Local["Phiếu chi"]"],
                    "PayDate": ["@Local["Ngày thanh toán"]", {
                        callbackRenderValue: (value) => { return ConvertDateTimeUTC_DMYHM(ConvertToDateRemove1900(value)) }
                    }],
                    "Paid": ["@Local["Tiền thanh toán"]"],
                    "PayNote": ["@Local["Ghi chú phiếu chi"]", {
                        isShow: isAll || $(`.shtoogledetail[data-name='paynote']`).is(":checked")
                    }],
                    "WareID": ["@Local["Kho"]", {
                        isShow: isAll || $(`.shtoogledetail[data-name='ware']`).is(":checked"),
                        callbackRenderValue: (value) => { return Fun_GetName_ByID(RP_DataWarehouse, value) }
                    }]
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + _dateFrom + '&dateTo=' + _dateTo + '&branch=' + _branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = Outlang['Chi_tiet_cong_no_nha_cung_cap'], DataReportDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }

                        //#endregion

</script>
