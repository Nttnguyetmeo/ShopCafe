@page
@model MLunarCoffee.Pages.Report.CustomerCare.AfterTreatmentGridModel
@{
    Layout = null;
}

<div class="card">
    <div class="card-header p-3 ">
        <div class="d-lg-flex">
            <div class="w-50 col-auto my-auto">
                <p class="text-md text-dark font-weight-bold mb-1"> @Local["Chăm sóc khách hàng sau điều trị"]</p>
                <p class="text-sm mb-0">@Local["Báo cáo chăm sóc khách hàng sau điều trị"]</p>
                <p id="error_max_dates_show" style="display:none;" class="text-sm mb-0">
                    <span>@Local["Số ngày được xem tối đa"]</span>
                    <span class="ps-2" id="report_max_dates_show"></span>
                </p>
            </div>
            <div class="ms-auto my-auto d-flex align-items-center">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#AfterTreatmentGrid" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return TreatmentReport_Load()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return exportData_AfterTreatmentGrid()"></i>
                </div>
            </div>
        </div>
        <div class="row p-2 pb-0 ps-0">
            <div class="col-lg-4 col-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotal">0</span></h6>
                </div>
            </div>
            <div class="col-lg-4 col-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Đã xử lý"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalExecute">0</span></h6>
                </div>
            </div>
            <div class="col-lg-4 col-12  mt-4 mt-lg-0">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Chưa xử lý"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotalNotYet">0</span></h6>
                </div>
            </div>

        </div>
    </div>
    <div class="collapsesticky collapse show" id="AfterTreatmentGrid">

        <div class="card-body p-3 pt-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="dtContent_AfterTreatmentGrid">
                    <thead>
                        <tr>
                            <th >#</th>
                            <th >@Local["Ngày điều trị"]</th>
                            <th style="min-width: 250px;">@Local["Khách hàng"] </th>
                            <th class="no-sort">@Local["Nội dung"]</th>
                            <th class="no-sort">@Local["Trạng thái"]</th>
                            <th >@Local["Ngày xử lý"]</th>
                            <th class="no-sort">@Local["Đã xử lý"]</th>
                        </tr>
                    </thead>
                    <tbody id="dtContent_AfterTreatmentGridBody">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/main.js');</script>
<script type="text/javascript">
    var dataDetail = [];
    var ser_maxDates = 31;
    $(document).ready(function () {
        ToolPopper();
        TreatmentReport_Load();
        //$("#divReportViewDetail table").closest("table").parent().addClass("stickytable");
        Checking_TabControl_Permission();
    });
    function TreatmentReport_Load() {

        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _branch = "@Model._branch";

        AjaxLoad(url = "/Report/CustomerCare/AfterTreatmentGrid/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'branchID': _branch, 'maxdate': ser_maxDates }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "" && result != "0") {
                    let data = JSON.parse(result);
                    if (data != undefined && data.length != 0) {
                        TreatmentReport_Render(data, "dtContent_AfterTreatmentGridBody");
                        let _NoneCare = data.filter(word => {
                            return (Number(word["userExecute"]) == 0);
                        });
                        Count_Up('lbTotal', data.length)
                        Count_Up('lbTotalExecute', _NoneCare.length)
                        Count_Up('lbTotalNotYet', data.length - _NoneCare.length)


                    }
                }
                else if (result == "0") {
                    $("#error_max_dates_show").show();
                    document.getElementById("report_max_dates_show").innerHTML = ":" + ser_maxDates;
                }
                else {
                    $("#error_max_dates_show").hide();
                }
            }
        );

        return false;
    }

    function TreatmentReport_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let obj = Fun_GetObject_ByID(RP_DataUser, item.userExecute);
                    let name = '', img='',executedinfo='',executedate='';
                    if (obj != null && item.userExecute!=0) {
                        name = (obj != null) ? obj.Name : 'unknown';
                        img = (obj != null) ? obj.Avatar : Master_Default_Pic;
                        executedinfo = '<div class="d-inline"><img class="avatar avatar-xs me-2" src="' + img + '" alt="label-image" /><span>' + name+'</span></div>'
                        executedate = GetDateTime_String_DMY(item.TreatCreate);

                    }
                    let tr =
                        '<td style="text-align: center;" class="selectedcolor" data-sortvalue="' + (i + 1) + '">' + (i + 1) + '</td>'
                        + '<td style="text-align: center;">' + GetDateTime_String_DMY(item.TreatCreate) + '</td>'
                        + '<td> <a style="text-decoration: none;border-bottom: 1px solid #2185d0;" target="_blank" href="/Customer/MainCustomer?CustomerID=' + item.CustID + '&ver=' + versionofWebApplication + '">' + item.CustCode + '</a>'
                        + '<div style="padding: 2px;">' + item.CustName + '</div>'
                        + '</td>'
                        + '<td>'
                        +'<div>'
                        + item.Content
                        + '</div>'
                        + executedinfo
                        + '</td>'
                        + '<td>'
                        + item.StatusCallName
                        + '</td>'
                        + '<td>'
                        + executedate
                        + '</td>'
                        + '<td>'
                        + ((item.userExecute != 0) ? '<span style="display:none;">X</span><i class="buttonActionClass vtt-icon vttech-icon-check"></i>' : '')
                        + '</td>'
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';


                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }

        TreatmentReport_Event();
    }

    function TreatmentReport_Event() {
        $(".hoverpopup").popup({
            transition: "scale up",
            position: "top center"
        });
        $('#dtContent_AfterTreatmentGrid').tablesort();
    }
    function exportData_AfterTreatmentGrid() {
        exportToExcel("dtContent_AfterTreatmentGrid", Outlang['Cham-soc-sau-dieu-tri']);
    }

</script>
