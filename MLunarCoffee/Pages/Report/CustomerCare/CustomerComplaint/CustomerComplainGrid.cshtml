@page
@model MLunarCoffee.Pages.Report.CustomerCare.CustomerComplaint.CustomerComplainGridModel
@{
    Layout = null;
}
<div class="vtcardheader card-header pb-0 px-0">    
    <div class="right">
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local[" Thu gọn"]">
            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
               data-bs-toggle="collapse" href="#CC_DivMasterCom" aria-expanded="true"></i>
        </div>
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local[" Xuất excel"]">
            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
               onclick="event.preventDefault(); return CCom_ExportMaster()"></i>
        </div>
    </div> 
</div>
<div class="collapsesticky collapse show" id="CC_DivMasterCom">
    <div class="card-body p-0 pt-0">
        <div class="row px-2">
            <div class="col-12 col-sm-12 col-md-12 col-xl-4 p-1">
                <div class="fw-bold text-center text-dark text-sm">
                    @Local["Khách hàng phàn nàn"]:
                    <span id="CC_TotalPie" class="fw-bolder"></span>
                </div>
                <div class="position-relative mt-0 mt-md-4 my-2" style="min-height: 150px;">
                    <div class="chart position-absolute top-50 start-50 translate-middle">
                        <canvas id="CC_PieMaster" class="chart-canvas" height="180"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-12 col-xl-8 p-1">
                <div class="mt-2 table-responsive">
                    <table class="table vt-table mb-0" id="CC_TableMasterCom">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th class="ps-6">@Local["Chi nhánh"]</th>
                                <th>@Local["Khách hàng"]</th>
                                <th>@Local["Phàn nàn"]</th>
                                <th>@Local["Đã xử lý"]</th>
                                <th>@Local["Chưa xử lý"]</th>
                            </tr>
                        </thead>
                        <tbody id="CC_BodyCom">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="CC_DivStatus" style="display: none">
    <div class="vtcardheader card-header pb-0 px-0">
    <div class="left">
        <p id="CC_StatusDetail" class="text-md text-dark font-weight-bold mb-1"></p>
    </div>
    <div class="right">
        <div class="icon-hover mx-1 mt-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local[" Thu gọn"]">
            <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
               data-bs-toggle="collapse" href="#CC_DivCollapStatus" aria-expanded="true"></i>
        </div>
        <div class="icon-hover mx-1"
             data-bs-toggle="tooltip" data-bs-placement="top"
             data-bs-original-title="@Local[" Xuất excel"]">
            <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
               onclick="event.preventDefault(); return CCom_ExportStatus()"></i>
        </div>
    </div> 
</div>
    <div class="collapsesticky collapse show" id="CC_DivCollapStatus">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <table data-name="CC_TableStatus" class="table vt-table mb-0" id="CC_TableStatus">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>@Local["Trạng thái"]</th>
                            <th>@Local["Trạng thái chi tiết"]</th>
                            <th>@Local["Chi nhánh"]</th>
                            <th>@Local["Khách hàng"]</th>
                            <th>@Local["Phàn nàn"]</th>
                            <th>@Local["Đã xử lý"]</th>
                            <th>@Local["Chưa xử lý"]</th>
                        </tr>
                    </thead>
                    <tbody id="CC_BodyStatusGrid">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="CC_DivDetail"   style="display: none">
    <div class="vtcardheader card-header pb-0 px-0">
        <div class="left">
            <p id="CC_HeadDetail" class="text-md text-dark font-weight-bold mb-1"></p>
        </div>
        <div class="right">
            <div class="icon-hover mx-1 mt-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local[" Thu gọn"]">
                <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                   data-bs-toggle="collapse" href="#CC_DivCollapDetail" aria-expanded="true"></i>
            </div>
            <div class="icon-hover mx-1 mt-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local[" In báo cáo"]">
                <i class="vtt-icon vttech-icon-print text-lg text-primary cursor-pointer"
                   onclick="event.preventDefault(); CCom_PrintDetail()"></i>
            </div>
            <div class="icon-hover mx-1"
                 data-bs-toggle="tooltip" data-bs-placement="top"
                 data-bs-original-title="@Local[" Xuất excel"]">
                <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                   onclick="event.preventDefault(); return CCom_ExportDetail()"></i>
            </div>
        </div>
    </div>
    <div class="collapsesticky collapse show" id="CC_DivCollapDetail">
        <div class="card-body p-0 pt-0">
            <div class="m-0 my-3 mobile-responsive vt-header-sticky">
                <table data-name="CC_TableDetail" class="table vt-table mb-0" id="CC_TableDetail">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>@Local["Mã khách hàng"]</th>
                            <th>@Local["Khách hàng"]</th>
                            <th>@Local["Trạng thái"]</th>
                            <th>@Local["Trạng thái chi tiết"]</th>
                            <th>@Local["Chi nhánh"]</th>
                            <th>@Local["Trạng thái"]</th>
                        </tr>
                    </thead>
                    <tbody id="CC_BodyDetailGrid">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    let Sys_branchID = "@Model._BranchID";
    let Sys_dateFrom = "@Model._dateFrom";
    let Sys_dateTo = "@Model._dateTo";
    let CC_CurrentBranch = 0;
    let CC_DtDetail = [];

    $(document).ready(function () {
        CCom_LoadBranch();
    });
    //#region //Load
    function CCom_LoadBranch() {
        AjaxLoad(url = "/Report/CustomerCare/CustomerComplaint/CustomerComplainGrid?handler=Loadata"
            , data = {
                'branchID': Sys_branchID,
                'dateFrom': Sys_dateFrom,
                'dateTo': Sys_dateTo,
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let DTTotalCom = data["Table"];
                    let DTBranchCom = data["Table1"];
                    if (DTBranchCom && DTBranchCom.length > 0) {
                        let TotalPie = 0;
                        CCom_RenderBranch(DTBranchCom, "CC_BodyCom");
                        for (let i = 0; i < DTTotalCom.length; i++) {
                            DTTotalCom[i].Name = DTTotalCom[i].Type == 1 ? decodeHtml("@Local["Khách hàng phàn nàn"]") : decodeHtml("@Local["Khách hàng"] @Local["Phát sinh dịch vụ"]");
                            TotalPie += (DTTotalCom[i].Type == 1 ? Number(DTTotalCom[i].TotalCus) : 0);
                        }
                        $("#CC_TotalPie").html(formatNumber(Number(TotalPie)));
                        rp_pie("CC_PieMaster", DTTotalCom, 'Name', 'TotalCus');
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function CCom_LoadStatus(ID) {
        $("#CC_BodyStatusGrid").empty();
        $("#CC_DivDetail").hide();
        AjaxLoad(url = "/Report/CustomerCare/CustomerComplaint/CustomerComplainGrid?handler=LoadataStatus"
            , data = {
                'branchID': Sys_branchID,
                'dateFrom': Sys_dateFrom,
                'dateTo': Sys_dateTo,
                'branchDetail': ID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let DTStatusCom = data["Table2"];
                    let TotalComp = 0;
                    if (DTStatusCom && DTStatusCom.length > 0) {
                        for (let i = 0; i < DTStatusCom.length; i++) {
                            TotalComp += DTStatusCom[i].TimeComp;
                        }
                        CCom_RenderStatus(DTStatusCom, "CC_BodyStatusGrid", TotalComp);
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function CCom_LoadDetail(StatusID, StatusCallID) {
        AjaxLoad(url = "/Report/CustomerCare/CustomerComplaint/CustomerComplainGrid?handler=LoadDetail"
            , data = {
                'branchID': Sys_branchID,
                'dateFrom': Sys_dateFrom,
                'dateTo': Sys_dateTo,
                'branchDetail': CC_CurrentBranch,
                'StatusID': StatusID,
                'StatusCallID': StatusCallID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    CC_DtDetail = data["Table3"];
                    if (CC_DtDetail && CC_DtDetail.length > 0) {
                        CCom_RenderDetail(CC_DtDetail, "CC_BodyDetailGrid");
                    }
                }
                else {
                    notiError_SW();
                }
            }
        );
        return false;
    }
    //#endregion

    //#region //Render

    async function CCom_RenderBranch(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        let TotalCus = 0, TotalComp = 0, TotalExeDone = 0, TotalExeNo = 0;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            TotalCus += item["TotalCus"];
                            TotalComp += item["TimeComp"];
                            TotalExeDone += item["ExeDone"];
                            TotalExeNo += item["ExeNo"];
                            let tr = `
                                    <tr class="vt-number">
                                        <td class="vt-number-order"></td>
                                        <td><span class="border-1 border-primary border-bottom text-primary fw-bold btnGetBranch cursor-pointer" data-id="${item.BranchID}">${CCom_GetName(RP_DataBranch, item.BranchID)}</span></td>
                                        <td>${formatNumber(item.TotalCus)}</td>
                                        <td>${formatNumber(item.TimeComp)}</td>
                                        <td>${formatNumber(item.ExeDone)}</td>
                                        <td>${formatNumber(item.ExeNo)}</td>
                                    </tr>
                                `;
                            if (i == data.length - 1) {
                                tr += `
                                         <tr class="text-white bg-gradient bg-primary">
                                            <td></td>
                                            <td><span class="border-1 border-white text-white border-bottom fw-bold btnGetBranch cursor-pointer" data-id="0">@Local["Tổng"]</span></td>
                                            <td>${formatNumber(TotalCus)}</td>
                                            <td>${formatNumber(TotalComp)}</td>
                                            <td>${formatNumber(TotalExeDone)}</td>
                                            <td>${formatNumber(TotalExeNo)}</td>
                                        </tr>
                                    `
                            }
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                resolve();
                CCom_Event();
            }, 30)
        })
    }

    async function CCom_RenderStatus(data, id, Total) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                myNode.innerHTML = '';
                if (myNode != null) {
                    if (data && data.length > 0) {
                        let TotalCus = 0, TotalPercentComp = 0, TotalExeDone = 0, TotalExeNo = 0;
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let PercentTimeComp = ((item.TimeComp / Total) * 100).toFixed(2);

                            TotalCus += item.TotalCus;
                            TotalPercentComp += Number(PercentTimeComp);
                            TotalExeDone += item.ExeDone;
                            TotalExeNo += item.ExeNo;
                            let tr = `
                                    <tr class="vt-number">
                                        <td class="vt-number-order"></td>
                                        <td><span class="border-1 border-primary border-bottom text-primary fw-bold cursor-pointer btnGetStatus" data-Status="${item.Status}" data-StatusCall="0">${CCom_GetName(RP_DataCareStatus, item.Status)}</span></td>
                                        <td><span class="border-1 border-primary border-bottom text-primary fw-bold cursor-pointer btnGetStatus" data-Status="${item.Status}" data-StatusCall="${item.StatusCall}">${CCom_GetName(RP_DataCareStatus, item.StatusCall)}</span></td>
                                        <td>${CCom_GetName(RP_DataBranch, item.BranchID)}</td>
                                        <td>${formatNumber(item.TotalCus)}</td>
                                        <td>${PercentTimeComp} %</td>
                                        <td>${formatNumber(item.ExeDone)}</td>
                                        <td>${formatNumber(item.ExeNo)}</td>
                                    </tr>
                                `;
                            if (i == data.length - 1) {
                                tr += `
                                        <tr class="text-white bg-gradient bg-primary">
                                            <td></td>
                                            <td><span class="border-1 border-white text-white border-bottom fw-bold cursor-pointer btnGetStatus" data-Status="0" data-StatusCall="0">@Local["Tổng"]</span></td>
                                            <td></td>
                                            <td></td>
                                            <td>${formatNumber(TotalCus)}</td>
                                                <td>${TotalPercentComp.toFixed(0)} %</td>
                                            <td>${formatNumber(TotalExeDone)}</td>
                                            <td>${formatNumber(TotalExeNo)}</td>
                                        </tr>
                                    `;
                            }

                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                resolve();
                CCom_Event();
            }, 30)
        })
    }

    async function CCom_RenderDetail(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                myNode.innerHTML = '';
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = `
                                    <tr class="vt-number">
                                        <td class="vt-number-order"></td>
                                        <td>
                                                <a target="_blank" href="/Customer/MainCustomer?CustomerID=${Number(item.CusID)}&ver=${versionofWebApplication}">${item.CusCode}</a>
                                        </td>
                                        <td>${item.CusName}</td>
                                        <td>${CCom_GetName(RP_DataCareStatus, item.statusID)}</td>
                                        <td>${CCom_GetName(RP_DataCareStatus, item.statusCallID)}</td>
                                        <td>${CCom_GetName(RP_DataBranch, item.ComBranchID)}</td>
                                        <td>${(item.IsDone == 1 ? "@Local["Đã xử lý"]" : "@Local["Chưa xử lý"]")}</td>
                                    </tr>
                                `;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                resolve();
            }, 30)
        })
    }

    function CCom_GetName(data, id) {
        try {
            let result = '';
            if (data && data != {} && id != 0) {
                result = data[id].Name;
            }
            return result;
        } catch (ex) {
            return
        }
    }
    //#endregion

    //#region

    function CCom_Event() {
        $("#CC_BodyCom .btnGetBranch").unbind("click").click(function () {
            let ID = $(this).attr("data-id") ? Number($(this).attr("data-id")) : 0;
            let Name = $(this).html();
            CC_CurrentBranch = ID;
            $('#CC_DivStatus').fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#CC_DivStatus").offset().top
            }, 300);
            $("#CC_StatusDetail").html(Name);

            CCom_LoadStatus(ID);
        })
        $("#CC_BodyStatusGrid .btnGetStatus").unbind("click").click(function () {
            let StatusID = $(this).attr("data-Status");
            let StatusCallID = $(this).attr("data-StatusCall");
            let Name = $(this).html();
            $('#CC_DivDetail').fadeIn('slow');
            $('html, body').animate({
                scrollTop: $("#CC_DivDetail").offset().top
            }, 300);
            $("#CC_HeadDetail").html(Name);
            CCom_LoadDetail(StatusID, StatusCallID);
        })
    }

    //#endregion

    //#region //Export

    function CCom_ExportMaster() {
        syslog_ExpExcel('e', Outlang["Sys_bao_cao"] + Outlang["Sys_complain"]);
        exportToExcel("CC_TableMasterCom", Outlang["Sys_bao_cao"] + Outlang["Sys_complain"]);
    }

    function CCom_ExportStatus() {
        let Name = $("#CC_StatusDetail").html();
        syslog_ExpExcel('e', Outlang["Sys_bao_cao"] + Outlang["Sys_complain"] + '-' + Name);
        exportToExcel("CC_TableStatus", Outlang["Sys_bao_cao"] + Outlang["Sys_complain"] + '-' + Name);
    }

    function CCom_ExportDetail(isOption = 0) {
        let fileName = xoa_dau($("#CC_HeadDetail").text()).replaceAll(' ', '-');
        syslog_ExpExcel('e', fileName);
        exportToExcel("CC_TableDetail", fileName);
    }

    async function CCom_PrintDetail() {
        try {
            if (CC_DtDetail && CC_DtDetail.length != 0) {
                var dataHeader = {
                    "STT": ["@Local["STT"]", {
                        callbackRenderValue: (value, { }, index) => { return index + 1; }
                    }]
                    , "CusCode": ["@Local["Mã khách hàng"]"]
                    , "CusName": ["@Local["Khách hàng"]"]
                    , "statusID": ["@Local["Trạng thái"]", {
                        callbackRenderValue: (value) => {
                            return (CCom_GetName(RP_DataCareStatus, value) ? CCom_GetName(RP_DataCareStatus, value) : '');
                        }
                    }]
                    , "statusCallID": ["@Local["Trạng thái chi tiết"]", {
                        callbackRenderValue: (value) => {
                            return (CCom_GetName(RP_DataCareStatus, value) ? CCom_GetName(RP_DataCareStatus, value) : '');
                        }
                    }]
                    , "ComBranchID": ["@Local["Chi nhánh"]", {
                        callbackRenderValue: (value) => {
                            return (CCom_GetName(RP_DataBranch, value) ? CCom_GetName(RP_DataBranch, value) : '');
                        }
                    }]
                    , "IsDone": ["@Local["Tình trạng"]", {
                        callbackRenderValue: (value) => { return (value == 1 ? "@Local["Đã xử lý"]" : "@Local["Chưa xử lý"]") }
                    }]
                };
                $("#MainSendMail_Content").empty();
                $("#MainSendMail_Content").load('/Print/Reports/reportform?&dateFrom=' + Sys_dateFrom + '&dateTo=' + Sys_dateTo + '&branch=' + Sys_branchID + '&ver=' + versionofWebApplication
                    , function (responseTxt, statusTxt, xhr) {
                        if (statusTxt == "success") {
                            $("#MainSendMail").addClass('active');
                            let fileName = xoa_dau($("#CC_HeadDetail").text()).replaceAll(' ', '-');
                            let options = {
                                empName: sys_employeeName_Main
                            }
                            if (typeof PRF_CBPrintReport === 'function')
                                PRF_CBPrintReport(namePrint = fileName, CC_DtDetail, dataHeader, options);
                        }
                        if (statusTxt == "error") {
                            console.warn("error");
                        }
                    })
            }
            else {
                notiWarning('@Local["Không có dữ liệu"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không in được file"]!');
        }
    }
        //#endregion
</script>