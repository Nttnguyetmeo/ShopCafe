@page
@model MLunarCoffee.Pages.Report.CustomerCare.CustomerPotentialGridModel
@{
    Layout = null;
}

<div class="card">
    <div class="card-header p-3 ">
        <div class="d-lg-flex">
            <div class="w-50 col-auto my-auto">
                <p class="text-md text-dark font-weight-bold mb-1">@Local["Khách hàng tiềm năng"]</p>
                <p class="text-sm mb-0">@Local["Báo cáo khách hàng tiềm năng"]</p>

            </div>
            <div class="ms-auto my-auto d-flex align-items-center">
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Thu gọn"]">
                    <i class="vtt-icon vttech-icon-all text-lg text-primary cursor-pointer"
                       data-bs-toggle="collapse" href="#CusCare_Potential" aria-expanded="true"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Tải lại"]">
                    <i class="vtt-icon  vttech-icon-refesh text-lg text-primary cursor-pointer"
                       onclick="event.preventDefault(); return ReportPotential_Load()"></i>
                </div>
                <div class="icon-hover mx-1"
                     data-bs-toggle="tooltip" data-bs-placement="top"
                     data-bs-original-title="@Local["Xuất excel"]">
                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel"
                       onclick="event.preventDefault(); return exportData_CusCare_Potential()"></i>
                </div>
            </div>
        </div>
        <div class="row p-2 pb-0 ps-0">
            <div class="col-lg-6 col-md-6">
                <div class="border-dashed border-1 border-secondary border-radius-md p-2 mt-2 pb-0">
                    <h6 class="text-sm text-primary text-gradient mb-0">@Local["Tổng"]</h6>
                    <h6 class="font-weight-bolder"> <span id="lbTotal_SalesLead_CheckInNotTreat">0</span></h6>
                </div>
            </div>
            <div class="col-lg-6 col-md-6 col-12  mt-4 mt-lg-0">
                <div class=" p-2 pb-0">
                    <div class="ui fluid search selection dropdown form-control" id="PotentialType" onchange="event.preventDefault;return CustCare_Filter();">
                        <input type="hidden" name="statusType" />
                        <i class="dropdown icon"></i>
                        <input class="search" autocomplete="off" tabindex="0" />
                        <div class="default text">eg .@Local["Loại"]</div>
                        <div id="ccbPotentialType" class="menu" tabindex="-1">
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="collapsesticky collapse show" id="CusCare_Potential">

        <div class="card-body p-3 pt-0">
            <div class="m-0 my-3 mobile-responsive">
                <table class="table vt-table mb-0" id="dtReport_CusCare_Potential">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>@Local["Mã khách hàng"]</th>
                            <th>@Local["Số điện thoại"]</th>
                            <th class="no-sort">@Local["Nội dung"]</th>
                            <th>@Local["Người xử lý"]</th>
                            <th>@Local["Ngày xử lý"]</th>
                            <th>@Local["Loại"]</th>
                            <th>@Local["Chi nhánh"]</th>

                        </tr>
                    </thead>
                    <tbody id="dtReport_CusCare_Potential_Body">
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/main.js');</script>
<script type="text/javascript">
    let dataCurCare = [];
    let dataType = {

        1: {
            name: '@Local["Đến tư vấn nhưng chưa phát sinh điều trị nào"]',
            color: '#2185d0'
        },
        2: {
            name: '@Local["Có lịch nhưng chưa bao giờ tới"]',
            color: '#ffedba'
        },
        3: {
            name: '@Local["Chưa phát sinh thanh toán"]',
            color: '#f2711c'
        },
        4: {
            name: '@Local["Mới phát sinh thanh toán cọc"]',
            color: '#00b5ad'
        },
        5: {
            name: '@Local["Có dịch vụ chưa điều trị"]',
            color: '#a333c8'
        },
    };
    let all_typekey = 0;
    $(document).ready(function () {
        ToolPopper();
        all_typekey = Object.keys(dataType).length + 1;
        dataType[all_typekey] = {name: '@Local["Tất cả"]',color: '#00b5ada6'};
        ReportPotential_Load();
        ReportPotential_LoadCombo(dataType, 'ccbPotentialType');
        //$("#divReportViewDetail table").closest("table").parent().addClass("stickytable");
        Checking_TabControl_Permission();
    });
    function ReportPotential_Load() {
        let _dateFrom = "@Model._dateFrom";
        let _dateTo = "@Model._dateTo";
        let _branchID = "@Model._branchID";

        AjaxLoad(url = "/Report/CustomerCare/CustomerPotentialGrid/?handler=Loadata"
            , data = { 'dateFrom': _dateFrom, 'dateTo': _dateTo, 'branchID': _branchID }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    dataCurCare = JSON.parse(result)["Table"];
                    ReportPotential_DetectType();
                    ReportPotential_Render(dataCurCare, "dtReport_CusCare_Potential_Body");
                }
            }
        );
        return false;
    }
    function ReportPotential_DetectType() {
        for (i = 0; i < dataCurCare.length; i++) {
            if (ConvertYMDInt_ToDate(dataCurCare[i].FirstCheckin) == '') {
                dataCurCare[i].Type_Potential = 2;
            }
            else if (ConvertYMDInt_ToDate(dataCurCare[i].FirstPaid) == '') {
                dataCurCare[i].Type_Potential = 3;
            }
            else if (ConvertYMDInt_ToDate(dataCurCare[i].FirstTreatment) == '') {
                dataCurCare[i].Type_Potential = 1;
            }
            else if (ConvertYMDInt_ToDate(dataCurCare[i].FirstPaid) != '' && Number(dataCurCare[i].TotalPaid)==0) {
                dataCurCare[i].Type_Potential = 4;
            }
            else if (dataCurCare[i].ServiceNoTreat !=0 ) {
                dataCurCare[i].Type_Potential = 5;
            }
            else dataCurCare[i].Type_Potential = 0;
        }
        dataCurCare = dataCurCare.filter(word => {
            return (Number(word["Type_Potential"]) != 0);
        });
    }

    function ReportPotential_LoadCombo(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            for (const [key, value] of Object.entries(data)) {
                stringContent = stringContent +
                    '<div class="item" data-value="' + key + '">'
                    + '<div  style = "background: ' + value.color + ';" class="color cuscare_type"></div>'
                    + '<span style="padding-top: 1px;margin-left: 5px;">' + value.name + '</span>'
                    + '</div>';
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        $("#PotentialType").dropdown("refresh");
        $("#PotentialType").dropdown("set selected", all_typekey);
    }

    function ReportPotential_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                Count_Up('lbTotal_SalesLead_CheckInNotTreat', data.length)

                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let obj = Fun_GetObject_ByID(RP_DataUser, item.userExecute);
                    let name = '', img = '', executedinfo = '',executeddate = '';
                    if (obj != null && item.userExecute != 0) {
                        name = (obj != null) ? obj.Name : 'unknown';
                        img = (obj != null) ? obj.Avatar : Master_Default_Pic;
                        executedinfo = '<div class="d-inline"><img class="avatar avatar-xs me-2" src="' + img + '" alt="label-image" /><span>' + name + '</span></div>';
                        executeddate = GetDateTime_String_DMY(item.executed);
                    }

                    let tr =
                        '<td class="vt-number-order"></td>'
                        + '<td><a style="text-decoration: none;border-bottom: 1px solid #2185d0;" target="_blank" href="/Customer/MainCustomer?CustomerID=' + item.CustomerID + "&ver=" + versionofWebApplication + '">'
                        + item.CustCode + '</a>'
                        + '<div style="padding: 2px;">' + item.CustName + '</div>'
                        + '</td>'

                        + '<td class="_tab_control_" data-tab="phone_customer">' + item.CustPhone + '</td>'
                        + '<td>'
                        + item.Content
                        + '</td>'
                        + '<td>'
                        + executedinfo
                        + '</td>'
                        + '<td>'
                        + executeddate
                        + '</td>'
                        + '<td style="text-align: center">'
                        + '<div style="background:' + dataType[item.Type_Potential].color + ';" class="curcare_type_cir hoverpopup" title="' + dataType[item.Type_Potential].name + '"></div>'
                        + '</td>'

                        + '<td style="text-align: center">'
                        + '<span title="' + item.BranchName + '" class="hoverpopup">' + item.BranchCode + '</span>'
                        + '</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        CusCareReport_Event();
    }
    function CusCareReport_Event() {
        $(".hoverpopup").popup({
            transition: "scale up",
            position: "top center"
        });
        $('#dtReport_CusCare_Potential').tablesort();
    }
    function CustCare_Filter() {
        let _type = Number($('#PotentialType').dropdown('get value')) ? Number($('#PotentialType').dropdown('get value')) : 0;
        let _data = [];
        if (_type != all_typekey) {
            _data = dataCurCare.filter(word => {
                return (Number(word["Type_Potential"]) == Number(_type));
            });
        } else _data = dataCurCare;
        ReportPotential_Render(_data, "dtReport_CusCare_Potential_Body");
    }
    function exportData_CusCare_Potential() {
        exportToExcel("dtReport_CusCare_Potential", Outlang['Khach_hang_tiem_nang']);
    }
</script>
<style>
    #PotentialType .cuscare_type {
        width: 12px;
        height: 12px;
        border-radius: 15px;
        display: inline-block;
        border: #e6e6e6 1px solid;
    }

    .curcare_type_cir {
        width: 15px;
        height: 15px;
        border-radius: 30px;
        border: #e6e6e6 1px solid;
        margin: auto;
    }
</style>
