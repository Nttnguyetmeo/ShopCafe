@page
@model MLunarCoffee.Pages.Setting.TypeAccountDetailModel
@{
    Layout = null;
}

<div class="container-fluid px-0 ">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Loại thu chi"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết loại thu chi"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="row px-1 form3" id="formtypeAccountDetail">
                        <div class="field col-12 p-1">
                            <label>@Local["Tên loại thu chi"]</label>
                            <input id="TypeAccountName" name="name" type="text" class="form-control" />
                        </div>
                        <div class="d-flex align-items-center mb-sm-0 mb-4">
                            <div class="form-check">
                                <input id="TypechkIn" onchange="event.preventDefault(); return TypeAccountOnchangeType();" class="form-check-input pr-2" type="checkbox" />
                                <label class="custom-control-label" for="choose_all_type_service" data-fontchanged="true">@Local["Chi"]</label>
                            </div>
                            <div class="form-check ms-3">
                                <input id="TypechkOut" onchange="event.preventDefault(); return TypeAccountOnchangeType1();" class="form-check-input pr-2" type="checkbox" />
                                <label class="custom-control-label" for="choose_all_type_product" data-fontchanged="true">@Local["Thu"]</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="formtypeAccountDetail" onclick="event.preventDefault();return CloseModal()">@Local["Đóng"]</button>
                        <button form="formtypeAccountDetail" type="button" class="btn bg-gradient-primary mt-2 me-2 _tab_control_ setting_projectclosure" data-tab="edit_tab_customer" onclick="event.preventDefault(); return TypeAccountExcute();">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var ser_TypeAccountCurrentID = ("@Model._TypeAccountCurrentID ");
    $(document).ready(function () {
        if (ser_TypeAccountCurrentID == 0) {
            $("#TypechkIn").prop('checked', true);
            $("#TypechkOut").prop('checked', false);
        }
        TypeAccountLoadUpdate();
        Checking_TabControl_Permission();

    });
    function TypeAccountExcute() {
        var data = new Object();
        data.Name = $('#TypeAccountName').val() ? $('#TypeAccountName').val() : "";
        if (document.getElementById('TypechkOut').checked) data.Type = 1;
        else data.Type = 0;
        $('#formtypeAccountDetail').form('validate form');
        if ($('#formtypeAccountDetail').form('is valid')) {
            AjaxLoad(url = "/Setting/TypeAccountDetail/?handler=ExcuteData"
                , data = { data: JSON.stringify(data), CurrentID: ser_TypeAccountCurrentID }, async = true, error = null
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        TypeAccountLoad();
                        CloseModal();
                    } else if (result == "-1") {
                        $('#textShowMessage').html('@Local["Trùng dữ liệu"]');
                    } else {
                        notiError_SW();
                    }
                });

        }
        return false;
    }
    function TypeAccountLoadUpdate() {
        if (ser_TypeAccountCurrentID != "0") {
            AjaxLoad(url = "/Setting/TypeAccountDetail/?handler=Loadata"
                , data = { id: ser_TypeAccountCurrentID }, async = true, error = null
                , success = function (result) {
                    if (result != "") {
                        let dataType = JSON.parse(result);
                        if (dataType.length > 0) {
                            $('#TypeAccountName').val((dataType[0].Name));
                            if (dataType[0].Type == 1) {
                                $("#TypechkOut").prop('checked', true);
                                $("#TypechkIn").prop('checked', false);
                            }
                            else {
                                $("#TypechkIn").prop('checked', true);
                                $("#TypechkOut").prop('checked', false);
                            }
                        }
                    }
                });
        }

        return false;
    }
    function TypeAccountOnchangeType() {
        if (document.getElementById('TypechkIn').checked) {
            $("#TypechkOut").prop('checked', false);
        }

    }
    function TypeAccountOnchangeType1() {
        if (document.getElementById('TypechkOut').checked) {
            $("#TypechkIn").prop('checked', false);
        }
    }
</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>


