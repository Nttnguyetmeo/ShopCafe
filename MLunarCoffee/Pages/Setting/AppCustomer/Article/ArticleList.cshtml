@page
@model MLunarCoffee.Pages.Setting.AppCustomer.Article.ArticleListModel
@{
    Layout = null;
}

<div class="row" id="AAL_DivContainer">
    <div class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 pt-2">
                <div class="left">
                    <h6 class="mb-0">@Local["Danh sách bài viết"]</h6>
                    <p id="AAL_LimitNote" class="text-sm mb-0">@Local["Hiển thị tối đa 10 bài viết - 3 Slide"]</p>
                </div>
                <div class="right">
                    <div class="form-check me-2">
                        <input id="AAL_ChkDisable" class="form-check-input pr-2" type="checkbox" checked="checked">
                        <label>@Local["Bài viết ẩn"]</label>
                    </div>
                    <button id="btnAddNewSlideArticle" class="btn bg-gradient-primary btn-sm mt-1 d-none me-2" data-tab="add_tab_article" data-value="fade up" onclick="return AAL_HandleProminentImg()">@Local["Thêm slide"]</button>
                    <button id="btnAddNewArticle" class="btn bg-gradient-primary btn-sm mt-1 me-2" data-tab="add_tab_article" data-value="fade up" onclick="return AAL_AddNew()">@Local["Thêm mới"]</button>
                    <button class="btn btn-dark btn-sm mt-1 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                        @Local["Xem thêm"]
                    </button>
                </div>
                <div class="toggle">
                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                        <ul class="card card-body text-dark text-capitalize opacity-10">
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="sub" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Mô tả"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="content" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Nội dung"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="source" type="checkbox">
                                </div>
                                <p class="text-sm">Link</p>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="card-body pt-2">
                <div id="AD_CarouselImage" class="carousel slide d-none" data-bs-ride="carousel">
                    <button onclick="return AAL_HandleProminentImg()" class="btn btn-white bg-gradient-primary position-absolute end-5 bottom-0 z-index-2 text-white float-end me-1" data-value="fade up"><i class="fa fa-camera me-1" aria-hidden="true"></i> @Local["Chỉnh sửa"]</button>
                    <div class="carousel-indicators mb-n2 pb-2">
                    </div>
                    <div class="carousel-inner">
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#AD_CarouselImage" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#AD_CarouselImage" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
                <div class="m-0 my-3 mobile-responsive">
                    <div id="loaderList" class="waitingdiv text-center w-100 mt-2 position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table id="dtContentArticleList" class="table vt-table mb-0">
                        <thead class="hiddenCollapse">
                            <tr role="row">
                                <th class="d-none">ID</th>
                                <th style="width:45px;">#</th>
                                <th>@Local["Hình ảnh"]</th>
                                <th>@Local["Tiêu đề"]</th>
                                <th data-name="sub">@Local["Mô tả"]</th>
                                <th data-name="content" style="min-width: 150px">@Local["Nội dung"]</th>
                                <th data-name="source">Link</th>
                                <th>@Local["Người sửa"]</th>
                                <th>@Local["Xử lý"]</th>
                            </tr>
                        </thead>
                        <tbody id="dtContentArticleBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="AAL_DivContainerDetail">

</div>
<script type="text/javascript">
    let shtable;
    let xhrArticleList;
    let AAL_Data;
    let AAL_LimitData = (ser_AcceptSettingApp['article'] != undefined && ser_AcceptSettingApp['article']['limit'] != undefined)
                ? ser_AcceptSettingApp['article']['limit']
                : {
                    Dimensions: "",
                    Format: "",
                    Key: "limit",
                    Limit: 10,
                    Size: 0,
                    Type: "article",
                    format: [],
                    height: 0,
                    width: 0,
                }
    let AAL_LimitSlide = (ser_AcceptSettingApp['article'] != undefined && ser_AcceptSettingApp['article']['limitimage'] != undefined)
                ? ser_AcceptSettingApp['article']['limitimage']
                : {
                    Dimensions: "",
                    Format: "",
                    Key: "limitimage",
                    Limit: 3,
                    Size: 0,
                    Type: "article",
                    format: [],
                    height: 0,
                    width: 0
                }
    //#region // INIT

    let DataUser;
    $(document).ready(function () {
        shtable = $("#dtContentArticleList").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        $('#AAL_LimitNote').html(`Hiển thị tối đa ${AAL_LimitData.Limit} bài viết - ${AAL_LimitSlide.Limit} Slide`);
        $('#AAL_ChkDisable').prop('checked', false);
        AAL_InitIconCarousel();
        AAL_Load();
        AAL_Event();
    });

    function AAL_InitIconCarousel() {
        let rgbBsPrimary = document.documentElement.style.getPropertyValue('--bs-primary').split(',');
        let hexBsPrimary = AAL_rgbToHex(Number(rgbBsPrimary[0]), Number(rgbBsPrimary[1]), Number(rgbBsPrimary[2]));
        let urlPrev = `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23${hexBsPrimary}' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E")`;
        $('.carousel-control-prev-icon').css("background-image", urlPrev);
        let urlNext = `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23${hexBsPrimary}' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E")`;
        $('.carousel-control-next-icon').css("background-image", urlNext);
    }

    function AAL_ComponentToHex(c) {
        var hex = c.toString(16);
        return hex.length == 1 ? "0" + hex : hex;
    }

    function AAL_rgbToHex(r, g, b) {
        return AAL_ComponentToHex(r) + AAL_ComponentToHex(g) + AAL_ComponentToHex(b);
    }
    //#endregion

    //#region // RENDER

    function AAL_Load() {
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                AjaxLoad(url = "/Setting/AppCustomer/Article/ArticleList/?handler=LoadData"
                    , data = {}, async = true, error = null
                    , success = function (result) {
                        if (result != "") {
                            let data = JSON.parse(result)['Table'];
                            let csdata = JSON.parse(result)['Table1'];
                            AAL_Data = JSON.parse(result)['Table'];
                            AAL_RenderCarousel(csdata, 'AD_CarouselImage');
                            AAL_Render(data, 'dtContentArticleBody');
                            shtable.Refresh();
                        }
                        else {
                            notiError_SW();
                        }
                    });
            });
    }

    function AAL_RenderCarousel(data, id) {
        let childrenCarousel = $(`#${id}`).children('div');
        if (childrenCarousel != null) {
            $(`#${id}`).addClass('d-none');
            let imgContent = '';
            let btnContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let isActive = i == 0 ? 'active' : '';
                    let isAreaCurrent = i == 0 ? 'true' : '';
                    let csimg = `
                                <div class="carousel-item ${i == 0 ? 'active' : ''}">
                                    <div class="page-header min-vh-25 border-radius-xl" style="background-image: url('${item.Image}');">
                                        <span class="mask bg-gradient-dark"></span>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col-lg-6 my-auto">
                                                    <h4 class="text-white mb-0 fadeIn1 fadeInBottom">VTTECH SOLUTION</h4>
                                                    <p class="text-white fadeIn2 fadeInBottom">Work with the rockets</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;
                    let csbtn = `<button type="button" data-bs-target="#${id}" data-bs-slide-to="${i}" class="${isActive} rounded-circle btn bg-gradient-primary" style="width: 15px; height: 15px" aria-current="${isAreaCurrent}" aria-label="Slide ${i + 1}"></button>`;
                    btnContent += csbtn;
                    imgContent += csimg;
                }
                $(`#${id}`).removeClass('d-none');
                $(`#btnAddNewSlideArticle`).addClass('d-none');
            }
            else {
                $(`#${id}`).addClass('d-none');
                $(`#btnAddNewSlideArticle`).removeClass('d-none');
            }

            if (childrenCarousel[0] != undefined) childrenCarousel[0].innerHTML = btnContent;
            if (childrenCarousel[1] != undefined) childrenCarousel[1].innerHTML = imgContent;
        }
    }

    function AAL_Render(data, id) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let itemContent = AAL_RenderItem(item);
                    stringContent = stringContent + `<tr id="AAL_Content_${item.ID}" class="vt-number ${((item.IsDisabled === 1) ? ('table-active') : (""))}"" role="row" data-id="${item.ID}"> ${itemContent} </tr>`;
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }

    }

    async function AAL_RenderByID(id = 0) {
        return new Promise((resolve) => {
            if (xhrArticleList && xhrArticleList.readyState != 4) xhrArticleList.abort();
            xhrArticleList = AjaxLoad(url = "/Setting/AppCustomer/Article/ArticleDetail/?handler=LoadDetail"
                , data = { CurrentID: id }
                , async = true, error = null
                , success = function (result) {
                    if (result != "") {
                        let data = JSON.parse(result);
                        if (data && data.length != 0) {
                            let objIndex = AAL_Data.findIndex((obj => obj.ID == id));
                            AAL_Data[objIndex].IsDisabled = JSON.parse(result)[0].IsDisabled;
                            let item = data[0];
                            let itemContent = AAL_RenderItem(item);
                            let tr = `<tr id="AAL_Content_${item.ID}" class="vt-number ${((item.IsDisabled === 1) ? ('table-active') : (""))}"" role="row" data-id="${item.ID}"> ${itemContent} </tr>`;
                            let AAL_RowArticle = $("#AAL_Content_" + id);
                            if (AAL_RowArticle && AAL_RowArticle.length != 0) {
                                AAL_RowArticle.replaceWith(tr);
                            }
                            else {
                                document.getElementById('dtContentArticleBody').insertAdjacentHTML('beforeend', tr);
                            }
                            AAL_Event();
                            shtable.Refresh();
                        }
                        else {
                            let AAL_RowArticle = $("#AAL_Content_" + id);
                            if (AAL_RowArticle && AAL_RowArticle.length != 0) AAL_RowArticle.remove();
                        }
                    }
                }
                , sender = null
                , before = function (e) {
                    $("#loaderList").show();
                }
                , complete = function (e) {
                    $("#loaderList").hide();
                }
            );
        })
    }

    function AAL_RenderItem(item) {
        let obj = Fun_GetObject_ByID(DataUser, item.ModifiedBy);
        let name = (obj != null) ? obj.Name : 'unknown';
        let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
        let tr = `<td class="d-none AAL_ID"> ${item.ID} </td>
                  <td class="vt-number-order"></td>
                  <td class="col col-md-2">
                       <div class="text-center">
                           <div class="avatar avatar-xl position-relative my-1">
                                <img class="border-radius-md h-100" src="${item.FeatureImage}" alt="label-image" onerror="${Master_OnLoad_Error_Image(this)}"/>
                           </div>
                       </div>
                  </td>
                  <td class="col col-md-5 mx-auto">
                      <div class="mx-2">
                           <a class="text-decoration-underline fw-bold buttonEditClass" href="#"> ${item.Header} </a>
                      </div>
                  </td>
                  <td class="col col-md-5 mx-auto" data-name="sub">${item.Sub}</td>
                  <td class="col col-md-5 mx-auto" data-name="content">${item.Content}</td>
                  <td class="col col-md-5 mx-auto" data-name="source">${item.Source}</td>
                  <td class="col col-md-3">
                      <div class="d-flex f-md-right">
                          <div class="icon icon-shape icon-sm me-2 text-center" >
                              <img class="avatar avatar-xs mt-2 " src="${img}" alt="label-image" onerror="Master_OnLoad_Error_Image(this)">
                              </div>
                              <div class="d-flex flex-column">
                              <h6 class="text-dark text-sm mb-0"> ${name} </h6>
                              <span class="text-xs"> ${formatDateToDMYHM(item.Modified)} </span>
                          </div>
                      </div>
                  </td>
                  <td>
                      <div class="text-nowrap cursor-pointer">
                      ${AAL_RenderButton(item.ID, item.IsDisabled)}
                      </div>
                  </td>`;
        return tr;
    }

    function AAL_RenderButton(id, isdisabled) {
        try {
            let buttons = [];
            buttons.push('<button class="buttonGrid" value="' + id + '">'
                        + '<i data-id="' + id + '" class="buttonDeleteClass vtt-icon vttech-icon-delete"></i>'
                        + '</button>');
            buttons.push('<button class="buttonGrid" value="' + id + '">'
                        + ((isdisabled === 1)
                            ? '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-hide"></i>'
                            : '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-nohide"></i>')
                        + '</button>');
            return Render_Button_Grid(buttons);
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion

    //#region // EVENT

    function AAL_Disable(id, flag) {
        const promise = notiConfirm();
        promise.then(function () { AAL_ExecuteDisable(id, flag); }, function () { });
    }

    function AAL_ExecuteDisable(id, flag) {
        let data = [...AAL_Data].filter(x => x.IsDisabled==0)
        if(flag || (data && data.length >= 0 && data.length < AAL_LimitData.Limit))
        {
            AjaxLoad(url = "/Setting/AppCustomer/Article/ArticleList/?handler=DisableItem"
                , data = { id: id }, async = true, error = null
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        AAL_RenderByID(id);
                    } else {
                        notiError_SW();
                    }
                }
            );
        }
        else {
            notiWarning('@Local["Quá giới hạn số lượng hiển thị bài viết"]');
        }

    }

    function AAL_Delete(id) {
        const promise = notiConfirm();
        promise.then(function () { AAL_ExecuteDelete(id); }, function () { });
    }

    function AAL_ExecuteDelete(id) {
        AjaxLoad(url = "/Setting/AppCustomer/Article/ArticleList/?handler=Delete"
            , data = { id: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    AAL_Load();
                    syslog_mob("d", "@Local["Bài viết"]");
                } else {
                    notiError_SW();
                }
            });
    }

    function AAL_HandleProminentImg() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/AppCustomer/Service/ServiceImage?Type=article" + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function AAL_OpenDetail() {
        $("#AAL_DivContainerDetail").empty();
        $("#AAL_DivContainer").hide();
        $("#AAL_DivContainerDetail").html('');
    }

    function AAL_Close() {
        $("#AAL_DivContainerDetail").html('');
        $("#AAL_DivContainer").show();
        $("#AAL_DivContainerDetail").hide();
    }

    function AAL_AddNew() {
        let data = [...AAL_Data].filter(x => x.IsDisabled==0)
        if(data && data.length >= 0 && data.length < AAL_LimitData.Limit)
        {
            AAL_OpenDetail();
            $("#AAL_DivContainerDetail").load("/Setting/AppCustomer/Article/ArticleDetail" + "?ver=" + versionofWebApplication);
            $('#AAL_DivContainerDetail').show();
            return false;
        }
        else {
            notiWarning('@Local["Quá giới hạn số lượng hiển thị bài viết"]');
            return false;
        }
    }

    function AAL_Edit(CurrentID) {
        AAL_OpenDetail();
        $("#AAL_DivContainerDetail").load("/Setting/AppCustomer/Article/ArticleDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#AAL_DivContainerDetail').show();
        return false;
    }

    function AAL_Event() {
        $('#AAL_ChkDisable').unbind().change(function (event) {
            if ($('#AAL_ChkDisable').is(':checked'))
                $('#dtContentArticleList').addClass('showdis');
            else $('#dtContentArticleList').removeClass('showdis');
        });
        $('#dtContentArticleList tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr').find('.AAL_ID')[0].innerHTML);
            AAL_Edit(ID);
        });

        $('#dtContentArticleList tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr').find('.AAL_ID')[0].innerHTML);
            AAL_Delete(ID);
        });
        $('#dtContentArticleList tbody').on('click', '.buttonDisabledClass', function () {
            let ID = Number($(this).closest('tr').find('.AAL_ID')[0].innerHTML);
            let flag = $(this).hasClass('vttech-icon-nohide');
            AAL_Disable(ID, flag);
        });
    }

    //#endregion
</script>
<style>
    .table-active {
        display: none;
    }

    .showdis .table-active {
        display: table-row;
    }

    .vt-table tr td {
        border-left: 1px solid var(--color--table--border) !important;
        white-space: normal !important;
    }
</style>
<script>js_require('/js/main.js')</script>
