@page
@model MLunarCoffee.Pages.Setting.AppCustomer.Icon.SettingIconListModel
@{
    Layout = null;
}
<link href="/assests/icon-app/style.css" rel="stylesheet" />
<div class="row">
    <div class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 pt-2">
                <div class="left">
                    <h6 class="mb-0">@Local["Cài đặt"] icon</h6>
                    <p class="text-sm mb-0">@Local["Danh sách"] icon</p>
                </div>
                <div class="right">
                    <div class="form-check">
                        <input class="form-check-input pr-2" id="IL_AllShow" type="checkbox" checked>
                        <label>@Local["Hiển thị tất cả"]</label>
                    </div>
                </div>
            </div>
            <div class="card-body pt-2">
                <div class="m-0 my-3 mobile-responsive">                   
                    <table data-name="IL_TableGrid" class="table vt-table mb-0" id="IL_TableGrid">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Local["Tên"]</th>
                                <th>Icon</th>
                                <th>@Local["Tạm ẩn"]</th>
                            </tr>
                        </thead>
                        <tbody id="IL_BodyGrid">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    //#region // Load && Executed
    $(document).ready(function () {
        IList_Load();
        IList_EventInit();
    })
    function IList_Load () {
        AjaxLoad(url = "/Setting/AppCustomer/Icon/SettingIconList/?handler=LoadData"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result)
                    IList_Render(data, "IL_BodyGrid");
                } else notiError_SW()
            }
        )
    }

    function IList_EventInit () {
        $("#IL_AllShow").on("change", function () {
            let IsShow = $(this).prop("checked") ? 1 : 0;
            if (IsShow == 1) {
                $("#IL_TableGrid").removeClass("hide");
            } else {
                $("#IL_TableGrid").addClass("hide");
            }
        })
    }

    function IList_Executed (ID, State) {
        AjaxLoad(url = "/Setting/AppCustomer/Icon/SettingIconList/?handler=Executed"
            , data = {
                "CurrentID": ID
                , "State": State
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                } else notiError_SW()
            }
        )
    }

    //#endregion

    //#region //Render

    async function IList_Render (data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = "";
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = `
                                <td class="vt-number-order"></td>
                                <td><span class="text-sm border-bottom border-primary text-primary btnEdit cursor-pointer" data-id="${item.ID}">${item.Description}</span></td>
                                <td class="text-center"><div class="icon icon-xs border-radius-sm bg-gradient-primary"><img src="${item.ImageLink}" style="max-width: 15px; max-height: 15px;"></div></td>
                                <td class="text-center">
                                    <div class="form-check d-inline-block">
                                        <input type="checkbox" class="form-check-input btnCheck" data-id="${item.ID}" ${item.State != 1 ? 'checked' : ''}>
                                        <label class="form-check-label text-sm font-weight-bold"></label>
                                    </div>
                                </td>
                                `
                        tr = `<tr role="row" id="IL_Row${item.ID}" class="vt-number ${item.State != 1 ? 'bg-gray-200 eveShow' : ''}">${tr}</tr>`
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
            }
            resolve();
            IList_Event();
        })
    }

    //#endregion

    //#region //Event

    function IList_Event () {
        $("#IL_BodyGrid .btnCheck").unbind("click").click(function () {
            let ID = $(this).attr("data-id");
            let Status = $(this).prop("checked") ? 0 : 1;
            if (Status == 0) {
                $("#IL_Row" + ID).addClass("bg-gray-200 eveShow");
            } else {
                $("#IL_Row" + ID).removeClass("bg-gray-200 eveShow");
            }
            IList_Executed(ID, Status);
        })
        $("#IL_BodyGrid .btnEdit").unbind("click").click(function () {
            let ID = $(this).attr("data-id");
            IList_OpentDetail(ID);
        })
    }

    //#endregion
    //#region //Detail

    function IList_OpentDetail (ID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/AppCustomer/Icon/SettingIconDetail?CurrentID=" + ID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    //#endregion
</script>
<style>
    .hide .eveShow {
        display: none;
    }
</style>