@page
@model MLunarCoffee.Pages.Setting.AppCustomer.TimePeriod.TimePeriodListModel
@{
    Layout = null;
}

<div class="container-fluid px-0" id="ATL_MainDiv">
    <div class="row">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 pt-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Danh sách khung thời gian đặt lịch hẹn"]</h6>
                        <p class="text-sm mb-0">@Local["Tối đa 4 khung giờ"]</p>
                    </div>
                    <div class="right">
                        <button id="btnNewTimePeriod" class="btn bg-gradient-primary btn-sm mt-1" onclick="return ATL_Edit()">@Local["Chỉnh sửa"]</button>
                    </div>

                </div>
                <div class="card-body pt-2">
                    <div class="m-0 my-3 mobile-responsive">
                        <div class="">
                            <table data-name="" class="table vt-table mb-0 mt-2" id="ATL_DtContentTimePeriod">
                                <thead class="hiddenCollapse">
                                    <tr role="row">
                                        <th class="d-none">ID</th>
                                        <th>#</th>
                                        <th>@Local["Thời gian bắt đầu"]</th>
                                        <th>@Local["Thời gian kết thúc"]</th>
                                        <th>@Local["Xóa"]</th>
                                    </tr>
                                </thead>
                                <tbody id="ATL_DtContentTimePeriodBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid py-3 px-0 " id="ATL_DetailDiv">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        ATL_Load();
    });

    //#region //Load Data
    function ATL_Load() {
        AjaxLoad(url = "/Setting/AppCustomer/TimePeriod/TimePeriodList/?handler=LoadData"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                let data = JSON.parse(result);
                ATL_Render(data, "ATL_DtContentTimePeriodBody");
            }
        );
    }

    async function ATL_Render(data, id) {
        new Promise((reslove) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = ATL_RenderTableItem(item);
                        stringContent = stringContent + `<tr class="vt-number" role="row"> ${tr} </tr>`;
                    }
                }
                myNode.innerHTML = stringContent;
                ATL_Event();
            }
        })
    }

    function ATL_RenderTableItem(item) {
        let tr = '';
        if(item.State != 0){
            tr = `<td class="d-none ATL_ID"> ${item.ID} </td>
                  <td class="vt-number-order"></td>
                  <td class="col col-md-5 mx-auto">${item.HourStart}</td>
                  <td class="col col-md-5 mx-auto">${item.HourEnd}</td>
                  <td> ${Render_Button_Grid(['<button class="buttonGrid" value="item.ID"><i class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'])}
                  </td>`;
        }
        return tr;
    }

    //#endregion

    //#region //Event
    function ATL_Delete(id) {
        const promise = notiConfirm();
        promise.then(function () { ATL_ExecuteDelete(id); }, function () { });
    }

    function ATL_ExecuteDelete(id) {
        AjaxLoad(url = "/Setting/AppCustomer/TimePeriod/TimePeriodList/?handler=Delete"
            , data = { id: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    ATL_Load();
                    syslog_mob("d", "@Local["Thời gian đặt lịch"]");
                } else {
                    notiError_SW();
                }
            });
    }

    function ATL_Event() {
        $('#ATL_DtContentTimePeriod tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr').find('.ATL_ID')[0].innerHTML);
            ATL_Delete(ID);
        });
    }

    //#region //Show Detail
    function ATL_Edit() {
        ATL_OpenDetail();
        $("#ATL_DetailDiv").load("/Setting/AppCustomer/TimePeriod/TimePeriodDetail?ver=" + versionofWebApplication);
        $("#ATL_DetailDiv").show();
        return false;
    }

    function ATL_OpenDetail() {
        $("#ATL_DetailDiv").empty();
        $("#ATL_MainDiv").hide();
        document.getElementById("ATL_DetailDiv").innerHTML = '';
    }

    function ATL_CloseDetail() {
        document.getElementById("ATL_DetailDiv").innerHTML = '';
        $("#ATL_MainDiv").show();
        $("#ATL_DetailDiv").hide();
    }
    //#endregion

    //#endregion
</script>
<script>js_require('/js/comon/initialize_setting.js', true)</script>
<script>js_require('/js/main.js')</script>
<script>js_require('/js/customjs/custom-validation.js', true)</script>
