@page
@model MLunarCoffee.Pages.Setting.AppCustomer.Service.ServiceListModel
@{
    Layout = null;
}

<div class="row " id="AppServiceDivContainer">
    <div class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 pt-2">
                <div class="left">
                    <h6 class="mb-0">@Local["Danh sách dịch vụ app"]</h6>
                    <p id="AppServiceLimitNote" class="text-sm mb-0"></p>
                </div>
                <div class="right">
                    <div class="form-check me-2">
                        <input id="AppServiceChkDisable" class="form-check-input pr-2" type="checkbox" checked="checked">
                        <label>@Local["Dịch vụ ẩn"]</label>
                    </div>
                    <button id="btnAddNewSlideService" class="btn bg-gradient-primary btn-sm mt-1 d-none me-2" data-tab="add_tab_article" data-value="fade up" onclick="return AppServiceEditSlide()">@Local["Thêm slide"]</button>
                    <button class="btn bg-gradient-primary btn-sm mt-1" data-value="fade up" onclick="return AppServiceAddNew()">@Local["Thêm mới"]</button>
                </div>
            </div>
            <div class="card-body pt-2">
                <div id="AppServiceCarousel" class="carousel slide d-none" data-bs-ride="carousel">
                    <button onclick="return AppServiceEditSlide()" class="btn btn-white bg-gradient-primary position-absolute end-5 bottom-0 z-index-2 text-white float-end me-1" data-tab="add_tab_imgService" data-value="fade up"><i class="fa fa-camera me-1" aria-hidden="true"></i> @Local["Chỉnh sửa ảnh slide"]</button>
                    <div class="carousel-indicators mb-n2 pb-2">
                    </div>
                    <div class="carousel-inner">
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#AppServiceCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#AppServiceCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>

                <div class="m-0 my-3 mobile-responsive">
                    <div id="loaderList" class="waitingdiv text-center w-100 mt-2 position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table id="dtContentAppService" class="table vt-table mb-0">
                        <thead class="hiddenCollapse">
                            <tr role="row">
                                <th class="d-none">ID</th>
                                <th style="width: 40px;">#</th>
                                <th style="min-width: 200px;">@Local["Tiêu đề"]</th>
                                <th>@Local["Giá"]</th>
                                <th>Link</th>
                                <th style="min-width: 150px;">@Local["Nội dung"]</th>
                                <th>@Local["Người tạo"]</th>
                                <th>@Local["Xử lý"]</th>
                            </tr>
                        </thead>
                        <tbody id="dtContentAppServiceBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="AppServiceDivContainerDetail">
</div>
<script type="text/javascript">

    let DataUser;
    let TypeImage = 'service';
    let xhrServiceList;
    let AppServiceData;
    let AppServiceLimitData = (ser_AcceptSettingApp['service'] != undefined && ser_AcceptSettingApp['service']['limit'] != undefined)
        ? ser_AcceptSettingApp['service']['limit']
        : {
            Dimensions: "",
            Format: "",
            Key: "limit",
            Limit: 10,
            Size: 0,
            Type: "service",
            format: [],
            height: 0,
            width: 0,
        }
    let AppServiceLimitSlide = (ser_AcceptSettingApp['service'] != undefined && ser_AcceptSettingApp['service']['limitimage'] != undefined)
        ? ser_AcceptSettingApp['service']['limitimage']
        : {
            Dimensions: "",
            Format: "",
            Key: "limitimage",
            Limit: 3,
            Size: 0,
            Type: "service",
            format: [],
            height: 0,
            width: 0
        }
    $(document).ready(function () {
        AppService_InitIconCarousel();
        $('#AppServiceLimitNote').html(`@Local["Hiển thị tối đa"] ${AppServiceLimitData.Limit} @Local["Dịch vụ"] - ${AppServiceLimitSlide.Limit} Slide`);
        $('#AppServiceChkDisable').prop('checked', false);
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                AppService_Load();
                AppService_LoadCarousel();
            });
        AppService_Event();

    });

    async function AppService_Load() {
        return new Promise((reslove) => {
            setTimeout(() => {
                AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceList/?handler=LoadData"
                    , data = {}
                    , async = true
                    , error = null
                    , success = function (result) {
                        if (result != '0') {
                            let data = JSON.parse(result);
                            AppServiceData = JSON.parse(result);
                            AppService_Render(data, 'dtContentAppServiceBody');
                        }
                        else notiError_SW();
                        reslove();
                    }
                    , sender = null
                    , before = function (e) {
                    }
                    , complete = function (e) {
                    }
                );
            }, 100);
        })
    }

    async function AppService_LoadCarousel() {
        return new Promise((reslove) => {
            setTimeout(() => {
                AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceList/?handler=LoadCarousel"
                    , data = {
                        Type: TypeImage
                    }
                    , async = true
                    , error = null
                    , success = function (result) {
                        if (result != '0') {
                            let data = JSON.parse(result);
                            AppService_RenderCarousel(data, 'AppServiceCarousel');
                        }
                        else notiError_SW();
                        reslove();
                    }
                    , sender = null
                    , before = function (e) {
                    }
                    , complete = function (e) {
                    }
                );
            }, 100);
        })
    }

    //#region //RENDER

    async function AppService_Render(data, id) {
        return new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let itemContent = AppService_RenderItem(item);
                            stringContent = stringContent + `<tr id="AppService_Content_${item.ID}" class="vt-number ${((item.IsDisabled === 1) ? ('table-active') : (""))}"" role="row" data-id="${item.ID}"> ${itemContent} </tr>`;

                        }
                    }
                    myNode.innerHTML = stringContent;
                }

            }, 100)
        })
    }

    function AppService_RenderItem(item) {
        let obj = Fun_GetObject_ByID(DataUser, item.CreatedBy);
        let name = (obj != null) ? obj.Name : 'unknown';
        let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
        let classDis = item.IsDisabled == 1 ? 'table-active' : '';
        let tr =
            '<td class="d-none AppService_ID">' + item.ID + '</td>'
            + '<td class="vt-number-order"></td>'
            + '<td><a class="text-decoration-underline fw-bold buttonEditClass" href="#">' + item.Header + '</a>'
            + '<p class="text-secondary text-sm mb-0">' + item.Sub + '</p>'
            + '</td>'
            + '<td>' + item.Price + '</td>'
            + '<td>' + item.Source + '</td>'
            + '<td><span class="content_line_clamp">' + item.Content + '</span></td>'
            + '<td>'
            + '<div class="d-flex">'
            + '<div class="icon icon-shape icon-sm me-2 text-center" >'
            + '<img class="avatar avatar-xs mt-2" src="' + img + ' " alt="label-image">'
            + '</div>'
            + '<div class="d-flex flex-column">'
            + '<h6 class="text-dark text-sm mb-0">' + name + '</h6>'
            + '<span class="text-xs">' + GetDateTime_String_DMY(item.Created) + '</span>'
            + '</div>'
            + '</div>'
            + '</td>'
            + '<td>'
            + '<div class="text-nowrap cursor-pointer">'
            + AppService_Render_Button(item.ID, item.IsDisabled)
            + '</div>'
            + '</td>';
        return tr;
    }


    function AppService_Render_Button(id, isdisabled) {
        try {
            let buttons = [];
            buttons.push('<button class="buttonGrid" value="' + id + '">'
                + '<i data-id="' + id + '" class="buttonDeleteClass vtt-icon vttech-icon-delete"></i>'
                + '</button>');
            buttons.push('<button class="buttonGrid" value="' + id + '">' +
                ((isdisabled === 1)
                    ? '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-hide"></i>'
                    : '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-nohide"></i>')
                + '</button>');

            return Render_Button_Grid(buttons);
        }
        catch (ex) {
            return '';
        }
    }

    async function AppService_RenderCarousel(data, id) {
        return new Promise((resolve) => {
            setTimeout(() => {
                let childrenCarousel = $(`#${id}`).children('div');
                if (childrenCarousel != null) {
                    $(`#${id}`).addClass('d-none');
                    let imgContent = '';
                    let btnContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let isActive = i == 0 ? 'active' : '';
                            let isAreaCurrent = i == 0 ? 'true' : '';
                            let csimg = `
                                <div class="carousel-item ${i == 0 ? 'active' : ''}">
                                    <div class="page-header min-vh-25 border-radius-xl" style="background-image: url('${item.Image}');">
                                        <span class="mask bg-gradient-dark"></span>
                                        <div class="container">
                                            <div class="row">
                                                <div class="col-lg-6 my-auto">
                                                    <h4 class="text-white mb-0 fadeIn1 fadeInBottom">VTTECH SOLUTION</h4>
                                                    <p class="text-white fadeIn2 fadeInBottom">Work with the rockets</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;
                            let csbtn = `<button type="button" data-bs-target="#${id}" data-bs-slide-to="${i}" class="${isActive} rounded-circle btn bg-gradient-primary" style="width: 15px; height: 15px" aria-current="${isAreaCurrent}" aria-label="Slide ${i + 1}"></button>`;
                            btnContent += csbtn;
                            imgContent += csimg;
                        }
                        $(`#${id}`).removeClass('d-none');
                        $(`#btnAddNewSlideService`).addClass('d-none');
                    }
                    else {
                        $(`#${id}`).addClass('d-none');
                        $(`#btnAddNewSlideService`).removeClass('d-none');
                    }
                    if (childrenCarousel[0] != undefined) childrenCarousel[0].innerHTML = btnContent;
                    if (childrenCarousel[1] != undefined) childrenCarousel[1].innerHTML = imgContent;
                }
            }, 100)
        })
    }

    function AppService_InitIconCarousel() {
        let rgbBsPrimary = document.documentElement.style.getPropertyValue('--bs-primary').split(',');
        let hexBsPrimary = AppService_rgbToHex(Number(rgbBsPrimary[0]), Number(rgbBsPrimary[1]), Number(rgbBsPrimary[2]));
        let urlPrev = `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23${hexBsPrimary}' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3E%3C/svg%3E")`;
        $('.carousel-control-prev-icon').css("background-image", urlPrev);
        let urlNext = `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23${hexBsPrimary}' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3E%3C/svg%3E")`;
        $('.carousel-control-next-icon').css("background-image", urlNext);
    }

    function AppService_ComponentToHex(c) {
        var hex = c.toString(16);
        return hex.length == 1 ? "0" + hex : hex;
    }

    function AppService_rgbToHex(r, g, b) {
        return AppService_ComponentToHex(r) + AppService_ComponentToHex(g) + AppService_ComponentToHex(b);
    }
    //#endregion

    //#region // EVENT

    function AppService_Event() {
        $('#AppServiceChkDisable').unbind().change(function (event) {
            if ($('#AppServiceChkDisable').is(':checked'))
                $('#dtContentAppService').addClass('showdis');
            else $('#dtContentAppService').removeClass('showdis');
        });
        $('#dtContentAppService tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr').find('.AppService_ID')[0].innerHTML);
            AppServiceEdit(ID);
        });
        $('#dtContentAppService tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr').find('.AppService_ID')[0].innerHTML);
            AppServiceDelete(ID)
        });
        $('#dtContentAppService tbody').on('click', '.buttonDisabledClass', function () {
            let ID = Number($(this).closest('tr').find('.AppService_ID')[0].innerHTML);
            let flag = $(this).hasClass('vttech-icon-nohide');
            AppServiceDisable(ID, flag)
        });
    }

    //#endregion

    function AppServiceDelete(id) {
        const promise = notiConfirm();
        promise.then(function () { AppServiceExecuteDelete(id); }, function () { });
    }

    function AppServiceExecuteDelete(id) {
        AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceList/?handler=DeleteItem"
            , data = { id: id }, async = false, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    AppService_Load();
                    syslog_mob("d", "@Local["Dịch vụ"]");
                }
                else {
                    notiError_SW();
                }
            });
    }

    function AppServiceDisable(id, flag) {
        let data = [...AppServiceData].filter(x => x.IsDisabled == 0);
        if (flag || (data && data.length >= 0 && data.length < AppServiceLimitData.Limit)) {
            AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceList/?handler=DisableItem"
                , data = {
                    id: id
                }
                , async = false
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        AppService_Load();
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        }
        else {
            notiWarning('Quá giới hạn số lượng hiển thị dịch vụ');
        }
    }

    function AppServiceEdit(CurrentID) {
        AppServiceOpenDetail();
        $("#AppServiceDivContainerDetail").load("/Setting/AppCustomer/Service/ServiceDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#AppServiceDivContainerDetail').show();
        return false;
    }

    function AppServiceOpenDetail() {
        $("#AppServiceDivContainerDetail").empty();
        $("#AppServiceDivContainer").hide();
        document.getElementById("AppServiceDivContainerDetail").innerHTML = '';
    }

    function AppServiceClose() {
        document.getElementById("AppServiceDivContainerDetail").innerHTML = '';
        $("#AppServiceDivContainer").show();
        $("#AppServiceDivContainerDetail").hide();
    }

    function AppServiceAddNew() {
        let data = [...AppServiceData].filter(x => x.IsDisabled == 0)
        if (data && data.length >= 0 && data.length < AppServiceLimitData.Limit) {
            AppServiceOpenDetail();
            $("#AppServiceDivContainerDetail").load("/Setting/AppCustomer/Service/ServiceDetail" + "?ver=" + versionofWebApplication);
            $('#AppServiceDivContainerDetail').show();
            return false;
        }
        else {
            notiWarning('@Local["Quá giới hạn số lượng dịch vụ"]');
            return false;
        }
    }
    function AppServiceEditSlide() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/AppCustomer/Service/ServiceImage" + "?Type=" + TypeImage + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

</script>
<style>
    .table-active {
        display: none;
    }

    .showdis .table-active {
        display: table-row;
    }

    .vt-table tr td {
        border-left: 1px solid var(--color--table--border) !important;
        white-space: normal !important;
    }
</style>
<script>js_require('/js/main.js')</script>

