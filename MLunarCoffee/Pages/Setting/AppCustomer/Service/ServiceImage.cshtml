@page
@model MLunarCoffee.Pages.Setting.AppCustomer.Service.ServiceImageModel
@{
    Layout = null;
}

<script>js_require_notasync('/js/AppCustomer/FileUpload.js', true);</script>
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <!--Master-->
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <!-- #region header -->
                                <h6 class="mb-0" id="AppServiceImage_Title">Slide Dịch Vụ</h6>
                                <p class="text-sm mb-0" id="AppServiceImage_SubTitle">Some text of detail sub</p>
                                <!-- #endregion -->
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="field col-12 col-md-12 col-lg-12 p-1">
                        <label>Hình Ảnh</label>
                        <div class="d-lg-flex mt-3 ms-1">
                            <div class="col-12 col-sm-3 me-3 mb-3">
                                <div id="ASI_uploadButton" class="card-body d-flex flex-column justify-content-center text-center  border border-radius-md ">
                                    <i class="fa fa-plus text-secondary mb-3" aria-hidden="true"></i>
                                    <input class="position-absolute opacity-0 cursor-pointer imputaddImgNew" type="file" id="ASI_fileuploadImgNews" accept="image/*" name="files[]" multiple />
                                    <span class=" text-secondary" id="SI_DescriptionImage">Picture (700x300 .png,.jpg )</span>
                                </div>
                            </div>
                            <div class="col-12 col-sm-9">
                                <div class="row" id="AppServiceImage_lightgallery">
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- #region button save and text show message-->
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();CloseModal()">Cancel</button>
                        <button form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return AppServiceImage_Execute()">Save</button>
                    </div>
                </div>
            </div>
            <!-- #endregion -->
        </div>
    </div>
</div>

<script>

    let AppTypeImage = "@Model._Type";
    let ImageKeyLimit = 'limitimage';
    let ImageKeySlide = 'imageslide';
    let urlImage = "/Api/Upload/Upload?Type=ClientApp";
    let ImageJson = [];
    let ImageDelete;
    var ImageLimit = (ser_AcceptSettingApp["AppTypeImage"] != undefined && ser_AcceptSettingApp["AppTypeImage"]["ImageKeyLimit"] != undefined)
        ? ser_AcceptSettingApp["AppTypeImage"]["ImageKeyLimit"].Limit
        : 4;
    var ImageSlide = (ser_AcceptSettingApp["AppTypeImage"] != undefined && ser_AcceptSettingApp["AppTypeImage"]["ImageKeySlide"] != undefined)
        ? ser_AcceptSettingApp["AppTypeImage"]["ImageKeySlide"]
        : {
            size: 5000,
            width: 110,
            height: 110,
            format: ['jpg', 'png']
        };

    $(document).ready(function () {
        let extension = (ImageSlide.format).reduce((previous, current) => {
            return "." + previous + ",." + current
        })
        $("#AppServiceImage_Title").html(AppTypeImage == 'service' ? '@Local["Slide dịch vụ"]' : '@Local["Slide bài viết"]');
        $("#AppServiceImage_SubTitle").html(`@Local["Số lượng hình ảnh upload tối đa"]:" ${ImageLimit}`);
        $("#SI_DescriptionImage").html(`Picture (${ImageSlide.width}x${ImageSlide.height} ${extension} )`);
        AppServiceImage_Load();
        AjaxUpload(url = urlImage
            , inputid = 'ASI_fileuploadImgNews'
            , success = function (data) {
                if (data != "0") {
                    UploadImage_Validate({
                        src: data,
                        condition: ImageSlide,
                        success: function () {
                            if (ImageJson.length + 1 > ImageLimit) {
                                $("#ASI_fileuploadImgNews").val(null);
                                ImageDelete = ImageDelete + ',' + data;
                                notiWarning(`Chỉ được thêm tối đa ${ImageLimit} hình`);
                            }
                            else {
                                let imgLink = { "Image": data };
                                ImageJson.push(imgLink);
                                AppServiceImage_Render_Gallery(ImageJson, 'AppServiceImage_lightgallery');
                            }
                        },
                        error: function () {
                            $("#ASI_fileuploadImgNews").val(null);
                            ImageDelete = ImageDelete + ',' + data;
                        }
                    })
                }
                else notiError_SW();
            }
            , error = function () { notiError_SW(); }
        );

    })


    function AppServiceImage_Load() {
        AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceImage/?handler=LoadData"
            , data = {ImageType : AppTypeImage}
            , async = true
            , error = null
            , success = function (result) {
                if (result != '0') {
                    let data = JSON.parse(result);
                    ImageJson = data;
                    AppServiceImage_Render_Gallery(data, 'AppServiceImage_lightgallery');
                }
                else notiError_SW();
            }
            , sender = null
            , before = function (e) {  }
            , complete = function (e) {  }
        );
    }

    function AppServiceImage_Execute() {
        AjaxLoad(url = "/Setting/AppCustomer/Service/ServiceImage/?handler=Execute"
            , data = {
                data: JSON.stringify(ImageJson),
                type: AppTypeImage,
                ImageDelete: ImageDelete
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != '0') {
                    notiSuccess();
                    CloseModal();
                    if (typeof AppService_LoadCarousel === 'function') AppService_LoadCarousel();
                    if (typeof AAL_Load === 'function') AAL_Load();

                    syslog_mob("u", AppTypeImage == 'service' ? '@Local["Slide dịch vụ"]' : '@Local["Slide bài viết"]');
                }
                else notiError_SW();
            }
            , sender = null
            , before = function (e) { }
            , complete = function (e) { }
        );
    }

    async function AppServiceImage_Render_Gallery(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let link = item.Image;
                            let tr = '<div class="col-12 col-sm-3 me-3 mb-3 rounded-2 addimgNew" style="background: url(' + link + ')" value="' + link + '">'
                                + '<div class="text-center">'
                                + '<div class="d-flex m-2 ps-2 ms-auto position-absolute">'
                                + '<button class="badge badge-secondary badge-circle border-dark justify-content-center d-flex align-items-center my-auto buttonDeleteClass" name = "checkImageDelete" value="' + link + '">'
                                + '<i title="Remove" class="remove icon ms-1" aria-hidden="true"></i>'
                                + '</button>'
                                + '</div>'
                                + '</div>'
                                + '</div>'
                            stringContent = stringContent + tr;
                        }
                    }
                    myNode.innerHTML = stringContent;
                    AppServiceImage_Event();
                }
            }, 100)
        })

    }

    function AppServiceImage_Event() {
        $('.buttonDeleteClass').on('click', '.remove', function () {
            let value = $(this).closest('div')[0].childNodes[0].value;
            const promise = notiConfirm();
            promise.then(function () { AppServiceImage_SaveEditImg(value); }, function () { });
        });
    }

    function AppServiceImage_SaveEditImg(value) {
        if (value != '') {
            for (let k = 0; k < ImageJson.length; k++) {
                if (ImageJson[k].Image == value) {
                    ImageDelete = ImageDelete + ',' + value;
                    ImageJson.splice(k, 1);
                    break;
                }
            }
        }
        AppServiceImage_Render_Gallery(ImageJson, 'AppServiceImage_lightgallery')
    }


</script>


<style>
    .addimgNew {
        max-height: 300px;
        max-width: 100%;
        width: 230px;
        height: 100px;
        background-position: center !important;
        background-size: cover !important;
        object-fit: cover;
        overflow: hidden;
    }

</style>