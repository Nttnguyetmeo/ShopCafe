@page
@model MLunarCoffee.Pages.Setting.Manufacture.Manufacture_SettingModel
@{
    Layout = null;
}
<script>js_require_notasync('/assests/dist/TreeList/js/jquery.ztree.core.js', true);</script>

<div class="container-fluid py-0 px-0 ">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 px-2">
                    <div class="left">
                        <h6 id="headerBranch" class="mb-0">@Local["Cơ sở hạ tầng"]</h6>
                        <p class="text-sm mb-0">
                            @Local["Thông tin cơ sở hạ tầng"]
                        </p>
                    </div>
                    <div class="right w-lg-30">
                        <div class="field row col-12 px-0 m-0"> 
                            <div class="ui fluid search selection dropdown form-control" id="ManuBranchID" onchange="event.preventDefault(); Manu_OnChange_Load_Room_List();">
                                <input type="hidden" name="branchwarehouse" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text"></div>
                                <div id="cbbMSBranch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-1 px-0"> 
                    <div class="p-0 row m-0 gap-2 min-vh-100">
                        <div class="p-1 col-12">
                            <div class="timeline timeline-one-side" id="Manu_Tree">
                            </div>
                            <button class="btn bg-gradient-primary btn-sm mt-3" data-value="fade up" onclick="event.preventDefault(); Manu_LevelAdd();">@Local["Thêm mới"]</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    var dataMain =[];
    var serRoomID = 0;
    var serBranchID = 0;
    $(document).ready(function (){
        Manu_Init();
        Manu_Event();
    });
    function Manu_Init(){
        AjaxLoad(url = "/Setting/Manufacture/Manufacture_Setting?handler=LoadCombo"
            , data = { }, async = true, error = null
            , success = function (result) {
                if (result != "") {                    
                    let data = JSON.parse(result).Table;
                    Load_Combo(data,'cbbMSBranch',true);
                    $("#ManuBranchID").dropdown("refresh");
                    $("#ManuBranchID").dropdown("set selected", data[0]?.ID);
                } else {
                    notiError(result);
                }
            });
    }
    //#region LoadData
    function Manufecture_LoadMain(){
        let branchID = $("#ManuBranchID").dropdown("get value") ? Number($("#ManuBranchID").dropdown("get value")) : 0;
        serBranchID = branchID;
        AjaxLoad(url = "/Setting/Manufacture/Manufacture_Setting?handler=LoadData"
            , data = { BranchID: branchID }, async = true, error = null
            , success = function (result) {
                if (result != "") { 
                    dataMain = JSON.parse(result).Table;
                    Manu_RenderData(dataMain, 'Manu_Tree');
                } else {
                    notiError(result);
                }
            });
    }
    async function Manu_RenderData(data,id){
        new Promise((resolve, reject) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if(myNode != null){
                    myNode.innerHTML = '';
                    let strFloor = '';
                    let flooridtmp = 0;
                    if(data && data.length != 0){
                        for(let i = 0 ; i< data.length ; i++){
                            let strRoom = '';
                            let item = data[i];                            
                            if (item.FloorID != flooridtmp) {
                                flooridtmp = item.FloorID;
                                let dataRoom = data.filter(word => { return word['FloorID'] == flooridtmp });                                
                                strFloor += `<div class="timeline-block mt-3 mb-2">
                                    <span class="timeline-step">
                                        <span class="m-0 rounded-circle bg-cirle-50" data-bs-toggle="collapse" href="#floorArea_${item.FloorID}" role="button" aria-expanded="true">
                                            <i class="fas fa-plus text-primary"></i>
                                        </span>
                                    </span>
                                    <div class="timeline-content" style="max-width:100%">
                                        <span class="text-sm cursor-pointer font-weight-bold mb-0 text-primary text-decoration-underline floorItem floorItem_${item.FloorID}" data-id=${item.FloorID} id="floorItem_${item.FloorID}">${item.FloorName}</span>            
                                        <div id="floorArea_${item.FloorID}" class="collapsesticky collapse ${i==0 ? 'show' : ''}">
                                            <div class="overflow-auto">
                                                <div class="row m-0 mt-2 mb-0 flex-nowrap w-100 d-flex position-relative" id="floorRoomRow_${item.FloorID}">
                                                    ${Manu_RenderRoom(dataRoom)}                                                    
                                                </div>
                                            </div>
                                            <div id="roomBedRow_${item.FloorID}">
                                            </div>
                                        </div>
                                    </div>                                        
                                </div>
                                `                                         
                            }                                                       
                        }
                        myNode.innerHTML = strFloor;                        
                        ToolPopper();
                        $("#Manu_Tree .roomArea").first().click();
                    }
                }
            }, 100);
            resolve();
        })
    }
    function Manu_RenderRoom (dataRoom){
        let result = ''
        if (dataRoom && dataRoom.length != 0) {
            let roomidtmp = 0;
            let flooridtmp = dataRoom[0].FloorID;
            for (let j = 0; j < dataRoom.length; j++) { 
                let item = dataRoom[j];
                if (item.RoomID != roomidtmp) {
                    roomidtmp = item.RoomID;
                    flooridtmp = item.FloorID;
                    let dataBed = dataRoom.filter(word => { return word['RoomID'] == roomidtmp })
                    if(item.RoomID != 0){ 
                       result += `
                            <div class="col-auto py-1 px-0 pe-3"> 
                                <div data-id="${item.RoomID}" data-floorID="${item.FloorID}" id="roomArea_${item.RoomID}" class="roomArea p-2 pe-5 w-100 position-relative cursor-pointer floor border-dashed border-1 border-secondary border-radius-md d-inline-flex align-items-center justify-content-center me-2 mb-0">
                                        <span class="text-dark" id="roomItem_${item.RoomID}">${item.RoomName}</span>
                                        <div class="position-absolute end-0 pe-2 ps-3 top-0 z-index-3">
                                            <i class="fas fa-cog text-dark RoomEdit" data-id="${item.RoomID}"></i>
                                        </div>                                
                                    </div>
                                </div>  
                        `
                   }
                }
            }
            result += `<div class="position-sticky end-0 top-3 w-auto d-flex align-items-center">
                            <i class="fas fa-plus-circle fs-4 cursor-pointer bg-white rounded-2 text-primary" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Thêm phòng"]" onclick="event.preventDefault(); Manu_RoomAdd(${flooridtmp});"></i>
                        </div>`
        }
        return result;
    }
    function Manu_RenderBed(dataBed){
        let result = '';
        if (dataBed && dataBed.length != 0){
            let RoomName = dataBed[0]?.RoomName;;
            let RoomID = dataBed[0]?.RoomID;;
            for(let i = 0; i < dataBed.length;i++){
                let item = dataBed[i];
                if(item.BedID != 0){
                    result += `<div class="col-12 col-md-2 px-1 mt-2">
                        <div class="p-2 bedItem border-1 border border-light border-radius-md bg-gray-200 h-100 text-center" data-id="${item.BedID}">
                            <div data-id="${item.BedID}" data-roomID="${item.RoomID}" class="bedArea bedArea_${item.BedID}">
                                <span class="text-dark text-decoration-underline" id="bedItem_${item.BedID}">${item.BedName}<span>
                             </div>
                        </div>
                    </div>`
                }
            }
            result = `<div class="mt-4" id="RoomBedArea_${RoomID}">
                <span class="text-dark mt-4 mb-1">@Local["Phòng"]: ${RoomName}</span>
                <div class="row m-0 w-100 cursor-pointer floor border-dashed border-1 border-secondary border-radius-md d-inline-flex align-items-center p-3 pt-1 position-relative">
                    ${result}
                    <div class="position-sticky end-0 top-3 w-auto d-flex align-items-center">
                        <i class="fas fa-plus-circle bg-white rounded-2 fs-4 cursor-pointer text-primary mt-2" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Thêm giường/ghế"]" onclick="event.preventDefault(); Manu_BedAdd(${RoomID});"></i>
                    </div>
                </div>
            </div>`
            }
        return  result;
    }
    function Manu_UpdateElement(item,type,IsDelete){
        item = item[0];
        let idEle = '';
        let IsUpdate
        switch(type){
            case 'floor':
                IsUpdate = dataMain.filter(word => { return word['FloorID'] == item.FloorID }).length != 0 ? 1 : 0;
                if(IsUpdate == 1){
                    dataMain.map(obj =>{
                        if (obj.FloorID == item.FloorID) obj.FloorName = item.FloorName;
                        return obj;
                    });
                    idEle = `#floorItem_${item.FloorID}`;
                    $(idEle).html(item.FloorName);                    
                }else{
                    Manufecture_LoadMain();
                }
                break;
            case 'room':
                IsUpdate = dataMain.filter(word => { return word['RoomID'] == item.RoomID }).length != 0 ? 1 : 0;
                if (IsUpdate == 1) {
                    dataMain.map(obj =>{
                        if (obj.RoomID == item.RoomID) obj.RoomName = item.RoomName;
                        return obj;
                    })
                    idEle = `#roomItem_${item.RoomID}`;
                    $(idEle).html(item.RoomName);
                }
                else{
                    dataMain.push(item);
                    idEle = `#floorRoomRow_${item.FloorID}`
                    let dataRoom = dataMain.filter(word => { return word['FloorID'] == item.FloorID });
                    $(idEle).html(Manu_RenderRoom(dataRoom));
                }
                break; 
            case 'bed':
                if(item == undefined) {
                     Manufecture_LoadMain();
                     break;
                }
                IsUpdate = dataMain.filter(word => { return word['BedID'] == item.BedID }).length != 0 ? 1 : 0;
                if (IsUpdate == 1) {
                    dataMain.map(obj =>{
                        if (obj.BedID == item.BedID) obj.BedName = item.BedName;
                        return obj;
                    })
                    idEle = `#bedItem_${item.BedID}`;
                    $(idEle).html(item.BedName);
                }
                else {                    
                    dataMain.push(item);
                    idEle = `#roomArea_${item.RoomID}`
                    $(idEle).click().click();
                }
                break; 
        }
    }
    
        
    //#endregion LoadData
    function Manu_OnChange_Load_Room_List(){        
        Manufecture_LoadMain();
    }
    function Manu_Event(){
        $("#Manu_Tree").on('click', '.roomArea', function () {
            let RoomID = $(this).attr('data-id');
            let FloorID = $(this).attr('data-floorID');
            let dataBed = dataMain.filter(word => { return word['RoomID'] == RoomID });
            let strBed = Manu_RenderBed(dataBed);
            let eleRoomRow = $("#roomBedRow_" + FloorID);
            let eleRoomBedArea = $("#RoomBedArea_" + RoomID);
            if($(this).hasClass('active')){
                $(this).removeClass('active');
                eleRoomBedArea.remove();
            }
            else{ 
                $(this).addClass('active');
                eleRoomRow[0].insertAdjacentHTML('beforeend', strBed);
            }
            ToolPopper();
        });
        $("#Manu_Tree").on('click', '.floorItem', function () {
            let ID = $(this).attr('data-id');
            Manu_LevelEdit(ID);
        });
        $("#Manu_Tree").on('click', '.bedItem', function () {
            let ID = $(this).attr('data-id');
            $(".bedItem").removeClass('active');
            $(this).addClass('active');
            Manu_BedEdit(ID);
        });
        $("#Manu_Tree").on('click', '.RoomEdit', function () {
            let ID = $(this).attr('data-id');
            Manu_RoomEdit(ID);
        });
    }
    //#region Event
    
    //#region Event 
    // edit
    
    function Manu_LevelEdit(id) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/LevelDetail?CurrentID=" + id + "&LevelID=" + serBranchID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function Manu_LevelAdd() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/LevelDetail?LevelID=" + serBranchID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    // room add anh edit
    function Manu_RoomEdit(id) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/RoomDetail?CurrentID=" + id + "&LevelID=" + 0 +"&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function Manu_RoomAdd(idLevel) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/RoomDetail?LevelID=" + idLevel + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    // chair add anh edit
    function Manu_BedEdit(id) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/ChairDetail?CurrentID=" + id + "&LevelID=" + 0 +"&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function Manu_BedAdd(iddRoom) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Manufacture/ChairDetail?RoomID=" + iddRoom + "&LevelID=" + 0 +"&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>
<style>
    #Manu_Tree .roomArea.active{
        border-color:red!important
    }

    #Manu_Tree .timeline-block .collapse:has(.show) {
        background: rgb(var(--bs-primary)) !important
    }

    #Manu_Tree .bedItem.active, .bedItem:hover {
        border: 1px dashed red !important;
        background: white!important; 
    }

</style>

<script>js_require('/js/comon/initialize_setting.js')</script>
<script>js_require('/js/main.js')</script>
<link type="text/css" rel="stylesheet" href="/assests/dist/TreeList/css/zTreeStyle/zTreeStyle.css" />
