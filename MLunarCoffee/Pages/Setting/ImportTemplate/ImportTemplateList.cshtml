@page
@model MLunarCoffee.Pages.Setting.ImportTemplate.ImportTemplateListModel
@{
    Layout = null;
}
<div class="container-fluid py-0 px-0">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Mẫu import"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách mẫu import"]</p>
                    </div>
                    <div class="right overflow-unset ">
                        <div class="col-w-200">
                            <div class="ui fluid search selection dropdown form-control" id="SITL_Type" onchange="event.preventDefault(); SITL_Load();">
                                <i class="dropdown icon"></i>
                                <input type="hidden">
                                <input class="search" autocomplete="off" tabindex="0">
                                <div class="default text"></div>
                                <div id="SITL_CbbType" class="menu transition hidden" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn bg-gradient-primary mb-0 text-nowrap" onclick="SITL_Download()">@Local["Tải file"]</button>
                    </div>
                </div>
                <div class="card-body pt-0 px-2 position-relative">
                    <div id="SITL_ContentWait" class="waitingdiv z-index-3 position-absolute top-0 start-50 translate-middle-x d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">@Local["Đang tải"]...</span>
                        </div>
                    </div>
                    <div class=" m-0 my-3 mobile-responsive">
                        <table id="SITL_dtContent" class="table vt-table mb-0">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th rowspan="2" class="d-none">ID</th>
                                    <th rowspan="2" style="width:45px;">#</th>
                                    <th rowspan="2">@Local["Tên"]</th>
                                    <th rowspan="2">@Local["Mô tả"]</th>
                                    <th rowspan="1" colspan="3">@Local["Xác thực"]</th>
                                    <th rowspan="1" colspan="3">@Local["Thay thế giá trị rỗng"]</th>
                                    <th rowspan="2" style="min-width:120px;">@Local["Bắt buộc"]</th>
                                </tr>
                                <tr>
                                    <th style="min-width:100px;">@Local["Có xác thực"]</th>
                                    <th style="min-width:100px;">@Local["Loại xác thực"]</th>
                                    <th>@Local["Giá trị"]</th>
                                    <th style="min-width:100px;">@Local["Có thay thế"]</th>
                                    <th>@Local["Tên cột"]</th>
                                    <th>@Local["Giá trị"]</th>
                                </tr>
                            </thead>
                            <tbody id="SITL_dtContentBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    //#region // INIT
    $(document).ready(function () {
        let DataComboType = [
            {
                ID: "Ticket_Import", Name: "Ticket import"
            }
        ]
        Load_Combo(DataComboType, "SITL_CbbType", true);
        $("#SITL_Type").dropdown("refresh");
        $("#SITL_Type").dropdown("set selected", DataComboType[0].ID);
        SITL_Load();
    });
    //#endregion

    //#region // RENDER

    async function SITL_Load() {
        return new Promise(resolve => {
            let type = $('#SITL_Type').dropdown('get value') ?? "";
            $("#SITL_dtContentBody").empty();
            AjaxLoad(url = "/Setting/ImportTemplate/ImportTemplateList/?handler=LoadData"
                , data = {
                    type: type
                }, async = true, error = null
                , success = function (result) {
                    if (result != "[]" && result != "0") {
                        let data = JSON.parse(result);
                        SITL_Render(data, 'SITL_dtContentBody');
                    }
                    else if (result == "[]") {
                        notiWarning("@Local["Không có dữ liệu"]")
                    }
                    else {
                        notiError_SW();
                    }
                });
        })
    }

    function SITL_Render(data, id) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let itemContent = SITL_RenderItem(item);
                    stringContent = stringContent + `<tr id="SITL_Content_${item.ID}" class="vt-number ${item.IsRequired != 1 ? 'table-active' : ''}" role="row" data-id="${item.ID}"> ${itemContent} </tr>`;
                }
            }
            document.getElementById(id).innerHTML = stringContent;
            SITL_Event();
        }

    }

    function SITL_RenderItem(item) {
        let tr = `<td class="d-none SITL_ID"> ${item.ID} </td>
                          <td class="vt-number-order"></td>
                          <td>${item.Name}</td>
                          <td>${item.Description}</td>
                          <td class="text-center">${item.ValidationName != "" ? '<i class="fas fa-check text-success"></i>' : ''}</td>
                          <td>${item?.ValidationName}</td>
                          <td>${item?.ValidationValue}</td>
                              <td class="text-center">${item.isReplace == 1 ? '<i class="fas fa-check text-success"></i>' : ''}</td>
                          <td>${item?.ReplaceCol}</td>
                          <td>${item?.ReplaceValue}</td>
                          <td class="text-center">
                          <div class="form-check d-flex justify-content-center">
                          <input type="checkbox" data-id="${item.ID}" class="form-check-input pr-2 SITL_ckbRequired" ${item.IsRequired == 1 ? 'checked' : ''}>
                          </div>
                          </td>
                          `;
        return tr;
    }
    //#endregion

    //#region // EVENT

    function SITL_Disable(id, isRequired) {
        const promise = notiConfirm();
        promise.then(function () { SITL_ExecuteDisable(id, isRequired); }
            , function () {
                $(`.SITL_ckbRequired[data-id="${id}"]`).prop('checked', !isRequired)
            }
        );
    }

    function SITL_ExecuteDisable(id, isRequired) {
        AjaxLoad(url = "/Setting/ImportTemplate/ImportTemplateList/?handler=DisableItem"
            , data = { id: id, isRequired: isRequired }, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    SITL_Load();
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function SITL_Event() {
        $('#SITL_dtContent tbody').on('click', '.SITL_ckbRequired', function () {
            let ID = Number($(this).attr('data-id'));
            let isRequired = $(this).is(':checked') ? 1 : 0;
            SITL_Disable(ID, isRequired);
        });
    }

    //#endregion
    //#region
    async function SITL_Download () {
        return new Promise((resolve) => {
            const promise = notiConfirm();
            promise.then(function () { SITL_ExcutedDownload(); }, function () {});
            resolve();
        })
    }

    async function SITL_ExcutedDownload() {
        return new Promise((resolve) => {
            TempIm_GetList(
                beforefunc = function () { $('#SITL_ContentWait').removeClass('d-none'); }
                , successfunc = function (_rr) {
                    if (_rr != "0" && _rr != "") {
                        let datadown = JSON.parse(_rr);
                        SITL_ExecutedSave(datadown);
                    }
                    else notiError_SW();
                }
                , failurefunc = function (e) { notiError_SW(); }
                , completefunc = function (e) { $('#SITL_ContentWait').addClass('d-none'); }
            );
            resolve();
        })
    }

    function SITL_ExecutedSave ( _datadown) {
        AjaxLoad(url = "/Setting/ImportTemplate/ImportTemplateList?handler=ExcuteData"
            , data = {
                'data': JSON.stringify(_datadown)
            }
            , async = true, error = null
            , success = function (_r) {
                if (_r != "0") {
                    notiSuccess();
                    SITL_Load();
                }
                else notiError_SW();
            }
        );
    }
    //#endregion
</script>
<script>js_require('/js/main.js')</script>
