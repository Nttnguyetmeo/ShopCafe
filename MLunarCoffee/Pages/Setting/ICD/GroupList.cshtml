@page
@model MLunarCoffee.Pages.Setting.ICD.GroupListModel
@{
    Layout = null;
}

<div class="row m-0">
    <div class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 pt-3 px-2">
                <div class="left">
                    <h6 class="mb-0">@Local["ICD"] - @Local["Vị trí"]</h6>
                    <p class="text-sm mb-0">@Local["Danh sách"]</p>
                </div> 
            </div>
            <div class="card-body pt-0 px-2">
                <div class="m-0 my-3 mobile-responsive">
                    <table id="ICDA_dtContent" class="table vt-table mb-0">
                        <thead class="hiddenCollapse">
                            <tr role="row">
                                <th class="d-none">ID</th>
                                <th style="width:40px;">@Local["#"]</th>
                                <th>@Local["Mã"] ICD</th>
                                <th>@Local["Vị trí"]</th>
                                <th>@Local["Người sửa"]</th> 
                            </tr>
                        </thead>
                        <tbody id="ICDA_dtContentBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0 px-2">
                <div class="left">
                    <h6 class="mb-0">@Local["ICD - loại bệnh"]</h6>
                    <p class="text-sm mb-0">@Local["Danh sách"]<p>
                </div>
                <div class="right">
                    <div class="h-100 mt-n2">
                        <div class="input-group mt-2" id="ICDG_Filter">
                            <input id="ICDG_InputFilter" type="text" class="ps-2 form-control" placeholder="eg .@Local["Tìm kiếm"]" autocomplete="off">
                            <span class="input-group-text px-3 p-0">
                                <i class="btnsear_clear fas fa-minus-circle opacity-1"></i>
                                <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                            </span>
                            <div class="input-group-text downloadfil cursor-pointer">
                                <span class="me-0 fw-bolder"><i class="fs-6  fas fa-download"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0 px-2 position-relative">
                <div id="IDC_ContentWait" class="waitingdiv z-index-3 position-absolute top-0 start-50 translate-middle-x d-none">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">@Local["Đang tải"]...</span>
                    </div>
                </div>
                <ul class=" bg-white border-radius-lg px-2" id="IDC_ContentBody" style="height: calc(100vh - 230px); overflow-y: scroll; ">
                </ul>
            </div>
        </div>
    </div>
</div>
<script>
    js_require_notasync('/js/ThirdParty/ICDAction.js')
</script>
<script type="text/javascript">
    var ICDG_DataGroup = [];
    var ICDG_DataCodeGroup = {};
    let ICDG_TimeoutSearch;
    var ICDArea_DataArea = [
        { "ID": "0","Name" : "@Local["Chẩn đoán"]" }
        , {"ID": "1", "Name": "@Local["Đơn thuốc"]"}
 
    ];
    var ICDArea_DataMain = [];
    $(document).ready(function () {
        ICDArea_LoadData(0);
        ICDG_DataCodeLoad();
    });
    //#region ICD Area
    function ICDArea_LoadData(CurrentID) {
        AjaxLoad(url = "/Setting/ICD/GroupList?handler=DataAreaLoad"
            , data = { CurrentID: CurrentID }
            , async = true, error = null
            , success = function (_r) {
                if (_r != "0" && _r != "") {
                    let data = JSON.parse(_r);
                    if (CurrentID == 0) {
                        ICDArea_DataMain = data;
                        ICDArea_RenderData(data, 'ICDA_dtContentBody');
                    }
                    else{
                        if (data && data.length != 0) {
                            ICDArea_DataMain = ICDArea_DataMain.reduce((pre, arr) => {
                                if (arr.ID == data[0].ID) arr = data[0];
                                pre.push(arr);
                                return pre;
                            }, []);
                            let ele = $('#ICDArea_row_' + CurrentID);
                            if (ele.length == 0){
                                $("#ICDA_dtContentBody")[0].insertAdjacentHTML('beforeend', ICDArea_RenderEachData(data[0]));
                            }
                            else{
                                ele.replaceWith(ICDArea_RenderEachData(data[0]));
                            }
                        }
                        else {
                            ICDArea_DataMain.filter(word => { return word["ID"] != CurrentID });
                            $("#ICDArea_row_" + CurrentID).remove();
                        }
                    }

                }
            }
        )
    }
    async function ICDArea_RenderData(data, id) {
        return new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if(myNode != null){
                if(data && data.length != 0){
                    for (let i = 0; i < data.length; i ++){
                        let item = data[i];
                        let str = ICDArea_RenderEachData(item);
                        myNode.insertAdjacentHTML('beforeend', str);
                    }
                }
                ICDArea_Event();
            }
        })
    }
    function ICDArea_RenderEachData(item){
        let result = '';
        let AreaName = '';
        let DataArea = item.Area != '' ? item.Area.split(',') : [];
        DataArea.forEach(function (e) {
            AreaName += (ICDArea_DataArea[Number(e)].length != 0 && e != "") ? ICDArea_DataArea[Number(e)].Name + ',' : '';
        });

        result = `<tr class="vt-number" role="row" id="ICDArea_row_${item.ID}">
                    <td class="d-none">${item.ID}</td>
                    <td class="vt-number-order"></td>
                    <td>
                        <a href="#" class="text-decoration-underline fw-bold IDCArea_btnEdit" data-id="${item.ID}">${item.MaChuong}</a>
                    </td>
                    <td>${AreaName}</td>
                    <td>
                        <div class="d-flex align-items-center">
                            <div class="icon icon-shape icon-sm me-2 text-center">
                                <img class="avatar avatar-xs mt-2" onerror="Master_OnLoad_Error_Image(this)" src="${MTDataEmployee[item.Modified_by] != undefined ? MTDataEmployee[item.Modified_by].Avatar : ""}" alt="label-image">
                            </div>
                            <div class="d-flex flex-column">
                                <h6 class="text-dark text-sm mb-0">${MTDataEmployee[item.Modified_by] != undefined ? MTDataEmployee[item.Modified_by].Name : ""}</h6>
                                <span class="text-xs">${ConvertDateTimeUTC_DMY(item.Modified)}</span>
                            </div>
                        </div>
                    </td>
                </tr>
        `
        return result;
    }

    function ICDArea_Event(){
        $("#ICDA_dtContentBody").on('click', '.IDCArea_btnEdit', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[1].innerHTML);
            ICDArea_Edit(ID);
        });
    }
    function ICDArea_Edit(ID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/ICD/ICDAreaDetail?CurrentID=" + ID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    //#endregion ICD Area
    //#region Load Render List
    async function ICDG_DataCodeLoad () {
        return new Promise((resolve) => {
            AjaxLoad(url = "/Setting/ICD/GroupList?handler=DataCodeLoad"
                , data = {}
                , async = true, error = null
                , success = function (_r) {
                    if (_r != "0" && _r != "") {

                        ICDG_DataCodeGroup = {};
                        let _cur = JSON.parse(_r);
                        for (let i = 0; i < _cur.length; i++) {
                            ICDG_DataCodeGroup[_cur[i].MaChuong] = _cur[i].MaChuong;
                        }
                        ICD_GetChapterList(
                            beforefunc = function () {$('#IDC_ContentWait').removeClass('d-none');}
                            , successfunc = function (_rr) {
                                if (_rr != "0" && _rr != "") {
                                    let _clou = JSON.parse(_rr);
                                    ICDG_DataGroup = _clou;
                                    ICDG_ListRenderData(_clou, "IDC_ContentBody");
                                }
                                else notiError_SW();
                            }
                            , failurefunc = null
                            , completefunc = function (e) {$('#IDC_ContentWait').addClass('d-none');}
                        );
                        ICDG_EventFilter();
                        //$("#ICDG_InputFilter").keyup();
                    }
                    else notiError_SW();
                }
            );
        })
    }
    async function ICDG_ListRenderData (data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    if (data && data.length != 0) {
                        let str = '';
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let IsAvai = (ICDG_DataCodeGroup[item.MaChuong] != undefined && ICDG_DataCodeGroup[item.MaChuong] != "") ? "downrow" : "undownrow";
                            str +=
                                `<li class="nav-item ${IsAvai} rounded-2 text-dark w-100 text-sm " data-chapter="${item.MaChuong}">
                                    <div class="row col-12">
                                        <div class="col-12 col-lg-3">
                                            <a data-chapter="${item.MaChuong}" class="cursor-pointer  fw-bold ICDG_Download pe-2"> <i class="fas fa-download text-primary cursor-pointer"></i></a>
                                            <i class="fas mardown text-success fw-bold d-none fa-check pe-2"></i>
                                            <span class="text-sm text-dark fw-bold">
                                                ${item.MaChuong}
                                            </span>
                                        </div>
                                        <div class="col-12 col-sm-7">
                                            <h6 class="fw-bold text-dark mb-1">${item.NameVi}</h6>
                                            <h6 class="text-dark">${item.NameEn}</h6>
                                        </div>
                                        <div class="col-12 col-sm-2">
                                            <a data-chapter="${item.MaChuong}" class="cursor-pointer d-none ICDG_Delete opacity-1 "> <i class="fas fa-times  text-primary "></i></a>
                                        </div>
                                    </div>
                                    <hr class="horizontal dark">
                                </li>
                                `
                        }
                        myNode.innerHTML = str;
                        ICDG_Event();
                    }

                }

            }, 10)
        })
    }
    //#endregion

    //#region Event
    function ICDG_EventFilter(){
        $("#ICDG_InputFilter").unbind('keyup').keyup(function () {
            if ($(this).val().length > 0) $("#ICDG_Filter .btnsear_clear").removeClass('opacity-1').addClass('d-none');
            else $("#ICDG_Filter .btnsear_clear").addClass('opacity-1').addClass('d-none');
            $("#ICDG_Filter .fa-search").hide();
            $("#ICDG_Filter .spinner-border").show();
            clearTimeout(ICDG_TimeoutSearch);
            ICDG_TimeoutSearch = setTimeout(function (e) {
                let valueSearch = xoa_dau($('#ICDG_InputFilter').val().toLowerCase()).trim();
                ICDG_SearchExecute(valueSearch.replace(/[^a-zA-Z0-9 ]/g, ''));
            }, 500);

        });
        $("#ICDG_Filter .btnsear_clear").unbind('click').click(function () {
            $('#ICDG_InputFilter').val('');
            $("#ICDG_Filter .btnsear_clear").addClass('opacity-1');
            $("#ICDG_Filter .fa-search").show();
            $("#ICDG_Filter .spinner-border").hide();
            ICDG_SearchExecute()
        });
        $("#ICDG_Filter .downloadfil").unbind('click').click(function () {
            if ($(this).hasClass('down')) {
                $(this).removeClass('down');
                $('#IDC_ContentBody').removeClass('down');
            }
            else {
                $(this).addClass('down');
                $('#IDC_ContentBody').addClass('down');
            }
        });
    }
    function ICDG_SearchExecute (search = '') {
        if (search == '') {
            ICDG_ListRenderData(ICDG_DataGroup, 'IDC_ContentBody');
        }
        else {
            let dataFilter = ICDG_DataGroup.filter(word => {
                return (search == ""
                    || xoa_dau(word?.NameEnNoSign).toLowerCase().includes(search)
                    || xoa_dau(word?.NameViNoSign).toLowerCase().includes(search)
                    || xoa_dau(word?.MaChuong.replace(/[^a-zA-Z0-9 ]/g, '')).toLowerCase().includes(search)
                )
            })
            ICDG_ListRenderData(dataFilter, "IDC_ContentBody");
        }
        $("#ICDG_Filter .fa-search").show();
        $("#ICDG_Filter .spinner-border").hide();
        $("#ICDG_Filter .btnsear_clear").removeClass('d-none');

    }
    function ICDG_Event(){
        $("#IDC_ContentBody .ICDG_Download").unbind('click').click(function () {
            let groupcode = $(this).attr('data-chapter');
            ICDG_Executed(groupcode);
        });
        $("#IDC_ContentBody .ICDG_Delete").unbind('click').click(function () {
            let groupcode = $(this).attr('data-chapter');
            const promise = notiConfirm();
            promise.then(function () {
                ICDG_ExecutedRemove(groupcode)
            }, function () { });
        });
    }
    function ICDG_AfterSuccess(groupcode){
        let obj = $(`#IDC_ContentBody [data-chapter="${groupcode}"]`);
        if(obj.hasClass('downrow')){
            obj.removeClass('downrow');
            obj.addClass('undownrow');
            obj.find('.ICDG_Delete').addClass('d-none');
            delete ICDG_DataCodeGroup[groupcode];
        }else{
            obj.removeClass('undownrow');
            obj.addClass('downrow');
            obj.find('.ICDG_Delete').removeClass('d-none');
            ICDG_DataCodeGroup[groupcode] = groupcode;
        }
    }
    //#endregion

    //#region Excute
    function ICDG_Executed (groupcode) {
        const promise = notiConfirm();
        promise.then(function () {

            ICD_GetItem(groupcode
                , beforefunc = function () {$('#IDC_ContentWait').removeClass('d-none');}
                , successfunc = function (_rr) {
                    if (_rr != "0") {
                        let datadown = JSON.parse(_rr);
                        if (datadown != undefined && datadown.length != 0) {
                            ICDG_ExecutedSave(groupcode, datadown);
                        }
                    }
                    else notiError_SW();
                }
                , failurefunc = null
                , completefunc = function (e) {$('#IDC_ContentWait').addClass('d-none');}
            );
        }, function () { });
    }
    function ICDG_ExecutedSave (_chaptercode, _datadown) {
        AjaxLoad(url = "/Setting/ICD/GroupList?handler=ExcuteData"
            , data = {
                'chaptercode': _chaptercode,
                'data': JSON.stringify(_datadown)
            }
            , async = true, error = null
            , success = function (_r) {
                if (_r != "0") {
                    let data = JSON.parse(_r)
                    notiSuccess();
                    ICDArea_LoadData(data[0].ID);
                    ICDG_AfterSuccess(_chaptercode);
                }
                else notiError_SW();
            }
        );
    }
    function ICDG_ExecutedRemove (_chaptercode) {
        AjaxLoad(url = "/Setting/ICD/GroupList?handler=RemoveData"
            , data = {
                'chaptercode': _chaptercode
            }
            , async = true, error = null
            , success = function (_r) {
                if (_r != "0") {
                    notiSuccess();
                    let data = JSON.parse(_r);
                    ICDArea_LoadData(data[0].ID);
                    ICDG_AfterSuccess(_chaptercode);
                }
                else notiError_SW();
            }
        );
    }
    //#endregion Excute

</script>
<style>
    #IDC_ContentBody .ICDG_Delete:hover {
        opacity: 1 !important;
        box-shadow:none!important;
    }
    #ICDG_Filter .downloadfil.down {
        background: rgb(var(--bs-primary)) !important;
        color:white!important;
    }
    #IDC_ContentBody.down .undownrow {
        display:none!important;
    }
    #IDC_ContentBody .downrow .ICDG_Download {
        display: none !important;
    }
    #IDC_ContentBody .downrow .mardown {
        display: inline !important;
    }
    #IDC_ContentBody .downrow .ICDG_Delete {
        display: block !important;
    }
   
</style>