@page
@model MLunarCoffee.Pages.Setting.Measure.MeasureContentList.MeasureContentListModel
@{
    Layout = null;
}
<div class="container-fluid py-0 px-0">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 pt-3 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Nội dung tình trạng khách hàng"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách nội dung tình trạng khách hàng"]</p>
                    </div>
                    <div class="right">
                        <button id="btnAddMSContent" class="btn bg-gradient-primary btn-sm mt-1" data-value="fade up" onclick="return MSContentAddNew()">@Local["Thêm mới"]</button>
                    </div>
                </div>
                <div class="card-body pt-0 px-2">
                    <div class="m-0 my-3 mobile-responsive">
                        <table id="dtContentMSContent" class="table vt-table mb-0">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th class="d-none">ID</th>
                                    <th style="width:40px;">@Local["#"]</th>
                                    <th>@Local["Nội dung tình trạng"]</th>
                                    <th>@Local["Ngày tạo"]</th>
                                    <th style="width:40px;">@Local["Xóa"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentMSContentBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        MSContentLoad();
        $('#dtContentMSContent tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            MSContentEdit(ID);
        });
        $('#dtContentMSContent tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            MSContentDelete(ID)
        });

    });
    function MSContentLoad() {
        AjaxLoad(url = "/Setting/Measure/MeasureContentList/?handler=LoadData"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    MSContentRender(data, 'dtContentMSContentBody');
                }
            });
    }

    function MSContentRender(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let EmpName = MTDataEmployee[item.PerEditor] != undefined ? MTDataEmployee[item.PerEditor].Name : "" ;
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass" href="#">' + item.Name + '</a></td>'
                        + '<td>'
                        + '<div class="d-flex">'                        
                        + '<div class="d-flex flex-column">'
                        + '<h6 class="text-dark text-sm mb-0">' + EmpName + '</h6>'
                        + '<span class="text-xs">' + GetDateTime_String_DMYHM(item.DayEditor) + '</span>'
                        + '</div>'
                        + '</div>'
                        + '</td>'
                        + '<td class="text-center">'
                        + '<button class="buttonGrid" value="'+ item.ID + '"><i class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'                        
                        +'</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }        
    }

    function MSContentDelete(id) {
        const promise = notiConfirm();
        promise.then(function () { MSContentDeleteExecute(id); }, function () { });
    }
    function MSContentDeleteExecute(id) {
        AjaxLoad(url = "/Setting/Measure/MeasureContentList/?handler=DeleteItem"
            , data = { id: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    MSContentLoad();
                } else {
                    notiError(result);
                }
            });
    }
    function MSContentEdit(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Measure/MeasureContentDetail/?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function MSContentAddNew() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Measure/MeasureContentDetail/" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>
<script src="/js/main.js" async></script>