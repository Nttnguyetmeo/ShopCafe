@page
@model MLunarCoffee.Pages.Setting.Measure.MeasureTypeList.MeasureTypeListModel
@{
    Layout = null;
}
<div class="container-fluid py-0 px-0">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 pt-3 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Loại tình trạng"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách loại tình trạng"]</p>
                    </div>
                    <div class="right">
                        <button id="btnAddMSType" class="btn bg-gradient-primary btn-sm mt-1" data-value="fade up" onclick="return MSType_AddNew()">@Local["Thêm mới"]</button>
                    </div>
                </div>
                <div class="card-body pt-0 px-2">
                    <div class="m-0 my-3 mobile-responsive">
                        <table id="dtContentMSType_" class="table vt-table mb-0">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th class="d-none">ID</th> 
                                    <th style="width:40px;">@Local["#"]</th>
                                    <th>@Local["Tên loại"]</th>
                                    <th>@Local["Đơn vị đo lường"]</th>
                                    <th>@Local["Mô tả"]</th>
                                    <th>@Local["Ngày tạo"]</th>
                                    <th style="width:40px;">@Local["Ẩn"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentMSType_Body">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        MSType_Load();
        $('#dtContentMSType_ tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            MSType_Edit(ID);
        });
        $('#dtContentMSType_ tbody').on('click', '.buttonHideClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            MSType_Hide(ID)
        });

    });
    function MSType_Load() {
        AjaxLoad(url = "/Setting/Measure/MeasureTypeList/?handler=LoadData"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    MSType_Render(data, 'dtContentMSType_Body');
                }
            });
    }

    function MSType_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr ='';
                    let EmpName = MTDataEmployee[item.PerEditor] != undefined ? MTDataEmployee[item.PerEditor].Name : '';                    
                    tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass" href="#">' + item.Name + '</a></td>'                        
                        + '<td>' + item.MeasureUnit + '</td>'
                        + '<td>' + item.Description + '</td>'
                        + '<td>'
                            + '<div class="d-flex">'
                                + '<div class="d-flex flex-column">'
                                    + '<h6 class="text-dark text-sm mb-0">' + EmpName + '</h6>'
                                    + '<span class="text-xs">' + GetDateTime_String_DMYHM(item.DayEditor) + '</span>'
                                + '</div>'
                            + '</div>'
                        + '</td>'
                        + '<td class="text-center">'
                        + `<button class="buttonGrid" value="${item.ID}"><i class="buttonHideClass vtt-icon ${item.IsDisabled == 1 ? 'vttech-icon-show' : 'vttech-icon-hide'}"></i></button>`
                        + '</td>'
                    stringContent = stringContent + `<tr class="${item.IsDisabled == 1 ? "bg-gray-100" : ""} vt-number border-5 border-bottom-0 border-top-0 border-end-0 border-3 ${MSType_RenderCallDiff(item.IsCalDiff)}" role="row">${tr}</tr>`
                    
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }
    }
    
    function MSType_Hide(id) {
        AjaxLoad(url = "/Setting/Measure/MeasureTypeList/?handler=HideItem"
            , data = { id: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    MSType_Load();
                } else {
                    notiError(result);
                }
            });
    }
    function MSType_Edit(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Measure/MeasureTypeDetail/?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function MSType_AddNew() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Measure/MeasureTypeDetail/" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function MSType_RenderCallDiff(type) {
        try {
            let result = `border-success`;
            if (type == '0')
                result = 'border-warning';
            return result;
        }
        catch (ex) {
            return '';
        }
    }
</script>
<script src="/js/main.js" async></script>