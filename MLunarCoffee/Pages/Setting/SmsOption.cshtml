@page
@model MLunarCoffee.Pages.Setting.SmsOptionModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="container-fluid py-0 px-0" id="divSmsOptionList">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Kịch bản sms"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách cú pháp sms được hệ thống cố định và danh sách tùy chỉnh thêm"] </p>
                    </div>
                </div>
                <div class="card-body pt-0 px-2">
                    <div class="mt-2">
                        <ul class="nav nav-pills nav-fill p-1 bg-transparent d-inline-flex smsoption" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#div_system" role="tab">
                                    @Local["Hệ thống"]
                                    <span class="text-danger text-xs ps-2">@Local["Không thể xóa"]</span>
                                </a>
                            </li>
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#div_manual" role="tab">
                                    @Local["Kịch bản tùy chỉnh"]
                                    <span class="text-danger text-xs ps-2">(@Local["Tối đa 30 kịch bản"])</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="p-0">
                        <div id="loaderSMSOption" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="tab-content">
                            <div class="tab-pane fade active show" id="div_system" role="tabpanel">
                                <div class="timeline timeline-one-side" id="dtsms_systemBody">
                                </div>
                            </div>
                            <div class="tab-pane fade" id="div_manual" role="tabpanel">
                                <div class="d-lg-flex">
                                    <div class="ms-auto my-auto">
                                        <button class="me-3 btn btn-primary btn-sm mt-1 m-0 setting_projectclosure" onclick="event.preventDefault();return SmsOption_New();">@Local["Thêm mới"]</button>
                                    </div>
                                </div>
                                <div class="timeline timeline-one-side" id="dtsms_manual">
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="divSmsOptionDetail"></div>

<script type="text/javascript">


    //#region // LOAD DATA
    let DataUser;

    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User, _Session_ServiceCare]
            , function (data) {
                DataUser = data[0];
                $('.smsoption a:first').tab('show');
                SmsOption_Load();
            });

    });

    function SmsOption_Load () {
        AjaxLoad(url = "/Setting/SmsOption/?handler=LoadData"
            , data = {}, async = true, error = null
            , success = function (result) {
                let data = JSON.parse(result);
                let datasys = data.filter(v => v.IsManual == 0);
                let datamanual = data.filter(v => v.IsManual == 1);
                SmsOption_Render(datasys, 'dtsms_systemBody');
                SmsOption_Render(datamanual, 'dtsms_manual');
            }
            , sender = null
            , before = function (e) {
                $("#loaderSMSOption").show();
            }
            , complete = function (e) {
                $("#loaderSMSOption").hide();
            }
        );
    }

    //#endregion


    //#region // RENDER DATA
    async function SmsOption_Render(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let obj = Fun_GetObject_ByID(DataUser, item.LastEditor);
                            info = obj.Name + '  ' + GetDateTime_String_DMYHM(item.LastEditorDate);
                            let classdisable = (item.IsDisabled == 1) ? `bg-gray-200` : ``;
                            let tr = `
                                <span class="d-none">${item.ID}</span>
                                <span class="timeline-step py-2">${i + 1}</span>
                                <div class="timeline-content text-dark mw-100">
                                    <a title="${info}" data-bs-toggle="tooltip" class="cursor-pointer text-decoration-underline text-sm text-primary fw-bold mb-0 buttonEditClass">${item.Name}</a>
                                    ${item.IsZNS==1 ?`<span class="text-info mx-2">ZALO ZNS</span>`:``}
                                    ${SmsOption_Render_Auto(item.AllowAuto, item.LimitAuto, item.Auto, item.AutoDate, item.AutoHour, item.AllowSendPay, item.IsSendCompletePay, item.AllowSendApp, item.IsSendApp)}
                                    <p class="text-sm mt-1 mb-0"><img src="/assests/img/ButtonImg/flag-vn.png" width="17" class="me-2"/><span>${SmsOption_Render_KeySMS(item.Value)}</span></p>
                                    ${(item.ValueEng == '') ? ''
                                : `<p class="text-sm mt-0 mb-0"><img src="/assests/img/ButtonImg/flag-en.png" width="15" class="me-2"/><span>${SmsOption_Render_KeySMS(item.ValueEng)}</span></p>`}

                                </div>
                            `

                            tr = `<div class="${classdisable} rounded-2 py-2 parent-get timeline-block mb-4">${tr}</div>`
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                SmsOption_Event();
                ToolPopper();
                CheckPermissionControlInPage(sys_PerControl ,'@Model.CurrentPath');
                CheckPermissionControlInPage(sys_PerControlMH,'@Model.CurrentPath');
            }, 100)
        })
    }

    function SmsOption_Render_Auto(isAllow, LimitAuto, isAuto, date, hour, AllowSendPay, IsSendCompletePay, AllowSendApp, IsSendApp) {
        try {
            let result = "";
            if (isAllow == 1) {
                let title = `${((hour != 0) ? hour + ' @Local["Giờ"]' : ``)} ${((date != 0) ? ` @Local["Trước"] ${date} @Local["Ngày"]` : ` @Local["Hằng ngày"]`)}`
                result = `
                    <a class="cursor-pointer text-sm buttonAutoClass" ${((isAuto == 1) ? `title="${title}"` : ``)}  data-bs-toggle="tooltip" >
                        <i class="text-xs text-dark mx-2 fas fa-wrench"></i>
                        ${((isAuto == 1)
                    ? `<span class="font-italic text-success">@Local["Gửi tự động [bật]"] (@Local["Giới hạn"] : ${formatNumber(LimitAuto)})</span>`
                    : `<span class="font-italic text-danger" title="@Local["Chế độ gửi tự động chưa được bật"]" data-bs-toggle="tooltip">@Local["Gửi tự động [tắt]"]</span>`) }
                    </a>
                `
            }
            if (AllowSendPay == 1) {
                let titelSend = IsSendCompletePay == 1 ? "@Local["Gửi tự động khi thanh toán thành công [bật]"]" : "@Local["Gửi tự động khi thanh toán thành công [tắt]"]";
                result += ` <a class="cursor-pointer text-sm buttonAutoPaymentClass" title="${titelSend}" data-bs-toggle="tooltip" >
                            <i class="text-xs text-dark mx-2 fas fa-wrench"></i>
                            ${((IsSendCompletePay == 1)
                            ? `<span class="font-italic text-success">${titelSend}</span>`
                            : `<span class="font-italic text-danger" data-bs-toggle="tooltip">${titelSend}</span>`)}
                    </a>`
            }
            if (AllowSendApp == 1) {
                let titelSend = "@Local["Gửi tự động khi tạo lịch hẹn"] [" + (IsSendApp == 1 ? "@Local["Bật"]" : "@Local["Tắt"]") + "]";
                result += ` <a class="cursor-pointer text-sm buttonAutoScheduleClass" title="${titelSend}" data-bs-toggle="tooltip" >
                                <i class="text-xs text-dark mx-2 fas fa-wrench"></i>
                                    ${((IsSendApp == 1)
                        ? `<span class="font-italic text-success">${titelSend}</span>`
                        : `<span class="font-italic text-danger" data-bs-toggle="tooltip">${titelSend}</span>`)}
                        </a>`
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function SmsOption_Render_KeySMS(str) {
        try {
            str = str.replaceAll('#CustCode#', '<span class="opacity-7 mx-1 text-primary">[HOF000001]</span>')
            str = str.replaceAll('#CustName#', '<span class="opacity-7 mx-1 text-primary">[CustomerName]</span>')
            str = str.replaceAll('#AppHour#', '<spani class="opacity-7 mx-1 text-primary">[13:30]</span>')
            str = str.replaceAll('#AppDay#', '<span class="opacity-7 mx-1 text-primary">[25/05/2019]</span>')
            str = str.replaceAll('#CompanyName#', '<span class="opacity-7 mx-1 text-primary">[Company]</span>')
            str = str.replaceAll('#BranchAddress#', '<span class="opacity-7 mx-1 text-primary">[BranchAddress]</span>')
            str = str.replaceAll('#BranchHotline#', '<span class="opacity-7 mx-1 text-primary">[BranchHotline]</span>')
            str = str.replaceAll('#Amount#', '<span class="opacity-7 mx-1 text-primary">[5,000,000]</span>')
            str = str.replaceAll('#StudentCode#', '<span class="opacity-7 mx-1 text-primary">[StudentCode]</span>')
            str = str.replaceAll('#StudentName#', '<span class="opacity-7 mx-1 text-primary">[StudentName]</span>')
            str = str.replaceAll('#PaymentCode#', '<span class="opacity-7 mx-1 text-primary">[PaymentCode]</span>')
            str = str.replaceAll('#PaymentDate#', '<span class="opacity-7 mx-1 text-primary">[PaymentDate]</span>')
            str = str.replaceAll('#AppNextDate#', '<span class="opacity-7 mx-1 text-primary">[AppNextDate]</span>')
            str = str.replaceAll('#LeftTab#', '<span class="opacity-7 mx-1 text-primary">[AmountLeftTab]</span>')
            str = str.replaceAll('#LeftTreat#', '<span class="opacity-7 mx-1 text-primary">[AmountLeftTreat]</span>')
            str = str.replaceAll('#ServiceName#', '<span class="opacity-7 mx-1 text-primary">[ServiceName]</span>')
            str = str.replaceAll('#Date#', '<span class="opacity-7 mx-1 text-primary">[Date]</span>')
            str = str.replaceAll('#TreatProcess#', '<span class="opacity-7 mx-1 text-primary">[TreatProcess]</span>')
            str = str.replaceAll('#PriceDiscounted#', '<span class="opacity-7 mx-1 text-primary">[PriceDiscounted]</span>')
            str = str.replaceAll('#CardCode#', '<span class="opacity-7 mx-1 text-primary">[CardCode]</span>')
            str = str.replaceAll('#CardLeft#', '<span class="opacity-7 mx-1 text-primary">[CardLeft]</span>')
            str = str.replaceAll('#Vocative#', '<span class="opacity-7 mx-1 text-primary">[Anh chị]</span>')
            str = str.replaceAll('#TreatIndexNext#', '<span class="opacity-7 mx-1 text-primary">[1]</span>')
            return str;
        }
        catch (ex) {
            return "";
        }
    }

    //#endregion


    //#region // EVENT
    function SmsOption_Event() {
        $('#dtsms_systemBody .buttonEditClass').unbind('click').on('click', function () {
            let ID = Number($(this).closest('.parent-get').children()[0].innerHTML);
            SmsOption_Edit(ID,system=1);
        });
        $('#dtsms_manual .buttonEditClass').unbind('click').on('click', function () {
            let ID = Number($(this).closest('.parent-get').children()[0].innerHTML);
            SmsOption_Edit(ID, system = 0);
        });
        $('#dtsms_systemBody .buttonAutoClass').unbind('click').on('click', function () {
            let ID = Number($(this).closest('.parent-get').children()[0].innerHTML);
            SmsOption_EditAuto(ID);
        });
        $('#dtsms_systemBody .buttonAutoPaymentClass').unbind('click').on('click', function () {
            let ID = Number($(this).closest('.parent-get').children()[0].innerHTML);
            SmsOption_EditAutoSendPayment(ID);
        });
        $('#dtsms_systemBody .buttonAutoScheduleClass').unbind('click').on('click', function () {
            let ID = Number($(this).closest('.parent-get').children()[0].innerHTML);
            SmsOption_EditAutoSendSchedule(ID);
        });
    }

    //#endregion

    //#region // SHOW DETAIL
    function SmsOption_New () {
        SmsOption_OpenDetail();
        $("#divSmsOptionDetail").load("/Setting/SmsOptionDetail?system=0&CurrentID=" + 0 + "&ver=" + versionofWebApplication);
        $("#divSmsOptionDetail").show();
        return false;
    }
    function SmsOption_Edit (CurrentID,system) {
        SmsOption_OpenDetail();
        $("#divSmsOptionDetail").load("/Setting/SmsOptionDetail?system=" + system +"&CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $("#divSmsOptionDetail").show();
        return false;
    }
    function SmsOption_OpenDetail () {
        $("#divSmsOptionDetail").empty();
        $("#divSmsOptionList").hide();
    }
    function SmsOption_CloseDetail () {
        $("#divSmsOptionDetail").empty();
        $("#divSmsOptionList").show();
        $("#divSmsOptionDetail").hide();
    }
    //#endregion

    //#region // SHOW MODAL

    function SmsOption_EditAuto(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/SmsOptionAutoDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function SmsOption_EditAutoSendPayment(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/SmsOptionAutoAfterDetail?CurrentID=" + CurrentID + "&Type=AfterPayment&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function SmsOption_EditAutoSendSchedule(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/SmsOptionAutoAfterDetail?CurrentID=" + CurrentID + "&Type=AfterSchedule&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    //#endregion


</script>
<script>js_require('/js/main.js');</script>
 