@page
@model MLunarCoffee.Pages.Setting.Employee.ContractTypeListModel
@{
    Layout = null;
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header pb-0">
                <div class="d-lg-flex">
                    <div class="w-50 col-auto my-auto">
                        <div class="h-100">
                            <h6 class="mb-0">@Local["Loại hợp đồng"]</h6>
                            <p class="text-sm mb-0">@Local["Danh sách"]</p>
                        </div>
                    </div>
                    <div class="ms-auto my-auto mt-1">
                        <button class="btn bg-gradient-primary btn-sm mt-1" onclick="CType_OpenDetail(0)">@Local["Thêm mới"]</button>
                    </div>
                </div>
            </div>
            <div class="card-body pt-2 ">
                <div class="m-0 my-3 mobile-responsive">
                    <table class="table vt-table mb-0">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>@Local["Tên"]</th>
                                <th>@Local["Ghi chú"]</th>
                                <th>@Local["Người sửa"]</th>
                                <th>@Local["Xóa"]</th>
                            </tr>
                        </thead>
                        <tbody id="CT_BodyGrid">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        CType_Load();
    });
    //#region //Load

    function CType_Load () {
        AjaxLoad(url = "/Setting/Employee/ContractTypeList/?handler=LoadData"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    CType_Render(data, "CT_BodyGrid");
                }
            }
        );
    }

    //#endregion
    //#region //Render
    async function CType_Render (data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            let str = '';
            if (myNode != null) {
                if (data && data.length != 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        str +=
                            `<tr class="vt-number">
                                <td class="vt-number-order"></td>
                                <td><a class="text-decoration-underline fw-bold buttonEditClass" href="#" data-id="${item.ID}">${item.Name}</a></td>
                                <td>${item.Note}</td>
                                <td>
                                    <h6 class="text-dark text-sm mb-0">${item.CreatedBy}</h6>
                                    <span class="text-xs">${GetDateTime_String_DMYHM(item.Created)}</span>
                                </td>
                                <td class="text-center">
                                    <button class="buttonGrid"><i data-id="${item.ID}" class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>
                                </td>
                            </tr>`
                    }
                }
                myNode.innerHTML = str;
                CType_Event();
            }
            resolve();
        })
    }
    //#endregion
    //#region //Event

    function CType_Event () {
        $("#CT_BodyGrid .buttonEditClass").unbind("click").click(function () {
            let ID = $(this).attr("data-id") ? Number($(this).attr("data-id")) : 0;
            CType_OpenDetail(ID);
        })
        $("#CT_BodyGrid .buttonDeleteClass").unbind("click").click(function () {
            let ID = $(this).attr("data-id") ? Number($(this).attr("data-id")) : 0;
            CType_Delete(ID);
        })
    }

    //#endregion

    //#region //Delete

    function CType_Delete (id) {
        const promise = notiConfirm();
        promise.then(function () {CType_ExecutedDelete(id);}, function () { });
    }
    function CType_ExecutedDelete (id) {
        AjaxLoad(url = "/Setting/Employee/ContractTypeList/?handler=Delete"
            , data = {"CurrentID": id}
            , async = true
            , error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    CType_Load();
                } else {
                    notiError_SW();
                }
            }
        );
    }

    //#endregion

    //#region //Detail
    function CType_OpenDetail (CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/Employee/ContractTypeDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    //#endregion

</script>