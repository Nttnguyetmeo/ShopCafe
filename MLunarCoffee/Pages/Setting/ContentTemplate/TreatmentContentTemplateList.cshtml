@page
@model MLunarCoffee.Pages.Setting.ContentTemplate.TreatmentContentTemplateListModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js')</script>
<div class="container-fluid py-3 px-0">
    <div class="row">
        <div class="d-lg-flex">
            <div class="card col-w-300 mx-auto me-2">
                <div class="d-lg-flex">

                </div>
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-40 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Danh sách nhóm"]</h6>

                            </div>
                        </div>
                        <div class="ms-auto my-auto">
                            <button class="btn bg-gradient-primary btn-sm mt-1" onclick="return TC_AddGroupDetail()">@Local["Thêm mới"]</button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <ul class="list-group p-2" id="dtTreatmentContentGroup">
                    </ul>
                </div>
            </div>
            <div class="flex-grow-1 ms-2 ">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="w-30 col-auto my-auto">
                                <div class="h-100">
                                    <h6 class="mb-0">@Local["Mẫu nội dung"]</h6>
                                    <p class="text-sm mb-0">@Local["Danh sách mẫu nội dung"]</p>
                                </div>
                            </div>
                            <div class="ms-auto my-auto mt-1">
                                <button class="btn btn-primary btn-sm mt-3 setting_projectclosure" data-tab="add_tab_Customer_Care_Status" data-value="fade up" onclick="return TC_AddStatusDetail()">@Local["Thêm mới"]</button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body m-0 mobile-responsive">
                        <table class="table vt-table mb-0" id="dtTreatmentContentDetail">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th class="d-none">ID</th>
                                    <th style="width:40px;">@Local["#"]</th>
                                    <th>@Local["Tên nội dung"]</th>
                                    <th>@Local["Nội dung"]</th>
                                    <th>@Local["Người sửa"]</th>
                                    <th style="width:40px;" class="setting_projectclosure">@Local["Xóa"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtTreatmentContentDetailBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    let ser_StatusID = "@Model.sys_StatusID";
    let Total;
    let dataTemplateDetail;
    let CurrentStatusParentID = 0;
    let DataUser;
    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                TC_LoadMaster();
            });
        $('#dtTreatmentContentGroup').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('li')[0].dataset.id);
            TC_EditGroupDetail(ID);
        });
        $('#dtTreatmentContentGroup').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('li')[0].dataset.id);
            TC_Delete_Group_Detail(ID)
        });

        $('#dtTreatmentContentDetail tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            TC_EditStatusDetail(ID);
        });
        $('#dtTreatmentContentDetail tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            TC_Delete_Status_Detail(ID)
        });
    });
    function TC_LoadMaster() {
        AjaxLoad(url = "/Setting/ContentTemplate/TreatmentContentTemplateList/?handler=LoadData"
            , data = { MasterID: ser_StatusID}, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    let dataMaster = JSON.parse(result)["Table"];
                    dataTemplateDetail = JSON.parse(result)["Table1"];
                    TC_RenderGroup(dataMaster, "dtTreatmentContentGroup");
                    TC_RenderDetail(dataTemplateDetail, "dtTreatmentContentDetailBody");
                    TC_TriggerClickParent();
                } else {
                    notiError_SW();
                }
            });
    }
    function TC_RenderGroup(dataMaster, id) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let total = 0;
            if (dataMaster && dataMaster.length > 0) {
                for (let i = 0; i < dataMaster.length; i++) {
                    let item = dataMaster[i];
                    let li =
                        '<li data-id="' + item.ID + '" class="list-group-item border-0 d-flex justify-content-between ps-0 mb-2 border-radius-lg rowStatusParent">'
                        + '<div class="d-flex ms-2">'
                        + '<div class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center" title="Quantity"><h6 class="mt-1 text-white">' + Number(item.Total) + '</h6></div>'
                        + '<div class="d-flex flex-column"> '
                        + '     <h6 class="text-dark text-sm mt-2 text-decoration-underline buttonEditClass">' + item.Name + '</h6>'
                        + '</div>'
                        + '</div>'
                        + '<div class="d-flex setting_projectclosure">'
                        + ((item.DeleteButton === 1) ?Render_Button_Grid([
                            '<button class="btn btn-link btn-icon-only btn-rounded btn-sm text-dark my-auto buttonDeleteClass"> '
                            + '<i title="Remove" class="remove icon" aria-hidden="true"></i>' + '</button>']) : '')
                        + '</div>'
                        + '</li>';
                    total = total + Number(item.Total);
                    stringContent = stringContent + li
                }
                stringContent = '<li data-id="0" class="list-group-item border-0 d-flex justify-content-between ps-0 mb-2 border-radius-lg rowStatusParent">'
                    + '<div class="d-flex ms-2">'
                    + '<div class="icon icon-shape icon-sm me-3 bg-gradient-primary shadow text-center" title="Quantity"><h6 class="mt-1 text-white">' + total + '</h6></div>'
                    + '<div class="d-flex flex-column"> '
                    + '     <h6 class="text-dark text-sm mb-0">@Local["Tổng"]</h6>'
                    + '</div>'
                    + '</div>'
                    + '</li>'
                    + stringContent;
                document.getElementById(id).innerHTML = stringContent;
            }
        }
        TC_Event_Row_Parent();
    }
    function TC_RenderDetail(data, id) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                console.log(data)
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let cont = '';
                    if (item.CONTENT.length > 100) {
                        cont = item.ShortCONTENT + '...';
                    }
                    else cont = item.CONTENT;
                    let obj = Fun_GetObject_ByID(DataUser, item.PerEditor);
                    let name = (obj != null) ? obj.Name : '@Local["Không xác định"]';
                    let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass">' + item.NAME + '</a></td>'
                        + '<td >' + cont + '</td>'
                        + '<td>'
                        + '<div class="d-flex">'
                        + '<div class="icon icon-shape icon-sm me-2 text-center" >'
                        + '<img class="avatar avatar-xs mt-2" src="' + img + ' " alt="label-image">'
                        + '</div>'
                        + '<div class="d-flex flex-column">'
                        + '<h6 class="text-dark text-sm mb-0">' + name + '</h6>'
                        + '<span class="text-xs">' + GetDateTime_String_DMY(item.DayEditor) + '</span>'
                        + '</div>'
                        + '</div>' + '</td>'
                        + '<td class="text-center setting_projectclosure">'
                        +Render_Button_Grid(['<button class="buttonGrid" value="'
                         + item.ID
                         + '"><i class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'])
                        +'</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            Total = data.length;
            document.getElementById(id).innerHTML = stringContent;
        }
        $("#dtTreatmentContentDetailBody img,#dtTreatmentContentDetailBody span").popup({
            transition: "scale up",
            position: "top right"
        });
    }
    function TC_TriggerClickParent() {
        if ($('.rowStatusParent[data-id="' + CurrentStatusParentID + '"]').get(0) != undefined)
            $('.rowStatusParent[data-id="' + CurrentStatusParentID + '"]').get(0).click();
    }
    function TC_Event_Row_Parent() {
        $(".rowStatusParent").on('click', function (event) {
            let id = Number($(this).attr("data-id"));
            CurrentStatusParentID = id;
            if (id == 0) TC_ViewDetail(id, 1);
            else {
                TC_ViewDetail(id, 0);
            }
            $(".rowStatusParent").removeClass('active');
            $(this).addClass('active')
        });
    }
    function TC_ViewDetail(idDetail, all) {
        let data = dataTemplateDetail;
        if (all == 0) {

            data = dataTemplateDetail.filter(word => word["ID_MASTER"] == idDetail);
            for (let i = 0; i < data.length; i++) {
                data[i].STT = i + 1;
            }
        }
        TC_RenderDetail(data, "dtTreatmentContentDetailBody");
    }
    function TC_Delete_Status_Detail(id) {
        const promise = notiConfirm();
        promise.then(function () { TC_Excute_Delete_Status_Detail(id); }, function () { });
    }
    function TC_Excute_Delete_Status_Detail(id) {
        AjaxLoad(url = "/Setting/ContentTemplate/TreatmentContentTemplateList/?handler=DeleteGroup"
            , data = { MasterID: id }, async = false, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    TC_LoadMaster();
                } else {
                    notiError_SW();
                }
            });
    }
    function TC_Delete_Group_Detail(id) {
        const promise = notiConfirm();
        promise.then(function () { TC_Execute_Delete_Group_Detail(id); }, function () { });
    }
    function TC_Execute_Delete_Group_Detail(id) {
        AjaxLoad(url = "/Setting/ContentTemplate/TreatmentContentTemplateList/?handler=DeleteStatus"
            , data = { DetailID: id }, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    TC_LoadMaster();
                } else {
                    notiError_SW();
                }
            });
    }
    function TC_AddStatusDetail() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/ContentTemplate/TreatmentContentTemplateStatusDetail?CurrentID=0&TypeStatusID="
            + ser_StatusID + "&TempGroupID=" + CurrentStatusParentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function TC_EditStatusDetail(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/ContentTemplate/TreatmentContentTemplateStatusDetail?CurrentID="
            + CurrentID + "&TypeStatusID=" + ser_StatusID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function TC_AddGroupDetail() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/ContentTemplate/TreatmentContentTemplateGroupDetail?CurrentID=0&TypeStatusID="
            + ser_StatusID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function TC_EditGroupDetail(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Setting/ContentTemplate/TreatmentContentTemplateGroupDetail?CurrentID="
            + CurrentID + "&TypeStatusID=" + ser_StatusID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>
<script>js_require('/js/main.js')</script>
