@page
@model MLunarCoffee.Pages.Setting.Webhub.WebhubListModel
@{
    Layout = null;
}
<script>js_require('/assests/js/MD5.js');</script>
<div class="container-fluid py-0 px-0" id="STWebhub_Container">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Cấu hình webhook"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách phương thức webhook"]</p>
                    </div>
                </div>
                <div class="card-body pt-2 px-2">
                    <div class="m-0 my-3 mobile-responsive">
                        <table id="STWebhub_DTContent" class="table vt-table mb-0">
                            <thead class="hiddenCollapse">
                                <tr role="row">
                                    <th class="d-none">ID</th>
                                    <th>@Local["#"]</th>
                                    <th>@Local["Tên"]</th>
                                    <th>@Local["Tên đăng nhập"]</th>
                                    <th>@Local["Mật khẩu"]</th>
                                    <th>@Local["Loại"]</th>
                                    <th>@Local["Nhà cung cấp"]</th>
                                    <th>@Local["Người sửa"]</th>
                                </tr>
                            </thead>
                            <tbody id="STWebhub_DTContentBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="STWebhub_DetailContainer">
</div>
<script type="text/javascript">
    //#region //INIT - DEFINE
    let DataUser;
    $(document).ready(function () {
        STWebhub_Loaddata();
        STWebhub_Event();

    });
    //#endregion

    //#region //LOADDATA
    async function STWebhub_Loaddata() {
        new Promise((resolve, reject) => {
            Master_IndexDB_Reads(_Session_Data, [_Session_User]
                , function (data) {
                    DataUser = data[0];
                    AjaxLoad(url = "/Setting/Webhub/WebhubList/?handler=LoadData"
                        , data = {}, async = true, error = null
                        , success = function (result) {
                            let data = JSON.parse(result);
                            STWebhub_Render(data, 'STWebhub_DTContentBody');
                        });
                });
            resolve();
        });
    }


 

    function STWebhub_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let obj = Fun_GetObject_ByID(DataUser, item.PerEditor);
                    let name = (obj != null) ? obj.Name : 'unknown';
                    let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass STWebhub_BreakoutUrl" href="#">' + item?.Name + '</a></td>'
                        + '<td>' + hex_md5(item?.Username).replace(/./g, '•') + '</td>'
                        + '<td>' + hex_md5(item?.Password).replace(/./g, '•') + '</td>'
                        + '<td>' + item?.Type + '</td>'
                        + '<td>' + item?.Brand + '</td>'


                        + '<td>'
                        + '<div class="d-flex">'
                        + '<div class="icon icon-shape icon-sm me-2 text-center" >'
                        + '<img class="avatar avatar-xs mt-2" src="' + img + ' " alt="label-image">'
                        + '</div>'
                        + '<div class="d-flex flex-column">'
                        + '<h6 class="text-dark text-sm mb-0">' + name + '</h6>'
                        + '<span class="text-xs">' + GetDateTime_String_DMY(item.DayEditor) + '</span>'
                        + '</div>'
                        + '</div>'
                        + '</td >';
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }
        $("#STWebhub_DTContentBody img,#STWebhub_DTContentBody span").popup({
            transition: "scale up",
            position: "top right"
        });
        Checking_TabControl_Permission();
    }


    //#endregion

    //#region //EVENT - CRUD
 
    function STWebhub_Edit(CurrentID) {
        STWebhub_OpenDetail();
        $("#STWebhub_DetailContainer").load("/Setting/Webhub/WebhubDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#STWebhub_DetailContainer').show();
        return false;
    }


    function STWebhub_OpenDetail() {
        $("#STWebhub_DetailContainer").empty();
        $("#STWebhub_Container").hide();
        document.getElementById("STWebhub_DetailContainer").innerHTML = '';
    }

    function STWebhub_CloseDetail() {
        document.getElementById("STWebhub_DetailContainer").innerHTML = '';
        $("#STWebhub_Container").show();
        $("#STWebhub_DetailContainer").hide();
    }

    function STWebhub_Event() {
        $('#STWebhub_DTContent tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            if (typeof ID === "undifined") return;
            STWebhub_Edit(ID);
        });
 
    }
    //#endregion
</script>
<script>js_require('/js/main.js')</script>
<style>
    #STWebhub_DTContentBody .STWebhub_BreakoutUrl {
        /* These are technically the same, but use both */
        overflow-wrap: break-word;
        word-wrap: break-word;
        -ms-word-break: break-all;
        /* This is the dangerous one in WebKit, as it breaks things wherever */
        word-break: break-all;
        /* Instead use this non-standard one: */
        word-break: break-word;
        /* Adds a hyphen where the word breaks, if supported (No Blink) */
        -ms-hyphens: auto;
        -moz-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }
</style>


