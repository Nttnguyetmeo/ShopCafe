@page
@model MLunarCoffee.Pages.AppCustomer.Desk.Appointment.AppListModel
@{
    Layout = null;
}

@Html.AntiForgeryToken()
<div class="container-fluid px-0">
    <div class="row m-0">
        <div class="col-12 position-relative px-0">
            <div id="AC_DAL_MainContainer">
                <div class="pt-2">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Lịch hẹn trực tuyến"]</h6>
                                <p class="text-sm mb-0">@Local["Danh sách lịch hẹn được đặt trực truyến trên ứng dụng khách hàng và trang web"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pt-2 ">
                    <div class="ms-0 px-0 row">
                        <div class="col-md-3 mt-0 ps-0">
                            <div class="bg-gray-100 border-5 border-dark border-radius-bottom-start-0 border-radius-lg border-radius-top-start-0 border-start card-body d-flex mt-2 p-2">
                                <span id="deskapp_numapp" class="fs-1 fw-bold text-dark ps-2">0</span>
                                <div class="ms-2 mt-3">
                                    <span class="text-sm fw-bold text-dark">@Local["Tổng lịch hẹn"]</span>
                                    <p class="opacity-8 mb-2 text-xs">@Local["Lịch hẹn trực tuyến"]</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mt-0 ps-0">
                            <div class="bg-gray-100 border-5 border-secondary border-radius-bottom-start-0 border-radius-lg border-radius-top-start-0 border-start card-body d-flex mt-2 p-2">
                                <span id="deskapp_numnonexec" class="fs-1 fw-bold text-secondary ps-2">0</span>
                                <div class="ms-2 mt-3">
                                    <span class="text-sm fw-bold text-secondary">@Local["Chưa xử lý"]</span>
                                    <p class="opacity-8 mb-2 text-xs">@Local["Chưa chăm sóc"]</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mt-0 ps-0">
                            <div class="bg-gray-100 border-5 border-primary border-radius-bottom-start-0 border-radius-lg border-radius-top-start-0 border-start card-body d-flex mt-2 p-2">
                                <span id="deskapp_numcreatedapp" class="fs-1 fw-bold text-primary ps-2">0</span>
                                <div class="ms-2 mt-3">
                                    <span class="text-sm fw-bold text-primary">@Local["Đã xử lý"]</span>
                                    <p class="opacity-8 mb-2 text-xs">@Local["Tạo lịch hẹn khách hàng"]</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 mt-0 ps-0">
                            <div class="bg-gray-100 border-5 border-danger border-radius-bottom-start-0 border-radius-lg border-radius-top-start-0 border-start card-body d-flex mt-2 p-2">
                                <span id="deskapp_numcancel" class="fs-1 fw-bold text-danger ps-2">0</span>
                                <div class="ms-2 mt-3">
                                    <span class="text-sm fw-bold text-danger">@Local["Đã hủy"]</span>
                                    <p class="opacity-8 mb-2 text-xs">@Local["Hủy lịch hẹn trực tuyến"]</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card card-plain">
                        <div class="vtcardheader card-header p-0 pt-3">
                            <div class="left">
                                <div class="vtcondition">
                                    <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                                    <div class="fulllap collapse collapsesticky show">
                                        <div class="row m-0 d-lg-flex">
                                            <div class="field col-12 col-md-3 col-xl-3 ps-0 pe-1 mt-2  col-w-300">
                                                <div class="input-group" id="searchApp">
                                                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                                                    <input id="AC_DAL_filterAppointment" type="text" class="form-control" placeholder="eg .@Local[" Tìm kiếm theo tên, số điện thoại hoặc mã số"]" onkeyup="AC_DAL_onkeyup_filterApp()">
                                                </div>
                                            </div>
                                            <div class="field col-12 col-md-9 col-xl-9 px-0 mt-2 d-flex col-w-200">
                                                <div class="ui fluid search selection dropdown form-control" id="AC_DG_StatusID" onchange="event.preventDefault(); return AC_DAL_Filter();">
                                                    <i class="dropdown icon"></i>
                                                    <input type="hidden" name="" value="0">

                                                    <input id="searchConsult1" class="search" autocomplete="off" tabindex="0">
                                                    <div class="text">@Local["Tất cả tình trạng"]</div>
                                                    <div id="ccbAC_DG_StatusID" class="menu transition hidden" tabindex="-1">
                                                        <div class="item active" data-value="0">@Local["Tất cả tình trạng"]</div>
                                                        <div class="item" data-value="1">@Local["Chưa xử lý"]</div>
                                                        <div class="item" data-value="2">@Local["Đã xử lý"]</div>
                                                        <div class="item" data-value="3">@Local["Đã hủy"]</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="right">
                                <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local[" Xuất excel"]">
                                    <i class="vtt-icon  vttech-icon-export-ex text-lg text-primary cursor-pointer _tab_control_" data-tab="export_excel" onclick="event.preventDefault(); return AC_DAL_Export()"></i>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div class="row m-0">
                                <div class="col-12 px-0">
                                    <div class="m-0 mt-3 mobile-responsive" style="height: calc(100vh - 250px);">
                                        <div id="WaitingDeskGeneral" class=" text-center z-index-sticky" style="display: none; position: absolute; left: 50%;">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </div>
                                        <table id="AC_DAL_dtContent" class="table vt-table mb-0">
                                            <thead>
                                                <tr>
                                                    <th class="no-sort" style="width: 50px;">#</th>
                                                    <th style="min-width: 150px;">@Local["Thời gian"]</th>
                                                    <th style="min-width: 300px;">@Local["Thông tin"]</th>
                                                    <th>@Local["Tình trạng"]</th>
                                                    <th>@Local["Gửi thông báo"]</th>

                                                </tr>
                                            </thead>
                                            <tbody id="AC_DAL_dtContentBody">
                                            </tbody>
                                        </table>
                                    </div>
                                    <button id="AC_DAL_btnLoadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0" onclick="event.preventDefault(); return AC_DAL_LoadShedule(0, 1);">@Local["Xem thêm"]</button>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div id="AC_DAL_HandleDetailContainer" class="position-absolute top-0 start-50 translate-middle-x mt-4 border border-1 shadow-lg card  w-100 w-lg-80 w-xl-50" style="display: none">
            </div>
        </div>
    </div>
</div>

<script>

    //#region // DECLARE & INIT

    let AC_DAL_Limit = 100;
    let AC_DAL_BeginID = 0;
    let AC_DAL_XhrLoadList;
    let AC_DAL_XhrLoadTotal;
    var AC_DAL_DataMain;
    let AC_DAL_BranchID = "@Model.branchID";
    let AC_DAL_DateFrom = "@Model.dateFrom";
    let AC_DAL_DateTo = "@Model.dateTo";
    let AC_DAL_dataFilterStatus = {};
    $(document).ready(function () {
        AC_DAL_LoadShedule();
        AC_DAL_TotalExec();
        AC_DAL_dataFilterStatus = { 1: { IsCancel: 0, IsExecute: 0 }, 2: { IsExecute: 1 }, 3: { IsCancel: 1 } }
        $("#AC_DG_StatusID").dropdown("refresh");
        $("#AC_DG_StatusID").dropdown("set selected", "0");
    })

    //#endregion

    //#region // LOAD DATA

    async function AC_DAL_LoadShedule(CurrentID = 0, IsLoadMore = 0) {
        return new Promise((reslove) => {
            if (AC_DAL_XhrLoadList && AC_DAL_XhrLoadList.readyState != 4) AC_DAL_XhrLoadList.abort();
            if (IsLoadMore == 0 && CurrentID == 0) {
                $("#AC_DAL_dtContentBody").empty();
                AC_DAL_BeginID = 0;
                AC_DAL_DataMain = [];
            }

            AC_DAL_XhrLoadList = AjaxLoad(url = "/AppCustomer/Desk/Appointment/AppList/?handler=LoadData"
                , data = {
                    BranchID: AC_DAL_BranchID,
                    DateFrom: AC_DAL_DateFrom,
                    DateTo: AC_DAL_DateTo,
                    BeginID: AC_DAL_BeginID,
                    Limit: AC_DAL_Limit,
                    CurrentID: CurrentID
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        if (CurrentID != 0) {
                            let rowSchedule = $("#AC_DAL_ScheRow_" + CurrentID);
                            if (data && data.length != 0) {
                                let item = data[0];
                                let trRow = AC_DAL_RenderEach(item);
                                let cls = AC_DAL_RenderEach_ClassExe(item.IsCancel, item.IsExecute);
                                trRow = `<tr id="AC_DAL_ScheRow_${item.ID}" class="row-add vt-number ${cls}">${trRow}</tr>`;
                                if (rowSchedule && rowSchedule.length != 0) {
                                    rowSchedule.replaceWith(trRow);
                                    let index = AC_DAL_DataMain.findIndex(e => e.ID == item.ID);
                                    AC_DAL_DataMain[index] = item;
                                }
                                else {
                                    document.getElementById('AC_DAL_dtContentBody').insertAdjacentHTML("afterbegin", trRow);
                                    AC_DAL_DataMain.push(item);
                                }
                                AC_DAL_EventGrid();
                            }
                            else {
                                rowSchedule.remove();
                                let index = AC_DAL_DataMain.findIndex(e => e.ID == CurrentID);
                                AC_DAL_DataMain.splice(index, 1);
                            }
                        }
                        else {
                            if (data && data.length != 0) {
                                AC_DAL_DataMain = AC_DAL_DataMain.concat(data);
                                AC_DAL_Render(data, 'AC_DAL_dtContentBody');
                                AC_DAL_GetBeginID(data);
                            }
                            else {
                                AC_DAL_DataMain = [];
                            }
                        }
                    }
                    else {
                        notiError_SW();
                    }
                    reslove();
                }
                , sender = null
                , before = function (e) { }
                , complete = function (e) { }
            );
        })
    }

    async function AC_DAL_TotalExec() {
        return new Promise((reslove) => {
            $("#deskapp_numapp").html(0);
            $("#deskapp_numnonexec").html(0);
            $("#deskapp_numcreatedapp").html(0);
            $("#deskapp_numcancel").html(0);
            if (AC_DAL_XhrLoadTotal && AC_DAL_XhrLoadTotal.readyState != 4) AC_DAL_XhrLoadTotal.abort();
            AC_DAL_XhrLoadTotal = AjaxLoad(url = "/AppCustomer/Desk/Appointment/AppList/?handler=LoadTotalData"
                , data = {
                    BranchID: AC_DAL_BranchID,
                    DateFrom: AC_DAL_DateFrom,
                    DateTo: AC_DAL_DateTo
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        Count_Up("deskapp_numapp", data[0]?.totalSchedule ?? 0)
                        Count_Up("deskapp_numnonexec", data[0]?.totalNonExec ?? 0)
                        Count_Up("deskapp_numcreatedapp", data[0]?.totalExec ?? 0)
                        Count_Up("deskapp_numcancel", data[0]?.totalCancel ?? 0)
                    }
                    else {
                        notiError_SW();
                    }
                    reslove();
                }
                , sender = null
                , before = function (e) { }
                , complete = function (e) { }
            );
        })
    }


    function AC_DAL_GetBeginID(data) {
        try {
            if (data && data.length != 0) {
                let PopBegin = data[data.length - 1];
                if (PopBegin) {
                    AC_DAL_BeginID = PopBegin.ID
                }
            }
        }
        catch (ex) {
            return 0;
        }
    }
    //#endregion

    //#region // RENDER

    async function AC_DAL_Render(data, id) {
        new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = AC_DAL_RenderEach(item);
                            let cls = AC_DAL_RenderEach_ClassExe(item.IsCancel, item.IsExecute)
                            tr = `<tr id="AC_DAL_ScheRow_${item.ID}" class="vt-number ${cls}">${tr}</tr>`;
                            myNode.insertAdjacentHTML("beforeend", tr);
                        }
                    }
                }
                Checking_TabControl_Permission();
                AC_DAL_EventGrid();
                ToolPopper();
            }, 10);
        });
    }

    function AC_DAL_RenderEach(item) {
        try {
            let result = '';

            result = `
                                          <td class="d-none" >${item.ID}</td>
                                          <td class="d-none" >${item.CustID}</td>
                                          <td class="d-none" >${item.CustPhone || item.TempPhone}</td>
                                          <td class="vt-number-order" ></td>
                                          <td>
                                              <div>
                                                  <span class="me-1 text-secondary text-xs"><i class="fas fa-calendar-alt"></i></span>
                                                  <span>${ConvertDateTimeUTC_DMY(item.DateFrom)}</span>
                                              </div>
                                              <div>
                                                  <span class="me-1 text-secondary text-xs"><i class="fas fa-clock"></i></span>
                                                  <span>${ConvertDateTimeUTC_Time_OnlyHour(item.DateFrom) + ' - ' + ConvertDateTimeUTC_Time_OnlyHour(item.DateTo)}</span>
                                              </div>
                                              <div>
                                                      ${Fun_GetName_ByID(AC_DG_objBranchs, item.BranchID) || item.TempBranchName}
                                              </div>
                                          </td>
                                          <td class="seachRow">
                                              <div>
                                                  <a target="_blank" href="/Customer/MainCustomer?CustomerID=${item.CustID}">${item.CustCode != '' ? `${item.CustCode} - ` : ''}</a>
                                                      <span id="AC_DAL_CustName_${item.ID}"> ${item.CustName || item.TempCustName}</span> -
                                                      <span id="AC_DAL_Phone_${item.ID}" class="btnCallClass text-sm cursor-pointer" data-info="${encrypt_phone(item.CustPhone) || encrypt_phone(item.TempPhone)}">
                                                      <span class="_tab_control_ text-primary " data-tab="phone_customer">${item.CustPhone || item.TempPhone}</span>
                                                  </span>
                                              </div>
                                              <div >

                                              </div>
                                              <div class="mt-2">${item.TempServiceCare != '' ? `@Local["Dịch vụ quan tâm"]: ${item.TempServiceCare}` : ''}</div>
                                              <div id="AC_DAL_Content_${item.ID}" class="mt-2">${item.Content}</div>
                                          </td>
                                          <td class="text-center">${AC_DAL_RenderStatus(item.IsCancel, item.IsModified)?.content ?? ''}</td>
                                          <td class="text-center">
                                          <button class="buttonGrid" data-bs-toggle="tooltip" value="" title="" data-bs-original-title="@Local["Gửi thông báo"]" aria-label="@Local["Gửi thông báo"]">
                                              <i class="buttonSendNotiClass far fa-paper-plane"></i>
                                          </button>
                                          </td>
                                      `
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function AC_DAL_RenderStatus(isCancel, isModified) {
        let result = {
            rawText: '',
            content: ''
        };
        switch (true) {
            case isCancel == 1:
                result.rawText = '@Local["Đã hủy"]';
                result.content = '<a href="#" class="px-2 text-danger fw-bold nav-link">@Local["Đã hủy"]</a>';
                break;
            case isCancel == 0 && isModified == 1:
                result.rawText = '@Local["Đã xử lý"]';
                result.content = `<a href="#" class="fw-bold px-2 nav-link btnHandleSchedule text-primary">@Local["Đã xử lý"]</a>`;
                break;
            case isCancel == 0 && isModified == 0:
                result.rawText = '@Local["Xử lý"]';
                result.content = `<a href="#" class="fw-bold px-2 nav-link btnHandleSchedule text-secondary">@Local["Xử lý"]</a>`;
                break;

        }
        return result;
    }

    function AC_DAL_RenderEach_ClassExe(isCancel, isExecute) {
        let result = '';
        let cls = 'border-start border-top-0 border-end-0 border-bottom-0 border-5'
        if (isCancel == 1) {
            result = cls + ' border-danger';
        }
        else if (isExecute == 1) {
            result = cls + ' border-primary';
        }
        return result;
    }
    //#endregion

    //#region // HANDLE
    function AC_DAL_handleSchedule(ID, Phone, CustID) {
        let item = AC_DAL_DataMain[AC_DAL_DataMain.findIndex(e => e.ID == ID)];
        $("#AC_DAL_HandleDetailContainer").html('');
        $("#AC_DAL_HandleDetailContainer").load("/AppCustomer/Desk/Appointment/AppHandleDetail?" + 'appID=' + ID + '&phone=' + Phone + '&custID=' + CustID + '&ver=' + versionofWebApplication
            , function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    if (typeof DAHD_Init === 'function')
                        DAHD_Init(item);
                }
                if (statusTxt == "error") {

                }
            });
        $('#AC_DAL_MainContainer').addClass('opacity-3 pe-none');
        $('#AC_DAL_HandleDetailContainer').show();
        return false;
    }

    function AC_DAL_SendNoti(custID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/AppCustomer/Desk/Appointment/AppNoti" + "?CustomerID=" + custID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    //#endregion

    //#region // EVENT

    function AC_DAL_EventGrid() {

        $('#AC_DAL_dtContent .btnHandleSchedule').unbind('click').on('click', function () {
            let tr = $(this).closest('tr').children();
            let ID = Number(tr[0].innerHTML);
            let CustID = Number(tr[1].innerHTML);
            let Phone = Number(tr[2].innerHTML);
            AC_DAL_handleSchedule(ID, Phone, CustID);
        });
        $('#AC_DAL_dtContent .buttonSendNotiClass').unbind('click').on('click', function () {
            let tr = $(this).closest('tr').children();
            let CustID = Number(tr[1].innerHTML)
            AC_DAL_SendNoti(CustID);
        });

        $('#AC_DAL_dtContent .btnCallClass').unbind('click').on('click', function () {
            let tr = $(this).closest('tr').children();
            let CustID = Number(tr[1].innerHTML)
            let phone = $(this).attr("data-info");
            AC_DAL_Calling(phone, CustID);
        });

    }
    function AC_DAL_Calling(phone, customer) {
        if (typeof CCF_OutcomCall === 'function') CCF_OutcomCall(phone, customer, 0, 0);
    }

    //FILTER
    function AC_DAL_FilterHideLine(id) {
        if (!$('#AC_DAL_ScheRow_' + id).hasClass('d-none'))
            $('#AC_DAL_ScheRow_' + id).addClass("d-none");
    }
    function AC_DAL_FilterShowLine(id) {
        if ($('#AC_DAL_ScheRow_' + id).hasClass('d-none'))
            $('#AC_DAL_ScheRow_' + id).removeClass("d-none");
    }

    function AC_DAL_onkeyup_filterAppAsync() {
        return new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    AC_DAL_Filter();
                },
            )
        })
    }

    function AC_DAL_Filter() {
        let search = xoa_dau($('#AC_DAL_filterAppointment').val().toLowerCase()).trim();
        let statusID = Number($('#AC_DG_StatusID').dropdown('get value')) ? Number($('#AC_DG_StatusID').dropdown('get value')) : 0;
        let status = AC_DAL_dataFilterStatus[statusID] ?? {};
        for (let i = 0; i < AC_DAL_DataMain.length; i++) {
            let value = AC_DAL_DataMain[i];
            let name = value["CustName"] || value["TempCustName"];
            let phone = value["CustPhone"] || value["TempPhone"];
            if ((xoa_dau(name).toLowerCase().includes(search)
                || xoa_dau(value["CustCode"]).toLowerCase().includes(search)
                || phone.includes(search))
                && (statusID = 0
                    || ((status?.IsCancel == undefined || value["IsCancel"] == status?.IsCancel)
                        && (status?.IsExecute == undefined || (value["IsExecute"] == status?.IsExecute && value["IsCancel"] != 1))))
            ) {
                AC_DAL_FilterShowLine(value["ID"]);
            }
            else {
                AC_DAL_FilterHideLine(value["ID"]);
            }
        }
    }
    async function AC_DAL_onkeyup_filterApp() {
        await AC_DAL_onkeyup_filterAppAsync();
        return false;
    }
    //#endregion
    //#region //Export
    async function AC_DAL_Export() {
        try {
            if (AC_DAL_DataMain && AC_DAL_DataMain.length != 0) {
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "DateFrom": ["@Local["Thời gian"]", (value, {DateFrom, DateTo}) => {
                        return `${ConvertDateTimeUTC_Time_OnlyHour(DateFrom) + ' - ' + ConvertDateTimeUTC_Time_OnlyHour(DateTo)}`;
                    }],
                    "BranchID": ["@Local["Chi nhánh"]", (value, {BranchID, TempBranchName}) => {
                        return `${Fun_GetName_ByID(AC_DG_objBranchs, BranchID) || TempBranchName}`
                    }],
                    "CustName": ["@Local["Khách hàng"]", (value, { CustName, TempCustName }) => {
                        return `${CustName || TempCustName}`
                    }],
                    "CustPhone": {
                        dataNamePer: 'phone',
                        data: ["@Local["Điện thoại"]", (value, {CustPhone, TempPhone}) => {
                            return `${CustPhone || TempPhone}`
                        }, 'phone_customer']
                    },
                    "TempServiceCare": ["@Local["Nội dung"]", (value, { TempServiceCare, Content }) => {
                        return decodeHtml(`${TempServiceCare != '' ? `@Local["Dịch vụ quan tâm"]: ${TempServiceCare}` : ''} ${Content}`)
                    }],
                    "IsCancel": ["@Local["Tình trạng"]", (value, {IsCancel, IsModified}) => {
                        return decodeHtml(AC_DAL_RenderStatus(IsCancel, IsModified)?.rawText ?? '')
                    }]
                }

                syslog_ExpExcel('e', Outlang["Lich_hen_truc_tuyen"]);
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'AC_DAL_dtContentBody', PermissionTable_TabControl);
                let nameExcel = Outlang['Lich_hen_truc_tuyen'];
                exportJsonToExcel(nameExcel, AC_DAL_DataMain, dataHeader);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }
       //#endregion
</script>

