@page
@model MLunarCoffee.Pages.AppCustomer.Desk.User.UserListModel
@{
    Layout = null;
}

@Html.AntiForgeryToken()
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12 position-relative">
            <div id="AC_DUL_MainContainer">
                <div class="pt-2">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Danh sách tài khoản"]</h6>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pt-2 ">
                    <div class="row">
                        <div class="d-lg-flex mt-4">
                            <div class="flex-grow-1 ">
                                <div class="row mx-0">
                                    <div class="field col-12 col-md-3 col-xl-3 ps-0 pe-1 mt-2">
                                        <div class="input-group" id="searchApp">
                                            <span class="input-group-text"><i class="fas fa-search"></i></span>
                                            <input id="AC_DUL_txtFilter" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm"]" onkeyup="AC_DUL_onkeyup_filterApp()">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="m-0 mt-3 mobile-responsive">
                                <div id="WaitingDeskGeneral" class=" text-center z-index-sticky" style="display: none; position: absolute; left: 50%;">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                                <table id="AC_DUL_dtContent" class="table vt-table mb-0">
                                    <thead>
                                        <tr>
                                            <th class="no-sort" style="width: 50px;">#</th>
                                            <th style="width: 200px;">@Local["Tài khoản"]</th>
                                            <th style="min-width: 300px;">@Local["Ngày tạo"]</th>
                                            <th>@Local["Thời gian đăng nhập gần nhất"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="AC_DUL_dtContentBody">
                                    </tbody>
                                </table>
                            </div>
                            <button id="AC_DUL_btnLoadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0" onclick="event.preventDefault(); return AC_DUL_RenderMore();">@Local["Xem thêm"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    //#region // DECLARE & INIT
    let AC_DUL_DataMain = [], AC_DUL_DataMainSlice = [];
    let AC_DUL_IndexTable = 0;
    $(document).ready(function () {
        AC_DUL_LoadData();
    })

    //#endregion

    //#region // LOAD DATA

    async function AC_DUL_LoadData() {
        $("#AC_DUL_dtContentBody").empty();
        AC_DUL_IndexTable = 0;
        new Promise((resolve, reject) => {
            AjaxLoad(url = "/AppCustomer/Desk/User/UserList/?handler=LoadData"
                , data = {}, async = true, error = null
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        AC_DUL_DataMain = data;
                        AC_DUL_DataMainSlice = sliceIntoChunks(JSON.parse(JSON.stringify(data)), 100);
                        fnRenderBlock(AC_DUL_DataMainSlice[AC_DUL_IndexTable], "AC_DUL_dtContentBody"
                            , blocknum = 50
                            , fnrender = AC_DUL_Render
                            , fnsuccess = null
                        );

                    }
                },
                sender = null,
                before = function (e) { },
                complete = function (e) { }
            );

        })
    }
    function AC_DUL_RenderMore() {
        AC_DUL_IndexTable = AC_DUL_IndexTable + 1;
        fnRenderBlock(AC_DUL_DataMainSlice[AC_DUL_IndexTable] ?? [], "AC_DUL_dtContentBody"
            , blocknum = 50
            , fnrender = AC_DUL_Render
            , fnsuccess = null
        );
    }
    //#endregion

    //#region // RENDER

    async function AC_DUL_Render(data, id) {
        new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = AC_DUL_RenderEach(item);
                            let status = 'border-start border-top-0 border-end-0 border-bottom-0 border-5 border-primary'
                            tr = `<tr id="AC_DUL_MasterRow_${item.ID}" class="vt-number ${status}">${tr}</tr>`;
                            myNode.insertAdjacentHTML("beforeend", tr);
                        }
                    }
                }
                ToolPopper();
            }, 10);
        });
    }

    function AC_DUL_RenderEach(item) {
        try {
            let result = '';
            result = `
                          <td class="vt-number-order" ></td>
                          <td class="text-center">
                             <span>#${item.Key}</span>        
                          </td>
                          <td>
                               ${ConvertDateTimeUTC_DMYHM(item.Created)}
                          </td>
                          <td>
                               ${ConvertDateTimeUTC_DMYHM(item.LastSignin)}
                          </td>
                           `
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion

    //#region // EVENT
    //FILTER
    function AC_DUL_FilterHideLine(id) {
        if (!$('#AC_DUL_MasterRow_' + id).hasClass('d-none')) {
            $('#AC_DUL_MasterRow_' + id).addClass("d-none");
            $('#AC_DUL_MasterRow_hr' + id).addClass("d-none");
        }
    }
    function AC_DUL_FilterShowLine(id) {
        if ($('#AC_DUL_MasterRow_' + id).hasClass('d-none')) {
            $('#AC_DUL_MasterRow_' + id).removeClass("d-none");
            $('#AC_DUL_MasterRow_hr' + id).removeClass("d-none");
        }
    }

    function AC_DUL_onkeyup_filterAppAsync() {
        return new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    AC_DUL_Filter();
                },
            )
        })
    }

    function AC_DUL_Filter() {
        let search = xoa_dau($('#AC_DUL_txtFilter').val().toLowerCase()).trim();
        for (let i = 0; i < AC_DUL_DataMain.length; i++) {
            let value = AC_DUL_DataMain[i];
            let name = value["Key"];
            if (xoa_dau(name).toLowerCase().includes(search)) {
                AC_DUL_FilterShowLine(value["ID"]);
            }
            else {
                AC_DUL_FilterHideLine(value["ID"]);
            }
        }
    }
    async function AC_DUL_onkeyup_filterApp() {
        await AC_DUL_onkeyup_filterAppAsync();
        return false;
    }

    //#endregion
</script>
<script>js_require('/js/main.js')</script>


