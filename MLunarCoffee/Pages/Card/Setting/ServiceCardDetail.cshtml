@page
@model MLunarCoffee.Pages.Card.Setting.ServiceCardDetailModel
@{
    Layout = null;
}
@Html.AntiForgeryToken()
<div class="container-fluid ms-2 px-0 " id="ServiceCard_Container">
    <div class="row">
        <div class="col-12">
            <div class="card ms-2 mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Thẻ thành viên"]</h6>
                                <p class="text-sm mb-0">@Local["Chức năng thêm, sửa hoặc xóa thẻ"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="row mt-0 p-0 form3" id="formServiceCard">
                        <div class="col-md-12 col-xl-7 mt-2 ps-3 flex-grow-1">
                            <div class="row d-flex p-1">
                                <div class="field col-12 col-md-12 col-lg-6 p-1">
                                    <label>@Local["Tên thẻ"]</label>
                                    <input class="form-control" id="SC_ServiceCardName" name="name" type="text" placeholder="eg .@Local["Tên thẻ"]" />
                                </div>
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <label>@Local["Mã thẻ"] <i>(@Local["Không có ký tự đặc biệt và khoảng trống"])</i></label>
                                    <input class="form-control" id="SC_ServiceCardCode" name="cardcode" type="text" placeholder="eg .@Local["Mã thẻ"]" />
                                </div>
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <label>@Local["Mệnh giá"]</label>
                                    <input class="form-control" id="SC_Price_Sale" name="servicePrice" placeholder="eg .@Local["Mệnh giá"]" />
                                </div>
                            </div>
                            <div class="row d-flex p-1">
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <label>@Local["Hoa hồng tư vấn"]</label>
                                    <div class="position-relative">
                                        <input id="SC_AmountPerTreat" class="border-right-0 form-control" onblur="event.preventDefault();ServiceCard_Count_Price();"
                                               placeholder="eg .@Local["Giảm giá"]" type="text">
                                        <div class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-5"
                                             id="SC_AmountPerTreatSelect" onchange="event.preventDefault();ServiceCard_Count_Price();">
                                            <input type="hidden" />
                                            <i class="dropdown icon"></i>
                                            <div class="default text"></div>
                                            <div id="cbbDiscountAmountPer" class="menu transition hidden" tabindex="-1">
                                                <div class="item" data-value="1">%</div>
                                                <div class="item" data-value="2">VND</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <div class="form-check form-switch ps-0">
                                        <input id="SC_card_is_times_used" type="checkbox" name="content" class="form-check-input ms-auto" />
                                        <label class="coloring green">@Local["Tối đa số lần sử dụng"]</label>
                                    </div>
                                    <input id="SC_card_times_used" name="" type="number" min="0" class="form-control" disabled="disabled" />
                                </div>
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <div class="form-check form-switch ps-0">
                                        <input id="SC_is_expiry_date" type="checkbox" name="content" class="form-check-input ms-auto" />
                                        <label class="coloring green">@Local["Tối đa số ngày sử dụng"]</label>
                                    </div>
                                    <input id="SC_ExpiredDate" name="" type="number" min="0" class="form-control" disabled="disabled" />
                                </div>
                                <div class="field col-12 col-md-6 col-lg-3 p-1">
                                    <label>@Local["Giá trị sử dụng"]</label>
                                    <input class="form-control" id="SC_Price_Use" name="accountAmount" placeholder="eg .@Local["Giá trị sử dụng"]" />
                                </div>
                            </div>
                            <div class="row p-1">
                                <div class="field col-12 p-1">
                                    <label>@Local["Ghi chú"]</label>
                                    <textarea id="ServiceCardNote" name="content" rows="3" class="form-control" placeholder="eg .@Local["Ghi chú"]"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 p-1 ps-3">
                            <div class="d-flex align-items-center mb-sm-0 mb-4">
                                <div class="form-check">
                                    <input id="SC_UsingAllService" type="checkbox" checked="checked" title="@Local["Sử dụng cho tất cả dịch vụ"]" class="form-check-input pr-2">
                                    <label id="SC_CheckBoxAllService" class="custom-control-label" for="UsingAllService">@Local["Sử dụng cho tất cả dịch vụ"]</label>
                                </div>
                                <div class="form-check ps-5">
                                    <input id="SC_FinishPay" type="checkbox" title="@Local["Thanh toán để sử dụng"]" class="form-check-input pr-2">
                                    <label class="custom-control-label" for="SC_FinishPay">@Local["Thanh toán để sử dụng"]</label>
                                </div>
                                <div id="per_btn_issuecard" class="form-check ps-5">
                                    <input id="SC_IssueCard" type="checkbox" title="@Local["Phát hành"]" class="form-check-input pr-2">
                                    <label class="custom-control-label" for="SC_IssueCard">@Local["Phát hành"]</label>
                                </div>
                                <div class="form-check ps-5">
                                    <input id="SC_FamilyUsing" type="checkbox" title="@Local["Thẻ gia đình"]" class="form-check-input pr-2">
                                    <label class="custom-control-label" for="SC_FamilyUsing">@Local["Thẻ gia đình"]</label>
                                </div>
                            </div>
                        </div>
                        <div id="div_cardissue" class="col-md-12 mt-2 ps-3 flex-grow-1 d-none">
                            <div class="row">
                                <div class="field col-12 col-md-3 col-lg-3 p-1">
                                    <label>@Local["Ngày phát hành"]</label>
                                    <input id="Cardissue_date" class="flatpickr form-control" type="text" placeholder="eg .@Local["Ngày phát hành"]" />
                                </div>
                                <div class="field col-12 col-md-3 col-lg-3 p-1">
                                    <label>@Local["Số lượng"]</label>
                                    <input class="form-control" id="Cardissue_Quantity" type="number"  placeholder="eg .@Local["Số lượng"]" />
                                </div>

                            </div>
                        </div>
                        <div class="row d-flex mt-0 p-0 d-none" id="div_service_using_card">
                            <div class="col-md-12 col-xl-8 mt-2 flex-grow-1">
                                <div class="card-body p-3 pt-2">
                                    <div class="row p-1">
                                        <div class="col-12 ps-1">
                                            <div class="input-group" id="SC_Input_ServiceDiv">
                                                <span class="input-group-text input-group-text px-2">
                                                    <i class="fas fa-search" aria-hidden="true"></i>
                                                    <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                                </span>
                                                <input id="SC_Input_Service" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                                                <span class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <ul id="SC_UserService" class="list-group border-dashed border-1 border-secondary border-radius-md overflow-auto mt-3">
                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-12 col-xl-4 pt-md-2 ps-xl-0 pe-xl-0 mt-5 flex-grow-1">
                                <div class="card-body p-3 pt-2">
                                    <ul id="SCUserServiceChoose" class="list-group border-dashed border-1 border-secondary border-radius-md overflow-auto mt-3">
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="fixed-botombutton pe-2 py-3">
                    <div class="action_Save">
                        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                        <div class="action_Save-Content">
                            <button class="btn btn-secondary" form="formServiceCard" onclick="event.preventDefault(); return SCD_CloseDetail()">@Local["Đóng"]</button>
                            <button class="btn bg-gradient-danger d-none" id="SC_BtnDelete"
                                    onclick="event.preventDefault(); return ServiceCardDelete(ser_ServiceCardCurrentID)">
                                @Local["Xóa"]
                            </button>
                            <button id="ServiceCard_btnSave" form="formServiceCard" type="button" class="btn bg-gradient-primary mt-2 me-2 _tab_control_" data-tab="edit_tab_customer"
                                    onclick="event.preventDefault();return ServiceCard_Execute()">
                                @Local["Lưu"]
                            </button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
    var ser_ServiceCardCurrentID = ("@Model._ServiceCardCurrentID");
    let _DataUpdateMembership;
    var DataService;
    let SC_TimerOnchange;
    let SC_Flprepend = 0;
    $(document).ready(function () {

        $('#SC_Price_Sale').divide();
        $('#SC_Price_Use').divide();
        $('#SC_AmountPerTreat').divide();
        $('#SC_AmountPerTreat').val(0);
        $("#SC_AmountPerTreatSelect").dropdown("set selected", 2);
        $('#SC_ExpiredDate').val(0);
        $('#SC_card_times_used').val(0);
        $("#Cardissue_date").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            allowInput: true,
            defaultDate: new Date(),
        });

        CheckPermissionControlInPage(sys_PerControl ,'@Model.CurrentPath');
        CheckPermissionControlInPage(sys_PerControlMH, '@Model.CurrentPath');
        ServiceCardLoadCobo();
        ServiceCard_Event();
    });

    //#region Load
    function ServiceCardLoadCobo () {
        AjaxLoad(url = "/Card/Setting/ServiceCardDetail/?handler=Initialize"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "[]") {
                    let dataServiceType = (JSON.parse(result)).Table;
                    DataService = dataServiceType
                    if (ser_ServiceCardCurrentID != "0") {
                        ServiceCardLoadDataDetail();
                        $('#SC_BtnDelete').removeClass('d-none');
                    }
                    ServiceCard_RenderList(DataService, 'SC_UserService');
                    ServiceCard_RenderList_Choose(DataService, 'SCUserServiceChoose');
                    ServiceCard_FilterService();

                }
            });
    }

    function ServiceCardLoadDataDetail () {
        AjaxLoad(url = "/Card/Setting/ServiceCardDetail/?handler=Loadata"
            , data = { id: ser_ServiceCardCurrentID}, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result)["Table"];
                    if (data.length > 0)
                        ServiceCardLoadUpdate(data[0]);

                } else {
                    notiError_SW();
                }
            });
        return false;
    }
    function ServiceCardLoadUpdate (data) {
        if (data && ser_ServiceCardCurrentID != '0') {
            $('#SC_ServiceCardName').val(data.Name);
            $('#SC_ServiceCardCode').val(data.Card_Code)
            $('#SC_Price_Sale').val(data.Price_Sale);
            $('#SC_Price_Use').val(data.Price_Use);
            $('#ServiceCardNote').val(data.Note);
            $('#SC_ExpiredDate').val(data.ExpiredDate);
            $('#SC_card_times_used').val(data.TimesUsed);
            $('#SC_is_expiry_date').prop('checked', (data.EndLess == 1 ? false : true));
            $('#SC_card_is_times_used').prop('checked', (data.IsTimesUsed == 1 ? true : false));
            $('#SC_card_times_used').prop('disabled', (data.IsTimesUsed == 1 ? false : true));
            $('#SC_UsingAllService').prop('checked', (data.AllService == 1 ? true : false));
            $('#SC_FinishPay').prop('checked', (data.IsFinishPayment == 1 ? true : false));

            //#region Phan tram hoa hong
            if (data.AmountConsult == 0) {
                $('#SC_AmountPerTreat').val(data.PerConsult);
                $("#SC_AmountPerTreatSelect").dropdown("set selected", 1);
            }
            else {
                $('#SC_AmountPerTreat').val(data.AmountConsult);
                $("#SC_AmountPerTreatSelect").dropdown("set selected", 2);
            }
            //#endregion

            //#region so ngay su dung
            if (data.EndLess == 1) {
                $('#SC_ExpiredDate').prop('disabled', true);
            } else {
                $('#SC_ExpiredDate').prop('disabled', false);
            }
            //#endregion
            //#region Issue
            if (data.IsIssue == 1) {
                $('#SC_IssueCard').prop('checked', true);
                $('#Cardissue_date').val(GetDateTime_String_DMY(new Date(data.IssueDate)));
                $('#Cardissue_Quantity').val(data.IssueQuantity);
                $('#div_cardissue').removeClass('d-none');

                if (data.IsUsing != 0) {

                    $("#Cardissue_date").prop('disabled', true);
                    $("#Cardissue_Quantity").prop('disabled', true);
                    $("#SC_IssueCard").prop('disabled', true);
                }

            } else {
                $('#SC_IssueCard').prop('checked', false);
            }
            //#endregion

            $("#SC_FamilyUsing").prop('checked', data.FamilyUsing == 1 ? true : false);

            //#region su dung dich vu
            if (data.AllService == 0) {
                $('#div_service_using_card').removeClass('d-none');
                let list_service_id = data.ServiceRange.replace(/,\s*$/, "").split(',');
                for (let i = 0;i < DataService.length; i++) {
                    if (list_service_id.includes(DataService[i].ID.toString()) == true) {
                        DataService[i].Choose = 1;
                    }

                }
                ServiceCard_RenderList(DataService, 'SC_UserService');
                ServiceCard_RenderList_Choose(DataService, 'SCUserServiceChoose');
                SC_Flprepend = 1;
            } else {
                $('#div_service_using_card').addClass('d-none');
            }
            //#endregion
        }
    }
    //#endregion Load

    //#region save
    function ServiceCard_Execute () {
        var data = new Object();
        let SC_CheckEndLess = 0;
        let SC_CheckTimeUsed = 0;
        let SC_CheckService = 0;
        let SC_IsPerTreat = Number($('#SC_AmountPerTreatSelect').dropdown('get value')) ? Number($('#SC_AmountPerTreatSelect').dropdown('get value')) : 0;
        data.NameServiceCard = $('#SC_ServiceCardName').val() ? $('#SC_ServiceCardName').val() : 'CardName';
        data.Card_Code = $('#SC_ServiceCardCode').val() ? $('#SC_ServiceCardCode').val() : '';
        data.Price_Sale = $('#SC_Price_Sale').val() ? $('#SC_Price_Sale').val() : 0;
        data.Price_Use = $('#SC_Price_Use').val() ? $('#SC_Price_Use').val() : 0;
        data.Card_CodePrint = ''//$('#SC_ServiceCardCodePrint').val() ? $('#SC_ServiceCardCodePrint').val() : '';

        if (SC_IsPerTreat == 1) {
            data.PerConsult = $('#SC_AmountPerTreat').val() ? $('#SC_AmountPerTreat').val() : 0;
            data.AmountConsult = 0;
        }
        else {
            data.AmountConsult = $('#SC_AmountPerTreat').val() ? $('#SC_AmountPerTreat').val() : 0;
            data.PerConsult = 0;
        }
        data.IsIssue = ($('#SC_IssueCard').is(':checked') ? 1 : 0);
        data.FamilyUsing = ($('#SC_FamilyUsing').is(':checked') ? 1 : 0);
        data.IssueDate = $('#Cardissue_date').val() ? $('#Cardissue_date').val() : "";
        if (data.IsIssue == 1) {
            data.IssueQuantity = $('#Cardissue_Quantity').val();
        }
        else {
            data.IssueQuantity = 0;
        }


        data.CardNote = $('#ServiceCardNote').val() ? $('#ServiceCardNote').val() : '';
        data.EndLess = ($('#SC_is_expiry_date').is(':checked') ? 0 : 1);
        data.ExpiredDate = '0';
        if (data.EndLess == 0) {
            data.ExpiredDate = $('#SC_ExpiredDate').val();
            SC_CheckEndLess = (data.ExpiredDate <= 0) ? 1 : 0;
            ServiceCard_ShowError(SC_CheckEndLess, 1)
        }
        let is_all_service = 1;
        if ($('#SC_UsingAllService').length > 0) {
            is_all_service = ($('#SC_UsingAllService').is(':checked') ? 1 : 0);
        }
        data.isFinishPay = ($('#SC_FinishPay').is(':checked') ? 1 : 0);

        data.AllService = is_all_service;
        data.ServiceRange = '';
        if (data.AllService == 0) {
            for ([key, value] of Object.entries(DataService)) {
                if (value.Choose || value.Choose == 1)
                    data.ServiceRange += value.ID + ','
            }
            SC_CheckService = (data.ServiceRange == '') ? 1 : 0;
            ServiceCard_ShowError(SC_CheckService, 3)
        }
        data.IsTimesUsed = ($('#SC_card_is_times_used').is(':checked') ? 1 : 0);
        data.TimesUsed = '0';
        if (data.IsTimesUsed == 1) {
            data.TimesUsed = $('#SC_card_times_used').val();
            SC_CheckTimeUsed = (data.TimesUsed <= 0) ? 1 : 0;
            ServiceCard_ShowError(SC_CheckTimeUsed, 2)
        }
        $('#formServiceCard').form('validate form');
        if ($('#formServiceCard').form('is valid')) {
            if ($('#textShowMessage').html() == '' && SC_CheckTimeUsed == 0 && SC_CheckEndLess == 0 && SC_CheckService == 0) {
                AjaxLoad(url = "/Card/Setting/ServiceCardDetail/?handler=ExcuteData"
                    , data = {
                        data: JSON.stringify(data),
                        CurrentID: ser_ServiceCardCurrentID
                    }, async = true, error = null
                    , success = function (result) {
                        let data = JSON.parse(result);
                        if (data[0].RESULT == 1) {
                            notiSuccess("@Local["Lưu thành công"]");
                            if (typeof SC_Load !== 'undefined' && $.isFunction(SC_Load)) {
                                SC_Load(data[0].CURRENTID, 0);
                            }
                            syslog_sca((ser_ServiceCardCurrentID != '0' ? 'u' : 'i'), data[0].CODE);
                            SCD_CloseDetail();
                        }
                        else if(data[0].RESULT == 0) {
                            notiWarning("@Local["Kiểm tra dữ liệu"]");
                        }
                        else {
                            notiError('');
                        }
                    }
                );
            }
        }

        return false;
    }
    //#endregion


    //#region Render
    function ServiceCard_RenderList (data, id) {
        let str = '';
        for ([key, value] of Object.entries(data)) {
            if (!value.Choose || value.Choose == "0") {
                str = str + '<li data-key="' + key + '" data-id="' + value.ID + '" class="vt-number btnChooseService py-3 d-flex list-group-item service_filter rpdetail_sheet border-dashed border-secondary border-top-0 border-end-0 border-start-0 " role="row" data-key="' + key + '" data-id="' + value.ID + '" data-type="' + value.Type + '">' + ServiceCard_RenderList_Each(value.Name, 'btnChooseService', 'add', key, value.TypeName) + '</li>';
            }
        }
        $('#' + id).html(str);
        $('#' + id).prepend(`<li class="d-flex p-3 border-secondary border-bottom">
            <div class="row w-100">
                <div class="col-12 col-sm-1 text-center">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["STT"]</span>
                </div>
                <div class="col-12 col-sm-6">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["Tên DV/SP"]</span>
                </div>
                <div class="col-12 col-sm-5">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["Loại DV/SP"]</span>
                </div>
            </div>
        </li>`)
    }
    function ServiceCard_RenderList_Each (Name, className, type, key, typeService) {
        if (type == 'add') {
            let result = '';
            result = '<div class="row w-100">'
                + '<div class="col-12 col-sm-1 text-center"><span class="text-dark fw-bold text-sm mb-0 vt-number-order"></span></div>'
                + '<div class="col-12 col-sm-6"><span class="text-dark fw-bold text-sm mb-0">' + Name + '</span></div>'
                + '<div class="col-12 col-sm-5"><span class="text-dark fw-bold text-sm mb-0">' + typeService + '</span></div>'
                + '</div>';
            return result;
        }
        else {
            let _type = (type == 'add') ? '<i class="fas fa-arrow-right text-xs ms-1 text-primary " aria-hidden="true" ></i>' : '<i class="ni ni-bold-left text-primary p-0"></i>';
            let result = '';
            result = '<div class="row w-100">'
                + '<div class="col-12 col-sm-2 text-center"><span class="text-dark fw-bold text-sm mb-0 vt-number-order"></span></div>'
                + '<div class="col-12 col-sm-10"><span class="text-dark fw-bold text-sm mb-0">' + Name + '</span></div>'
                + '</div>'
                + '<div>' + Render_Button_Grid(['<button class="' + className + ' buttonGrid p-0 SCShowHandle" style="opacity: 0.25;">' + _type + '</button>']) + '</div>';
            return result;
        }
    }
    function ServiceCard_RenderList_Choose (data, id) {
        let str = '';
        for ([key, value] of Object.entries(data)) {
            if (value.Choose == "1") {
                str = str + '<li class="vt-number py-3 d-flex list-group-item text-dark text-sm rpdetail_sheet border-dashed border-secondary border-top-0 border-end-0 border-start-0" role="row" data-id="' + value.ID + '" data-key="' + key + '">' + ServiceCard_RenderList_Each(value.Name, 'btnRemoveService', 'delete', key, value.TypeName) + '</li>';
            }
        }
        $('#' + id).html(str);
        $('#' + id).prepend(`<li class="border-0 d-flex pb-3 pt-3" style="padding: 0.5rem 1rem; color: inherit; background-color: #fff; border-bottom: 1px solid rgba(74, 74, 74, 0.5) !important;">
            <div class="row w-100">
                <div class="col-12 col-sm-2 text-center">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["#"]</span>
                </div>
                <div class="col-12 col-sm-8">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["Tên DV/SP"]</span>
                </div>
            </div>
        </li>`)

    }
    function ServiceCard_Count_Price () {
        let type = Number($('#SC_AmountPerTreatSelect').dropdown('get value')) ? Number($('#SC_AmountPerTreatSelect').dropdown('get value')) : 0;
        let value = Number($('#SC_AmountPerTreat').val()) ? Number($('#SC_AmountPerTreat').val()) : 0;
        let price = Number($('#SC_Price_Sale').val()) ? Number($('#SC_Price_Sale').val()) : 0;
        if ((type == 1 && (value > 100 || value < 0)) || (type == 2 && (value > price))) {
            $('#SC_AmountPerTreat').css('background-color', 'rgb(255 216 216)');
            $('#textShowMessage').html('Vượt khoảng giảm được cho phép');
        }
        else {
            $('#SC_AmountPerTreat').css('background-color', 'white');
            $('#textShowMessage').html('')
        }
    }
    //#endregion


    //#region Event
    function ServiceCard_FilterService () {
        let SC_filterText = document.getElementById("SC_Input_Service");
        //#region search
        SC_filterText.addEventListener("keyup", function (event) {
            let SC_ServiceText = xoa_dau($('#SC_Input_Service').val().toLowerCase().trim());

            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');

            $("#SC_Input_ServiceDiv .fa-search").hide();
            $("#SC_Input_ServiceDiv .spinner-border").show();

            clearTimeout(SC_TimerOnchange)

            SC_TimerOnchange = setTimeout(function (e) {
                ServiceCard_Search( SC_ServiceText)
            }, 200)
        });
        $("#SC_Input_ServiceDiv").on('click', '.btn_clear', function (e) {
            $('#SC_Input_Service').val('');
            $(".btn_clear").addClass('opacity-1');
            ServiceCard_Search('');
        });
    }
    function ServiceCard_Search (SearchText) {
        if (SearchText == '') {
            $("#SC_UserService .service_filter").each(function () {
                $(this).removeClass("d-none");
            })
        }
        else {
            for ([key, value] of Object.entries(DataService)) {
                let ServiceName = xoa_dau((value.Name).toLowerCase());
                let ServiceType = xoa_dau((value.TypeName).toLowerCase());
                if (ServiceName.includes(SearchText) || ServiceType.includes(SearchText)) {
                    $('.service_filter[data-key="' + key + '"]').removeClass("d-none");
                }
                else {
                    $('.service_filter[data-key="' + key + '"]').addClass("d-none");
                }
            }
        }
        $("#SC_Input_ServiceDiv .fa-search").show();
        $("#SC_Input_ServiceDiv .spinner-border").hide();
        ColorSearchFilterText(SearchText, "service_filter");
    }

    function ServiceCard_prepend () {
        if (SC_Flprepend == 0) {
            SC_Flprepend = 1;
            $('#SCUserServiceChoose').prepend(`<li class="border-0 d-flex pb-3 pt-3" style="padding: 0.5rem 1rem; color: inherit; background-color: #fff; border-bottom: 1px solid rgba(74, 74, 74, 0.5) !important;">

            <div class="row w-100">
                <div class="col-12 col-sm-2 text-center">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["#"]</span>
                </div>
                <div class="col-12 col-sm-8">
                    <span class="text-dark fw-bold text-sm mb-0">@Local["Tên DV/SP"]</span>
                </div>
            </div>
        </li>`)
        }
    }

    function ServiceCard_Event() {
        $('#SC_is_expiry_date').change(function () {
            if ($(this).is(':checked')) {
                $('#SC_ExpiredDate').prop('disabled', false);
                $('#SC_ExpiredDate').val(0);
            } else {
                $('#SC_ExpiredDate').css('background-color', '');
                $('#SC_ExpiredDate').prop('disabled', true);
                $('#SC_ExpiredDate').val(0);
            }
        })
        $('#SC_UsingAllService').change(function () {
            SC_Flprepend = 0;
            if ($(this).is(':checked')) {
                $('#div_service_using_card').addClass('d-none');
                $('#SC_CheckBoxAllService').css('background-color', '');
            } else {
                for ([key, value] of Object.entries(DataService)) {
                    value.Choose = 0;
                }
                $('#SCUserServiceChoose').html('');
                ServiceCard_RenderList(DataService, 'SC_UserService');
                $('#div_service_using_card').removeClass('d-none');
            }
        });
        $('#SC_IssueCard').change(function () {

            if ($(this).is(':checked')) {
                $('#div_cardissue').removeClass('d-none');
            } else {
                $('#div_cardissue').addClass('d-none');
            }
        })
        $('#SC_card_is_times_used').change(function () {
            if ($(this).is(':checked')) {
                $('#SC_card_times_used').prop('disabled', false);
                $('#SC_card_times_used').val(0);
            } else {
                $('#SC_card_times_used').css('background-color', '');
                $('#SC_card_times_used').prop('disabled', true);
                $('#SC_card_times_used').val(0);
            }
        })
        $('#SC_UserService').on('click', '.btnChooseService', function () {
            let key = $(this).closest('li').attr('data-key');
            let id = $(this).closest('li').attr('data-id');
            DataService[key].Choose = 1;
            $(this).closest('li').remove();
            let str = '<li role="row" class="vt-number py-3 d-flex list-group-item text-dark text-sm rpdetail_sheet border-dashed border-secondary border-top-0 border-end-0 border-start-0" data-key="' + key + '" data-id="' + id + '">' + ServiceCard_RenderList_Each(DataService[key].Name, 'btnRemoveService', 'delete', key, value.TypeName) + '</li>';
            $('#SCUserServiceChoose').append(str);
            ServiceCard_prepend();
        });

        $('#SCUserServiceChoose').on('click', '.btnRemoveService', function () {
            let id = $(this).closest('li').attr('data-id');
            let key = $(this).closest('li').attr('data-key');
            DataService[key].Choose = 0;
            $(this).closest('li').remove();
            let str = '<li class="vt-number py-3 btnChooseService service_filter d-flex list-group-item text-dark text-sm rpdetail_sheet border-dashed border-secondary border-top-0 border-end-0 border-start-0" role="row" data-key="' + key + '" data-id="' + id + '" data-type="' + DataService[key].Type + '">' + ServiceCard_RenderList_Each(DataService[key].Name, 'btnChooseService', 'add', key, value.TypeName) + '</li>';
            $('#SC_UserService').append(str);
        });

        $('#SCUserServiceChoose').on('mouseenter', 'li', function () {
            $(this).find(".SCShowHandle").css({"opacity": "1"});
        }).on('mouseleave', 'li', function () {
            $(this).find(".SCShowHandle").css({"opacity": "0.25"});
        });
    }
    function ServiceCard_ShowError (value, type) {
        let TypeIDNoti = '';
        switch (type) {
            case 1:
                TypeIDNoti = 'SC_ExpiredDate';
                break;
            case 2:
                TypeIDNoti = 'SC_card_times_used';
                break;
            case 3:
                TypeIDNoti = 'SC_CheckBoxAllService';
                break;
        }
        if (value == 1) {
            $('#' + TypeIDNoti).css('background-color', 'rgb(255 216 216)');
        }
        else {
            $('#' + TypeIDNoti).css('background-color', 'white');
        }
    }
    //#endregion

    function ServiceCardDelete (id) {
        const promise = notiConfirm();
        promise.then(function () {ServiceCardExecuteDelete(id);}, function () { });
    }
    function ServiceCardExecuteDelete (id) {
        AjaxLoad(url = "/Card/Setting/ServiceCardDetail/?handler=DeleteItem"
            , data = {id: id}, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    let row = $('#ServiceCard_' + id)
                    if (row.length != 0) {
                        row.remove();
                    }
                    SC_Load(id);
                    SCD_CloseDetail();
                } else {
                    notiError_SW();
                }
            });
    }

</script>
<script>js_require('/js/comon/initialize_setting.js')</script>
<script>js_require('/js/main.js')</script>
<script>js_require_notasync('/js/customjs/custom-validation.js')</script>
<style>
    .list-group > .vt-number {
        counter-increment: vt-num-sections;
    }

    .vt-number-order:after {
        content: counter(vt-num-sections);
    }
</style>