@page
@model MLunarCoffee.Pages.Customer.ScheduleList_ScheduleModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div id="divListAppointment">                
                <div class=" pb-0">
                    <div class="d-lg-flex align-items-center">
                        <div class="ms-auto my-auto d-lg-flex align-items-center">
                            <div class="form-check form-check-inline mt-n2 _tab_control_" data-tab="cust_schedule_delete" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Bao gồm lịch hẹn đã xóa"]">
                                <input id="ScheduleAll" class="form-check-input pr-2" type="checkbox">
                                <label class="custom-control-label" for="ScheduleAll">@Local["Tất cả lịch hẹn"]</label>
                            </div>
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm mt-1 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                    @Local["Xem thêm"]
                                </button>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="doctor" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Bác sĩ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="PerCreate" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Người tạo"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="Modified" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Người sửa"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="cancel" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Lý do hủy"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="typedetail" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Loại chi tiết"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="dow" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ngày trong tuần"]</p>
                                        </li>
 
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="StatusHistory" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Lịch sử trạng thái"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi nhánh"]</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="m-0 mobile-responsive">
                        <div id="App_WattingDiv" class="waitingdiv text-center" style="display:none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="ContentScheduler" class="table vt-table mb-0" id="dtContentScheduler">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="max-width: 50px;">#</th>
                                    <th data-name="dow" style="max-width: 70px;">@Local["Ngày trong tuần"]</th>
                                    <th style="max-width: 100px;">@Local["Ngày hẹn"]</th>
                                    <th data-name="doctor">@Local["Bác sĩ"]</th>
                                    <th>@Local["Nội dung"]</th>
                                    <th data-name="branch">@Local["Chi nhánh"]</th>
                                    <th>@Local["Loại"]</th>
                                    <th data-name="typedetail">@Local["Chi tiết"]</th>
                                    <th>@Local["Trạng thái"]</th>
                                    <th data-name="cancel">@Local["Lý do hủy"]</th>
                                    <th data-name="PerCreate">@Local["Người tạo"]</th>
                                    <th data-name="Modified">@Local["Người sửa"]</th>
                                    <th class="no-sort" data-name="StatusHistory">@Local["Lịch sử trạng thái"]</th>
                                    <th class="no-sort">#</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentSchedulerBody">
                            </tbody>
                        </table>
                        <button id="btn_LoadMore_Schedule_List" class="btn btnsysmore btn-secondary w-100 p-1"
                                onclick="LoadScheduleAjax(1)" style="display: none;">
                            @Local["Xem thêm"]
                            </button>
                    </div>
                </div>
            </div>
            <div class="card" id="divHistoryAppointment" style="display: none">
                <div class=" pb-0">
                    <div class="d-lg-flex">
                        <div class="ms-auto my-auto mt-1">
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm mt-1" onclick="HistoryAppointment_Close()">@Local["Đóng"]</button>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-body pt-2 ">
                    <div class="m-0 my-3 mobile-responsive">
                        <table class="table vt-table mb-0" id="dtContentHistoryAppointment">
                            <thead>
                                <tr>
                                    <th style="width: 70px;">#</th>
                                    <th style="min-width: 90px;">@Local["Người sửa"]</th>
                                    <th style="width: 250px;">@Local["Ngày"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentHistoryAppointmentBody">
                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
    var ser_SchedulerCustomerID = ("@Model._SchedulerCustomerID");
    var ser_DataSCheduler = [];
    var ser_SchlistSeft = Number(@Model._SchedulerSeft);
    var schedule_list_beginid = 0;
    var DataEmployee, DataServiceCare, DataService;
    let shtable;
    let ser_AppCode = '';
    var IsDelete = 0;
    var ScheduleList_datadow = ["@Local["Chủ nhật"]", "@Local["Thứ hai"]", "@Local["Thứ ba"]", "@Local["Thứ tư"]", "@Local["Thứ năm"]", "@Local["Thứ sáu"]", "@Local["Thứ bảy"]"];
    $(document).ready(function() {
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee, _Session_Service, _Session_ServiceCare]
            , function(data) {
                DataEmployee = data[0];
                DataService = data[1];
                DataServiceCare = data[2];
                LoadScheduleAjax(0);
            })

        shtable = $("#dtContentScheduler").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        $('#dtContentScheduler tbody').on('click', '.buttonEditClass', function() {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            EditScheduleList(ID, ser_SchedulerCustomerID);
        });
        $('#dtContentScheduler tbody').on('click', '.buttonStatusHistoryClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            StatusHistoryScheduleList(ID);
        });
        $('#dtContentScheduler tbody').on('click', '.buttonCancelClass', function() {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            CancelAppointment(ID);
        });
        $('#dtContentScheduler tbody').on('click', '.buttonDeleteClass', function() {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteScheduleList(ID)
        });
        $('#dtContentScheduler tbody').on('click', '.btnSendSms', function() {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Sms/SmsDetail?TypeCare=" + "1" + "&CustomerID=" + ser_MainCustomerID + "&AppID=" + ID + "&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
        });
        $('#dtContentScheduler tbody').on('click', '.btnSendMail', function() {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            $("#MainSendMail_Content").empty();
            $("#MainSendMail_Content").load('/Mail/MailDetail?CustomerID=' + ser_MainCustomerID + '&AppID=' + ID + '&ver=' + versionofWebApplication,
                function() {
                    $("#MainSendMail").addClass('active');
                }
            );
        });
        $('#dtContentScheduler tbody').on('click', '.btnPrint', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let Code = $(this).parent().attr('value');
            syslog_cutapp('p', Code, ser_SchedulerCustomerID, '')
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load('/Print/print?Type=cusstomer_appointment&DetailID=' + ID);
            $('#DetailModal').modal('show');
        });
        $('#divListAppointment').on('click', '#ScheduleAll', function () {
            IsDelete = IsDelete == 1 ? 0 : 1;
            LoadScheduleAjax(0)
        });

        $('#dtContentScheduler').tablesort();
        Checking_TabControl_Permission();
    });


    function LoadScheduleAjax(isloadMore) {
        if (isloadMore != 1) {
            schedule_list_beginid = 0;
            ser_DataSCheduler = [];
            $("#dtContentSchedulerBody").empty();
        }
        AjaxLoad(url = "/Customer/ScheduleList_Schedule/?handler=Loadata"
            , data = {
                'CustomerID': ser_SchedulerCustomerID,
                'Limit': 10,
                'BeginID': schedule_list_beginid,
                'IsDelete': IsDelete,
            }
            , async = true
            , error = function() { notiError_SW() }
            , success = function(result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    ser_DataSCheduler = ser_DataSCheduler.concat(data);
                    RenderTableScheduler(ser_DataSCheduler, 'dtContentSchedulerBody');
                    shtable.Refresh();
                    if (data.length > 0) {
                        schedule_list_beginid = data[data.length - 1].DateFromNumber;
                        $('#btn_LoadMore_Schedule_List').show();
                        $('#dtContentScheduler').show();

                    }
                    else {
                        if (isloadMore == 0) {
                            $('#dtContentScheduler').hide();
                            $('#btn_LoadMore_Schedule_List').hide();

                        }
                        else {
                            $('#btn_LoadMore_Schedule_List').hide();
                        }
                    }
                }
                else {
                    $('#btn_LoadMore_Schedule_List').hide();
                }
            }
            , sender = null
            , before = function (e) {
                $("#App_WattingDiv").show();

            }
            , complete = function (e) {
                $("#App_WattingDiv").hide();

            }
        );

    }

    function RenderTableScheduler(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let contentcare = '';
                    let _typename = "", _statusname = "", _typesubname = "", _cancel = "";
                    _typesubname = item.ScheduleTypeColorCode != '' ? `<span class="badge fw-bold" style="background:${item.ScheduleTypeColorCode}">${item.ScheduleTypeName}</span>` : ('<div class="font-weight-bold">' + item.ScheduleTypeName + '</div>');
                    contentcare = (Number(item.Type) == 1)
                        ? Fun_GetString_ByToken(DataServiceCare, item.ServiceCare)
                        : Fun_GetString_ByToken(DataService, item.ServiceTreat);
                    _typename = '<div class="text-sm">' + (Outlang[item.TypeNameLangKey] ?? item.TypeName) + '</div>'
                    _statusname = '<span class="badge me-2 text-xxs" style="background-color: ' + item.ColorCode + '">'
                        + (author_get("UserLang") == 'en' ? item.StatusNameLangOther : item.StatusName)
                        + '</span>';
                    if (item.IsCancel != 0) {
                        _cancel = '<span class="badge bg-gradient-danger">' + item.ReasonName + '</span>';
                        _statusname = _statusname + '<span class="badge bg-gradient-danger">@Local["Đã hủy"]</span>';
                    }
                    let ColorBorderType = item.TypeID == 1
                        ? (item.OptionlColor != "" ? item.OptionlColor : '#0f7402')
                        : (item.OptionlColor != "" ? item.OptionlColor : '#2196f3')
                    ColorBorderType = item.IsCancel == 0 ? ColorBorderType : '#ea0606';
                    ColorBorderType = item.IsDelete == 0 ? ColorBorderType : '#eeeeee';                    
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td style="max-width: 70px;" data-name="dow">' + ScheduleList_datadow[new Date(item.Date_From).getDay()]  + '</td>'
                        + '<td style="max-width: 100px;">'
                        + '<div class="text-center ' + `${(item.IsCancel == 0 && item.IsDelete == 0) ? "cursor-pointer buttonEditClass" : ""}">`
                        + '<span class="text-xs font-weight-bold mb-0 text-primary border-bottom border-primary">'
                        + GetDateTime_String_HHMM(item.Date_From) + ' - ' + GetDateTime_String_HHMM(item.Date_To)
                        + '</span>'
                        + '<h6 class="text-sm mb-0">' + ConvertDateTimeUTC_DMY(item.Date_From) + '</h6> '
                        + '</div>'
                        + '</td>'
                        + '<td data-name="doctor">' + RenderTableScheduler_Doctor(item.DoctorID) + '</td>'
                        + '<td>'
                        + '<span class="content_line_clamp">' + Remove_Char_Tiny_Useless(item.Content) + '</span>'
                        + '<span class="d-block">' + contentcare + '</span>'
                        + '</td>'
                        + '<td data-name="branch">' + item.Branch + '</td>'
                        + '<td>' + _typename + '</td>'
                        + '<td data-name="typedetail">' + _typesubname + '</td>'
                        + '<td>' + _statusname + '</td>'
                        + '<td data-name="cancel">' + _cancel + '</td>'
                        + '<td data-name="PerCreate">' + RenderTableScheduler_LastEditor(item.CreatedPer, item.CreatedDate) + '</td>'
                        + '<td data-name="Modified">' + RenderTableScheduler_LastEditor(item.ModifiedPer, item.ModifiedDate) + '</td>'
                        + '<td data-name="StatusHistory" >'
                        + '<div class="text-center">'
                        + '<button title="@Local["Trạng thái lịch sử"]" class="buttonGrid" data-id="' + id + '"><i class="buttonStatusHistoryClass fas fa-history"></i></button>'
                        + '</div>'
                        + '</td>'
                        + '<td>'
                        + '<div class="text-nowrap">'
                        + RenderTableScheduler_Button(item.ID, item.Code, 1, item.EditButton, item.DeleteButton
                            , item.CancelAppoint, item.IsCancel, item.Per_Same_Date, item.PerSameUser, item.Per_Passing_Date,item.IsDelete)
                        + '</div>'
                        + '</td>'
                    let rgbaCol = item.IsDelete == 0
                    ? 'rgba(' + parseInt(item.ColorCode.slice(-6, -4), 16)
                        + ',' + parseInt(item.ColorCode.slice(-4, -2), 16)
                        + ',' + parseInt(item.ColorCode.slice(-2), 16)
                        + ',0.3)'
                    : '#eeeeee';
                    stringContent = stringContent + '<tr role="row" class="vt-number border-5 border-bottom-0 border-top-0 border-end-0 border-3 " style="border-color: ' + ColorBorderType +' !important;background-color:' + rgbaCol + '">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
            Checking_TabControl_Permission();
            ToolPopper();

        }
        $('.hoverpopup,.buttonGrid').popup({
            transition: "scale up",
            position: "left center"
        });
    }
    function RenderTableScheduler_LastEditor(PercentID, Date) {
        let result = '';
        if (Number(PercentID) != 0) {
            let obj = Fun_GetObject_ByID(DataEmployee, PercentID);
            if (obj != null) {
                result = '<div class="d-flex ms-2">'
                    + '<div class="icon icon-shape icon-sm me-2 text-center">'
                    + '<img class="avatar avatar-xs mt-2" src="' + obj.Avatar + '" alt="label-image">'
                    + '</div><div class="d-flex flex-column">'
                    + '<h6 class="text-dark text-sm mb-0">' + obj.Name + '</h6><span class="text-xs">' + ConvertDateTimeUTC_DMYHM(ConvertToDateRemove1900(Date)) + '</span>'
                    + '</div>'
                    + '</div>'

            }
        }
        return result;
    }
    function RenderTableScheduler_Doctor(DoctorID) {
        let result = '';
        if (Number(DoctorID) != 0) {
            let obj = Fun_GetObject_ByID(DataEmployee, DoctorID);
            if (obj != null) {
                result = '<div class="d-inline"><img class="avatar avatar-xs me-2" src="' + obj.Avatar + '" alt="label-image" /><span>' + obj.Name + '</span></div>';

            }
        }
        return result;
    }
    function RenderTableScheduler_Button(id, code, printbutton, editbutton, deletebutton, CancelAppoint, IsCancel,PerSameDate,PerSameUser,PerPassing,IsDelete) {
        let buttons = [];
        if(IsCancel == 0){
            buttons.push('<button value="' + code + '" title="@Local["In"]" class="buttonGrid" data-id="' + id + '"><i  class="btnPrint vtt-icon vttech-icon-print"></i></button>');
            buttons.push('<button title="@Local["Gửi sms"]" class="buttonGrid" data-id="' + id + '"><i  class="btnSendSms fas fa-sms"></i></button>');
            buttons.push('<button title="@Local["Gửi email"]" class="buttonGrid" data-id="' + id + '"><i  class="btnSendMail fas fa-envelope"></i></button>');
        }
        if (CancelAppoint === 1 && IsCancel == 0) {
            buttons.push('<button title="@Local["Hủy lịch"]" class="buttonGrid" data-id="' + id + '"><i class="buttonCancelClass vtt-icon vttech-icon-cancel-app"></i></button>');
        }
        if (editbutton) {
            buttons.push('<button title="@Local["Sửa"]" class="buttonGrid" data-id="' + id + '"><i class="buttonEditClass vtt-icon vttech-icon-edit"></i></button>');
        }
        if (deletebutton) {

            if (ser_SchlistSeft == 0 || PerSameUser==1) {
                buttons.push('<button title="@Local["Xóa"]" class="buttonGrid" data-id="' + id + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>');
            }
            else {

                buttons.push('<button data-tab="appde_allowedit" title="@Local["Xóa"]" class="buttonGrid _tab_control_" data-id="' + id + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>');
            }

        }
        if(IsDelete == 1){
            buttons = [];
        }
        return Render_Button_Grid(buttons)
    }
    function DeleteScheduleList(id) {
        const promise = notiConfirm();
        promise.then(function() { ExecuteDeleteSchedule(id); }, function() { });
    }
    function ExecuteDeleteSchedule(id) {
        AjaxLoad(url = "/Customer/ScheduleList_Schedule/?handler=DeleteItem"
            , data = { 'id': id }
            , async = true
            , error = function() { notiError_SW() }
            , success = function(result) {
                if (result != "0") {
                    notiSuccess();
                    syslog_cutapp('d', result, ser_SchedulerCustomerID, '')
                    LoadScheduleAjax(0);
                    if (typeof LoadCustomerScheduleNext !== 'undefined' && $.isFunction(LoadCustomerScheduleNext)) {
                        LoadCustomerScheduleNext();
                    }
                    if (typeof idCurrentAppointment != 'undefined' && idCurrentAppointment == id) {
                        $("#AppointmentExtra").hide();
                    }
                } else {
                    notiError_SW();
                }
            }
        );
    }


    function HistoryAppointment_Close() {
        $("#divHistoryAppointment").hide();
        $("#divListAppointment").show();
    }

    function EditScheduleList(id, customerid) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Appointment/AppointmentDetail?CurrentID=" + id + "&CustomerID=" + customerid + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
    }

    function StatusHistoryScheduleList(id) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Customer/Schedule/ScheduleStatusHistory?ScheduleID=" + id + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
    }

    function CancelAppointment(ID, StatusID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Appointment/AppointmentCancelDetail?CurrentID=" + ID + "&StatusID=" + StatusID);
        $('#DetailModal').modal('show');
        return false;
    }
</script>
<script>js_require('/js/main.js');</script>
<style>

</style>
