@page
@model MLunarCoffee.Pages.Customer.Service.TabList.TabList_MedicineModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="container-fluid p-0">
    <div class="row">
        <div class="col-12">
            <div class="card" id="Div_Tab_List_Medicine_Master">
                <div class="card-header pb-0 pt-0">
                    <div class="d-lg-flex">
                        <ul class="nav nav-pills p-1 bg-transparent permissionlist" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer  " data-bs-toggle="collapse" href="#TLM_infodes">
                                    <i class="text-gradient  text-lg text-primary fas fa-info-circle"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="ms-auto my-auto my-1">
                            <button class="btn bg-gradient-primary btn-sm my-1 _tab_control_" data-tab="add_tab_cust_medicine"
                                    onclick="Tab_List_Add_New_Medicine()">
                                @Local["Thêm mới"]
                            </button>
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm my-1 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                    @Local["Xem thêm"]
                                </button>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="detailPres" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi tiết"] (@Local["Kê toa"])</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ghi chú"]</p>
                                        </li>

                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="createdname" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thông tin tạo"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="modifiedname" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chỉnh sửa"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="servicesource" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nguồn dịch vụ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi nhánh"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="subcli" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Cận lâm sàng"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="diagnosis" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chẩn đoán"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="doccreated" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Bác sĩ kê toa"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="seller" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Bán thuốc"]</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="TLM_infodes" class="border-dashed border-1 border-secondary border-radius-md p-3 text-sm text-dark ms-1 mb-2 mt-2 multi-collapse collapse">
                        <h6 class="mb-0">@Local["Danh sách đơn thuốc"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết danh sách đơn thuốc"]</p>
                    </div>
                </div>
                <div class="card-body pt-2 position-relative">

                    <div class="m-0 my-1 mobile-responsive">
                        <div id="tab_list_medicine_waiting" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="ContentPrescriptionMedicine" class="table vt-table mb-0" id="dtContentPrescriptionMedicine">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width: 25px;">#</th>
                                    <th>@Local["Đơn thuốc"]</th>
                                    <th>@Local["Thành tiền"]</th>
                                    <th style="min-width: 230px;">@Local["Chi tiết"] (@Local["Bán thuốc"])</th>
                                    <th style="min-width: 230px;" data-name="detailPres">@Local["Chi tiết"] (@Local["Kê toa"])</th>
                                    <th data-name="doccreated" style="width: 230px;">@Local["Bác sĩ kê toa"]</th>
                                    <th style="min-width: 230px;" data-name="seller">@Local["Bán thuốc"]</th>
                                    <th data-name="branch">@Local["Chi nhánh"]</th>
                                    <th data-name="subcli" style="width: 230px;">@Local["Cận lâm sàng"]</th>
                                    <th data-name="diagnosis" style="width: 230px;">@Local["Chẩn đoán"]</th>
                                    <th data-name="note" style="width: 230px;">@Local["Ghi chú"]</th>
                                    <th data-name="createdname">@Local["Thông tin tạo"]</th>
                                    <th data-name="modifiedname">@Local["Chỉnh sửa"]</th>
                                    <th data-name="servicesource">@Local["Nguồn dịch vụ"]</th>
                                    <th style="width: 60px;">@Local["Xử lý"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentPrescriptionMedicineBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="TLM_btnloadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" style="pointer-events: auto;" onclick="event.preventDefault(); return Tab_List_Customer_Medicine(0, 1);">
                        @Local["Xem thêm"]
                    </button>
                </div>
            </div>
            <div id="Div_Tab_List_Medicine_Detail">
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    let shtable;
    var DataUser;
    let TLM_data;
    let TLM_limit = 100, TLM_beginID = 0;
    let TLM_isDoneLoadMore = false;
    $(document).ready(function () {
        shtable = $("#dtContentPrescriptionMedicine").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                Tab_List_Customer_Medicine(0, 0);
            })
    });

    function Medicine_List_Event() {

        $('#dtContentPrescriptionMedicine tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].children[0].innerHTML);
            Tab_List_Delete_Medicine(ID);
        });

        $('#dtContentPrescriptionMedicine tbody').on('click', '.buttonViewClass', function () {
            let ID = Number($(this).closest('tr')[0].children[0].innerHTML);
            Tab_List_View_Medicine(ID);
        });

        $('#dtContentPrescriptionMedicine tbody').on('click', '.buttonPrintClass', function () {

            let ID = Number($(this).closest('tr')[0].children[0].innerHTML);
            let code = $(this).attr('data-code');
            syslog_cutpaid('p', code, ser_MainCustomerID);
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load('/Print/print?Type=prescription&DetailID=' + ID);
            $('#DetailModal').modal('show');
        });

    }

    function Medicine_CloseDetail() {
        $("#Div_Tab_List_Medicine_Detail").empty();
        $("#Div_Tab_List_Medicine_Master").show();
        $("#Div_Tab_List_Medicine_Detail").hide();
    }

    // #region // Load Render

    function Tab_List_Customer_Medicine(TLM_currentID = 0, TLM_isLoadMore = 0) {
        if (TLM_currentID == 0 && TLM_isLoadMore == 0) {
            TLM_data = [];
            TLM_beginID = 0;
            TLM_isDoneLoadMore = false;
            $('#dtContentPrescriptionMedicineBody').html('');
        }

        AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine/?handler=LoadataPrescriptionMedicine"
            , data =
            {
                'CustomerID': ser_MainCustomerID
                , 'id': TLM_currentID
                , 'limit': TLM_limit
                , 'beginID': TLM_beginID
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "[]") {
                    let datas = JSON.parse(result);
                    let data = datas.Table;
                    let dataCardUsing = datas.Table1;
                    if (TLM_currentID == 0) {
                        TLM_data = TLM_data.concat(data);
                        TLM_beginID = data[data.length - 1].ID;
                        data = data.sort((a, b) => {
                            return Number(b.NumCreated) - Number(a.NumCreated)
                        });
                        Render_Tab_List_Medicine(data, dataCardUsing, 'dtContentPrescriptionMedicineBody');
                    }
                    else {
                        if (data && data.length != 0) {
                            if ($('#TLM_rowContent_' + TLM_currentID).length > 0) {
                                TLM_data = TLM_data.reduce((pre, arr) => {
                                    if (arr.ID == data[0].ID) arr = data[0];
                                    pre.push(arr);
                                    return pre;
                                }, []);
                                $('#TLM_rowContent_' + TLM_currentID).replaceWith(TLM_RenderEach(data[0], dataCardUsing));
                                Medicine_List_Event();
                                Checking_TabControl_Permission();
                            }
                            else {
                                if (TLM_isDoneLoadMore) {
                                    TLM_data.push(data[0]);
                                    $('#dtContentPrescriptionMedicineBody').prepend(TLM_RenderEach(data[0], dataCardUsing));
                                    Medicine_List_Event();
                                    Checking_TabControl_Permission();
                                }
                                else {
                                    Tab_List_Customer_Medicine(0, 0);
                                }
                            }
                        }
                        else {
                            if ($('#TLM_rowContent_' + TLM_currentID).length > 0) {
                                TLM_data = TLM_data.filter(word => {
                                    return word.ID != TLM_currentID
                                })
                                $('#TLM_rowContent_' + TLM_currentID).remove();
                            }
                        }
                    }
                }
                else if (result == "[]") {
                    if (TLM_isLoadMore == 1) {
                        $("#TLM_btnloadMore").hide();
                        TLM_isDoneLoadMore = true;
                    }
                    else {
                        if (TLM_currentID != 0) {
                            if ($('#TLM_rowContent_' + TLM_currentID).length > 0) {
                                TLM_data = TLM_data.filter(word => {
                                    return word.ID != TLM_currentID
                                })
                                $('#TLM_rowContent_' + TLM_currentID).remove();
                            }
                        }
                        else {

                        }
                    }
                }
                else {
                    notiError_SW();
                }
                shtable.Refresh();
            }
            , before = function () {
                $("#tab_list_medicine_waiting").show();
            }
            , complete = function (e) {
                $("#tab_list_medicine_waiting").hide();
            });
    }

    async function Render_Tab_List_Medicine(data, datadetail, id) {
        new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = TLM_RenderEach(item, datadetail);
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                    Medicine_List_Event();
                    shtable.Refresh();
                    ToolPopper();
                    Checking_TabControl_Permission();
                }
            }
            resolve();
        })
    }

    function TLM_RenderEach(item, datadetail) {
        try {
            let infoMedicine = Render_Tab_List_Medicine_Detail(item.ID, datadetail);
            let infoPriceMedicine = Render_Tab_List_Medicine_Price(item.PriceRoot, item.DiscountAmount, item.PriceDiscounted);

            let tr = `
                          <td class="d-none">${item.ID}</td>
                          <td class="vt-number-order"></td>
                          <td>
                              <a class="buttonViewClass" href="#">${item.Code != '' ? `<span class="pe-3 fw-bold">${item.Code}</span>` : ``} <br> ${item.Name}</a>
                          </td>
                          <td>
                                  ${infoPriceMedicine}
                          </td>
                          <td>
                              ${infoMedicine.detailSale}
                          </td>
                          <td data-name="detailPres">
                                  ${infoMedicine.detailPres}
                          </td>
                            <td data-name="doccreated">
                                <span class="content_line_clamp">${Fun_GetName_ByID(DataEmployee, item.DocCreatedID)}</span>
                            </td>
                            <td data-name="seller">
                                <span class="content_line_clamp">${Fun_GetName_ByID(DataEmployee, item.SellerID)}</span>
                            </td>
                          <td data-name="branch">
                             <span class="content_line_clamp">${item.BranchName}</span>
                          </td>
                          <td data-name="subcli">
                                <span class="content_line_clamp">${item.Subclinical}</span>
                          </td>
                          <td data-name="diagnosis">
                              <span class="content_line_clamp">${item.Diagnosis}</span>
                          </td>
                          <td data-name="note">
                              <span class="content_line_clamp">${item.Note}</span>
                          </td>
                          <td data-name="createdname">
                             ${Render_Tab_List_Medicine_Created(item.Created_By, item.Created)}
                          </td>
                          <td data-name="modifiedname">
                             ${Render_Tab_List_Medicine_Created(item.Modified_By, item.Modified)}
                          </td>
                           <td data-name="servicesource">${item.Servicesource}</td>
                          <td>
                              ${Render_Tab_List_Medicine_Button(item.ID, item.Code)}
                          </td>`
            tr = `<tr id="TLM_rowContent_${item.ID}" role="row" class="vt-number CLS_clsRowContent cursor-pointer vt-number">${tr}</tr>`
            return tr;
        }
        catch (ex) {
            return '';
        }
    }

    function Render_Tab_List_Medicine_Created(id, date) {
        if (id == "0") return '';
        let obj = Fun_GetObject_ByID(DataUser, id);
        let name = (obj != null && obj.EmployeeName != undefined) ? obj.EmployeeName : 'unknown';
        let img = (obj != null && obj.Avatar != "") ? obj.Avatar : Master_Default_Pic;
        let result = '<div class="d-flex">'
            + '<div class="icon icon-shape icon-sm me-2   text-center">'
            + '<img class="avatar avatar-xs mt-2" src="' + img + '" alt="label-image">'
            + '</div>'
            + '<div class="d-flex flex-column">'
            + '<h6 class="text-dark text-sm mb-0">' + name + '</h6>'
            + '<span class="text-xs">' + GetDateTime_String_DMYHM(date) + '</span>'
            + '</div>'
            + '</div>';

        return result;

    }
    function Render_Tab_List_Medicine_Button(id, code) {
        let result = '';
        result = Render_Button_Grid(['<button class="buttonGrid" value="' + id + '"><i title="@Local["In"]" data-code="' + code + '" class="buttonPrintClass vtt-icon vttech-icon-print"></i></button>'])
        return result;
    }

    function Render_Tab_List_Medicine_Detail(id, dataDetail) {
        let detailSale = '';
        let detailPres = ''; 
        if (dataDetail && dataDetail.length > 0) {
            for (let i = 0; i < dataDetail.length; i++) {
                let item = dataDetail[i];
                if (item.CustPM == id) {
                    detailSale += item.MedicineName != '' ? `
                         <div class="ps-2 mb-0">
                            <p class="text-sm m-0">
                                <i class="vtt-icon vttech-icon-Arrow-rights text-success text-xxs"></i>
                                <span class="pe-2">${item.MedicineName}</span>
                                <span class="fw-bold"> ${item.Quantity}  ${item.UnitName} x ${formatNumber(item.Price)}</span>
                            </p>
                         </div>
                        ` : '';
                    detailPres += (item.PresProductID != -1) ? `
                         <div class="ps-2 mb-0">
                            <p class="text-sm m-0">
                                <i class="vtt-icon vttech-icon-Arrow-rights text-success text-xxs"></i>
                                <span class="pe-2">${item.PresMedicineName}</span>
                                <span class="fw-bold"> ${item.PresQuantity}  ${item.PresUnitName}</span>
                            </p>
                         </div>
                        ` : '';
                }
            }
        }
        return { detailSale, detailPres }
    }

    function Render_Tab_List_Medicine_Price(PriceRoot, DiscountAmount, PriceDiscounted) {
        let result = '';
        result = `
                <div class="border-0 p-2 bg-gray-100 border-radius-lg">
                    ${((DiscountAmount != 0)
                ? `
                           <div class="d-flex justify-content-between align-items-center"><span class="mt-1 text-sm">@Local["Giá tiền"]</span><span class="text-dark ms-4">${formatNumber(PriceRoot)}</span></div>
                           <div class="d-flex justify-content-between align-items-center"><span class="mt-1 text-sm">@Local["Giảm"]</span><span class="text-dark ms-4">${formatNumber(DiscountAmount)}</span></div>
                           <hr class="horizontal dark my-2">`
                : ``)
            }
                   <div class="d-flex justify-content-between align-items-center"><span class="mt-0 text-sm text-nowrap">@Local["Thành tiền"]</span><span class="text-dark font-weight-bold ms-4">${formatNumber(PriceDiscounted)}</span></div>
                </div>
            `
        return result;
    }

    // #endregion

    // #region // Execute

    function Tab_List_Add_New_Medicine() {
        $("#Div_Tab_List_Medicine_Detail").load("/Customer/Service/TabList/TabList_Medicine_Detail?CustomerID="
            + ser_MainCustomerID
            + "&ver=" + versionofWebApplication, () => {
                $("#Div_Tab_List_Medicine_Master").hide()
                $("#Div_Tab_List_Medicine_Detail").show();
            });
    }

    function Tab_List_Delete_Medicine(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteTab_List_Delete_Medicine(id); }, function () { });
    }

    function ExecuteTab_List_Delete_Medicine(id) {
        AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine/?handler=DeleteItemPrescriptionMedicine"
            , data = { 'id': id }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    syslog_cutmed('d', result, ser_MainCustomerID, '');
                    Tab_List_Customer_Medicine(id, 0);
                    if (typeof LoadCustomerPaymentInfo !== 'undefined' && $.isFunction(LoadCustomerPaymentInfo)) {
                        LoadCustomerPaymentInfo();
                    }
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function Tab_List_View_Medicine(ID) {
        $("#Div_Tab_List_Medicine_Detail").load("/Customer/Service/TabList/TabList_Medicine_Detail?Type=view&CustomerID="
            + ser_MainCustomerID + "&CurrentID="
            + ID + "&ver=" + versionofWebApplication, () => {
                $("#Div_Tab_List_Medicine_Master").hide();
                $("#Div_Tab_List_Medicine_Detail").show();
            });
    }
    // #endregion

</script>
<script>js_require('/js/main.js');</script>
