@page
@model MLunarCoffee.Pages.Customer.Service.TabList.TabList_Medicine_DetailModel
@{
    Layout = null;
}

<div class="container-fluid py-3 px-0 bodyViewEditMedic">
    <div class="row">
        <div class="col-12">
            <div class="card card-plain">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Đơn thuốc"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết đơn thuốc"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2">
                    <div class="row px-2 ">
                        <div class="col-12 col-lg-4 mt-2 px-1 ">
                            <div>
                                <label>@Local["Thuốc"]</label>
                                <div class="input-group" id="MedicDetail_Sort">
                                    <div class="input-group-text input-group-text px-2">
                                        <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                                        <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                                    </div>
                                    <input id="contentMedicineSearch" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                                    <span class="input-group-text"><i class="btn_clear fas fa-minus-circle"></i></span>
                                    <a id="TMD_sortMed" title="sort" class="input-group-text">
                                        <i class="text-lg fas fa-sort-alpha-down fa-sort-alpha-up" id="TMD_sortMedIcon"></i>
                                    </a>
                                </div>
                                <ul id="contentMedicine" class="list-group border-1 overflow-auto mt-2 rounded-1" style="max-height: calc(100vh - 200px); ">
                                </ul>
                            </div>
                        </div>
                        <div class="col-12 col-lg-8 mt-2 px-1">
                            <div class="mt-3 mx-3">
                                <div class="card-body px-3 pt-0 pb-3 bg-gray-100 rounded-2">
                                    <div class="pt-3 px-0 pb-0">
                                        <div class="d-lg-flex">
                                            <div class="col-auto my-auto">
                                                <div class="h-100">
                                                    <h6 class="fw-bold text-primary mb-0 text-sm">@Local["Toa thuốc mẫu"]</h6>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="align-items-center d-flex gap-3 overflow-auto mt-2">
                                        <div class="col-w-200">
                                            <div class="input-group" id="MedicTempDetail_Sort">
                                                <div class="input-group-text input-group-text px-2">
                                                    <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                                                    <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                                                </div>
                                                <input id="contentMedicineTempSearch" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                                                <span class="input-group-text"><i class="btn_clear fas fa-minus-circle"></i></span>
                                            </div>
                                        </div>
                                        <div class="flex-grow-1 overflow-auto">
                                            <ul id="premed_listsample" class="nav nav-pills p-2 bg-gray-100 rounded-1 treatplant flex-nowrap overflow-x d-flex px-0" style="scroll-snap-type: x mandatory;" role="tablist">
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <div class="pt-4 px-0 pb-0 mx-2">
                                        <div class="d-lg-flex">
                                            <div class="col-auto my-auto w-100">
                                                <div class="h-100 d-flex">
                                                    <h6 class="fw-bold text-primary mb-0 text-sm">@Local["Danh sách thuốc"]</h6>
                                                    <div id="Prescription_IsTimeNote" class="form-check form-switch ps-0 ms-auto">
                                                        <input class="form-check-input ms-auto" type="checkbox" id="Prescription_ckbIsTimeNote" checked="checked"
                                                               onchange="event.preventDefault(); Prescription_OnChangeTimeNote();">
                                                        <label class="form-check-label text-body ms-2 text-truncate mb-0" for="Prescription_ckbIsTimeNote">@Local["Ghi chú từng buổi"]</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="overflow-y " style="height: calc(50vh - 100px)">
                                        <ul class="list-group px-1 mt-3" id="ListMedicineDetailBody">
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="mx-3">
                                <div class="card card-plain bg-gray-100 rounded-2">
                                    <div class="h-100">
                                        <div class="pb-0">
                                            <div class="mx-3 mt-3 col-auto my-auto d-flex">
                                                <ul class="nav nav-pills nav-pills p-1 bg-transparent tabgeneral" role="tablist">
                                                    <li class="nav-item" role="presentation">
                                                        <a class="nav-link cursor-pointer active" data-bs-toggle="pill" data-bs-target="#TMD_genInfo" role="tab" aria-selected="true">
                                                            @Local["Thông tin chung"]
                                                        </a>
                                                    </li>
                                                    <li class="nav-item" role="presentation">
                                                        <a id="nav-link cursor-pointer" class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#TMD_genOther" role="tab">@Local["Khác"]</a>
                                                    </li>
                                                </ul>
                                                <div class="me-2 ms-auto mt-1 mt-3 my-auto" id="divPresIsExport" style="">
                                                    <div class="form-check">
                                                        <input class="form-check-input ms-auto" type="checkbox" id="PresIsExport" checked="checked">
                                                        <label class="form-check-label mb-0 ms-2" for="PresIsExport">Xuất thuốc</label>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <div class="card-body pt-2 form3" id="TMD_frmInfo">
                                            <div class="tab-content">
                                                <div class="tab-pane fade active show" id="TMD_genInfo" role="tabpanel">
                                                    <div class="row px-1">
                                                        <div class="field col-12 col-md-4 px-1 mt-2">
                                                            <label>@Local["Đơn thuốc"]<span class="mb-0 ms-1 text-secondary" id="TMD_IsHasSale"><i class="fas fa-caret-right"></i> @Local["Bán thuốc"]</span></label>
                                                            <input id="PresName" type="text" class="form-control" autocomplete="off" name="name" value="@Local["Đơn thuốc"]" />
                                                        </div>
                                                        <div class="field col-12 col-md-4 px-1 mt-2">
                                                            <label>@Local["Bác sĩ kê toa"]</label>
                                                            <div class="ui fluid search selection dropdown form-control" id="DocCreated">
                                                                <input type="hidden" name="" />
                                                                <i class="dropdown icon"></i>
                                                                <i class="remove icon"></i>
                                                                <input class="search" autocomplete="off" tabindex="0" />
                                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                                <div id="cbbDocCreated" class="menu" tabindex="-1"></div>
                                                            </div>
                                                        </div>
                                                        <div class="field col-12 col-md-4 px-1 mt-2 flex-grow-1">
                                                            <label>@Local["Ngày tạo"]</label>
                                                            <input id="Created" class="flatpickr form-control" type="text" placeholder="eg. @Local["Ngày tạo"]" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="tab-pane fade" id="TMD_genOther" role="tabpanel">
                                                    <div class="row px-1">
                                                        <div class="field col-12 col-md-4 px-1 mt-2">
                                                            <label>@Local["Bán thuốc"] (@Local["Nhân viên"])</label>
                                                            <div class="ui fluid search selection dropdown form-control" id="SellerID">
                                                                <input type="hidden" name="" />
                                                                <i class="dropdown icon"></i>
                                                                <i class="remove icon"></i>
                                                                <input class="search" autocomplete="off" tabindex="0" />
                                                                <div class="default text">eg .@Local["Bán thuốc"] (@Local["Nhân viên"])</div>
                                                                <div id="cbbSellerID" class="menu" tabindex="-1"></div>
                                                            </div>
                                                        </div>
                                                        <div class="field col-12 col-md-4 px-1 mt-2">
                                                            <label>@Local["Nguồn dịch vụ"]</label>
                                                            <div class="ui fluid search selection dropdown form-control" id="SourceService">
                                                                <input type="hidden" name="" />
                                                                <i class="dropdown icon"></i>
                                                                <i class="remove icon"></i>
                                                                <input class="search" autocomplete="off" tabindex="0" />
                                                                <div class="default text">eg .@Local["Nguồn dịch vụ"]</div>
                                                                <div id="cbbSourceService" class="menu" tabindex="-1"></div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row px-1" id="divPresIsExport" style="display: none;">
                                                <div class="field col-12 col-md-4 px-1 mt-2">
                                                    <div  class="form-check ps-0" >
                                                        <input class="form-check-input ms-auto" type="checkbox" id="PresIsExport" checked="checked">
                                                        <label class="form-check-label ms-2" for="PresIsExport">@Local["Xuất thuốc"]</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row px-1" id="TMD_PayInfo">
                                                <div class="field col-12 col-md-4 px-1 mt-2">
                                                    <label>@Local["Giá"]</label>
                                                    <input id="PresAmount" type="text" class="form-control disabled" autocomplete="off" disabled="disabled"
                                                           onkeyup="event.preventDefault(); Prescription_OnchangePriceDiscounted();"
                                                           onchange="event.preventDefault(); Prescription_OnchangePriceDiscounted();" />
                                                </div>
                                                <div class="field col-12 col-md-4 px-1 mt-2">
                                                    <label>@Local["Chiết khấu"]</label>
                                                    <div class="position-relative">
                                                        <input id="PresDiscount" class="border-right-0 form-control" placeholder="eg .@Local["Chiết khấu"]" type="text" onkeyup="event.preventDefault(); Prescription_OnchangePriceDiscounted();" onblur="event.preventDefault();Prescription_OnchangePriceDiscounted();" value="0" />
                                                        <div class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-5" id="PresDiscountAmountPer" onchange="return Prescription_OnchangePriceDiscounted(); " onblur="event.preventDefault();Prescription_OnchangePriceDiscounted();">
                                                            <input type="hidden" value="2">
                                                            <i class="dropdown icon"></i>
                                                            <input class="search" autocomplete="off" tabindex="0"><div class="text">VND</div>
                                                            <div class="menu transition hidden" tabindex="-1">
                                                                <div class="item" data-value="1">%</div>
                                                                <div class="item active selected" data-value="2">VND</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="field col-12 col-md-4 px-1 mt-2">
                                                    <label>@Local["Thành tiền"]</label>
                                                    <input id="PresPrice" type="text" class="form-control pe-none font-weight-bold" disabled="disabled" value="0">
                                                </div>
                                            </div>
                                            <div class="row px-1">
                                                <div class="field col-12 px-1 mt-2">
                                                    <label>@Local["Tình trạng"] ICD10</label>
                                                    <div class="ui fluid search selection dropdown multiple" id="TMD_StatusICD">
                                                        <input type="hidden" name="noskills" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Tình trạng"]</div>
                                                        <div id="cbbTMD_StatusICD" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                </div>                                                
                                            </div>
                                            <div class="row px-1">
                                                <div class="field col-12 col-xl-4 px-1 mt-2">
                                                    <label>@Local["Cận lâm sàng"]</label>
                                                    <textarea class="form-control" id="Subcli" type="text" rows="2"></textarea>
                                                </div>
                                                <div class="field col-12 col-md-4 px-1 mt-2">
                                                    <label>@Local["Chẩn đoán"]</label>
                                                    <textarea class="form-control" id="Diagnosis" type="text" rows="2"></textarea>
                                                </div>
                                                <div class="field col-12 col-xl-4 px-1 mt-2">
                                                    <label>@Local["Ghi chú"]</label>
                                                    <textarea class="form-control" id="Note" type="text" rows="2"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer fixed-botombutton py-0">
                    <div class="action_Save">
                        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                        <div class="action_Save-Content">
                            <button class="btn btn-secondary" form="TMD_frmInfo" onclick="Medicine_CloseDetail()">@Local["Đóng"]</button>
                            <button id="btnPrescriptionDelete" class="btn btn-danger" style="display: none;" form="TMD_frmInfo" onclick="Prescription_DeleteData()">@Local["Xóa"]</button>
                            <button id="btnPrescriptionCheck" class="btn bg-gradient-warning" style="display: none;" form="TMD_frmInfo" onclick="Prescription_CheckStockQuantity()">@Local["Kiểm tra"]</button>
                            <button id="btnPrescriptionSave" form="TMD_frmInfo" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="Prescription_Excute_Confirm()" style="display: none;">@Local["Lưu"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    var premed_listsample = {};
    let premed_datamedicine = {};
    var dataMedicineUnit = [];
    var dataICD = [];
    var dataEmployee = [];
    var changingFlag = 1;
    var _Prescription_CustomerID = '@Model._Prescription_CustomerID';
    var _Prescription_CurrentID = '@Model._Prescription_CurrentID';
    var patientRecordID = '@Model._PatientRecordID';
    var FirstPrescriptionMedicine = '@Model._FirstPrescriptionMedicine';
    var sysArisePresAfterExport = '@Model.sysArisePresAfterExport';

    var final_PriceRoot = 0;
    var final_PriceUse = 0;
    var final_PriceDiscounted = 0;
    var final_Discount = 0;
    var final_Discount_per = 0;
    var final_CardTotalLeft = 0;
    var final_CardUsing = 0;

    let Per_Ware_Lock = 0;
    let Per_Same_User = 0;
    let Per_Same_Date = 0;
    let Per_Is_Paid = 0;
    let Per_Passing_Date = 0;

    let Per_IsHideTimeNote = 0;

    var dataMedicineDetail = {};
    let type = '@Model._Type';

    let Flag_check = 0;
    var preWareExport = 0;
    let TMD_IsHasSale = true;
    let Prescription_DateCreate;
    let Prescription_SortName = 'asc';
    $(document).ready(function () {
        if (type != "view") {
            $('#btnPrescriptionSave').show();
            $('#btnPrescriptionChoose').show();
        }
        $("#PresAmount, #PresPrice, #PresDiscount").divide();
        TMD_IsHasSale = $('#TMD_IsHasSale').length > 0 && sysArisePresAfterExport == "0";
        if (!TMD_IsHasSale) $('#PresDiscount,#PresDiscountAmountPer').attr('disabled', 'disabled').addClass('disabled')
        else $('#PresDiscount,#PresDiscountAmountPer').removeAttr('disabled').removeClass('disabled')
        Prescription_CheckTimeNote();

        Prescription_Init();
        Prescription_Event();
    });

    function Prescription_CheckTimeNote(){
        Per_IsHideTimeNote = Number(author_get('Prescription_IsHideTimeNote') ?? 0);
        if(Per_IsHideTimeNote != 1) {
            $('#Prescription_ckbIsTimeNote').prop('checked', true);
        }
        else {
            $('#Prescription_ckbIsTimeNote').prop('checked', false);
        }
    }

   //#region // INIT

    function Prescription_Init() {
        AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine_Detail/?handler=LoadComboMain"
            , data = {
                'ICDArea': Master_ICDGetArea('prescription')
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "[]") {debugger
                    let data = JSON.parse(result);
                    let dataWare = data.Ware;
                    let dataMedicine = data.Medicine;
                    let dataPreMed = data.PrescriptionMedicine;
                    let dataSourceSer = data.SourceService;
                    dataICD = data.ICD;
                    premed_listsample = dataPreMed.reduce((pre, arr) => {
                        if(arr.ID) pre[arr.ID] = arr;
                        return pre;
                    }, {});

                    dataMedicineUnit = data.MedicineUnit;
                    premed_datamedicine = dataMedicine.reduce((pre, arr) => {
                        if(arr.ID) {
                            arr.ContentSearch = (
                                Prescription_RemoveCharSearch(arr?.Name) + " "
                                + Prescription_RemoveCharSearch(arr?.Code) + " "
                                + Prescription_RemoveCharSearch(arr?.Description) + " "
                                + Prescription_RemoveCharSearch(arr?.Property) )
                            pre[arr.ID] = arr;
                        }
                        return pre;
                    }, {});debugger

                    let empdoc = sys_MainEmp.filter(function (el) {
                        return Number(el.GroupID) == 14
                    });

                    Prescription_RenderPreSample(dataPreMed, 'premed_listsample');
                    Load_Combo(dataSourceSer, "cbbSourceService", false);
                    Load_Combo(empdoc, "cbbDocCreated", false);
                    Load_Combo(sys_MainEmp, "cbbSellerID", false);
                    Load_Combo(dataICD, "cbbTMD_StatusICD", true);
                    $("#PrescriptionMedicine").dropdown("refresh");
                    $("#SourceService").dropdown("refresh");
                    $("#DocCreated").dropdown("refresh");
                    $("#DocCreated").dropdown("set selected", sys_employeeID_Main);
                    $("#SellerID").dropdown("refresh");
                    $("#SellerID").dropdown("set selected", sys_employeeID_Main);
                    Prescription_Search('');
                    Prescription_LoadWare(dataWare);
                    Prescription_LoadDataUpdate();

                    Prescription_DateCreate = $("#Created").flatpickr({
                        dateFormat: 'd-m-Y H:i',
                        enableTime: true,
                        maxDate : new Date(),
                        defaultDate: new Date()
                    });
                }
            }
            , sender = null
            , before = function () {
                $("#waitingPrescriptionMain").show();
            }
            , complete = function (e) {
                $("#waitingPrescriptionMain").hide();
            }
        );

    }

    function Prescription_RemoveCharSearch(text){
        return (xoa_dau(text)?.replace(/[^a-zA-Z0-9 ]/g, '')?.trim()?.toLowerCase());
    }

    //#endregion


    //#region // Sample Prescription

    async function Prescription_RenderPreSample(data, id) {
        return new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                let string = '';
                if(data && data.length != 0){
                    for(let i = 0; i < data.length; i++){
                        let item = data[i];
                        let li = `
                            <li class="list-group-item text-dark text-sm border-0 premed_itemsample text-nowrap cursor-pointer position-relative me-2 rounded-2 shadow-sm" data-id="${item.ID}">
                                <span>${item.Name}</span>
                            </li>
                        `
                        string += li;
                    }
                }
                myNode.innerHTML = string;
            }
            Prescription_EventChoosePre();
        });
    };

    function Prescription_EventChoosePre() {
        $("#premed_listsample .premed_itemsample").unbind('click').on('click', function () {
            let _id = $(this).attr('data-id');
            $(this).addClass("active").siblings().removeClass('active');
            Prescription_ChangePrescription(_id);
        });
    }

    async function Prescription_ChangePrescription(premedid) {
        if (changingFlag == 1) {
            if (premedid == undefined || premedid == 0) return;
            let dataPres = premed_listsample[premedid];
            if (dataPres && Object.entries(dataPres).length != 0) {
                $("#PresName").val(dataPres.Name);
                $("#PresAmount").val(dataPres.Amount);
                $("#Note").val(dataPres.Note);
                $("#Subcli").val(dataPres.Subclinical);
            }
            $('#ListMedicineDetailBody .buttonDeleteClass').click();
            let dataMedicineDetailPres = await Prescription_LoadCurrentPrescription(premedid);
            if (dataMedicineDetailPres && dataMedicineDetailPres.length != 0) {
                for (let i = 0; i < dataMedicineDetailPres.length; i++) {
                    let item = dataMedicineDetailPres[i];
                    if (dataMedicineDetail[item.MedicineID] != undefined) continue;
                    let eml = {};
                    let id = item.MedicineID;
                    eml.id = id;
                    eml.IdDetail = 0;
                    eml.MedicineID = item.MedicineID;
                    eml.Unit_ID = item.Unit_ID;
                    eml.UnitName = item.UnitName;
                    eml.UnitPrice = 0;
                    eml.PriceUnit = item.Price;
                    eml.Price = TMD_IsHasSale ? item.Price : 0;
                    eml.Quantity = item.Quantity
                    eml.Dosage1 = item.Dosage1;
                    eml.Dosage2 = item.Dosage2;
                    eml.Dosage3 = item.Dosage3;
                    eml.MedicineNote = item.MedicineNote;
                    dataMedicineDetail[id] = eml;
                    Prescription_RenderData(id, eml, 'ListMedicineDetailBody' );
                }
            }
            Prescription_SelectedMedicine();
        }
    }

    async function Prescription_LoadCurrentPrescription(id) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine_Detail/?handler=LoadPrescription"
                    , data = {
                        "CurrentID": id
                    }
                    , async = true
                    , error = function () {
                        notiError_SW()
                        resolve([]);
                    }
                    , success = function (result) {
                        if (result != "0") {
                            let data = JSON.parse(result);
                            resolve(data);
                        }
                    }
                    , sender = null
                    , before = function (e) {}
                    , complete = function (e) {}
                );
            }, 10);
        })
    }



    //#endregion

    //#region //EVENT

    function Prescription_Event(){

        $('#contentMedicine').on('click', '.medicineSelect', function (event) {
            let id = Number($(this).attr('data-id'));
            if (!$(this).hasClass('choosen')) {
                let data = premed_datamedicine[id];
                Prescription_AddRow(id);
                $(this).addClass("choosen");
            }
            $('.rowMedicine').addClass("d-none");
            event.stopPropagation();
        });

        $('#contentMedicineSearch').unbind().keyup(function () {
            if ($(this).val().length > 0) $("#MedicDetail_Sort .btn_clear").removeClass('opacity-1');
            else $("#MedicDetail_Sort .btn_clear").addClass('opacity-1');
            $("#MedicDetail_Sort .fa-search").hide();
            $("#MedicDetail_Sort .spinner-border").show();
            re_TimerOnchange = setTimeout(function (e) {
                Prescription_Search(xoa_dau($('#contentMedicineSearch').val().toLowerCase()).trim());
            }, 500);
        });

        $("#MedicDetail_Sort").on('click', '.btn_clear', function (e) {
            $('#contentMedicineSearch').val('');
            $("#MedicDetail_Sort .btn_clear").addClass('opacity-1');
            Prescription_Search('');
        });

        $("#TMD_sortMed").unbind().click(function (e) {
            Prescription_SortName = (Prescription_SortName == 'desc') ? 'asc' : 'desc';
            Prescription_Search(xoa_dau($('#contentMedicineSearch').val().toLowerCase()).trim());
        });

        $('#contentMedicineTempSearch').unbind().keyup(function () {
            if ($(this).val().length > 0)
                $("#MedicTempDetail_Sort .btn_clear").removeClass('opacity-1');
            else $("#MedicTempDetail_Sort .btn_clear").addClass('opacity-1');
            $("#MedicTempDetail_Sort .fa-search").hide();
            $("#MedicTempDetail_Sort .spinner-border").show();
            re_TimerOnchange = setTimeout(function (e) {
                 PrescriptionTemp_Search(xoa_dau($('#contentMedicineTempSearch').val().toLowerCase()).trim());
            }, 500);
        });

        $("#MedicTempDetail_Sort").on('click', '.btn_clear', function (e) {
            $('#contentMedicineTempSearch').val('');
            $("#MedicTempDetail_Sort .btn_clear").addClass('opacity-1');
            PrescriptionTemp_Search('');
        });

    }

    function Prescription_OnChangeTimeNote() {
        let isCheckedNote = $("#Prescription_ckbIsTimeNote").is(':checked');
        if(isCheckedNote){
            Per_IsHideTimeNote = 0;
            $('.Prescription_MedicineNoteDiv').addClass('d-none');
            $('.Prescription_DosageNoteDiv').removeClass('d-none');
        }
        else {
            Per_IsHideTimeNote = 1;
            $('.Prescription_MedicineNoteDiv').removeClass('d-none');
            $('.Prescription_DosageNoteDiv').addClass('d-none');
        }
        author_set('Prescription_IsHideTimeNote', Per_IsHideTimeNote);

    }
    //#endregion

    //#region //  SEARCH

    function Prescription_Search(text) {
        let _detail = [];
        if (text == '') {
            _detail = Object.values(premed_datamedicine)

        }
        else {
            let searchingValue = Prescription_RemoveCharSearch($('#contentMedicineSearch').val());

            _detail = Object.values(premed_datamedicine).filter(s =>(s.ContentSearch).includes(searchingValue));
        }

        if (Prescription_SortName == 'asc') {
            $('#TMD_sortMedIcon').removeClass('fa-sort-alpha-up');

            _detail.sort((a, b) =>  (a.Name.toString().replaceAll(' ', '')).toUpperCase().localeCompare((b.Name.toString().replaceAll(' ', '')).toUpperCase(), undefined, {numeric: true}));
        }
        else {
            $('#TMD_sortMedIcon').addClass('fa-sort-alpha-up');
            _detail.sort((a, b) => (b.Name.toString().replaceAll(' ', '')).toUpperCase().localeCompare((a.Name.toString().replaceAll(' ', '')).toUpperCase(), undefined, {numeric: true}));
        }

        Prescription_RenderPre(_detail, 'contentMedicine');
        $("#MedicDetail_Sort .fa-search").show();
        $("#MedicDetail_Sort .spinner-border").hide();
    }

    function PrescriptionTemp_Search(text) {
        if (text == '') {
            Prescription_RenderPreSample(Object.values(premed_listsample), 'premed_listsample');
        }
        else {
            let searchingValue = (xoa_dau($('#contentMedicineTempSearch').val())).trim().toLowerCase();

            let _detail = Object.values(premed_listsample).filter(s => (xoa_dau(s.Name).trim().toLowerCase().includes(searchingValue)));
            Prescription_RenderPreSample(_detail, 'premed_listsample');
        }
        $("#MedicTempDetail_Sort .fa-search").show();
        $("#MedicTempDetail_Sort .spinner-border").hide();
    }

    //#endregion

    function Prescription_RenderPre(data, id) {
        let string = '';
        var myNode = document.getElementById(id);
        if (data.length > 0) {
            if (myNode != null) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let description = item.Description != "" ? `<div class="me-4 text-sm"><span class="ellipsis_one_line text-secondary">${item.Description}</span></div>` : '';
                    let li = `
                    <li id="medic_${item.ID}" class="list-group-item text-dark text-sm border-0 medicineSelect cursor-pointer position-relative pb-0" data-id="${item.ID}">
                        <div class="medic_check d-inline position-absolute end-5 text-success top-50 translate-middle-y opacity-0"><i class="fas fa-check"></i></div>
                        <span class="fw-bold text-primary">${item.Code}</span>
                        <span>${item.Name}</span>
                        ${description}
                        <hr class="my-0 horizontal dark mt-2" />
                    </li>
                    `
                    string += li;
                }
            }
        }
        myNode.innerHTML = string;
        Prescription_SelectedMedicine();
    }

    function Prescription_SelectedMedicine() {
        $(".medicineSelect").removeClass("choosen");
        if (dataMedicineDetail && Object.entries(dataMedicineDetail).length > 0) {
            for ([key, value] of Object.entries(dataMedicineDetail)) {
                let medicineid = Number(value.MedicineID);
                $('#medic_' + medicineid).addClass('choosen');
            }
        }
    }

    //#region // VIEW

    function Tab_Check_View() {
        if (type == "view") {
            $('.bodyViewEditMedic input').prop("disabled", true);
            $('.bodyViewEditMedic input').css("opacity", "1");
            $('.bodyViewEditMedic textarea').prop("disabled", true);
            $('.bodyViewEditMedic textarea').css("opacity", "1");
            $('.bodyViewEditMedic .selection.dropdown').addClass("disabled");
            $('.bodyViewEditMedic .selection.dropdown').css("opacity", "1");
            $('.bodyViewEditMedic .selection.dropdown .dropdown.icon').remove();
            $('.bodyViewEditMedic #btnPrescriptionSave').remove();
            $('.bodyViewEditMedic .buttonDeleteClass').remove();
            if (typeof Prescription_ExcuteData == 'function') delete Prescription_ExcuteData;
        }
        else {
            $('#btnPrescriptionSave').show();
            $('#btnPrescriptionChoose').show();
        }
    }

    //#endregion

    //#region // LOAD DATA DETAIL

    async function Prescription_LoadDataUpdate() {
        return new Promise((resolve, reject) => {
            AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine_Detail/?handler=LoadUpdate"
                , data = {
                    'CurrentID': _Prescription_CurrentID
                }
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        let Info_Prescription = data.Table;
                        let Detail_Prescription = data.Table1;
                        if (Info_Prescription && Info_Prescription.length > 0) {
                            Prescription_RenderUpdate(Info_Prescription[0], Detail_Prescription);
                            Prescription_CheckView();
                            Prescription_SelectedMedicine();
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        })
    }

    function Prescription_RenderUpdate(data, detail) {
        changingFlag = 0;
        final_PriceUse = 0;
        final_CardUsing = data.Card_Amount_Using;
        $("#PresName").val(data.Name);
        $("#PresAmount").val(data.PriceRoot);
        $("#PresDiscount").val(data.DiscountAmount != 0 ? data.DiscountAmount : data.DiscountPercent);
        $('#PresDiscountAmountPer').dropdown('set selected', data.DiscountAmount != 0 ? "2" : "1");
        $("#PresPrice").val(data.PriceDiscounted);
        $('#SourceService').dropdown('refresh');
        $('#SourceService').dropdown('set value', data.ServiceSourceID);
        $('#SourceService').dropdown('set text', data.ServiceSourceName);

        $('#DocCreated').dropdown('set selected', data.DocCreatedID);
        $('#SellerID').dropdown('set selected', data.SellerID);
        $("#Created").val(ConvertDateTimeUTC_DMYHM(data.Created));
        Per_Ware_Lock = data.Per_Ware_Lock;
        Per_Same_User = data.Per_Same_User;
        Per_Same_Date = data.Per_Same_Date;
        Per_Is_Paid = data.Per_Is_Paid;
        Per_Passing_Date = data.Per_Passing_Date;

        $('#Diagnosis').val(data.Diagnosis);
        $("#Note").val(formatHTML(data.Note));
        $("#Subcli").val(formatHTML(data.Subclinical));
        $('#PrescriptionMedicine').dropdown('set selected', data.Prescription_Medicine_ID); 
        if (data.StatusICD != "") {
            $('#TMD_StatusICD').dropdown('refresh')
            $('#TMD_StatusICD').dropdown('set selected', data.StatusICD.split(","));
        }
        Prescription_OnchangePriceDiscounted();
        dataMedicineDetail = {};
        for (let i = 0; i < detail.length; i++) {
            let item = detail[i];
            let eml = {};
            let id = item.MedicineID;
            eml.id = id;
            eml.IdDetail = item.IdDetail;
            eml.MedicineID = id;
            eml.Unit_ID = item.Unit_ID;
            eml.UnitName = item.UnitName;
            eml.Price = TMD_IsHasSale ? item.Price : 0;
            eml.PriceUnit = item.Price;
            eml.Quantity = item.Quantity;
            eml.Dosage1 = item.Dosage1;
            eml.Dosage2 = item.Dosage2;
            eml.Dosage3 = item.Dosage3;
            eml.MedicineNote = item.MedicineNote;
            dataMedicineDetail[id] = eml;
            Prescription_RenderData(id, eml, 'ListMedicineDetailBody');
        }
        changingFlag = 1;
        $("#Created").attr("disabled", true);
        $("#Created").addClass("bg-gray-200");
    }

    function Prescription_CheckView() {
        if (((Per_Same_User == 1 && Per_Same_Date == 1) || Per_Passing_Date == 1)
            && Number(_Prescription_CurrentID) != 0
            && Per_Ware_Lock == 0
            && Per_Is_Paid == 0
        ) {
            $('#btnPrescriptionDelete').show();
            $('#btnPrescriptionSave').show();
            $('#btnPrescriptionChoose').show();
        } else {
            Tab_Check_View();
            $('#btnPrescriptionDelete').remove();
            $('#btnPrescriptionSave').remove();
            $('#btnPrescriptionChoose').remove();
        }
    }

    async function Prescription_LoadWare(data){
        return new Promise((resolve) => {
            if(data && data.length != 0){
                let item = data[0];
                $("#divPresIsExport").show();
                if(item.NumWare == 1){
                    preWareExport = item.WareID;
                    $("#btnPrescriptionCheck").show();
                }
            }
        })
    }
    //#endregion

    function Prescription_AddRow(id) {
        if (premed_datamedicine[id] == undefined || dataMedicineDetail[id] != undefined) return;

        let item = premed_datamedicine[id];
        let element = {};
        element.ID = item.ID;
        element.IdDetail = 0;
        element.MedicineID = item.ID;
        element.Unit_ID = item.UnitID;
        element.UnitName = item.UnitName
        element.Price = TMD_IsHasSale ? item.Price : 0;
        element.PriceUnit = item.Price;
        element.Quantity = 1;
        element.Dosage1 = '';
        element.Dosage2 = '';
        element.Dosage3 = '';
        element.MedicineNote = '';
        dataMedicineDetail[item.ID] = element;
        Prescription_RenderData(item.ID, element, 'ListMedicineDetailBody');
    }

    function Prescription_CheckValidData() {
        let isCheck = 0;
        let ismatch = 0;
        //let isquantity = 0;
        let productcheck = "";
        for ([key, value] of Object.entries(dataMedicineDetail)) {
            let medicineid = Number(value.MedicineID);
            let unitid = Number(value.Unit_ID);

            let quantityNumber = Number(value.Quantity);

            if (medicineid == 0) {
                if ($('#Medicine_' + key).length > 0) {
                    $('#Medicine_' + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
                }
            }
            else $('#Medicine_' + key).css('background-color', 'white');
            if (unitid == 0) {
                if ($('#MedicineUnit_' + key).length > 0) {
                    $('#MedicineUnit_' + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
                }
            }
            else $('#MedicineUnit_' + key).css('background-color', 'white');

            if((medicineid != 0 && quantityNumber <= 0)){
                if($("#MedicineQuantity_" + key).length > 0){
                   $("#MedicineQuantity_" + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
                }
            }
            else $("#MedicineQuantity_" + key).css('background-color', 'white');

            if (productcheck.includes('[' + medicineid + ',' + unitid + ']')) {
                $('#trMedicine_' + key).css('background-color', 'var(--bs-bg-error)');
                ismatch = 1;
            }
            else {
                $('#trMedicine_' + key).css('background-color', 'white');
            }
            productcheck += '[' + medicineid + ',' + unitid + ']';


        }
        if (Flag_check == 0) {
            if (isCheck == 1 || ismatch == 1) {
                document.getElementById("textShowMessage").innerHTML = "@Local["Kiểm tra dữ liệu"]";
            }
            else {
                document.getElementById("textShowMessage").innerHTML = "";
            }
        }
    }

    //#region // EXECUTE
    function Prescription_Excute_Confirm() {
        if(_Prescription_CurrentID == '0'){
            const promise = notiConfirm("@Local["Xác nhận kê toa"]");
            promise.then(function () { Prescription_ExcuteData(); }, function () { });
        }
        else Prescription_ExcuteData();
    }
    async function Prescription_ExcuteData() {
        Prescription_CheckValidData();
        let IsExportMedicine = $("#PresIsExport").is(':checked')
        //let IsWareStock = await Prescription_CheckStockQuantity(false, IsExportMedicine);
        //if(!IsWareStock) return;

        let ID = Number($('#PrescriptionMedicine').dropdown('get value')) ? Number($('#PrescriptionMedicine').dropdown('get value')) : 0;
        var data = new Object();
        data.Name = $("#PresName").val() ? $("#PresName").val() : "";
        data.PriceRoot = TMD_IsHasSale ? final_PriceRoot : 0;
        data.Quantity = 1;
        data.PriceDiscounted = TMD_IsHasSale ? final_PriceDiscounted : 0;
        data.AmountDiscount = TMD_IsHasSale ? final_Discount : 0;
        data.PerDiscount = TMD_IsHasSale ? final_Discount_per : 0;
        data.PrescriptionMedicineID = ID;
        data.Diagnosis = $('#Diagnosis').val();
        data.Note = $("#Note").val() ? $("#Note").val() : "";
        data.Subclinical = $("#Subcli").val() ? $("#Subcli").val() : "";
        data.CardAmountUsing = final_CardUsing;
        data.SourceService = Number($('#SourceService').dropdown('get value')) ? Number($('#SourceService').dropdown('get value')) : 0;
        data.Created = $('#Created').val() ? ConvertDateTimeToStringYMDHHMMSS(formatDMYHHMM_To_Date($('#Created').val())) : ConvertDateTimeToStringYMDHHMMSS(new Date());
        data.DocCreatedID = Number($('#DocCreated').dropdown('get value')) ? Number($('#DocCreated').dropdown('get value')) : 0;
        data.SellerID = Number($('#SellerID').dropdown('get value')) ? Number($('#SellerID').dropdown('get value')) : 0;
        data.StatusICD = $('#TMD_StatusICD').dropdown('get value') ? $('#TMD_StatusICD').dropdown('get value') + ',' : 0;
        if (document.getElementById("textShowMessage").innerHTML == "") {
            $('#TMD_frmInfo').form('validate form');
            if ($('#TMD_frmInfo').form('is valid') && Object.entries(dataMedicineDetail).length > 0) {
                AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine_Detail/?handler=ExcuteData"
                    , data = {
                        "data": JSON.stringify(data)
                        , "dataDetail": JSON.stringify(Prescription_SortAllowView(dataMedicineDetail))
                        , 'CustomerID': _Prescription_CustomerID
                        , 'CurrentID': _Prescription_CurrentID
                        , 'PatientRecordID': patientRecordID
                        , 'IsExportMedicine': IsExportMedicine ? 1 : 0
                    }
                    , async = true
                    , error = function () { notiError_SW() }
                    , success = function (result) {
                        if (result != "0") {
                            notiSuccess();
                            syslog_cutmed(_Prescription_CurrentID == 0 ? 'i' : 'u', result, _Prescription_CustomerID, '');
                            if (typeof Tab_List_Customer_Medicine === 'function') {
                                Medicine_CloseDetail();
                                Tab_List_Customer_Medicine(_Prescription_CurrentID, 0);
                            }
                            if (typeof LoadCustomerPaymentInfo === 'function') {
                                LoadCustomerPaymentInfo();
                            }
                        }
                        else {
                            notiError_SW();
                        }
                    }, sender = $("#btnPrescriptionSave")
                );
            }
            else {
                $('#textShowMessage').html('@Local["Kiểm tra dữ liệu"]');
            }
        }
        return false;
    }
    function Prescription_SortAllowView(data){
        let result = [];
        let obj = $(".trMedicine");
        for (let i = 0; i < obj.length; i++){
            let ID = obj[i].getAttribute('data-id');
            result.push(data[ID]);
        }
        return result;
    }

    function Prescription_DeleteData() {
        Tab_List_Delete_Medicine(_Prescription_CurrentID);
        Medicine_CloseDetail();
    }

    //#endregion
    //#regionTest date
    //Date = class extends Date {
    //    constructor(options) {
    //        if (options) {
    //            super(options.toISOString());
    //        } else {
    //            super(Date.now());
    //        }
    //    }
    //};
    //function ConvertDateTimeToStringYMDHHMMSS1 (x) {
    //    try {
    //        var d = new Date(x);
    //        let _month = d.getMonth() + 1;

    //        let hour = (d.getHours() < 10) ? ("0" + d.getHours()) : d.getHours();
    //        let minute = (d.getMinutes() < 10) ? ("0" + d.getMinutes()) : d.getMinutes();
    //        let month = (_month < 10) ? ("0" + _month) : _month;
    //        let date = (d.getDate() < 10) ? ("0" + d.getDate()) : d.getDate();
    //        console.log(d.getFullYear() + "-" + month + "-" + date + " " + hour + ":" + minute + ":00")
    //        return d.getFullYear() + "-" + month + "-" + date + " " + hour + ":" + minute + ":00";
    //    }
    //    catch (err) {
    //        return "";
    //    }
    //}
    //#endregion
    //#region // FILL DATA

    function Prescription_FillData(key, value) {
        let price = TMD_IsHasSale ? value.PriceUnit : premed_datamedicine[value.MedicineID].Price;
        $('#Medicine_' + key).dropdown("refresh");
        $('#Medicine_' + key).dropdown("set selected", value.MedicineID);
        if (Number(value.MedicineID) != 0) {
            Medicine_RenderUnit(value.MedicineID, key);
            $("#MedicineUnit_" + key).dropdown("refresh");
            $("#MedicineUnit_" + key).dropdown("set selected", value.Unit_ID);
        }
        $('#MedicineQuantity_' + key).val(value.Quantity);
        $('#MedicineQuantity_' + key).attr("value", value.Quantity);
        $('#MedicineUnitPrice_' + key).html(price);
        $('#MedicineUnitPrice_' + key).attr("value", price);

        $('#MedicineDosage1_' + key).val(value.Dosage1);
        $('#MedicineDosage1_' + key).attr("value", value.Dosage1);
        $('#MedicineDosage2_' + key).val(value.Dosage2);
        $('#MedicineDosage2_' + key).attr("value", value.Dosage2);
        $('#MedicineDosage3_' + key).val(value.Dosage3);
        $('#MedicineDosage3_' + key).attr("value", value.Dosage3);
        $('#MedicineNote_' + key).val(value.MedicineNote);
        $('#MedicineNote_' + key).attr("value", value.MedicineNote);
    }

    function Prescription_EventHandle(key) {

        $('#ListMedicineDetailBody .ui.dropdown').dropdown({
            allowCategorySelection: true,
            forceSelection: false,
            transition: "fade up"
        });

        $(".MedicineUnit").bind('change').change(function () {
            let idcom = this.id;
            let id = idcom.replace("MedicineUnit_", "");
            let unit_id = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
            if(dataMedicineDetail[id] != null){
                let itemMedicine = dataMedicineDetail[id];
                dataMedicineDetail[id].Unit_ID = unit_id;
                let priceUnit = premed_datamedicine[id] != undefined ? (premed_datamedicine[id]?.Price ?? 0) : itemMedicine.PriceUnit;
                let price = Math.floor(priceUnit * Prescription_PriceExchange(itemMedicine.MedicineID, unit_id));
                dataMedicineDetail[id].Price = price;
                $("#MedicineUnitPrice_" + id).attr('value', price);
                $("#MedicineUnitPrice_" + id).val(price);
            }
        });

        $(".Medicine").bind('change').change(function (e) {
            let idcom = this.id;
            let id = idcom.replace("Medicine_", "");
            let productid = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
            dataMedicineDetail[id].MedicineID = productid;
            Medicine_RenderUnit(productid, id);
        });

        $(".MedicineDosage1").bind('change').change(function () {
            $(this).attr("value", this.value);
            let id = this.id.replace("MedicineDosage1_", "");
            dataMedicineDetail[id].Dosage1 = this.value;
        });

        $(".MedicineDosage2").bind('change').change(function () {
            $(this).attr("value", this.value);
            let id = this.id.replace("MedicineDosage2_", "");
            dataMedicineDetail[id].Dosage2 = this.value;
        });

        $(".MedicineDosage3").bind('change').change(function () {
            $(this).attr("value", this.value)
            let id = this.id.replace("MedicineDosage3_", "")
            dataMedicineDetail[id].Dosage3 = this.value;
        });

        $(".MedicineNote").bind('change').change(function () {
            $(this).attr("value", this.value)
            let id = this.id.replace("MedicineNote_", "")
            dataMedicineDetail[id].MedicineNote = this.value;
        });

        $("#trMedicine_" + key + " .MedicineQuantity").bind('change').change(function () {
            let id = this.id.replace("MedicineQuantity_", "")
            dataMedicineDetail[id].Quantity = Number($(this).val());
            Medicine_Event_ChangeAmountMed(id);
            Medicine_Event_ChangeAmount();
        });
        $("#trMedicine_" + key + " .MedicineUnitPrice").bind('change').change(function () {
            let id = this.id.replace("MedicineUnitPrice_", "")
            dataMedicineDetail[id].Price = TMD_IsHasSale ? Number($(this)[0].value.replaceAll(',', '')) : 0;
            Medicine_Event_ChangeAmountMed(id);
            Medicine_Event_ChangeAmount();
        });

        $('.Medicine').bind('keyup').keyup(function (event) {
            let idcom = this.id
            let id = idcom.replace("Medicine_", "")
            Prescription_OnkeyupMedicine(id);
        });

        $('#trMedicine_' + key + ' .buttonDeleteClass').bind('click').on('click', function (event) {
            let timespan = Number($(this).attr("data-id"));
            $('#medic_' + dataMedicineDetail[timespan].MedicineID).removeClass("choosen");
            $('#trMedicine_' + timespan).remove();
            delete dataMedicineDetail[timespan];
            Medicine_Event_ChangeAmount();
            Prescription_SelectedMedicine();
            event.stopPropagation();
        });

        $('#MedicineUnitPrice_' + key).divide();

    }
    function Medicine_Event_ChangeAmountMed(id){
         if(dataMedicineDetail[id]){
            dataMedicineDetail[id].Amount = Math.floor(dataMedicineDetail[id].Price * dataMedicineDetail[id].Quantity);
            $("#MedicineAmount_"+ id).val(formatNumber(dataMedicineDetail[id].Amount))
         }
    }

    function Medicine_Event_ChangeAmount() {
        let result = 0;
        if (Object.values(dataMedicineDetail).length != 0) {
            for ([key, value] of Object.entries(dataMedicineDetail)) {
                result += (TMD_IsHasSale ? value.Price : value.PriceUnit) * (value.Quantity == 0 ? 1 : value.Quantity);
            }
            $("#PresAmount").val(result);
        }

    }


    function Prescription_OnchangePriceDiscounted() {
        let TotalPrice = 0;
        let amountPres = $("#PresAmount").val() ? Number($("#PresAmount").val()) : 0;
        let discountPres = $("#PresDiscount").val() ? Number($("#PresDiscount").val()) : 0;
        let isPerAmount = $("#PresDiscountAmountPer").dropdown("get value") ? Number($("#PresDiscountAmountPer").dropdown("get value")) : 0;
        $("#textShowMessage").html("")
        Flag_check = 0
        if (isPerAmount == 1) {
            if (discountPres >= 0 && discountPres <= 100) {
                TotalPrice = Math.round((amountPres - amountPres * (discountPres / 100)) * 100) / 100
                final_Discount = 0;
                final_Discount_per = discountPres;
            }
            else {
                Flag_check = 1;
                $("#textShowMessage").html("@Local["Giảm giá không vượt quá giá trị đơn thuốc"]")
            }
        }
        else if (isPerAmount == 2) {
            if (amountPres - discountPres >= 0) {
                TotalPrice = Math.round((amountPres - discountPres) * 100) / 100
                final_Discount = discountPres;
                final_Discount_per = 0;
            }
            else {
                Flag_check = 1;
                $("#textShowMessage").html("@Local["Giảm giá không vượt quá giá trị đơn thuốc"]")
            }
        }
        final_PriceRoot = amountPres;
        final_PriceDiscounted = TotalPrice;
        $("#PresPrice").val(TotalPrice);
    }

    function Prescription_OnkeyupMedicine(id) {
        let search = xoa_dau($('#MedicineSearch_' + id).val().toLowerCase());
        let data = Object.values(premed_datamedicine).filter(word => {
            return ((xoa_dau(word["Name"]).toLowerCase()).includes(search));
        });
        if (data != undefined && data != null && data.length != 0)
            Load_Combo(data, "cbbMedicine_" + id, true);
    }

    //#endregion

    //#region // RENDER

    function Prescription_RenderData(key, value, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let classShowDosageNote = Per_IsHideTimeNote == 1 ? 'd-none' : '';
            let classShowMedicineNote = Per_IsHideTimeNote != 1 ? 'd-none' : '';
            let tr = `
            <li id="trMedicine_${key}" class="trMedicine row border-dashed border-1 position-relative border-secondary border-radius-lg border-0 ps-0 m-0 border-radius-lg" data-id="${key}" data-detail="${value.IdDetail}">
                <i data-id="${key}" class="opacity-2 position-absolute buttonDeleteClass text-gradient text-danger vtt-icon vttech-icon-delete cursor-pointer" style="width: 40px;right: 6px;top: 0px;"></i>
                    <div class="d-inline position-absolute px-0 start-0 text-sm top-2 collapse text-primary" data-bs-toggle="collapse" href="#collapseMedicine_${key}" role="button" aria-expanded="false" aria-controls="collapseExample" style="width: 40px;">
                    <i class="fas fa-caret-down"></i>
                    </div>
                    <div class="row w-100 mx-0 px-0 pe-5">
                    <div class="col-12 col-sm-4 col-lg-6 col-auto my-auto px-1">
                        <div class="row text-sm text-dark text-normal">
                            <div class="col-auto text-sm text-dark text-normal pe-0 ps-2">
                                    <label class="pb-0 text-normal mb-0 text-sm ps-3" datatype="label">@Local["Tên thuốc"]</label>
                            </div>
                            <div class="col text-sm text-dark text-normal">
                                <label tabindex="0" class="pb-0 mb-0 text-sm fw-bold w-100 ellipsis_one_line" datatype="label" style="border-bottom: 1px dotted;">
                                    ${Prescription_AddCellMedicine(key)}
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-5 col-lg-4 px-1">
                        <div class="d-flex text-sm text-dark text-normal">
                            <div class="col-auto text-sm text-dark text-normal pe-0" >
                                <label class="pb-0 text-normal mb-0 text-sm" datatype="label">@Local["Số lượng"]</label>
                            </div>
                            <div class="col text-sm text-dark text-normal">
                                <label tabindex="0" dataid="medicinename" class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                                    ${Prescription_AddCellQuantity(key)}
                                </label>
                            </div>
                            <div class="col">
                                ${Prescription_AddCellUnit(key)}
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-3 col-lg-2 px-1 ">
                        <div class="row text-sm text-dark text-normal">
                            <div class="col-auto text-sm text-dark text-normal pe-0 ps-1">
                                <label class="pb-0 text-normal mb-0 text-sm" datatype="label">@Local["Đơn giá"]</label>
                            </div>
                            <div class="col text-sm text-dark text-normal">
                                <label tabindex="0" dataid="medicinename" class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                                    ${Prescription_AddCellPrice(key)}
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="collapse collapsesticky mt-1" id="collapseMedicine_${key}">
                    <div class="row px-2 ${classShowDosageNote} Prescription_DosageNoteDiv">
                        <div class="col-12 col-sm-4 px-1">
                            <label class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                                ${Prescription_AddCellDosage1(key)}
                            </label>
                        </div>
                        <div class="col-12 col-sm-4 px-1">
                            <label class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                                ${Prescription_AddCellDosage2(key)}
                            </label>
                        </div>
                        <div class="col-12 col-sm-4 px-1">
                            <label class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                                ${Prescription_AddCellDosage3(key)}
                            </label>
                        </div>
                    </div>
                    <div class="row mx-n2 px-2 ${classShowMedicineNote} Prescription_MedicineNoteDiv">
                           <label class="pb-0 mb-0 px-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">
                               ${Prescription_AddCellMedicineNote(key)}
                           </label>
                    </div>
                </div>
                <div class="collapse collapsesticky collapsestock mt-1" id="collapseQuantity_${key}">
                    <div class="d-flex gap-2">
                        <span class="ps-3">
                            <i style="display:none;" id="MedicineQuantityError_${key}" class="fw-bold text-danger fas fa-exclamation-triangle"></i>
                            <i style="display:none;" id="MedicineQuantitySuccess_${key}" class="fw-bold text-success fas fa-check"></i>
                        </span>
                        <div class="ps-1">
                            <span class="text-sm fw-bold">@Local["Số lượng tồn"]:</span>
                            <span id="MedicineQuantityStock_${key}" class="ps-2 text-sm "></span>
                        </div>
                        <div class="ps-1">
                                <span class="text-sm fw-bold">@Local["Còn lại"]:</span>
                            <span id="MedicineQuantityLeft_${key}" class="ps-2 text-sm "></span>
                        </div>
                    </div>
                </div>
                <div class="mt-3 mb-2 border-0"></div>
            </li>
            `
            myNode.insertAdjacentHTML('beforeend', tr);
        }
        Prescription_FillData(key, value);
        Prescription_EventHandle(key);
    }

    function Prescription_AddCellMedicine(randomNumber) {
        return premed_datamedicine[randomNumber]?.Name != undefined ? premed_datamedicine[randomNumber]?.Name : '';
        let result = `
            <div class="ui fluid search selection dropdown Medicine form-control disabled" disabled="disabled" title="${randomNumber}" id="Medicine_${randomNumber}" data-id="${randomNumber}">
                <input type="hidden" />
                <i class="dropdown icon"></i>
                <input id="MedicineSearch_${randomNumber}" class="search" autocomplete="off" tabindex="0">
                <div class="text default">eg. @Local["Thuốc"]</div>
                <div id="cbbMedicine_${randomNumber}" class="menu" tabindex="-1">
                    ${Object.values(premed_datamedicine).map((medicine) => {
                        return `<div class="item" data-value="${medicine.ID}">${medicine?.Name}</div>`;
                    }).join("")}
                </div>
            </div>
        `
        return result;
    }

    function Prescription_AddCellUnit(randomNumber) {
        let result = `
                <div class="ui dropdown text-dark fw-bold text-sm border-0 MedicineUnit text-nowrap" id="MedicineUnit_${randomNumber}"  >
                <input type="hidden" />
                <div class="default text">eg .@Local["Đơn vị"]</div>
                <div id="cbbUnit_${randomNumber}" class="menu" tabindex="-1">
                </div>
            </div>
        `
        return result;
    }

    function Prescription_AddCellDosage1(randomNumber) {
        let result = `<input id="MedicineDosage1_${randomNumber}" class="form-control  MedicineDosage1 ps-0 d-block border-0 rounded-0" value="" maxlength="500" placeholder="eg.@Local["Sáng"]" />`;
        return result;
    }

    function Prescription_AddCellDosage2(randomNumber) {
        let result = `<input id="MedicineDosage2_${randomNumber}" class="MedicineDosage2 form-control ps-0 d-block border-0 rounded-0" type="text" maxlength="500" value="" placeholder="eg.@Local["Chiều"]" />`;
        return result;
    }

    function Prescription_AddCellDosage3(randomNumber) {
        let result = `<input id="MedicineDosage3_${randomNumber}" class="MedicineDosage3 form-control ps-0 d-block border-0 rounded-0" type="text" maxlength="500" value="" placeholder="eg.@Local["Tối"]" />`;
        return result;
    }

    function Prescription_AddCellMedicineNote(randomNumber) {
        let result = `<input id="MedicineNote_${randomNumber}" class="MedicineNote form-control ps-0 d-block border-0 rounded-0" type="text" value="" maxlength="500" placeholder="eg.@Local["Ghi chú"]" />`;
        return result;
    }

    function Prescription_AddCellQuantity(randomNumber) {
        let result = `
            <input type="text" id="MedicineQuantity_${randomNumber}" class="MedicineQuantity border-0 form-control p-0 ps-2 rounded-1 d-inline-block" min="0" />
        `
        return result;
    }

    function Prescription_AddCellPrice(randomNumber) {
        let result = `
                <input id="MedicineUnitPrice_${randomNumber}" ${TMD_IsHasSale ? '' : 'disabled="diabled"'} class="form-control MedicineUnitPrice border-0 form-control p-0 rounded-1 d-inline-block" min="0" />
        `
        return result;
    }

    function Prescription_AddCellAmount(randomNumber) {
        let result = `
             <input id="MedicineAmount_${randomNumber}" class="form-control MedicineAmount ps-2 disable" disabled="diabled" min="0" />
        `
        return result;
    }

    function Medicine_RenderUnit(id, random) {
        $('#MedicineUnit_' + random).dropdown('clear');
        $('#MedicineUnit_' + random).dropdown("refresh");
        let _data = [];
        let pro = premed_datamedicine[id];
        if (pro != undefined) {
            if (pro.UnitName != '') {
                _data.push({ "ID": pro.UnitID, "Name": pro.UnitName });
            }
            let unit = dataMedicineUnit.filter(word => word["ProductID"] == id);
            if (unit != undefined && unit.length > 0) {
                for (let i = 0; i < unit.length; i++) {
                    if ((unit[i].UnitChangeName).trim() != '')
                        _data.push({ "ID": unit[i].UnitChange, "Name": unit[i].UnitChangeName });
                }
            }

            Load_Combo(_data, "cbbUnit_" + random, true);
            $('#MedicineUnit_' + random).dropdown("set selected", Number(_data[0].ID));
        }

    }

    //#endregion

    //#region // CHECK STOCK QUANTITY

    async function Prescription_CheckStockQuantity(isNoti = true, isExport = true){
        return new Promise((resolve) => {
            if(preWareExport == 0 || !isExport) return resolve(true);
            let dataProduct = [];
            for ([key, value] of Object.entries(dataMedicineDetail)) {
                let _e = {};
                _e.packageNumber = "";
                _e.idProduct = value.MedicineID;
                _e.number = Prescription_QuantityExchange(value.MedicineID, value.Unit_ID, value.Quantity);
                dataProduct.push(_e);
            }

            AjaxLoad(url = "/Customer/Service/TabList/TabList_Medicine_Detail/?handler=CheckQuantityRealTime"
                , data = {
                    'data': JSON.stringify(dataProduct)
                    , 'ware': preWareExport
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        let dataResult = JSON.parse(result);
                        let dataNext = dataResult.Table;
                        let dataProductExist = dataResult.Table1;
                        if (dataNext && dataNext.length != 0 && dataNext[0].RESULT != 1) {

                        }
                        else {
                            if (Prescription_CheckQuantityError(dataProductExist, dataProduct) == 1) {
                                resolve(true)
                            }
                            else {

                                if (isNoti || isExport) notiError('@Local["Số lượng xuất kho không lớn hơn số lượng tồn kho"]');
                                resolve(false)
                            }
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
                , sender = $("#btnSaveDetail")
            );
        }, 10)
    }

    function Prescription_QuantityExchange(productID, unitID, number){
        try {
            let numberExport = 0;
            let numberStock = 0
            numberStock = dataMedicineDetail[productID] != undefined ? dataMedicineDetail[productID].Quantity : 0;
            if (productID != 0 && unitID != 0 && number != 0) {
                let dtProduct = premed_datamedicine[productID];
                if (dtProduct) {
                    let unitStandard = dtProduct.UnitID;
                    if (unitID != unitStandard) {
                        let dtUnit = dataMedicineUnit.filter(word => word["UnitChange"] == unitID && word["ProductID"] == productID)
                        let numberChange = 1;
                        if (dtUnit && dtUnit.length > 0) {
                            numberChange = dtUnit[0]["Number"];
                        };
                        numberExport = numberChange * number;
                    }
                    else {
                        numberExport = number;
                    }
                }
            }
            return numberExport
        }
        catch (ex) {
            return 1;
        }
    }

    function Prescription_PriceExchange(productID, unitID){
        try {
            let numberExport = 1;
            let numberStock = 0
            numberStock = dataMedicineDetail[productID] != undefined ? dataMedicineDetail[productID].Quantity : 0;
            if (productID != 0 && unitID != 0) {
                let dtProduct = premed_datamedicine[productID];
                if (dtProduct) {
                    let unitStandard = dtProduct.UnitID;
                    if (unitID != unitStandard) {
                        let dtUnit = dataMedicineUnit.filter(word => word["UnitChange"] == unitID && word["ProductID"] == productID)
                        let numberChange = 1;
                        if (dtUnit && dtUnit.length > 0) {
                            numberChange = dtUnit[0]["Number"];
                        };
                        numberExport = numberChange;
                    }
                    else {
                        numberExport = 1;
                    }
                }
            }
            return numberExport
        }
        catch (ex) {
            return 1;
        }
    }

    function Prescription_CheckQuantityError(data, dataPro){
        $(".collapsestock").collapse();
        let isNext = 1;
        if (data && data.length != 0) {
            for (let i = 0; i < data.length; i++) {
                let item = data[i];
                let _idError = "MedicineQuantityError_" + item.ProductID;
                let _idSucc = "MedicineQuantitySuccess_" + item.ProductID;
                let _finalNum = Number(item.FinalNum) ? Number(item.FinalNum) : 0;
                let itempro = dataPro.find((word) => { return word.idProduct == item.ProductID});
                $("#MedicineQuantityStock_" + item.ProductID).html(formatNumber(_finalNum + itempro.number))
                $("#MedicineQuantityLeft_" + item.ProductID).html(formatNumber(_finalNum))
                if (_finalNum < 0) {
                    isNext = 0;
                    $("#" + _idError).show();
                    $("#" + _idSucc).hide();
                }
                else {
                    $("#" + _idError).hide();
                    $("#" + _idSucc).show();
                }
            }
        }
        return isNext;
    }

    //#endregion

</script>

<script>js_require('/js/comon/initialize_setting.js')</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<style>
    .buttonDeleteClass:hover {
        opacity: 1 !important;
    }

    .medicineSelect.choosen .medic_check {
        opacity: 1 !important;
    }
</style>
