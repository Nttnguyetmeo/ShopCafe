@page
@model MLunarCoffee.Pages.Customer.Service.TabList.TabList_CardModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="container-fluid p-0">
    <div class="row">
        <div class="col-12">
            <div class="card card-plain" id="Div_Tab_List_Card_Master">
                <div class="card-header py-0">
                    <div class="d-lg-flex">
                        <ul class="nav nav-pills p-1 bg-transparent permissionlist" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer" data-bs-toggle="collapse" href="#TLC_infodes">
                                    <i class="text-gradient text-lg text-primary fas fa-info-circle"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="ms-auto my-auto mt-1">
                            <button class="btn bg-gradient-primary btn-sm mt-1 _tab_control_" data-tab="add_tab_cust_card" onclick="Tab_List_Add_New_Card()">
                                @Local["Thêm mới"]
                            </button>
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm mt-1 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                    @Local["Xem thêm"]
                                </button>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="CodePrint" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Mã in thẻ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="createdname" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thông tin tạo"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="consul" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tư vấn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="consul1" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tư vấn"] 2</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="consul2" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tư vấn"] 3</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="amountusing" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Sử dụng"]</p>
                                        </li>

                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="detailusing" type="checkbox">
                                            </div>
                                            <p>@Local["Chi tiết sử dụng"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="servicesource" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nguồn dịch vụ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ghi chú"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm mb-0">@Local["Chi nhánh"]</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="TLC_infodes" class="border-dashed border-1 border-secondary border-radius-md p-3 text-sm text-dark ms-1 mb-2 mt-2 multi-collapse collapse">
                        <h6 class="mb-0">@Local["Quy định chỉnh sửa"]</h6>
                        <p class="text-sm mb-0">@Local["Xóa trong ngày. Chỉ người tạo mới được quyền xóa"]</p>
                    </div>
                </div>
                <div class="card-body pt-2 position-relative">
                    <div class="m-0 mb-3 mobile-responsive" style="max-height:80vh;">
                        <div id="tab_list_card_waiting" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="ContentCard" class="table vt-table mb-0" id="dtContentCard">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width: 40px;">#</th>
                                    <th style="min-width: 250px;">@Local["Thẻ"]</th>
                                    <th data-name="CodePrint">@Local["Mã in thẻ"]</th>
                                    <th>@Local["Số lượng"]</th>
                                    <th style="min-width: 250px;">@Local["Thành tiền"]</th>
                                    <th data-name="createdname" style="min-width: 150px;">@Local["Thông tin tạo"]</th>
                                    <th data-name="consul" style="min-width: 150px;">@Local["Tư vấn"]</th>
                                    <th data-name="consul1" style="min-width: 150px;">@Local["Tư vấn"] 2</th>
                                    <th data-name="consul2" style="min-width: 150px;">@Local["Tư vấn"] 3</th>
                                    <th data-name="amountusing" style="min-width: 250px;">@Local["Sử dụng"]</th>
                                    <th data-name="detailusing" style="min-width: 250px;">@Local["Chi tiết sử dụng"]</th>
                                    <th data-name="servicesource">@Local["Nguồn dịch vụ"]</th>
                                    <th data-name="note">@Local["Ghi chú"]</th>
                                    <th data-name="branch">@Local["Chi nhánh"]</th>
                                    <th style="width: 60px;">@Local["Xử lý"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentCardBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="TLC_btnloadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" style="pointer-events: auto;" onclick="event.preventDefault(); return Tab_List_Customer_Card(0, 1);">
                        @Local["Xem thêm"]
                    </button>
                </div>
            </div>
            <div id="Div_Tab_List_Card_Detail">
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">

    //#region // DECLARE AND INIT

    let DataService;
    let DataUser;
    let DataEmployee;
    let DataBranch;
    let shtable;
    let TLC_data;
    let TLC_limit = 100, TLC_beginID = 0;
    let TLC_isDoneLoadMore = false;

    $(document).ready(function () {
        shtable = $("#dtContentCard").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });

        Master_IndexDB_Reads(_Session_Data, [_Session_Service, _Session_User, _Session_Employee, _Session_Branch]
            , function (data) {
                DataService = data[0];
                DataUser = data[1];
                DataEmployee = data[2];
                DataBranch = data[3];
                Tab_List_Customer_Card(0, 0);
            })
    });


    //#endregion

    //#region // EVENT

    function Tab_List_Event() {
        $('#dtContentCard tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Tab_List_Delete_Card(ID);
        });
        $('#dtContentCard tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Tab_List_Edit_Card(ID);
        });
        $('#dtContentCard tbody').on('click', '.buttonViewClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Tab_List_View_Card(ID);
        });
        $('#dtContentCard tbody').on('click', '.buttonServiceCardLock', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Tab_List_Service_Card_Lock(ID);
        });
        $('#dtContentCard tbody').on('click', '.buttonServiceCardUnLock', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Tab_List_Service_Card_UnLock(ID);
        });
        //$('#dtContentCard tbody').on('click', '.buttonMoveClass', function () {
        //    let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
        //    Tab_List_Move_Card(ID);
        //});
        //$('#dtContentCard tbody').on('click', '.buttonSendMail', function () {
        //    let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
        //    Tab_List_SendMail_Card(ID);
        //});
        $('#dtContentCard tbody').on('click', '.buttonPrintCard', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let Code = $(this).parent().attr('data-code');
            Tab_List_PrintCard(ID, Code);
        });
    }

    //#endregion

    //#region // HANDLE MODAL

    function Tab_List_Close_Detail() {
        $("#Div_Tab_List_Card_Master").css("display", "block");
        $("#Div_Tab_List_Card_Detail").css("display", "none");
        $("#Div_Tab_List_Card_Detail").empty();
    }

    function Tab_List_Edit_Card(ID) {
        $("#Div_Tab_List_Card_Master").css("display", "none");
        $("#Div_Tab_List_Card_Detail").css("display", "block");
        $("#Div_Tab_List_Card_Detail").empty();
        $("#Div_Tab_List_Card_Detail").load("/Customer/Service/TabList/TabList_Card_Detail?CustomerID=" + ser_MainCustomerID + "&CurrentID=" + ID + "&ver=" + versionofWebApplication);
    }

    function Tab_List_View_Card(ID) {
        $("#Div_Tab_List_Card_Master").css("display", "none");
        $("#Div_Tab_List_Card_Detail").css("display", "block");
        $("#Div_Tab_List_Card_Detail").empty();
        $("#Div_Tab_List_Card_Detail").load("/Customer/Service/TabList/TabList_Card_Detail?Type=view&CustomerID=" + ser_MainCustomerID + "&CurrentID=" + ID + "&ver=" + versionofWebApplication);
    }

    function CloseDiv_Tab_List_Card_Detail() {
        $("#Div_Tab_List_Card_Detail").empty();
        $("#Div_Tab_List_Card_Master").css("display", "block");
        $("#Div_Tab_List_Card_Detail").css("display", "none");
    }

    function Tab_List_Move_Card(ID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Customer/Service/TabList/TabList_Card_Move?CustomerID=" + ser_MainCustomerID + "&CurrentID=" + ID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function Tab_List_SendMail_Card(ID) {
        $("#MainSendMail_Content").empty();
        $("#MainSendMail_Content").load('/Mail/MailDetail?CustomerID=' + ser_MainCustomerID
            + '&CustomerCardID=' + ID
            + '&Type=MAILContentCard'
            + '&ver=' + versionofWebApplication,
            function () {
                $("#MainSendMail").addClass('active');
            }
        );
    }
    function Tab_List_PrintCard(ID, Code) {
        syslog_cutlabo('p', Code, ser_MainCustomerID, '');
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load('/Print/print?Type=customer_card&DetailID=' + ID);
        $('#DetailModal').modal('show');
    }
    //#endregion


    //#region // LOAD DATA
    function Tab_List_Customer_Card(TLC_currentID = 0, TLC_isLoadMore = 0) {
        if (TLC_currentID == 0 && TLC_isLoadMore == 0) {
            TLC_data = [];
            TLC_beginID = 0;
            TLC_isDoneLoadMore = false;
            $('#dtContentCardBody').html('');
        }

        AjaxLoad(url = "/Customer/Service/TabList/TabList_Card/?handler=LoadataCard"
            , data =
            {
                'CustomerID': ser_MainCustomerID
                , 'id': TLC_currentID
                , 'limit': TLC_limit
                , 'beginID': TLC_beginID
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "[]") {
                    let datas = JSON.parse(result);
                    let data = datas.Table;
                    let dataCardUsing = datas.Table1;
                    if (TLC_currentID == 0) {
                        TLC_data = TLC_data.concat(data);
                        TLC_beginID = data[data.length - 1].ID;
                        Render_Tab_List_Card(data, dataCardUsing, 'dtContentCardBody');
                    }
                    else {
                        if (data && data.length != 0) {
                            if ($('#TLC_rowContent_' + TLC_currentID).length > 0) {
                                TLC_data = TLC_data.reduce((pre, arr) => {
                                    if (arr.ID == data[0].ID) arr = data[0];
                                    pre.push(arr);
                                    return pre;
                                }, []);
                                $('#TLC_rowContent_' + TLC_currentID).replaceWith(TLC_RenderEach(data[0], dataCardUsing));
                                Tab_List_Event();
                                Checking_TabControl_Permission();
                            }
                            else {
                                if (TLC_isDoneLoadMore) {
                                    TLC_data.push(data[0]);
                                    $('#dtContentCardBody').prepend(TLC_RenderEach(data[0], dataCardUsing));
                                    Tab_List_Event();
                                    Checking_TabControl_Permission();
                                }
                                else {
                                    Tab_List_Customer_Card(0, 0);
                                }
                            }
                        }
                        else {
                            if ($('#TLC_rowContent_' + TLC_currentID).length > 0) {
                                TLC_data = TLC_data.filter(word => {
                                    return word.ID != TLC_currentID
                                })
                                $('#TLC_rowContent_' + TLC_currentID).remove();
                            }
                        }
                    }
                }
                else if (result == "[]") {
                    if (TLC_isLoadMore == 1) {
                        $("#TLC_btnloadMore").hide();
                        TLC_isDoneLoadMore = true;
                    }
                    else {
                        if (TLC_currentID != 0) {
                            if ($('#TLC_rowContent_' + TLC_currentID).length > 0) {
                                TLC_data = TLC_data.filter(word => {
                                    return word.ID != TLC_currentID
                                })
                                $('#TLC_rowContent_' + TLC_currentID).remove();
                            }
                        }
                        else {
                            
                        }
                    }
                }
                else {
                    notiError_SW();
                }
                shtable.Refresh();
            }
            , before = function () {
                $("#tab_list_card_waiting").show();
            }
            , complete = function (e) {
                $("#tab_list_card_waiting").hide();
            });
    }
    //#endregion



    //#region // RENDER DATA

    async function Render_Tab_List_Card(data, data_using_card, id) {
        new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = TLC_RenderEach(item, data_using_card);
                        myNode.insertAdjacentHTML('beforeend', tr);
                        
                    }
                    Tab_List_Event();
                    shtable.Refresh();
                    ToolPopper();
                    Checking_TabControl_Permission();
                }
            }
            resolve();
        })
    }

    function TLC_RenderEach(item, data_using_card) {
        try {
            let isDisabled = item.Per_Is_Disabled == 1 ? 'bg-gray-100' : '';
            let tr = '<td class="d-none">' + item.ID + '</td>'
                + '<td class="vt-number-order"></td>'
                + '<td>' + Render_Tab_List_Card_Info(item.CardName, item.Code, item.TimesUsed, item.ExpiredDate, item.EndLess, item.Is_Time_Used, item.Is_Lock, item.AllService, item.Per_Is_Transfer, item.CustName_Transfer, item.CustCode_Transfer) + '</td>'
                + '<td data-name="CodePrint">' + item.Print_Code + '</td>'
                + '<td class="text-center">' + item.Quantity + '</td>'
                + '<td>' + Render_Tab_List_Card_Amount(item.PriceRoot, item.DiscountAmount, item.PriceDiscounted) + '</td>'
                + '<td data-name="createdname">'
                + Render_Tab_List_Card_Employee(item.Created_By)
                + '<p class="mb-0 text-sm">' + GetDateTime_String_DMY(item.Created) + '</p>'
                + '</td>'
                + '<td data-name="consul">'+ Render_Tab_List_Card_Employee(item.ConsultID)+ '</td>'
                + '<td data-name="consul1">'+ Render_Tab_List_Card_Employee(item.ConsultID1) + '</td>'
                + '<td data-name="consul2">'+ Render_Tab_List_Card_Employee(item.ConsultID2) + '</td>'
                + '<td data-name="amountusing">' + Render_Tab_List_Card_Use(item.PriceUse, item.AmountUsing) + '</td>'
                + '<td data-name="detailusing">' + Render_Tab_List_Card_Detail_Using(item.ID, data_using_card) + '</td>'
                + '<td data-name="servicesource">' + item.Servicesource + '</td>'
                + '<td data-name="note">' + item.Note + '</td>'
                + '<td data-name="branch">' + (DataBranch[item.Branch_ID] != undefined ? DataBranch[item.Branch_ID].Name : '') + '</td>'
                + '<td class="text-nowrap">'
                + Render_Button_Customer_Card_Execute(item.ID, item.Per_Same_User, item.Per_Same_Date, item.Per_Passing_Date
                    , item.Per_Is_Paid
                    , item.Is_Lock
                    , item.Per_Is_Using
                    , item.Per_Is_Disabled
                    , item.Code
                )
                + '</td>'
            tr = `<tr id="TLC_rowContent_${item.ID}" role="row" class="vt-number CLS_clsRowContent cursor-pointer vt-number ${isDisabled}">${tr}</tr>`
            return tr;
        }
        catch (ex) {
            return '';
        }
    }
    function Render_Tab_List_Card_Employee(id) {
        try {

            let result = '';
            if (id != 0) {
                let obj = Fun_GetObject_ByID(DataEmployee, id);
                result = `
                        <div class="d-inline">
                            <img class="avatar avatar-xs me-2" src="${obj.Avatar}" alt="label-image" />
                            <span>${obj.Name}</span>
                        </div>
                    `
            }
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function Render_Tab_List_Card_Info(CardName, Code, TimesUsed, ExpiredDate, EndLess, Is_Time_Used, Is_Lock, IsAllService, Per_Is_Transfer, CustName_Transfer, CustCode_Transfer) {
        let icon = '<i class="vtt-icon vttech-icon-check text-success text-gradient fs-6" ></i>';
        if (Is_Lock == "1" && Per_Is_Transfer == "0") icon = '<i class="vtt-icon vttech-icon-lock-01 text-danger text-gradient fs-6" title="@Local["Khóa"]" data-bs-toggle="tooltip"></i>';
        if (Per_Is_Transfer != "0") icon = `<i class="fas fa-angle-double-right text-info text-gradient fs-6 mt-1" data-bs-html="true" title="<div class='text-start'>@Local["Nhận từ"]</br>${CustCode_Transfer} - ${CustName_Transfer}</div>" data-bs-toggle="tooltip"></i>`;
        try {
            let divexpired = '', timeused = '', divservice = '';
            if (EndLess != 1) {
                divexpired = '<div class="text-dark text-sm d-flex">'
                    + '<span>@Local["Ngày hết hạn"]</span> &nbsp:'
                    + '<span class="font-weight-bold ms-1">' + formatDateClient(ExpiredDate) + '</span>'
                    + '</div>';
            }
            if (Is_Time_Used == 1) {
                timeused = '<div class="text-dark text-sm d-flex">'
                    + '<span>@Local["Lần sử dụng"]</span> &nbsp:'
                    + '<span class="font-weight-bold ms-1">' + TimesUsed + '</span>'
                    + '</div>';
            }

            if (IsAllService == 1) {
                divservice = '<div class="text-dark text-sm d-flex">'
                    + '<span>@Local["Sử dụng cho tất cả dịch vụ"]</span>'
                    + '</div>'
            }
            let result = '<div class="col p-1">'
                + '<div class="d-flex">'
                + '<div class="d-flex">'
                + icon
                + '<div class="ms-2 d-flex flex-column">'
                + '<h6 class="mb-1 text-dark text-sm"><a class="buttonViewClass" href="#">'
                + (Code != '' ? ('<span class="pe-3 fw-bold">' + Code + '</span>') : '')
                + CardName
                + '</a></h6>'
                + divexpired
                + timeused
                + divservice
                + '</div>'
                + '</div>'
                + '</div>'
                + '</div>';



            return result;
        }
        catch {
            return "";
        }
    }

    function Render_Button_Customer_Card_Execute(id, Per_Same_User, Per_Same_Date, Per_Passing_Date
        , Per_Is_Paid
        , Is_Lock
        , Per_Is_Using
        , Per_Is_Disabled
        , Code
    ) {
        let buttons = [];
        if (Per_Is_Disabled == 0) {
            // Lock card
            //if (Per_Is_Using == 0) {
            if (Is_Lock != 0) {
                buttons.push('<button class="buttonGrid" title="@Local["Mở khóa"]" data-bs-toggle="tooltip" value="' + id + '"><i class="buttonServiceCardUnLock vtt-icon vttech-icon-unlock-01"></i></button>')
            }
            else {
                buttons.push('<button class="buttonGrid" title="@Local["Khóa"]" data-bs-toggle="tooltip" value="' + id + '"><i class="buttonServiceCardLock vtt-icon vttech-icon-lock-01"></i></button>')
            }
            //}
            // Edit & Delete Card
            if (((Per_Same_User == 1 && Per_Same_Date == 1) || Per_Passing_Date == 1)
                && Is_Lock == 0
            ) {
                buttons.push('<button class="buttonGrid" title="@Local["Sửa"]" data-bs-toggle="tooltip" value="' + id + '"><i class="buttonEditClass vtt-icon vttech-icon-edit"></i></button>');
            }
            if (((Per_Same_User == 1 && Per_Same_Date == 1) || Per_Passing_Date == 1)
                && Is_Lock == 0
                && Per_Is_Paid == 0
                && Per_Is_Using == 0
            ) {
                buttons.push('<button class="buttonGrid" title="@Local["Xóa"]" data-bs-toggle="tooltip" value="' + id + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>')
            }
            if (Is_Lock == 0) {
                buttons.push('<button data-code="' + Code + '" class="buttonGrid" title="@Local["In"]" data-bs-toggle="tooltip" value="' + id + '" id="per_CustPrintCard"><i class="buttonPrintCard vtt-icon vttech-icon-print"></i></button>')
            }

        }
        return Render_Button_Grid(buttons)

    }


    function Render_Tab_List_Card_Detail_Using(id, data) {
        try {
            let result = "";
            let dataCard = data.filter(word => {
                return word["CardID"] == id
            })
            if (dataCard != undefined && dataCard.length != 0) {
                for (let i = 0; i < dataCard.length; i++) {
                    let item = dataCard[i];
                    result = result + '<div class="card-body px-2 py-1">'
                        + '<div class="ps-2 mb-0">'
                        + '<p class="text-sm m-0">'
                        + ((item.IsPlus == 0) ? '<i class="fa fa-minus text-danger pe-2"></i>' : '<i class="fa fa-plus text-success pe-2"></i>')
                        + '<span class="font-weight-bold pe-2">' + formatNumber(item.Amount) + '</span>'
                        + Fun_GetName_ByID(DataService, item.ServiceID)
                        + '</p>'
                        + '</div>'
                        + '</div>'
                }
            }
            return result;
        }
        catch {
            return "";
        }

    }

    function Render_Tab_List_Card_Amount(PriceRoot, DiscountAmount, PriceDiscounted) {
        let divini = '', divmember = '', divpoint = '', divdiscount = '';
        if (PriceRoot != PriceDiscounted) {
            divini = '<div class="d-flex justify-content-between align-items-center">'
                + '<span class="mt-1 text-sm">@Local["Giá tiền"]</span>'
                + '<span class="text-dark ms-4">' + formatNumber(PriceRoot) + '</span>'
                + '</div>';
        }
        if (DiscountAmount != "0") {
            divdiscount = '<div class="d-flex justify-content-between align-items-center">'
                + '<span class="mt-1 text-sm">@Local["Tiền giảm"]</span>'
                + '<span class="text-dark ms-4">' + formatNumber(DiscountAmount) + '</span>'
                + '</div>';
        }

        result = '<div class="border-0 p-2 bg-gray-100 border-radius-lg">'
            + divini
            + divmember
            + divpoint
            + divdiscount
            + ((divini != '') ? '<hr class="horizontal dark my-2">' : '')
            + '<div class="d-flex justify-content-between align-items-center">'
            + '<span class="mt-1 text-sm fw-bold">@Local["Thành tiền"]</span>'
            + '<span class="text-dark font-weight-bold ms-4">' + formatNumber(PriceDiscounted) + '</span>'
            + '</div>'
            + '</div>';
        return result;
    }

    function Render_Tab_List_Card_Use(PriceUse, AmountUsing) {
        let divini = '', divusing = '';
        divini = '<div class="d-flex justify-content-between">'
            + '<span class="mt-1 text-sm">@Local["Giá trị"]</span>'
            + '<span class="text-dark ms-4">' + formatNumber(PriceUse) + '</span>'
            + '</div>';
        divusing = '<div class="d-flex justify-content-between">'
            + '<span class="mt-1 text-sm">@Local["Đã sử dụng"]</span>'
            + '<span class="text-dark ms-4">' + formatNumber(AmountUsing) + '</span>'
            + '</div>';

        result = '<div class="border-0 p-2 bg-gray-100 border-radius-lg">'
            + divini
            + divusing
            + '<hr class="horizontal dark my-2">'
            + '<div class="d-flex justify-content-between">'
            + '<span class="mt-1 text-sm">@Local["Còn lại"]</span>'
            + '<span class="text-dark font-weight-bold ms-4">' + formatNumber(PriceUse - AmountUsing) + '</span>'
            + '</div>'
            + '</div>';
        return result;
    }

    // #endregion


    // #region // Execute
    function Tab_List_Add_New_Card() {
        $("#Div_Tab_List_Card_Master").css("display", "none");
        $("#Div_Tab_List_Card_Detail").css("display", "block");
        $("#Div_Tab_List_Card_Detail").empty();
        $("#Div_Tab_List_Card_Detail").load("/Customer/Service/TabList/TabList_Card_Detail?CustomerID=" + ser_MainCustomerID + "&ver=" + versionofWebApplication);
    }
    // #endregion
    function Tab_List_Delete_Card(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteTab_List_Delete_Card(id); }, function () { });
    }
    function ExecuteTab_List_Delete_Card(id) {
        AjaxLoad(url = "/Customer/Service/TabList/TabList_Card/?handler=DeleteItemCard"
            , data = {
                'id': id,
                'CustomerID': ser_MainCustomerID
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    syslog_cutcard('d', result, ser_MainCustomerID, '');
                    Tab_List_Customer_Card(id, 0);
                    if (typeof LoadCustomerPaymentInfo === 'function') LoadCustomerPaymentInfo();
                }
                else {
                    notiError("@Local["Thẻ đã sử dụng hoặc đã thanh toán không thể xóa"]")
                }
            }
        );
    }

    // lock and unlock service card
    function Tab_List_Service_Card_Lock(id) {
        const promise = notiConfirm("@Local["Khóa thẻ"]");
        promise.then(function () { Execute_Lock_Service_Card(id, 1); }, function () { });
    }

    function Tab_List_Service_Card_UnLock(id) {
        const promise = notiConfirm("@Local["Mở khóa thẻ"]");
        promise.then(function () { Execute_Lock_Service_Card(id, 0); }, function () { });
    }

    function Execute_Lock_Service_Card(id, type) {
        AjaxLoad(url = "/Customer/Service/TabList/TabList_Card/?handler=LockAndUnlockCard"
            , data = { 'id': id, 'type': type }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    syslog_cutcard('u', result, ser_MainCustomerID, type == 1 ? 'lock' : 'unlock');
                    Tab_List_Customer_Card(id, 1);
                    if (typeof LoadCustomerPaymentInfo !== 'undefined' && $.isFunction(LoadCustomerPaymentInfo)) {
                        LoadCustomerPaymentInfo();
                    }
                } else {
                    notiError_SW();
                }
            }
        );
    }
</script>

<script>js_require('/js/main.js');</script>

