@page
@model MLunarCoffee.Pages.Customer.LaboCusDetailModel
@{
    Layout = null;
}
<script>js_require_notasync('/js/Labo_Template/render_template.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require_notasync('/js/Labo_Template/template_update.js');</script>
<div id="tab_master" class="container-fluid py-0 px-0">
    <div class="row mt-0 p-0 form3" id="custlabForm">
        <div class="col-md-12 col-xl-8 mt-2 flex-grow-1">
            <div class="card mb-2 h-100">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Labo khách hàng"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết labo"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2 ">
                    <div class="row px-1">
                        <div class="field col-12 flex-grow-1 px-1 mt-0">
                            <label>@Local["Dịch vụ"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Labo_Service" onchange="CusLabo_ChangeTab()">
                                <input type="hidden" name="name" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Dịch vụ"]</div>
                                <div id="ccbLabo_Service" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div id="divGroupTeeth" class="field col-12 col-md-12 col-xl-12 px-1 mt-2 flex-grow-1">
                            <div id="teethChoosing_area_Labo" class="h-100 overflow-auto border-dashed border-1 border-secondary border-radius-md p-0" style="display: none;">
                                <div id="divContentteeth_Labo" class="overflow-hidden w-100 p-2  ">

                                    <div id="divteethFront_Labo" class="justify-content-center row   divteethFront">
                                    </div>
                                    <div id="divteethBellow_Labo" class="justify-content-center row   divteethBellow">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row px-1">
                        <div id="per_LaboCustDetail_Reason" class="field col-12 col-md-12 col-lg-3 flex-grow-1 px-1 mt-2">
                            <label>@Local["Lý do"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Warrantly_Labo">
                                <input type="hidden" name="" />
                                <i class="dropdown icon"></i>
                                <i class="remove icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Lý do"]</div>
                                <div id="ccbWarrantly_Labo" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-lg-3 flex-grow-1 px-1 mt-2">
                            <label>@Local["Bác sĩ yêu cầu"] </label>
                            <div class="ui fluid search selection dropdown form-control" id="Doctor_Require_Labo">
                                <input type="hidden" name="historyType" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Bác sĩ yêu cầu"]</div>
                                <div id="ccbDoctor_Require_Labo" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-lg-3 flex-grow-1 px-1 mt-2">
                            <label>@Local["Ngày muốn nhận"]</label>
                            <input id="Receipt_Date" class="flatpickr form-control" type="text" placeholder="eg .@Local["Ngày muốn nhận"]" />
                        </div>
                        <div class="field col-12 col-md-6 col-lg-3 flex-grow-1 px-1 mt-2">
                            <label>@Local["Dáng răng"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="LaboLayout">
                                <input type="hidden" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Dáng răng"]</div>
                                <div id="ccbLaboLayout" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 px-1 mt-2">
                            <label>@Local["Nội dung"]</label>
                            <textarea id="txtContentLaboDetail" class="form-control" placeholder="eg .@Local["Nội dung"]" name="content" rows="2"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 col-xl-4 pt-md-2  ps-xl-0 flex-grow-1">
            <div class="card mb-2 h-100">
                <div class="card-header pb-0 px-3">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Thông tin nhà cung cấp & giá"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết thông tin nhà cung cấp & giá"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2 ">
                    <div class="row px-1">
                        <div class="field col-12 flex-grow-1">
                            <label>@Local["Nhà cung cấp"]  </label>
                            <div class="ui fluid search selection dropdown form-control" id="Labo_Supplier" onchange="CusLabo_ChangeSup()">
                                <input type="hidden" name="statusType" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Nhà cung cấp"]</div>
                                <div id="ccbLabo_Supplier" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row px-1 mt-2">
                        <div class="field col-12 flex-grow-1">
                            <label>
                                <span>@Local["Người nhận"]</span><br>
                                <span>@Local["Người chịu trách nhiệm giao nhận labo"]</span>
                            </label>
                            <div class="ui fluid search selection dropdown form-control" id="Labo_Receiverman">
                                <input type="hidden" class="_validation_option_" data-validation="cbbreceiverman_labo"/>
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Người nhận"]</div>
                                <div id="ccbLabo_Receiverman" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row px-1 d-none" id="per_priceUnitLabo">
                        <div class="field col-12 flex-grow-1">
                            <label>@Local["Đơn giá"] </label>
                            <input id="Labo_Unit_Price" name="source" type="text" class="form-control money" onchange="event.preventDefault(); return CusLabo_Sumary()" />
                        </div>
                    </div>

                    <div class="row px-1 d-none" id="per_quantityUnitLabo">
                        <div class="field col-12 flex-grow-1">
                            <label>@Local["Số lượng"] </label>
                            <input id="QuantityLabo" name="quantitylabo" type="number" class="form-control" onchange="event.preventDefault(); return CusLabo_Sumary()" />
                        </div>
                    </div>
                    <div  id="per_Labo_InputPrice" class="row px-1 mt-2">
                        <div class="field col-12 flex-grow-1">
                            <label>@Local["Giá tiền"] </label>
                            <input id="Labo_Total_Price" name="source" type="text" class="mb-2 form-control money"
                                   onchange="event.preventDefault(); CusLabo_Count_Price_For_All();"
                                   onblur="event.preventDefault(); CusLabo_Count_Price_For_All();" />
                        </div>
                    </div>
                    <div id="per_Labo_InputDiscounted" class="row pe-3 px-1 mt-2 " >
                        <label>@Local["Chiết khấu"]</label>
                        <div class="position-relative">
                            <input id="CusLabo_txtDiscountValue" class="border-right-0 form-control" placeholder="eg .@Local["Chiết khấu"]" type="text" value="0"
                                   onchange="event.preventDefault(); CusLabo_Count_Price_For_All();"
                                   onblur="event.preventDefault(); CusLabo_Count_Price_For_All();">
                            <div id="CusLabo_DiscountUnit" class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-5" style="min-width: 130px;"
                                 onchange="return CusLabo_Count_Price_For_All(); "
                                 onblur="event.preventDefault();CusLabo_Count_Price_For_All();">
                                <input type="hidden" name="name" />
                                <i class="dropdown icon"></i>
                                <div class="default text">@Local["Chiết khấu"]</div>
                                <div id="CusLabo_cbbDiscountUnit" class="menu transition hidden" tabindex="-1" style="min-width: 130px;">
                                    <div class="item" data-value="1">%</div>
                                    <div class="item" data-value="2">VND</div>
                                </div>
                            </div>
                        </div>
                        <span class="text-danger text-sm fw-bold" id="labo_DiscountMaxLabo"></span>
                    </div>
                    <div id="per_Labo_ViewPrice" class="pe-4 px-2 row mt-2 _tab_control_" data-tab="cust_labo_info_price">
                        <div class="bg-gray-100 border-0 border-radius-lg ms-2 mt-3 p-3">
                            <h6 class="text-dark fs-6 mb-3 fw-bold">@Local["Tổng"]</h6>
                            <div class="d-flex justify-content-between">
                                <span class="mt-1 text-sm">@Local["Giá tiền"]</span>
                                <span class="text-dark ms-4" id="CusLabo_lbPrice">0</span>
                            </div>
                            <div class="d-flex justify-content-between">
                                <span class="mt-1 text-sm">@Local["Giảm chiết khấu"]</span>
                                <span class="text-dark ms-4">
                                    <span class="pe-2 text-primary" id="CusLabo_lbDiscountPer"></span>
                                    <span id="CusLabo_lbDiscountAmount">0</span>

                                </span>
                            </div>
                            <hr class="horizontal dark my-2" />
                            <div class="d-flex justify-content-between">
                                <span class="mt-1 text-sm">@Local["Thành tiền"]</span>
                                <span class="text-dark font-weight-bold ms-4" id="CusLabo_lbAmount">0</span>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div id="labcus_detailproarea" class="col-12 mt-2 d-none">
            <div class="card mb-2 h-100">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Labo khách hàng"]</h6>
                                <p class="text-sm mb-0">@Local["Chi tiết labo"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2 ">
                    <div class="row col-12 ms-0">
                        <div class="col-12 col-md-3 col-lg-2 px-1">
                            <div class="ui fluid search selection dropdown form-control labcolor border-0" id="culabColor_0" onchange="CusLabo_AllColor()">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Mã màu"]</div>
                                <div id="cbbculabColor_0" class="menu" tabindex="-1"></div>
                            </div>
                        </div>
                        <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                            <div class="ui fluid search selection dropdown form-control labmater border-0" id="culabMater_0" onchange="CusLabo_AllMater()">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Loại"]</div>
                                <div id="cbbculabMater_0" class="menu" tabindex="-1"></div>
                            </div>
                        </div>
                        <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                            <div class="ui fluid search selection dropdown form-control labdimen border-0" id="culabDimen_0" onchange="CusLabo_AllDemen()">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Kích thước"]</div>
                                <div id="cbbculabDimen_0" class="menu" tabindex="-1"></div>
                            </div>
                        </div>
                        <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                            <div class="ui fluid search selection dropdown form-control labpro border-0" id="culabPro_0" onchange="CusLabo_AllPro()">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Thuộc tính"]</div>
                                <div id="cbbculabPro_0" class="menu" tabindex="-1"></div>
                            </div>
                        </div>
                        <div class="col-12 col-md-12 col-lg-4 px-1 mt-2 mt-lg-0 mt-md-2">
                        </div>
                    </div>
                    <ul class="list-group mt-2" id="CustLab_Prodetail">
                    </ul>
                    <button id="CustLab_NewProdetail" type="button" class="btn btn-secondary button_chose p-3 mx-1" >
                    </button>
                </div>
            </div>
        </div>
        <div id="labcus_detailprintform" class="col-12 position-relative ">
            <div class="row overflow-auto border-dashed border-radius-md  border-1 bg-white  border-secondary p-3 my-3 m-0 position-relative">
                <div id="labo_templateWaiting" class="position-absolute top-0 start-50 translate-middle waitingdiv text-center w-100 mt-5 d-none">
                    <div class="spinner-border text-primary" role="status">
                    </div>
                </div>
                <div class="row w-100 d-flex justify-content-center" id="labo_template_content">
                </div>
            </div>
        </div>
        <div class="card-footer fixed-botombutton">
            <div class="action_Save">
                <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage_Labo"></div>
                <div id="CusLabo_CopyBtn" class="d-none">
                    <button id="per_Labo_InputPrice_Temp" class="_tab_control_" data-tab="cust_labo_input_price">Edit Price</button>
                    <button id="per_Labo_InputDiscounted_Temp" class="_tab_control_" data-tab="cust_labo_input_dicounted">Edit Discounted</button>
                </div>
                <div class="action_Save-Content">
                    <button class="cancelButton btn btn-secondary" form="custlabForm" onclick="CloseDivLaboDetail()">@Local["Đóng"]</button>
                    <button class="btn btn-danger _tab_control_ d-none" id="button_delete_labo_customer" data-tab="cust_labo_btn_deletelabo" onclick="CusLabo_DeleteConfirm();">@Local["Xóa"]</button>
                    <button id="button_save_labo_customer_detail" form="custlabForm" type="button" class="btn bg-gradient-primary mt-2 me-2 CustLabo_btnSave _tab_control_ d-none" data-tab="cust_labo_btn_updatelabo" onclick="CusLabo_Executed()">@Local["Lưu"]</button>
                    <button id="button_update_labo_customer" type="button" class="btn bg-gradient-primary mt-2 me-2 d-none" onclick="CusLabo_Update();">@Local["Cập nhật"]</button>
                    <button id="LaboCusPrint" class=" btn bg-gradient-info d-none" form="custlabForm" onclick="PrintLaboDetail()">@Local["In"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var ser_LaboCustomerID = '@Model._CustomerID';
    var ser_LaboCurrentID = '@Model._CurrentLaboID';
    var ser_Require_EmplyeeeID = '@Model._EmplyeeeID';

    let CurrentCodeLabo = '';
    let dataTeeth;
    let dataService;
    let dataServiceSupplier;
    let dataSupplier;
    let dataTemplate;
    let ser_labo_service;
    let data_template_labo = {};
    let CustLabo_pricechange_flag = 1;
    let CustLabo_DiscountAmount = 0;
    let CustLabo_DiscountPer = 0;
    let CustLabo_Amount = 0
    var laboServiceID;
    var DataUser;
    var CustLabo_Properties = {};
    var CustLabo_TeethType = 0;
    var CustLabo_Flag = 1;
    let Is_Update = 0;
    $(document).ready(function () {
        CusLabo_Prepare();
        CheckPermissionControlInPage(sys_PerControl, '@Model._dtPermissionCurrentPage');
        CheckPermissionControlInPage(sys_PerControlMH, '@Model._dtPermissionCurrentPage');
        Checking_Require_Validation('@Model._dtPermissionCurrentPage');
    });


    function CusLabo_Prepare() {
        if (ser_LaboCurrentID == 0) {
            $("#button_save_labo_customer_detail").attr("data-tab", "");
            $("#button_save_labo_customer_detail").removeClass("d-none");
            Checking_TabControl_Permission();
            CustLabo_ButtonPrice();
        }

        $("#CusLabo_DiscountUnit").dropdown("refresh");
        $("#CusLabo_DiscountUnit").dropdown("set selected", '2');
        $("#Receipt_Date").flatpickr({
            dateFormat: 'd-m-Y H:i',
            enableTime: true,
            time_24hr: true,
            allowInput: true,
            defaultDate: new Date(),
        });
        $('#Labo_Total_Price').divide();
        $('#Labo_Unit_Price').divide();
        $('#CusLabo_txtDiscountValue').divide();
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                CusLabo_LoadIni();
            }
        );
    }

    //#region // Main
    function CusLabo_Executed() {
        var data = new Object();
        data.TabID = Number($('#Labo_Service').dropdown('get value')) ? Number($('#Labo_Service').dropdown('get value')) : 0;
        data.IDSupplier = Number($('#Labo_Supplier').dropdown('get value')) ? Number($('#Labo_Supplier').dropdown('get value')) : 0;
        data.IDDoctor = Number($('#Doctor_Require_Labo').dropdown('get value')) ? Number($('#Doctor_Require_Labo').dropdown('get value')) : 0;
        data.LaboLayout = Number($('#LaboLayout').dropdown('get value')) ? Number($('#LaboLayout').dropdown('get value')) : 0;
        data.IDWarantly = Number($('#Warrantly_Labo').dropdown('get value')) ? Number($('#Warrantly_Labo').dropdown('get value')) : 0;
        data.IDDeliver = Number($('#Labo_Receiverman').dropdown('get value')) ? Number($('#Labo_Receiverman').dropdown('get value')) : 0;
        data.Content = $('#txtContentLaboDetail').val() ? $('#txtContentLaboDetail').val() : "";
        data.PriceRoot = $('#Labo_Total_Price').val() ? $('#Labo_Total_Price').val() : "0";
        data.DiscountPercent = CustLabo_DiscountPer ?? 0;
        data.DiscountAmount = CustLabo_DiscountAmount ?? 0;
        data.Price = CustLabo_Amount ?? 0;
        data.UnitPrice = $('#Labo_Unit_Price').val() ? $('#Labo_Unit_Price').val() : "0";
        let _quantityLabo = $('#QuantityLabo').val() ? $('#QuantityLabo').val() : "0";
        data.Quantity = _quantityLabo;
        data.Receipt_Date = $('#Receipt_Date').val() ? $('#Receipt_Date').val() : "";
        data.DataTemplate = JSON.stringify(data_template_labo);
        data.LaboServiceID = laboServiceID;
        let teethChoosing = "";
        var checkTeeth = document.querySelectorAll('#divContentteeth_Labo .checkTeeth');
        if (checkTeeth.length > 0) {
            for (let i = 0; i < checkTeeth.length; i++) {
                if (checkTeeth[i].checked) {
                    teethChoosing = teethChoosing + checkTeeth[i].value + ",";
                }
            }
        }
        data.TeethChoosing = teethChoosing;
        $('#textShowMessage_Labo').html('');
        if (_quantityLabo == 0) {
            $('#textShowMessage_Labo').html('@Local["Số lượng labo phải lớn hơn 0"]');
        }
        if ($('#textShowMessage_Labo').html() == '') {
            if (CustLabo_CheckType(CustLabo_Properties)) {
                let dataProperties = [];
                for ([key, value] of Object.entries(CustLabo_Properties)) {
                    if (value.IsNoTeeth) {
                        value.Teeth = 0;
                    }
                    dataProperties.push(value);
                }
                $('#custlabForm').form('validate form');
                if ($('#custlabForm').form('is valid')) {
                    AjaxLoad(url = "/Customer/LaboCusDetail/?handler=ExcuteData"
                        , data = {
                            'data': JSON.stringify(data)
                            , 'properties': JSON.stringify(dataProperties)
                            , 'CurrentID': ser_LaboCurrentID
                            , 'CustomerID': ser_LaboCustomerID
                        }
                        , async = true
                        , error = function () {notiError_SW()}
                        , success = function (result) {
                            if (result != "0") {
                                notiSuccess();
                                CurrentCodeLabo = result;
                                syslog_cutlabo(ser_LaboCurrentID == 0 ? 'i' : 'u', result, ser_LaboCustomerID, '');

                                if (typeof CustLabo_LoadData === 'function') CustLabo_LoadData(ser_LaboCurrentID, 0);
                                CloseDivLaboDetail();
                            } else {
                                notiError_SW();
                            }
                        }
                        , sender = $(".CustLabo_btnSave")
                    );
                }
            }
        }
        return false;
    }
    function CustLabo_CheckType (_data) {
        try {
            if (!$('#labcus_detailproarea').length) {
                return true;
            }
            else {
                $('.labmater').removeClass('error');
                let ispass = true;
                for ([key, value] of Object.entries(CustLabo_Properties)) {
                    if (Number(value.Material) != 0) {
                        $('#culabMater_' + key).removeClass('error');
                    }
                    else {
                        $('#culabMater_' + key).addClass('error');
                        ispass = false;
                    }
                }
                return ispass;
            }
        }
        catch (e) {
            return false;
        }
    }
    function CusLabo_LoadIni() {
        AjaxLoad(url = "/Customer/LaboCusDetail/?handler=LoadInitialize"
            , data = { 'CustomerID': ser_LaboCustomerID, 'CurrentID': ser_LaboCurrentID }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {

                    let data = JSON.parse(result);
                    let data_doc = data.Doctor;
                    dataServiceSupplier = data.ServiceSupplier;
                    dataService = data.Service;
                    dataTeeth = data.Teeth;
                    dataTemplate = data.Template;
                    dataWarantly = data.Warantly;
                    dataSupplier = data.Supplier;

                    Load_Combo(Object.values(DataUser), "ccbLabo_Receiverman", false);
                    Load_Combo(dataWarantly, "ccbWarrantly_Labo", false);
                    Load_Combo(data_doc, "ccbDoctor_Require_Labo", true);
                    Load_Combo(dataSupplier, "ccbLabo_Supplier", true);
                    Load_Combo(DataLabo_Layout, "ccbLaboLayout", false);
                    Load_Combo(DataLabo_Color, "cbbculabColor_0", false);
                    Load_Combo(DataLabo_Material, "cbbculabMater_0", false);
                    Load_Combo(DataLabo_Dimesion, "cbbculabDimen_0", false);
                    Load_Combo(DataLabo_Properties, "cbbculabPro_0", false);

                    if (DataLabo_Properties == undefined || DataLabo_Properties.length == 0) {
                        $('#labcus_detailproarea').remove();
                    }
                    else {
                        $('#labcus_detailproarea').removeClass('d-none');
                    }
                    if (!$('#labcus_detailproarea').length) {
                        $("#per_priceUnitLabo").removeClass('d-none');
                        $("#per_quantityUnitLabo").removeClass('d-none');

                    }
                    $("#Doctor_Require_Labo").dropdown("set selected", ser_Require_EmplyeeeID);
                    Render_Customer_Labo(DataTeethLabo, dataService, "ccbLabo_Service");
                    if (dataService.length != 0) $("#Labo_Service").dropdown("set selected", dataService[0].ID);
                    if (Number(ser_LaboCurrentID) != 0) {
                        let dataupdate = data.CurrentDetail;
                        let _properties = data.PropertiesDetail;
                        CurrentCodeLabo = dataupdate[0].Lab_Code;
                        CusLabo_DataUpdate(dataupdate, _properties);
                        Checking_TabControl_Permission();
                        CusLabo_ShowButton();
                    }

                    Checking_TabControl_Permission();
                } else {
                    notiError_SW();
                }
            }
        );

    }
    function CusLabo_DataUpdate(dataLaboCus, _properties) {
        if (dataLaboCus) {
            $("#Labo_Service").dropdown("refresh");
            $("#Labo_Service").dropdown("set selected", dataLaboCus[0].TabID);
            $("#Labo_Service").addClass("disabled");
            CusLabo_FillTeeth(dataLaboCus[0].Teeth);
            ser_SupplierID = dataLaboCus[0].SupID;
            $("#Labo_Supplier").dropdown("refresh");
            $("#Labo_Supplier").dropdown("set selected", dataLaboCus[0].SupID);
            $("#Doctor_Require_Labo").dropdown("refresh");
            $("#Doctor_Require_Labo").dropdown("set selected", dataLaboCus[0].Doctor_ID);
            $("#LaboLayout").dropdown("refresh");
            $("#LaboLayout").dropdown("set selected", dataLaboCus[0].TeethLayout);
            $("#Warrantly_Labo").dropdown("refresh");
            $("#Warrantly_Labo").dropdown("set selected", dataLaboCus[0].IDWarantly);
            $("#Labo_Receiverman").dropdown("refresh");
            $("#Labo_Receiverman").dropdown("set selected", dataLaboCus[0].IDDeliver);

            if (dataLaboCus[0].AllowEdit == 1) {
                $("#button_save_labo_customer_detail").removeClass("d-none");
                $("#button_delete_labo_customer").removeClass("d-none");
            }
            $("#LaboCusPrint").removeClass("d-none");
            $('#txtContentLaboDetail').val(dataLaboCus[0].Content);
            $('#Receipt_Date').val(GetDateTime_String_DMYHM(dataLaboCus[0].Receipt_Date));
            $('#Labo_Unit_Price').val(dataLaboCus[0].UnitPrice);
            $('#QuantityLabo').val(dataLaboCus[0].Quantity);
            $('#Labo_Total_Price').val(dataLaboCus[0].PriceRoot);
            CustLabo_DiscountAmount = dataLaboCus[0].DiscountAmount;
            CustLabo_DiscountPer = dataLaboCus[0].DiscountPercent;
            CustLabo_Amount = dataLaboCus[0].Price;
            if(CustLabo_DiscountPer != 0){
                $("#CusLabo_txtDiscountValue").val(formatNumber(CustLabo_DiscountPer));
                $("#CusLabo_DiscountUnit").dropdown("refresh");
                $("#CusLabo_DiscountUnit").dropdown("set selected", '1');
            }
            else {
                $("#CusLabo_txtDiscountValue").val(formatNumber(CustLabo_DiscountAmount));
            }
            data_template_labo = JSON.parse(dataLaboCus[0].DataTemplate);
            CusLabo_RenderTemplate(data_template_labo, "labo_template_content");
            for (let k = 0; k < _properties.length; k++) {
                let randomId = (new Date()).getTime() + Math.floor(Math.random() * 100) + 1;
                let key = _properties[k].Teeth != 0 ? _properties[k].Teeth : randomId;
                _properties[k].IsNoTeeth = (_properties[k].Teeth == 0) ? 1 : 0;
                _properties[k].Teeth = (_properties[k].Teeth == 0) ? randomId : _properties[k].Teeth;
                CustLabo_Properties[key] = _properties[k];
                CusLaboPro_RenderRow(key, _properties[k], "CustLab_Prodetail");
            }
            $("#CusLabo_CopyBtn").append("<button class='_tab_control_' data-tab='cust_labo_btn_updatelabo'>Edit</button>");
            $("#CusLabo_CopyBtn").append("<button class='_tab_control_' data-tab='cust_labo_btn_deletelabo'>Delete</button>");
        }
    }

    function CusLabo_ShowButton () {
        if (!$.trim($("#button_save_labo_customer_detail").html()) == true || $("#button_save_labo_customer_detail").hasClass("d-none")) {
            $("#button_update_labo_customer").removeClass("d-none");
            CusLabo_HideUpdate();
            Is_Update = 1;
        }
        CustLabo_ButtonPrice();
    }
    function CustLabo_ButtonPrice(){
        if(!$("#per_Labo_InputPrice_Temp").length){
            $("#per_Labo_InputPrice").addClass("d-none")
        }
        if(!$("#per_Labo_InputDiscounted_Temp").length){
            $("#per_Labo_InputDiscounted").addClass("d-none")
        }
    }

    //#endregion
    //#region // Event
    function CusLabo_ChangeTab() {
        CustLabo_ResetAll();
        let idTab = Number($('#Labo_Service').dropdown('get value'));
        let dataTab = dataService.filter(word => word["ID"] == idTab);
        if (dataTab != undefined && dataTab != null && dataTab.length != 0) {
            let teeth = dataTab[0].Teeth;
            CustLabo_TeethType = dataTab[0].TeethType;
            if (teeth != "") {
                $('#teethChoosing_area_Labo').show();
                RenderTeethFront_TeethChoose(dataTeeth, "divteethFront_Labo", CustLabo_TeethType, dataTab[0].TeethDenture, teeth);
                RenderTeethBellow_TeethChoose(dataTeeth, "divteethBellow_Labo", CustLabo_TeethType, dataTab[0].TeethDenture, teeth);
                $("#labcus_detailproarea").removeClass('d-none');
                $("#per_priceUnitLabo").addClass('d-none');
                $("#per_quantityUnitLabo").addClass('d-none');
                CusLabo_TeethCheck();
            }
            else {
                $('#divteethFront_Labo').empty();
                $('#divteethBellow_Labo').empty();
                $('#teethChoosing_area_Labo').hide();
                $("#labcus_detailproarea").addClass('d-none');
                $("#per_priceUnitLabo").removeClass('d-none');
                $("#per_quantityUnitLabo").removeClass('d-none');
            }
        }
        else{
            $('#teethChoosing_area_Labo').hide();
            $("#labcus_detailproarea").addClass('d-none');
        }
    }
    function CustLabo_ResetAll() {
        $('#Labo_Unit_Price').val(0);
        $('#QuantityLabo').val(0);
        $('#Labo_Total_Price').val(0);
        CustLabo_Properties = {};
        $('#CustLab_Prodetail').html('');
    }
    function CusLabo_ChangeSup() {
        try {
            let idSupp = Number($('#Labo_Supplier').dropdown('get value'));
            let data_temp = dataTemplate.filter(word => word["ID"] == idSupp);
            if (data_temp != undefined && data_temp != null && data_temp.length != 0) {
                $('#labcus_detailprintform').removeClass('d-none');
                data_template_labo = JSON.parse(data_temp[0].Form);
                CusLabo_RenderTemplate(data_template_labo, "labo_template_content");
            } else {
                data_template_labo = {};
                $('#labcus_detailprintform').addClass('d-none');
                $('#labo_template_content').empty();
            }
            $(".vtprint-hiderow").addClass('d-none');
        }
        catch (ex) {
            data_template_labo = {};
            $('#labcus_detailprintform').addClass('d-none');
            $('#labo_template_content').empty();
        }

    }
    function CusLabo_TeethCount() {
        let count = $('#divContentteeth_Labo .checkTeeth:checked').length;
        let count2 = $("#CustLab_Prodetail .teethproperties").length;
        $('#QuantityLabo').val(Math.max(count, count2));
    }
    function CusLabo_TeethCheck() {
        $("#divContentteeth_Labo .checkTeeth").change(function () {
            CusLaboPro_NewRow($(this)[0].value);
            CusLabo_TeethCount();
            CusLabo_Sumary(unitprice = 1);
        });
         $("#CustLab_NewProdetail").unbind('click').on('click', function () {
            let randomid = (new Date()).getTime();
            CusLaboPro_NewRow(randomid, true);
            CusLabo_TeethCount();
            CusLabo_Sumary(unitprice = 1);
        });
    }
    function CusLabo_Sumary(unitprice) {
        if (unitprice == 1) {
            let totalAmount = 0;
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                totalAmount = totalAmount + (value.Selected == 1 ? value.UnitPrice : 0);
            }
            $('#Labo_Total_Price').val(totalAmount);
        }
        else {
            let number = $('#QuantityLabo').val() ? Number($('#QuantityLabo').val()) : 0;
            let unitprice = $('#Labo_Unit_Price').val() ? Number($('#Labo_Unit_Price').val()) : 0;
            $('#Labo_Total_Price').val(number * unitprice);
        }

    }
    function CusLabo_FillTeeth(TeethChoosing) {
        if (TeethChoosing != "") {
            $('#teethChoosing_area_Labo').show();
            var x = document.getElementsByClassName("checkTeeth");
            var teehchose = TeethChoosing.split(",")
            for (let i = 0; i < x.length; i++) {
                for (let j = 0; j < teehchose.length; j++) {
                    if (x[i].value == teehchose[j]) {
                        x[i].checked = true;
                    }
                }
            }
        }
    }

    function CusLabo_Count_Price_For_All() {
        if (CustLabo_pricechange_flag == 1) {
            CustLabo_pricechange_flag = 0;
            let checkValid = CusLabo_ValidateDiscount();
            if (checkValid.isValid) {
                let priceRoot = !isNaN(Number($('#Labo_Total_Price').val())) ? Number($('#Labo_Total_Price').val()) : 0;
                let discountVal = !isNaN(Number($('#CusLabo_txtDiscountValue').val())) ? Number($('#CusLabo_txtDiscountValue').val()) : 0;
                let discountUnit = $("#CusLabo_DiscountUnit").dropdown("get value") ? Number($("#CusLabo_DiscountUnit").dropdown("get value")) : 2;
                CustLabo_DiscountAmount = (discountUnit == 1) ? priceRoot * (discountVal / 100) : discountVal;
                CustLabo_Amount = priceRoot - CustLabo_DiscountAmount;
                if ($("#CusLabo_lbPrice").length > 0) $("#CusLabo_lbPrice").html(formatNumber(priceRoot));
                if ($("#CusLabo_lbAmount").length > 0) $("#CusLabo_lbAmount").html(formatNumber(CustLabo_Amount));
                if ($("#CusLabo_lbDiscountAmount").length > 0) $("#CusLabo_lbDiscountAmount").html(formatNumber(CustLabo_DiscountAmount));

                if (discountUnit == 1) {
                    //Type %
                    CustLabo_DiscountPer = discountVal;
                    $("#CusLabo_lbDiscountPer").html(`(${discountVal}%)`);
                }
                else {
                    //Type VND
                    CustLabo_DiscountPer = 0;
                    $("#CusLabo_lbDiscountPer").html('');
                }
                CustLabo_pricechange_flag = 1;
            }
            else {
                CustLabo_pricechange_flag = 1;
                $('#CusLabo_txtDiscountValue').val(checkValid.value ?? 0);
            }
        }
    }

    function CusLabo_ValidateDiscount() {
        let discountUnit = $("#CusLabo_DiscountUnit").dropdown("get value") ? Number($("#CusLabo_DiscountUnit").dropdown("get value")) : 2;
        let priceRoot = !isNaN(Number($('#Labo_Total_Price').val())) ? Number($('#Labo_Total_Price').val()) : 0;
        let discountVal = !isNaN(Number($('#CusLabo_txtDiscountValue').val())) ? Number($('#CusLabo_txtDiscountValue').val()) : 0;
        let result = {};
        result.isValid = false;
        result.value = 0;
        if (discountUnit == 1) {
            //Type %
            if (discountVal > 100) {
                result.value = 100;
                result.isValid = false;
            }
            else {
                result.value = discountVal;
                result.isValid = true;
            }
        }
        else {
            //Type VND
            if (discountVal > priceRoot) {
                result.value = priceRoot;
                result.isValid = false;
            }
            else {
                result.value = discountVal;
                result.isValid = true;
            }
        }
        return result;
    }
    // #endregion

    //#region // Properties
    function CusLaboPro_NewRow(teeth, isNoTeeth = false) {

        let element = {};
        element.LaboProID = 0;
        element.Teeth = teeth;
        element.Color = 0;
        element.Dimension = 0;
        element.Properties = 0;
        element.Material = 0;
        element.UnitPrice = 0;
        element.Content = '';
        element.IsNoTeeth = isNoTeeth;

        if (CustLabo_Properties[teeth] == undefined) {
            element.Selected = 1;
            CustLabo_Properties[teeth] = element;
            $('#custeeth_' + teeth).remove();
            CusLaboPro_RenderRow(teeth, element, "CustLab_Prodetail").then(() => {
                CusLabo_TeethCount();
            });
        }
        else {
            delete CustLabo_Properties[teeth];
            $('#custeeth_' + teeth).remove();
        }
    }
    async function CusLaboPro_RenderRow(key, value, id) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let tr =
                        `<li id="custeeth_${value.Teeth}" data-id="${value.Teeth}" class="teethproperties row row-add border-dashed border-1 position-relative border-secondary border-radius-lg  border-0 d-flex justify-content-between ps-0 mb-2 border-radius-lg ">
                                     <div class="d-flex align-items-center pe-3">
                                        <div class="row col-12 w-100 mx-0">
                                            <div class="col-12 col-md-3 col-lg-2 px-1">
                                                <div class="input-group flex-nowrap">
                                                    <div class="input-group-text input-group-text px-2">
                                                        <span id="culabColordiv_${value.Teeth}" class="badge mx-1 p-0 px-2">
                                                            <span class="text-sm fw-bold text-primary">${CusLaboPro_GetTeeth(value.Teeth,Is_Update)}</span>
                                                        </span>
                                                    </div>
                                                    <div class="ui fluid search selection dropdown form-control labcolor" id="culabColor_${value.Teeth}">
                                                        <input type="hidden" />
                                                        <i class="dropdown icon"></i>
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Mã màu"]</div>
                                                        <div id="cbbculabColor_${value.Teeth}" class="menu" tabindex="-1"></div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                                                <div class="ui fluid search selection dropdown form-control labmater ${Is_Update == 1 ? 'disabled' : ''}" id="culabMater_${value.Teeth}">
                                                    <input type="hidden" />
                                                    <i class="dropdown icon"></i>
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">eg .@Local["Loại"]</div>
                                                    <div id="cbbculabMater_${value.Teeth}" class="menu" tabindex="-1"></div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                                                <div class="ui fluid search selection dropdown form-control labdimen" id="culabDimen_${value.Teeth}">
                                                    <input type="hidden" />
                                                    <i class="dropdown icon"></i>
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">eg .@Local["Kích thước"]</div>
                                                    <div id="cbbculabDimen_${value.Teeth}" class="menu" tabindex="-1"></div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-3 col-lg-2 px-1 mt-2 mt-lg-0 mt-md-0">
                                                <div class="ui fluid search selection dropdown form-control labpro" id="culabPro_${value.Teeth}">
                                                    <input type="hidden" />
                                                    <i class="dropdown icon"></i>
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">eg .@Local["Thuộc tính"]</div>
                                                    <div id="cbbculabPro_${value.Teeth}" class="menu" tabindex="-1"></div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-12 col-lg-4 px-1 mt-2 mt-lg-0 mt-md-2">
                                                <input class="form-control labnote" placeholder="eg .@Local["Ghi chú"]" id="culabNote_${value.Teeth}">
                                            </div>
                                        </div>
                                     </div>
                                </li>`;

                    myNode.insertAdjacentHTML("beforeend", tr);
                }
                CusLaboPro_FillData(key, value);
                CusLaboPro_EventRow(key);
                resolve();
            }, 100)
        });
    }
    async function CusLaboPro_FillData(key, value) {
        return new Promise((resolve, reject) => {
            Load_Combo(DataLabo_Color, "cbbculabColor_" + key, false);
            $("#culabColor_" + key).dropdown("refresh");
            $("#culabColor_" + key).dropdown("set selected", value.Color);
            Load_Combo(DataLabo_Dimesion, "cbbculabDimen_" + key, false);
            $("#culabDimen_" + key).dropdown("refresh");
            $("#culabDimen_" + key).dropdown("set selected", value.Dimension);
            Load_Combo(DataLabo_Material, "cbbculabMater_" + key, false);
            $("#culabMater_" + key).dropdown("refresh");
            $("#culabMater_" + key).dropdown("set selected", value.Material);
            Load_Combo(DataLabo_Properties, "cbbculabPro_" + key, false);
            $("#culabPro_" + key).dropdown("refresh");
            $("#culabPro_" + key).dropdown("set selected", value.Properties);
            $('#culabNote_' + key).val(value.Content);
            let _item = DataLabo_Color.filter(word => word["ID"] == value.Color);
            if (_item != undefined && _item.length == 1) {
                $('#culabColordiv_' + key).css("background", _item[0].Value);
            }
            Checking_TabControl_Permission();
            resolve();
        });
    }
    function CusLaboPro_EventRow(key) {
        $('#custeeth_' + key + ' .labcolor').unbind('change').change(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = this.id
                let id = idcom.replace("culabColor_", "")
                CustLabo_Properties[id].Color = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
                CustLabo_Flag = 1;
            }
        });
        $('#custeeth_' + key + ' .labdimen').unbind('change').change(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = this.id
                let id = idcom.replace("culabDimen_", "")
                CustLabo_Properties[id].Dimension = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
                CustLabo_Flag = 1;
            }
        });
        $('#custeeth_' + key + ' .labmater').unbind('change').change(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = this.id
                let id = idcom.replace("culabMater_", "")
                CustLabo_Properties[id].Material = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
                let _item = DataLabo_Material.filter(word => word["ID"] == CustLabo_Properties[id].Material);
                if (_item != undefined && _item.length == 1) {
                    CustLabo_Properties[id].UnitPrice = _item[0].UnitPrice;
                }
                else CustLabo_Properties[id].UnitPrice = 0;
                CusLabo_Sumary(unitprice = 1);
                CustLabo_Flag = 1;

            }
        });
        $('#custeeth_' + key + ' .labpro').unbind('change').change(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = this.id
                let id = idcom.replace("culabPro_", "")
                CustLabo_Properties[id].Properties = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
                CustLabo_Flag = 1;
            }
        });
        $('#custeeth_' + key + ' .labnote').unbind('change').change(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = this.id
                let id = this.id.replace("culabNote_", "")
                CustLabo_Properties[id].Content = $('#' + idcom).val();
                CustLabo_Flag = 1;
            }
        });
        $('#custeeth_' + key + ' .buttonDeleteClass').unbind('click').click(function () {
            if (CustLabo_Flag == 1) {
                CustLabo_Flag = 0;
                let idcom = $(this).attr('data-id');
                delete CustLabo_Properties[idcom];
                $('#custeeth_' + idcom).remove();
                CusLabo_TeethCount();
                CusLabo_Sumary(unitprice = 1);
                CustLabo_Flag = 1;
            }
        });
    }
    function CusLaboPro_GetTeeth(teethid, isUpdate) {
        let _datateeth = dataTeeth.filter(word => word["ID"] == teethid);
        if (_datateeth != undefined && _datateeth.length == 1) {
            if (Number(CustLabo_TeethType) == 0) return _datateeth[0].TeethName;
            if (Number(CustLabo_TeethType) == 1) return _datateeth[0].TeethNameBaby;
            if (Number(CustLabo_TeethType) == 2) return _datateeth[0].TeethNameMerge;
        }
        if(isUpdate == 1) return ''
        return `<i data-id="${teethid}" class="opacity-2 buttonDeleteClass text-danger fas fa-times"></i>`;
    }
    function CusLabo_AllPro() {
        if (CustLabo_Flag == 1) {
            CustLabo_Flag = 0;
            let _d = Number($('#culabPro_0').dropdown('get value')) ? Number($('#culabPro_0').dropdown('get value')) : 0;
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                if (value.Selected == 1) {
                    value.Properties = _d;
                    $("#culabPro_" + key).dropdown("refresh");
                    $("#culabPro_" + key).dropdown("set selected", _d);
                }
            }
            CustLabo_Flag = 1;
        }
    }
    function CusLabo_AllDemen() {
        if (CustLabo_Flag == 1) {
            CustLabo_Flag = 0;
            let _d = Number($('#culabDimen_0').dropdown('get value')) ? Number($('#culabDimen_0').dropdown('get value')) : 0;
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                if (value.Selected == 1) {
                    value.Dimension = _d;
                    $("#culabDimen_" + key).dropdown("refresh");
                    $("#culabDimen_" + key).dropdown("set selected", _d);

                }
            }
            CustLabo_Flag = 1;
        }
    }
    function CusLabo_AllMater() {
        if (CustLabo_Flag == 1) {
            CustLabo_Flag = 0;
            let _d = Number($('#culabMater_0').dropdown('get value')) ? Number($('#culabMater_0').dropdown('get value')) : 0;
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                if (value.Selected == 1) {
                    value.Material = _d;
                    let _item = DataLabo_Material.filter(word => word["ID"] == _d);
                    if (_item != undefined && _item.length == 1) {
                        CustLabo_Properties[key].UnitPrice = _item[0].UnitPrice;
                    }
                    else CustLabo_Properties[key].UnitPrice = 0;
                    $("#culabMater_" + key).dropdown("refresh");
                    $("#culabMater_" + key).dropdown("set selected", _d);
                }
            }
            CusLabo_Sumary(1);
            CustLabo_Flag = 1;
        }
    }
    function CusLabo_AllColor() {
        if (CustLabo_Flag == 1) {
            CustLabo_Flag = 0;
            let _d = Number($('#culabColor_0').dropdown('get value')) ? Number($('#culabColor_0').dropdown('get value')) : 0;
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                if (value.Selected == 1) {
                    value.Color = _d;
                    $("#culabColor_" + key).dropdown("refresh");
                    $("#culabColor_" + key).dropdown("set selected", _d);
                }
            }
            CustLabo_Flag = 1;
        }
    }

    //#endregion

    //#region // Other
    function PrintLaboDetail() {
        CusLabo_RenderTemplate(data_template_labo, "labo_template_content");
        fn_Print(printedid = "labo_template_content"
            , beforefun = function () {
                $('#labo_templateWaiting').removeClass('d-none');
                $(".vtprint-hiderow").removeClass('d-none');
            }
            , afterfun = function () {
                $('#labo_templateWaiting').addClass('d-none');
                $(".vtprint-hiderow").addClass('d-none');
            }
        );
        syslog_cutlabo('p', CurrentCodeLabo, ser_LaboCustomerID, '');
    }
    function CusLabo_DeleteConfirm () {
        const promise = notiConfirm();
        promise.then(function () {CusLabo_Delete(ser_LaboCurrentID);}, function () { });
    }
    function CusLabo_Delete (id) {
        AjaxLoad(url = "/Customer/LaboCusDetail/?handler=Delete"
            , data = {'id': id}
            , async = true
            , error = function () {notiError_SW()}
            , success = function (result) {
                if (result != "0") {
                    syslog_cutlabo('d', result, ser_MainCustomerID, '');
                    notiSuccess();
                    CloseDivLaboDetail();
                    CustLabo_LoadData(id, 0);
                } else {
                    notiError_SW();
                }
            }
        );
    }
    function CusLabo_Update () {
        var data = new Object();
        data.IDWarantly = Number($('#Warrantly_Labo').dropdown('get value')) ? Number($('#Warrantly_Labo').dropdown('get value')) : 0;
        data.IDSupplier = Number($('#Labo_Supplier').dropdown('get value')) ? Number($('#Labo_Supplier').dropdown('get value')) : 0;
        data.IDDoctor = Number($('#Doctor_Require_Labo').dropdown('get value')) ? Number($('#Doctor_Require_Labo').dropdown('get value')) : 0;
        data.LaboLayout = Number($('#LaboLayout').dropdown('get value')) ? Number($('#LaboLayout').dropdown('get value')) : 0;
        data.IDDeliver = Number($('#Labo_Receiverman').dropdown('get value')) ? Number($('#Labo_Receiverman').dropdown('get value')) : 0;
        data.Content = $('#txtContentLaboDetail').val() ? $('#txtContentLaboDetail').val() : "";
        data.Receipt_Date = $('#Receipt_Date').val() ? $('#Receipt_Date').val() : "";
        data.DataTemplate = JSON.stringify(data_template_labo);



        $('#custlabForm').form('validate form');
        if ($('#custlabForm').form('is valid')) {
            let dataProperties = [];
            for ([key, value] of Object.entries(CustLabo_Properties)) {
                if (value.IsNoTeeth) {
                    value.Teeth = 0;
                }
                dataProperties.push(value);
            }
            AjaxLoad(url = "/Customer/LaboCusDetail/?handler=Update"
                , data = {
                    'data': JSON.stringify(data)
                    , 'properties': JSON.stringify(dataProperties)
                    , 'CurrentID': ser_LaboCurrentID
                }
                , async = true
                , error = function () {notiError_SW()}
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        syslog_cutlabo('u', result, ser_LaboCustomerID, '');
                        if (typeof CustLabo_LoadData === 'function') CustLabo_LoadData(ser_LaboCurrentID, 0);
                        CloseDivLaboDetail();
                    } else {
                        notiError_SW();
                    }
                }
                , sender = $(".button_update_labo_customer")
            );
        }
        return false;
    }

    function CusLabo_HideUpdate () {
        $("#Labo_Service").addClass("disabled");
        $("#Labo_Total_Price").attr("disabled", "disabled");
        $("#CusLabo_txtDiscountValue").attr("disabled", "disabled");
        $("#CusLabo_DiscountUnit").addClass("disabled");
        $("#Labo_Unit_Price").attr("disabled", "disabled");
        $("#QuantityLabo").attr("disabled", "disabled");
        $("#divContentteeth_Labo .checkTeeth").attr("disabled", "disabled");
        $(".labmater").addClass("disabled");
        $("#CustLab_NewProdetail").remove();
    }

    //#endregion

    // #region // Render template
    async function CusLabo_RenderTemplate(DataValue, id) {
        return new Promise((resolve, reject) => {
            let datafield, dtTables = {};
            AjaxLoad(url = "/Customer/LaboCusDetail/?handler=LoadDataValue"
                , data = { 'commandid': 13, 'currentID': ser_LaboCurrentID }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != "") {
                        if (result == "[]") CusLabo_Printf_Render(DataValue, datafield, dtTables, id);
                        else {
                            let data = JSON.parse(result);
                            for (const [key, value] of Object.entries(data)) {
                                if (key == 'Table') datafield = value;
                                else {
                                    dtTables[key] = value;
                                }
                            }
                            if (datafield != undefined && datafield.length != 0) {
                                CusLabo_Printf_Render(DataValue, datafield, dtTables, id);
                            }
                        }
                    }
                });
        });
    }
    async function CusLabo_Printf_Render(data, datafield, dtTables, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                fn_RenderForm(myNode, data);
                if (datafield != undefined && datafield.length == 1) {
                    fn_FillForm(item = datafield[0], id = id);
                }
                if (dtTables != undefined && Object.keys(dtTables).length > 0) {
                    fn_FillTables(dtTables, item = datafield[0], id = id);
                }
            }
            CusLabo_EventTemplate(id);
        })
    }
    function CusLabo_EventTemplate(id) {
        $("#" + id + " input[type='checkbox']").change(function (event) {
            let answer = this.checked;
            let id = $(this).attr("id");
            fn_FormUpdate(id, answer, data_template_labo);
        });
        $("#labo_template_content input[type='radio']").change(function (event) {
            let id = $(this).attr("id");
            let name = $(this).attr("name");
            let _obj = $('#labo_template_content input[type="radio"][name="' + name + '"]');
            if (_obj != undefined) {
                _obj.each(function () {
                    if ($(this).attr("id") == id) {
                        fn_FormUpdate($(this).attr("id"), 'on', data_template_labo);
                    } else fn_FormUpdate($(this).attr("id"), '', data_template_labo);
                });
            }
        });
        $("#labo_template_content input[type!='checkbox'][type!='radio'],#labo_template_content textarea").change(function () {
            let id = $(this).attr("id");
            let answer = $(this).val();
            fn_FormUpdate(id, answer, data_template_labo);
        })
        $('#labo_template_content textarea').each(function () {
            this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');
        }).on('input', function () {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
    }

    // #endregion

</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<style>
    .teethproperties.disabled {
        opacity: 0.3;
        pointer-events: none;
    }

    #CustLab_Prodetail .buttonDeleteClass:hover {
        opacity: 1 !important;
        cursor: pointer;
    }

</style>
