@page
@model MLunarCoffee.Pages.Customer.Treatment.TreatMultiv2Model
@{
    Layout = null;
}
<div class="row mb-2 position-relative px-4">
    <div id="waiting_list_treat" class="position-absolute top-0 start-50 translate-middle-x waitingdiv text-center z-index-sticky">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="col-lg-4 pe-0 d-none" id="lglist">
        <div class="position-sticky top-0" style=" transition:top 500ms ease-in-out;">
            <div class="card-body pe-0 py-2 ps-2 ">
                <a id="Treat_Filter" class="align-items-center d-none nav-link p-0 text-body" href="#lgeneral" style="min-height: 26px">
                    <div class="form-check pe-1">
                        <input id="choose_treat" onchange="event.preventDefault();return TDL_Filter();" name="radioChooseTreat"
                               class="form-check-input cursor-pointer" type="radio" checked>
                        <label class="form-check-label mb-0 me-3" for="choose_treat">
                            @Local["Đang điều trị"]
                        </label>
                    </div>
                    <div class="form-check">
                        <input onchange="event.preventDefault();return TDL_Filter();" name="radioChooseTreat"
                               class="form-check-input cursor-pointer" type="radio" id="choose_treatdone">
                        <label class="form-check-label mb-0" for="choose_treatdone">
                            @Local["Điều trị xong"]
                        </label>
                    </div>

                </a>
                <div class="input-group mt-3" id="TD_divfilter">
                    <span class="input-group-text px-2">
                        <i class="fas fa-search" area-hidden="true"></i>
                        <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                    </span>
                    <input id="TD_inputFilter" type="text" class="form-control ps-2" placeholder="eg. @Local["Tìm kiếm"]" />
                    <span class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></span>
                </div>

                <div class="input-group flex-nowrap mb-2 mt-3">
                    <div class="ui fluid search selection dropdown form-control" id="TreatPerResID">
                        <input id="Doctor" type="hidden" />
                        <i class="dropdown icon"></i>
                        <input class="search" autocomplete="off" tabindex="0" />
                        <div class="default text">eg .@Local["Người chịu trách nhiệm"]</div>
                        <div id="cbbTreatPerRes" class="menu" tabindex="-1">
                        </div>
                    </div>
                    <div class="input-group-text ps-0">
                        <span id="btnTreatResMyself" onclick="event.preventDefault(); return TD_TreatMySelf(true)" class="btn badge bg-gradient-success my-auto me-2 _tab_control_" data-tab="cust_treat_person_responsible">@Local["Của tôi"]</span>
                        <span id="btnTreatResAll" class="btn badge bg-gradient-success my-auto d-none" onclick="event.preventDefault(); return TD_TreatMySelf(false)">@Local["Tất cả"]</span>
                    </div>
                </div>

                <div class="overflow-y ps-1" style="max-height:calc(100vh - 200px)">
                    <ul id="listtreatment" class="nav nav-pills flex-column bg-white border-radius-lg p-0 mt-3">
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-8 mt-lg-n5 mt-4 flex-grow-1 ">
        <div id="lgeneral" class="row">
            <div class="col-12 ">
                <div class="card card-plain">
                    <div class="card-header py-0">
                        <div class="d-lg-flex">
                            <div class="w-50 col-auto my-auto">
                            </div>
                            <div class="ms-auto my-auto mt-1">
                                <ul class="nav nav-pills nav-fill p-1 bg-transparent" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <a class="nav-link cursor-pointer active" data-bs-toggle="pill" data-bs-target="#tabmain_info" role="tab">
                                            @Local["Thông tin"]
                                        </a>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#tabother_info" role="tab">
                                            @Local["Khác"]
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>

                    </div>

                    <div class="card-body py-2 form3" id="fr_treatdetail">
                        <!-- #region control execute-->
                        <div class="row px-1">
                            <div class="tab-content">
                                <div class="tab-pane fade active show" id="tabmain_info" role="tabpanel">
                                    <div class="row">
                                        <div class="field col-12 col-md-3 col-xl-3 px-1 mt-2 flex-grow-1">
                                            <label>@Local["Bác sĩ"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="doc1">
                                                <input class="_validation_option_" data-validation="cbbdoc_treatmutil" type="hidden" name="doctor1" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                <div id="ccbDoctor1" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-md-3 col-xl-3 px-1 mt-2 flex-grow-1">
                                            <label><span class="nameLabelAssist">@Local["PT/KTV"]</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="ass1">
                                                <input class="_validation_option_" data-validation="cbbass_treatmutil" type="hidden" name="assitant1" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Phụ tá"]</div>
                                                <div id="ccbAssitant1" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-md-3 col-xl-3 px-1 mt-2 flex-grow-1">
                                            <label>@Local["Hỗ trợ chuyên môn"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="Tech1">
                                                <input type="hidden" name="tech1" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Hỗ trợ chuyên môn"]</div>
                                                <div id="ccbTech1" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div id="dateTreatNext" class="field col-12 col-md-3 col-xl-3 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["Ngày điều trị kế tiếp"]</span></label>
                                            <input id="dateTreatNextExt" class="form-control flatpickr detail" type="text" placeholder="eg .@Local["Ngày điều trị kế tiếp"]" />

                                        </div>
                                    </div>
                                    <div class="row" id="TDL_ContentNextDiv">
                                        <div class=" col-12 col-md-12 col-xl-12 px-1 mt-2 flex-grow-1">
                                            <div class="d-flex align-items-center mb-1">
                                                <label class="my-2">@Local["Nội dung kế tiếp"]  </label>
                                                <div id="tm_quicknotearea" class="flex-grow-1 d-none">
                                                    <div class="input-group flex-nowrap">
                                                        <div class="input-group-text w-100 border-0 pe-0">
                                                            <div id="tm_quicknote" class="ui fluid search selection dropdown secontent multiple form-control ">
                                                                <input type="hidden" />
                                                                <input class="search" autocomplete="off" tabindex="0" />
                                                                <div class="default text">eg .@Local["Ghi chú nội dung"]</div>
                                                                <div id="tm_ccbquicknote" class="menu" tabindex="-1">
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="field">
                                                <textarea rows="2" id="txtContentNextTreatment" data-validation="nextcontent_treatmutil" class="form-control _validation_option_" placeholder="eg .@Local["Nội dung kế tiếp"]"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" id="TDL_Detail">
                                        <ul class="nav nav-pills mt-2  px-1 py-1 bg-transparent" role="tablist">

                                            <li class="nav-item" role="presentation">
                                                <a class="nav-link cursor-pointer active " data-bs-toggle="pill" data-bs-target="#trdetail_specific" role="tab">
                                                    @Local["Đặc điểm bệnh"]
                                                </a>
                                            </li>
                                            <li class="nav-item" role="presentation">
                                                <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#trdetail_note" role="tab">
                                                    @Local["Ghi chú"]
                                                </a>
                                            </li>
                                        </ul>
                                        <div class="tab-content px-1">

                                            <div class="tab-pane fade active show" id="trdetail_specific" role="tabpanel">
                                                <label class="my-2">@Local["Đặc điểm bệnh"]</label>
                                                <div class="field">
                                                    <textarea rows="2" id="txtSymptoms" name="symptoms" class="form-control" placeholder="eg .@Local["Đặc điểm bệnh"]"></textarea>
                                                </div>
                                            </div>
                                            <div class="tab-pane fade " id="trdetail_note" role="tabpanel">
                                                <label class="my-2">@Local["Ghi chú"]</label>
                                                <div class="field">
                                                    <textarea rows="2" id="txtNote" name="note" class="form-control" placeholder="eg .@Local["Ghi chú"]"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade " id="tabother_info" role="tabpanel">
                                    <div class="row">
                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["Bác sĩ"]</span><span> 2</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="doc2">
                                                <input type="hidden" name="doctor2" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                <div id="ccbDoctor2" class="menu" tabindex="-1">
                                                </div>
                                            </div>


                                        </div>
                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["Bác sĩ"]</span><span> 3</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="doc3">
                                                <input type="hidden" name="doctor3" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                <div id="ccbDoctor3" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["Bác sĩ"]</span><span> 4</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="doc4">
                                                <input type="hidden" name="doctor4" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                <div id="ccbDoctor4" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span class="nameLabelAssist">@Local["PT/KTV"]</span><span> 2</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="ass2">
                                                <input type="hidden" name="assitant2" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Phụ tá"]</div>
                                                <div id="ccbAssitant2" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>

                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["PT/KTV"]</span><span> 3</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="ass3">
                                                <input type="hidden" name="assitant3" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Phụ tá"]</div>
                                                <div id="ccbAssitant3" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1">
                                            <label><span class="nameLabelAssist">@Local["PT/KTV"]</span><span> 4</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="ass4">
                                                <input type="hidden" name="assitant4" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Phụ tá"]</div>
                                                <div id="ccbAssitant4" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div id="dateCreated" class="field col-12 col-md-6 col-xl-4 px-1 mt-2 flex-grow-1" style="display: none">
                                            <label><span>@Local["Ngày tạo"]</span></label>
                                            <input id="dateCreatedExt" class="form-control flatpickr detail" type="text" placeholder="eg .@Local["Ngày tạo"]" />
                                        </div>

                                        <div class="field col-12 col-md-6 col-xl-8 px-1 mt-2 flex-grow-1">
                                            <label><span>@Local["Hỗ trợ chuyên môn"]</span><span> 2</span></label>
                                            <div class="ui fluid search selection dropdown form-control" id="Tech2">
                                                <input type="hidden" name="tech2" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Hỗ trợ chuyên môn"]</div>
                                                <div id="ccbTech2" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>





                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="row px-1 form3" id="fr_treatdetailarea">
            <div class="row pe-4 ms-0" id="treat_detail_area">
            </div>
        </div>
    </div>
</div>
<div class="card-footer fixed-botombutton">
    <div class="action_Save">
        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage_Treatment"></div>
        <div class="action_Save-Content">
            <button class="btn btn-secondary" form="fr_treatdetail" onclick="Treatment_List_Detail_Cancel()">@Local["Đóng"]</button>
            <button id="button_save_treatment_multi" form="fr_treatdetail" type="button" class="btn bg-gradient-primary mt-2 me-2 d-none" onclick="TreatDetail_Save(1)">
                @Local["Lưu và tiếp tục"]
            </button>
            <button id="button_save_treatment" form="fr_treatdetail" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="TreatDetail_Save(0)">@Local["Lưu"]</button>
        </div>
    </div>
</div>

<script type="text/javascript">

    var ser_PatientRecordID = 0;
    var ser_ChooseDateCustomer;
    var DataComboTab;
    var DataStage = {}
    var DataTeethDetail = [];
    var ser_TreatID = '@Model._CurrentID';
    var ser_TabID = '@Model._TabID';
    let TD_TimerOnchange;
    var TD_DataFill;
    let TD_DataContentTemplate;
    let TD_DataPercentSelect;
    let TD_DataEmployee;
    let TD_FlagChange = 0;
    let TD_IsLastbasePer = 0;
    let TD_MinPer = 0;
    var sys_Showallsteptreatment = Number('@Model.sys_Showallsteptreatment');


    $(document).ready(function () {

        if (ser_TreatID == 0) $('#lglist').removeClass('d-none');
        ser_ChooseDateCustomer = Number('@Model._ChooseDateCustomer');
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee]
            , function (data) {
                TD_DataEmployee = data[0];
                TD_Ini();
            }
        );

        if (ser_ChooseDateCustomer == 1) $('#dateCreated').show();
        $("#Treat_Filter").removeClass("d-none").addClass("d-flex");
        //if (ser_sys_DentistCosmetic == 1) {

        //}
        $(".flatpickr.detail").flatpickr({
            dateFormat: 'd-m-Y H:i:s',
            enableTime: true,
            defaultDate: new Date()
        });
        if ('@Model._View' != '') {
            $('#button_save_treatment').remove();
            $('#button_save_treatment_multi').remove();
        }
        TDL_FilterSearch();
        Checking_Require_Validation('@Model._dtPermissionCurrentPage');
        Checking_TabControl_Permission();
        CheckPermissionControlInPage(sys_PerControlMH, '@Model._dtPermissionCurrentPage');
    });

    //#region // IniData
    function TD_Ini() {
        AjaxLoad(url = "/Customer/Treatment/TreatMultiv2/?handler=LoadComboMain"
            , data = {
                'CustomerID': ser_MainCustomerID,
                'PatientRecordID': ser_PatientRecordID,
                'TabID': ser_TabID,
                'TreatID': ser_TreatID,
                'dencos': ser_sys_DentistCosmetic,
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                let data = JSON.parse(result);
                TD_DataFill = data.Service;
                TD_DataContentTemplate = data.ContentTemplate;
                TD_DataPercentSelect = data.PercentSelect;

                TD_IniFill(data);
            }
            , sender = null
            , before = function (e) {
                $('#waiting_list_treat').show();
            }
            , complete = function (e) {
                $('#waiting_list_treat').hide();
            }
        );
    }

    function TD_FillComboPerRes() {
        try {
            let dataFilter = TD_DataFill.reduce((pre, arr) => {
                let PersonID = arr.PersonResID;
                if (PersonID && PersonID != 0 && TD_DataEmployee[PersonID] != undefined) {
                    let e = {};
                    e.ID = TD_DataEmployee[PersonID].ID;
                    e.Name = TD_DataEmployee[PersonID].Name;
                    pre[PersonID] = e;
                }
                return pre;
            }, {});

            if (TD_DataEmployee[sys_employeeID_Main] != undefined) {
                let e = {};
                e.ID = TD_DataEmployee[sys_employeeID_Main].ID;
                e.Name = TD_DataEmployee[sys_employeeID_Main].Name;
                dataFilter[sys_employeeID_Main] = e;
            }
            Load_Combo(Object.values(dataFilter), 'cbbTreatPerRes', true, '@Local["Tất cả nhân viên"]');
            TD_CheckPersonResMySelf();

        }
        catch (ex) {

        }
    }

    async function TD_IniFill(data) {
        return new Promise(resolve => {
            let empdoc = sys_MainEmp.filter(function (el) {
                return Number(el.GroupID) == 14
            });

            let empass = sys_MainEmp.filter(function (el) {
                return Number(el.GroupID) == 17
            });

            let emptech = sys_MainEmp.filter(function (el) {
                return Number(el.IsTech) == 1
            });
            if (emptech != undefined && emptech.length == 0) emptech = sys_MainEmp;
            Load_Combo(empdoc, "ccbDoctor1", false);
            Load_Combo(empdoc, "ccbDoctor2", false);
            Load_Combo(empdoc, "ccbDoctor3", false);
            Load_Combo(empdoc, "ccbDoctor4", false);
            Load_Combo(empass, "ccbAssitant1", false);
            Load_Combo(empass, "ccbAssitant2", false);
            Load_Combo(empass, "ccbAssitant3", false);
            Load_Combo(empass, "ccbAssitant4", false);

            Load_Combo(emptech, "ccbTech1", false);
            Load_Combo(emptech, "ccbTech2", false);

            if (TD_DataContentTemplate != undefined && TD_DataContentTemplate.length != 0) {
                Load_Combo(TD_DataContentTemplate, "tm_ccbquicknote", false);
                $('#tm_quicknotearea').removeClass("d-none");
            }

            DataStage = {};
            if (data.Stage && data.Stage.length != 0)
                for (let i = 0; i < data.Stage.length; i++)
                    DataStage[data.Stage[i].ID] = data.Stage[i].Name;

            if (ser_TreatID != "0") {
                TreatDetail_LoadUpdate(ser_TreatID, ser_TabID);
            }
            else {
                $("#doc1").dropdown("refresh"); $("#doc1").dropdown("set selected", sys_employeeID_Main);
                TDL_LoadList(data.Service);
            }
            TD_FlagChange = 1;
            TD_FillComboPerRes();
            $('#button_save_treatment_multi').removeClass("d-none");
            TD_Event();
            resolve();
        });
    }
    //#endregion

    //#region // List Tab
    async function TDL_LoadList(service) {
        return new Promise(resolve => {
            DataComboTab = service;
            TDL_Render("listtreatment", DataComboTab);
            resolve();
        });

    }
    async function TDL_Render(id, data) {
        return new Promise(resolve => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr;
                        let teethname = Fun_GetTeeth_ByToken(sys_MainTeeth, item.TeethChoosing, item.TeethType);
                        let finish = '', classfinish = '', undoFinish = '', classUndoFinish = '', code = '', timeToTreat = '', TeethChoosing = '';
                        if (ser_sys_DentistCosmetic == 1) {
                            if (item.IsFinish == 1) {
                                undoFinish = `<button class="buttonUnFinishClass buttonGrid p-0" data-id="${item.ID}">
                                                        <i class="text-success vtt-icon vttech-icon-uncheck text-sm" data-bs-toggle="tooltip" title="@Local["Đánh dấu chưa hoàn thành"]"></i>
                                                      </button> `;
                                classUndoFinish = 'undofinish';
                            } else if (item.IsFinish == 0) {
                                finish = `<button class="buttonFinishClass buttonGrid p-0" data-id="${item.ID}">
                                                        <i class="text-success vtt-icon vttech-icon-check text-sm" data-bs-toggle="tooltip" title="@Local["Đánh dấu đã hoàn thành"]"></i>
                                                      </button> `;
                                classfinish = 'finish';
                            }
                        }

                        if (ser_sys_DentistCosmetic == 0) {
                            if (item.HavingStage == 1) {
                                timeToTreat = `
                                            <div class="position-absolute end-2 pt-2">
                                                <span class="text-sm"> ${item.PercentDetail} %</span>
                                            </div> `
                            }
                            else {
                                timeToTreat = `
                                            <div class="position-absolute end-2 pt-2">
                                                <span class="text-sm"> ${item.TreatIndex} |  ${item.TimeToTreatment}</span>
                                            </div> `
                            }
                        }
                        if (ser_sys_DentistCosmetic == 1 && item.TeethChoosing != '') {
                            TeethChoosing = `<span class="ps-3 text-sm mt-1 mb-0 text-secondary"><i class="vtt-icon vttech-icon-labo text-sm text-dark ms-n1"></i>${teethname}</span>`
                        }

                        if (item.TabServiceCode != '') code = `<h6 class="text-secondary text-sm mb-0 d-inline me-2">${item.TabServiceCode}</h6>`;
                        tr = `
                                    <li class="nav-item ${classfinish} ${classUndoFinish}" role="presentation" data-key="${item.ID}">
                                         <div class="w-100">
                                             <div class="d-flex">
                                                ${finish}${undoFinish}
                                                <div class="w-100">
                                                    <a class="nav-link nav-link-treat ${classfinish} ${classUndoFinish} text-body ps-2 pe-0" data-scroll href="#l${item.ID}" data-id="${item.ID}">
                                                        <div class="d-inline mb-2">
                                                            <p class="text-secondary text-sm text mt-1 mb-0 d-inline">${GetDateTime_String_DMYHM(item.Created)}</p>
                                                            ${TeethChoosing}
                                                        </div>
                                                        <h6 class="text-dark text-sm font-weight-bold mb-0">${item.ServiceName}</h6>

                                                    </a>
                                                </div>
                                                ${timeToTreat}
                                            </div>
                                        </div>
                                        <hr class="horizontal dark my-0 opacity-5">
                                    </li>`
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
                TDL_Event();
                ToolPopper();
            }
            resolve();
        });
    }
    function TDL_Event() {
        $('#listtreatment .nav-link-treat').not(".undofinish").unbind('click').click(function () {
            $('.nav-link-treat').removeClass("active");
            $(this).addClass("active");
            let id = $(this).attr("data-id");
            if (id && id != '') {
                let blockTreat = $('#l' + id);
                if (blockTreat.length != 0) {
                    blockTreat.fadeIn(100);
                    if (blockTreat.siblings().length != 0) {
                        blockTreat.children().addClass('border-dark').removeClass('border-white');
                        blockTreat.siblings().children().removeClass('border-dark').addClass('border-white');
                    }
                }
                else TDD_Load(id);
            }
        })
        $(".tag_servicenote_detail").unbind('click').click(function (e) {
            //let noteid = $(this).attr('data-note');
            //let tabid = $(this).attr('data-tab');
            //let idcontent = 'treatdetail_note_' + tabid;
            //let _note = DataServiceNote.filter(word => word["ID"] == noteid);
            //if (_note != undefined && _note.length == 1) {
            //    if ($('#' + idcontent).length) {
            //        $('#' + idcontent).val(_note[0].Explain);
            //    }
            //}

        });
        $('#listtreatment .buttonUnFinishClass').unbind('click').click(function () {
            let id = $(this).attr("data-id");
            TD_finish(id, 0)//Unfinish
        });
        $('#listtreatment .buttonFinishClass').unbind('click').click(function () {
            let id = $(this).attr("data-id");
            TD_finish(id, 1)//finish
        });
    }

    function TDL_Filter() {
        if ($('#choose_treat')[0].checked == true) {
            $('#listtreatment').removeClass('undofinish');
        } else $('#listtreatment').addClass('undofinish');
    }

    function TDL_FilterSearch() {

        $('#TD_divfilter #TD_inputFilter').unbind('keyup').on('keyup', function () {
            let SearchText = xoa_dau($('#TD_inputFilter').val().toLowerCase().trim());

            if (SearchText.length > 0) $('#TD_divfilter .btn_clear').removeClass('opacity-1');
            else $('#TD_divfilter .btn_clear').addClass('opacity-1');

            $("#TD_divfilter .fa-search").hide();
            $("#TD_divfilter .spinner-border").show();

            clearTimeout(TD_TimerOnchange);
            TD_TimerOnchange = setTimeout(function (e) {
                TDL_FilterSearch_Exec(SearchText);
            }, 200);

        });

        $("#TreatPerResID").unbind('change').on('change', function () {
            clearTimeout(TD_TimerOnchange);
            TDL_FilterSearch_Exec('');
        });

        $('#TD_divfilter .btn_clear').unbind('click').on('click', function () {
            $('#TD_divfilter #TD_inputFilter').val('');
            $('#TD_divfilter .btn_clear').addClass('opacity-1');
            $('#listtreatment .nav-item').each(function () {
                $(this).removeClass('d-none');
            })
        })
    }

    function TDL_FilterSearch_Exec(SearchText = '') {
        if (TD_FlagChange == 0) return;
        var TreatPerResID = Number($('#TreatPerResID').dropdown('get value')) ? Number($('#TreatPerResID').dropdown('get value')) : 0;
        if (SearchText == '' && TreatPerResID == 0) {
            $('#listtreatment .nav-item').each(function () {
                $(this).removeClass('d-none');
            })
        }
        else {
            for (let i = 0; i < TD_DataFill.length; i++) {
                let item = TD_DataFill[i];
                let ServiceName = xoa_dau(item.ServiceName).toLowerCase().trim();
                if (ServiceName.includes(SearchText)
                    && (TreatPerResID == 0 || TreatPerResID == item.PersonResID)) {
                    $('.nav-item[data-key="' + item.ID + '"]').removeClass('d-none');
                }
                else {
                    $('.nav-item[data-key="' + item.ID + '"]').addClass('d-none');
                }
            }
        }
        $("#TD_divfilter .fa-search").show();
        $("#TD_divfilter .spinner-border").hide();
    }


    function TD_finish(id, type) {
        const promise = notiConfirm_Type("customer_finish_tab");
        promise.then(function () { TD_finishExe(id, type); }, function () { });
    }
    function TD_finishExe(id, type) {
        AjaxLoad(url = "/Customer/Service/TabList/TabList_Service/?handler=FinishTab"
            , data = { 'id': id, 'type': type }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    TD_Ini();
                } else {
                    notiError_SW();
                }
            }
        );
    }
    //#endregion

    //#region //  Detail
    function TDD_Load(tabid) {
        AjaxLoad(url = "/Customer/Treatment/TreatMultiv2/?handler=LoadTab"
            , data = {
                'Tab': tabid,
                'TreatID': ser_TreatID,
                'dencos': ser_sys_DentistCosmetic
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                let datas = JSON.parse(result);
                let data = datas.Table;
                let dataTreat = datas.Table1;
                if (data && data.length == 1) {

                    TDD_Render('treat_detail_area', data[0], dataTreat, function () {
                        js_require('/js/customjs/custom-validation.js')
                        Checking_Require_Validation();
                    });
                }
            }
            , sender = null
            , before = function (e) {
                $('#listtreatment .nav-link-treat[data-id="' + tabid + '"]').addClass("disabled");
            }
            , complete = function (e) {
                $('#listtreatment .nav-link-treat[data-id="' + tabid + '"]').removeClass("disabled");
            }
        );
    }
    function TDD_RenderIndex (ID, ServiceID, TimeToTreatment, _dataTreat, currentTreat) {

        let index = '';
        let isCantreat = 0;
        let istreat = 0;
        let classname = '';
        let indextreat = _dataTreat[0] != undefined ? Number(_dataTreat[0].TimeTreatIndex) : 0;
        let jtreated = 0, jcantreat = 0;
        for (let j = 0; j < TimeToTreatment; j++) {

            classname = ''; istreat = 0; isCantreat = 0;
            if (Number(currentTreat) == 0) {
                if (j == indextreat - 1) { istreat = 1; jtreated = j; }
                if (j == indextreat) { isCantreat = 1; jcantreat = j; }
            }
            else if (j == indextreat - 1) {
                istreat = 1; jtreated = j;
                jcantreat = j;
            }


            if (isCantreat == 0) classname = 'nocantreat';
            else classname = 'cantreat';

            if (istreat == 1) classname = classname + ' indextreated';
            if (istreat == 1 || isCantreat == 1) {
                index = index + '<div id="treatdetail_' + Number(ID) + '_' + (j + 1)
                    + '" data-tabid="' + Number(ID)
                    + '" data-serviceid="' + Number(ServiceID)
                    + '" data-index="' + (j + 1)
                    + '" class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center index ' + classname + '">'
                    + '<h6 class="mt-2 text-xs text-white">' + (j + 1) + '</h6></div>';

            }

        }

        if (jtreated > 0) {
            if (jtreated == 1) {
                index =
                    '<span class="fw-bold  text-md text-primary me-3"><i class="me-2 text-lg mt-1 text-primary fas fa-chevron-left"></i>'
                    + (jtreated)
                    + ' </span>'
                    + index;
            }
            else {
                index =
                    '<span class="fw-bold  text-md text-primary me-3"><i class="me-2 text-lg mt-1 text-primary fas fa-chevron-left"></i>'
                    + (1 + ' ... ' + jtreated)
                    + ' </span>'
                    + index;
            }

        }
        if (jcantreat > 1 && jcantreat < TimeToTreatment - 1) {
            index = index
                + '<span class="fw-bold  text-md text-primary me-3">'
                + ('... ' + TimeToTreatment)
                + '<i class="ms-2 text-lg mt-1 text-primary fas fa-chevron-right"></i> </span>'
                ;
        }

        return index;
    }

    function TDD_RenderPercent(ID, ServiceID, Teeth, TeethType, _dataTreat, percent_tab, currentTreat ) {
        let teethtreat = _dataTreat[0] != undefined ? _dataTreat[0].TeethTreat : '';
        let result = '', percent = '' ;
        if (Teeth != '') {
            let teeths = Teeth.split(',');
            let teethid, teethname = '';
            let classname = '';
            for (i = 0; i < teeths.length; i++) {
                if (!isNaN(teeths[i]) && teeths[i] != '') {
                    teethid = Number(teeths[i]);
                    if (sys_MainTeeth[teethid] != undefined) {
                        if (Number(currentTreat) != 0) {
                            if ((',' + teethtreat + ',').includes(',' + teethid + ',')) classname = 'selected';
                            else classname = '';
                        }
                        teethname = (Number(TeethType) == 0) ? sys_MainTeeth[teethid].TeethName : sys_MainTeeth[teethid].TeethNameBaby;
                        result = result + '<div class="teethdetail ' + classname + ' form-group d-inline-flex py-2 pe-2 mb-0" id="teethdetail_' + Number(ID) + '_' + (teethid)
                            + '" data-tabid="' + Number(ID)
                            + '" data-teethid="' + Number(teethid) + '">'
                            + '<div class="input-group cursor-pointer"><span class="bg-dark  text-white input-group-text border border-1">' + teethname + '</span></div>'
                            + '</div>';
                    }
                }
            }
            result = '<div class="percent_teeth_treat">' + result + '</div>';
        }

        percent = '<div data-tab="' + ID + '" data-service="' + ServiceID + '" id="treatdetail_percent_' + ID + '" data-current="' + percent_tab + '" class="ui search selection dropdown form-control tabPercent fluid"><input type="hidden"/><i class="dropdown icon"></i>' +
            ' <div class="default text">eg. @Local["Phần trăm"]</div><div class="menu" tabindex="-1">';
        for (let i = 0; i < TD_DataPercentSelect.length; i++) {
            let _iper = TD_DataPercentSelect[i].ID;
            //insert
            if (Number(currentTreat) == 0 && Number(percent_tab) <= _iper) percent = percent + `<div class="item" data-value='${_iper}'>${_iper} %</div>`;
            //update
            if (Number(currentTreat) != 0 && (Number(TD_MinPer) <= _iper || Number(_dataTreat[0].PercentTreat) == _iper)) percent = percent + `<div class="item" data-value='${_iper}'>${_iper} %</div>`;

        }
        percent = '<label >@Local["Phần trăm hoàn thành"]</label>'
            + '<span class="badge text-sm badge-sm text-dark badge-success px-3 py-1 mb-2 ms-2">' + percent_tab + ' / 100 %</span>'
            + percent + '</div>' + '</div>';

        return result + percent ;
    }
    function TDD_RenderStage(ID, ServiceID, Teeth, TeethType, stageData, detailTeeth, currentTreat) {
        let result = '';
        let _datastage = JSON.parse(stageData);
        if (Teeth == '') Teeth = '0,';
        let teeths = Teeth.split(',');
        let teethid, teethname = '';
        let per_complete = 0;
        for (let jj = 0; jj < teeths.length; jj++) {
            if (!isNaN(teeths[jj]) && teeths[jj] != '') {
                teethid = Number(teeths[jj]);
                if (sys_MainTeeth[teethid] != undefined || teethid == 0) {
                    let eachteeth = '';
                    let stage = '', stagename = '';
                    let _currentstage = detailTeeth.filter(word => Number(Number(word["TeethID"]) == teethid));
                    if (_currentstage != undefined && _currentstage.length > 0) {
                        current_stage = Number(_currentstage[0].StageID);
                        per_complete = Number(_currentstage[0].PerComplete);
                        stagename = DataStage[current_stage] != undefined ? DataStage[current_stage] : '-';
                    }
                    else {
                        current_stage = 0;
                        per_complete = 0;
                        stagename = '';
                    }
                    if (teethid == 0) teethname = '';
                    else teethname = (Number(TeethType) == 0) ? sys_MainTeeth[teethid].TeethName : sys_MainTeeth[teethid].TeethNameBaby;
                    eachteeth = '<span class="input-group-text bg-dark text-white" id="teethdetail_' + Number(ID) + '_' + (teethid)
                        + '" data-tabid="' + Number(ID)
                        + '" data-teethid="' + Number(teethid) + '">' + teethname + '</span>';
                    if (stagename != '') eachteeth = eachteeth + '<span data-per="' + per_complete + '" id="treatdetail_per_' + ID + '_' + teethid + '" class="bg-dark text-white currentStage input-group-text">' + stagename + '</span>';
                    if (currentTreat == 0 && _datastage != undefined && Object.keys(_datastage).length != 0) {
                        stage = '<div data-teeth=' + Number(teethid)
                            + ' data-tab=' + ID
                            + ' data-service=' + ServiceID
                            + ' current-value=' + current_stage
                            + ' percomplete=' + per_complete
                            + ' id="treatdetail_stage_' + ID + '_' + teethid + '"  class="stage_' + ID + ' d-flex w-auto ui fluid search selection dropdown tabStage" ><input type="hidden"/><i class="dropdown icon"></i>' +
                            '<i class="remove icon"></i><i class="dropdown icon"></i><input class="search" autocomplete="off" tabindex="0" /><div class="default text ps-2 pe-4" style="min-width:70px;"></div><div class="menu" tabindex="-1">';

                        var stagesort = Object.values(_datastage).sort((a, b) => a.Completed - b.Completed);

                        for (let p = 0; p < stagesort.length; p++) {
                            if (sys_Showallsteptreatment == 1 || per_complete <= Number(stagesort[p].Completed))
                                stage = stage + '<div class="item" data-per=' + stagesort[p].Completed + ' data-value=' + stagesort[p].ID + '>'
                                    + '<div class="item_cb_treat">'
                                    + '<span>' + DataStage[stagesort[p].ID] + '- ' + stagesort[p].Percent + ' %' + '</span>'
                                    + '</div></div>';
                            //else
                            //    stage = stage + '<div class="disabled item"  data-per=' + value.Completed + ' data-value=' + key + '>'
                            //        + '<div class="item_cb_treat">'
                            //        + '<span>' + DataStage[key] + '- ' + value.Percent + ' %' + '</span>'
                            //        + '</div></div>';
                        }

                        stage = stage + '</div></div>';
                    }

                    result = result + '<div class="form-group d-inline-flex py-2 pe-2 mb-0"><div class="input-group">' + eachteeth + stage + '</div></div>';
                }
            }

        }
        return result;
    }

    function TDD_RenderChooseAllStage(ID, stageData) {
        let result = '';
        if (ser_TreatID != 0) return '';
        let _datastage = JSON.parse(stageData);
        var stagesort = Object.values(_datastage).sort((a, b) => a.Completed - b.Completed);
        let stage = ``;
        for (let p = 0; p < stagesort.length; p++) {
            stage += `<div class="item" data-per="${stagesort[p].Completed}" data-value="${stagesort[p].ID}">
                                        <div class="item_cb_treat"><span>${DataStage[stagesort[p].ID]} - ${stagesort[p].Percent} %</span></div>
                                  </div>`;
        }
        result += `<div id="treatdetail_choose_all_container" class="form-group d-inline-flex py-2 pe-2 mb-0">
                        <div class="input-group">
                        <span class="bg-dark text-white input-group-text">@Local["Áp dụng tất cả"]</span>
                            <div id="treatdetail_choose_stage_${ID}" class="d-flex w-auto ui fluid search selection dropdown treatdetail_cbb_choose_all_stage" data-id="${ID}">
                                <input type="hidden"
                                    value=""><i class="dropdown icon"></i><i class="remove icon"></i><i class="dropdown icon"></i><input
                                    class="search" autocomplete="off" tabindex="0">
                                <div class="text ps-2 pe-4 default" style="min-width:70px;"></div>
                                <div id="treatdetail_cbb_choose_stage_${ID}" class="menu transition hidden" tabindex="-1">
                                        ${stage}
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr class="horizontal dark opacity-2">`;
        return result;
    }

    async function TDD_Render(id, item, dataTreat, callback) {
        return new Promise(resolve => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                let closebutton = '';
                let index = '', indextime = '', markfinish = '', amountmanual = '', infoservice='' ;

                if (item.StageData == "") {
                    if (ser_sys_DentistCosmetic == 0) {
                        index = TDD_RenderIndex(item.ID, item.ServiceID, item.TimeToTreatment, dataTreat, ser_TreatID);
                        if (sys_TreatManualamount == 1) {
                            amountmanual = `<input id="treatmanualamount_${item.ID}" data-max=${item.PriceDiscounted} data-id=${item.ID} class="form-control manualamount mb-2"  type="text" placeholder="eg .@Local["Tiền tương ứng"]" />`;
                            infoservice =  ` <span class="cursor-pointer text-dark fw-bold text-sm me-2 infodetail_clsDetail" data-bs-toggle="collapse" href="#infodetail_${item.ID}" aria-expanded="true">@Local["Chi tiết"]</span>`
                        }
                    }
                    else {
                        let percent_tab = item.PercentOfService;
                        index = TDD_RenderPercent(item.ID, item.ServiceID, item.Teeth, item.TeethType, dataTreat, percent_tab, ser_TreatID);

                    }
                }
                else {
                    let stageData = item.StageData;
                    let chooseAllBtn = (item.Quantity > 0 && item.Teeth != '') ? TDD_RenderChooseAllStage(item.ID, stageData) : "";
                    index = chooseAllBtn + TDD_RenderStage(item.ID, item.ServiceID, item.Teeth, item.TeethType, stageData, dataTreat, ser_TreatID);
                }

                if (ser_sys_DentistCosmetic == 1) {
                    if (ser_TreatID == 0 && item.IsFinish == 0) {
                        markfinish = '<div class="row">'
                            + '<div class="col-sm-auto ms-sm-auto mt-sm-0 mt-3 d-flex">'
                            + '<p class="checkTeeth_finish form-check-label mb-0">' + '@Local["Hoàn thành điều trị (đóng dịch vụ)"]' + '</p>'
                            + '<div id="treatdetail_finish_' + item.ID + '" class="form-check form-switch ms-2 treatdetail_finish">'
                            + '<input id="finishdetail_key_' + item.ID + '"  class="finishdetail form-check-input" type="checkbox"  data-serviceid="' + Number(item.ServiceID) + '" value=' + item.ID + '>'
                            + '</div>'
                            + '</div>'
                            + '</div>';
                    }
                }

                if (ser_TreatID == 0) {
                    closebutton = `<button class="close_service_treat buttonGrid position-absolute top-2 end-2 opacity-2" data-id="${item.ID}">
                                    <i class="fa fa-times" aria-hidden="true"></i>
                                </button>`;
                }

                let stageContentTemplate = ``;
                if (TD_DataContentTemplate != undefined && TD_DataContentTemplate.length != 0) {
                    stageContentTemplate =
                        `<div class="w-100">
                            <div class="input-group flex-nowrap">
                                <div class="input-group-text w-100 border-0 pe-0 ">
                                    <div class="ui fluid search selection dropdown secontent multiple form-control treatdetail_conttemp_container" data-id="${item.ID}" id="treatdetail_contenttemplate_${item.ID}">
                                        <input type="hidden" />
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg .@Local["Ghi chú điều trị"]</div>
                                        <div id="treatdetail_ccbcontenttemplate_${item.ID}" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
                }

                let inputtreat = `<textarea data-tab=${item.ID} data-validation="content_treatmutil" data-service=${item.ServiceID} class="treatnote _validation_option_ form-control" id="treatdetail_note_${item.ID}" placeholder="eg .@Local["Nội dung điều trị"]"></textarea>`;

                let tr = `
                                <div id="l${item.ID}" class="col-12 px-1 mt-1">
                                    <div class="treat_detail ms-2 card mt-2 shadow-lg border border-2 border-dark border-white">
                                        <div class="card-body p-3">
                                            <div id="treatment_area_${item.ID}" class="treatment_area treatment_area_selected">
                                                ${closebutton}
                                                <div class="row justify-content-center align-items-center">
                                                    <div class="col-sm-auto col-12 my-auto">
                                                        <div class="h-100">
                                                            <h6 class="serviceName text-dark fw-bold mb-0">${item.ServiceName}</h6>
                                                            <p class="mb-0 text-dark text-sm">${GetDateTime_String_DMY(item.Created)}</p>
                                                                <p class="mb-2 text-dark text-sm content_line_clamp" style="-webkit-line-clamp: 2;">${item.Note}</p>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-auto ms-sm-auto mt-sm-0 mt-3 me-5 d-flex"></div>
                                                </div>
                                                ${((indextime != '') ? '<div class="indexTreat my-3 align-items-center d-flex  ">' + indextime + '</div>' : '')}
                                                ${((index != '') ? '<div class="indexTreat my-3  align-items-center mb-0">' + index + '</div>' : '')}
                                               <div class="col-12">
                                                    <div class="d-flex align-items-center mb-1">
                                                        <label class="my-2 text-nowrap">@Local["Nội dung điều trị"]  </label>
                                                        ${stageContentTemplate}
                                                    </div>
                                                    <div> ${amountmanual}</div>
                                                    <div class="field">
                                                        ${inputtreat}
                                                    </div>
                                                </div>

                                                <div class="d-lg-flex mt-2">
                                                    <div class="col-auto my-auto">
                                                        <div class="h-100">
                                                            <span class="text-sm text-dark">@Local["Tư vấn"] : ${item.ConsultName}</span>
                                                        </div>
                                                    </div>
                                                    <div class="ms-auto my-auto mt-1 d-flex">
                                                        ${infoservice}
                                                        ${markfinish}
                                                        </div>
                                                    </div>
                                                    ${TDD_RenderServiceDetail(item.ID ,item.PriceRoot, item.PriceDiscounted,item.TotalPaid)}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                        `;
                myNode.insertAdjacentHTML('beforeend', tr);
                if (TD_DataContentTemplate != undefined && TD_DataContentTemplate.length != 0) {
                    Load_Combo(TD_DataContentTemplate, `treatdetail_ccbcontenttemplate_${item.ID}`, false);
                }


                if (ser_TreatID != 0) {
                    if (item.StageData != '') {
                        let content = item != undefined ? item.Content : '';
                        let contentTemplate = item != undefined ? item.ContentTemplate : '';
                        $("#treatdetail_note_" + item.ID).val(content);
                        $("#treatmanualamount_" + item.ID).val(item.ManualAmount);
                        $('#treatdetail_contenttemplate_' + item.ID).dropdown('clear');
                        $('#treatdetail_contenttemplate_' + item.ID).dropdown('set selected', contentTemplate.split(","));
                    }
                    else {
                        let content = dataTreat[0] != undefined ? dataTreat[0].Content : '';
                        let contentTemplate = item != undefined ? dataTreat[0].ContentTemplate : '';
                        let manualamount = dataTreat[0] != undefined ? dataTreat[0].ManualAmount : 0;

                        $("#treatmanualamount_" + item.ID).val(manualamount);
                        $("#treatdetail_note_" + item.ID).val(content);
                        $('#treatdetail_contenttemplate_' + item.ID).dropdown('clear');
                        $('#treatdetail_contenttemplate_' + item.ID).dropdown('set selected', contentTemplate.split(","));
                        let percentage = dataTreat[0] != undefined ? Number(dataTreat[0].PercentTreat) : 0;
                        let idPercent = 'treatdetail_percent_' + item.ID;
                        if ($('#' + idPercent).length) {
                            $('#' + idPercent).dropdown('refresh');
                            $('#' + idPercent).dropdown("set selected", percentage);

                            if (Number(TD_IsLastbasePer) != 0) $('#' + idPercent).addClass('disabled');
                        }
                    }

                }

                TDD_Event();
            }
            if (typeof callback == 'function') callback();
            resolve();
        });
    }

    function TDD_RenderServiceDetail (id, priceRoot, priceDiscounted, totalPaid) {
        try {
            let discount = priceRoot - priceDiscounted;

            let perdiscount = ((discount / (priceRoot || 1)).toFixed(2)) * 100;
            let strPer = perdiscount > 0 ? `<span class="pe-1 text-primary">(${perdiscount}%)</span>` : '';
            let result = `<div class="col-12">
                                <div id="infodetail_${id}" class="accordion-collapse collapsesticky collapse" style="">
                                    <div class="accordion-body p-0 position-relative text-sm">
                                        <div class="d-flex">
                                            <div class="mx-auto"></div>
                                            <div class="d-flex ms-auto w-auto my-auto mt-1">
                                                    <div class="me-4 text-end py-1 ps-0">
                                                    <p class="mb-0 mt-1 text-secondary text-sm">@Local["Giá tiền"]</p>
                                                    <h5 class="text-sm font-weight-bold my-auto">${formatNumber(priceRoot)}</h5>
                                                </div>
                                                <div class="me-4 text-end py-1 ps-0">
                                                    <p class="mb-0 mt-1 text-secondary text-sm">@Local["Giảm giá"]</p>
                                                    <h5 class="text-sm font-weight-bold my-auto">${strPer}${formatNumber(discount)}</h5>
                                                </div>
                                                <div class="me-4 text-end py-1 ps-0">
                                                    <p class="mb-0 mt-1 text-secondary text-sm">@Local["Thành tiền"]</p>
                                                    <h5 class="text-sm font-weight-bold my-auto">${formatNumber(priceDiscounted)}</h5>
                                                </div>
                                                <div class="text-end py-1 ps-0">
                                                    <p class="mb-0 mt-1 text-secondary text-sm">@Local["Đã thanh toán"]</p>
                                                    <h5 class="text-sm font-weight-bold my-auto">${formatNumber(totalPaid)}</h5>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                         </div>`;
            return result;
        }
        catch (e) {
            return '';
        }
    }

    function TDD_Event () {
        $('#treat_detail_area .manualamount').divide();
        $('#treat_detail_area .close_service_treat').unbind('click').click(function () {
            let tabid = $(this).data("id");
            let blockTreat = $('#l' + tabid);
            let treatdetail_treated = $('#treatdetail_treated_' + tabid);
            if (treatdetail_treated.length) {
                treatdetail_treated.prop('checked', false);
            }
            if (blockTreat.length != 0) {
                blockTreat.remove();
                if ($(blockTreat).find('.cantreat'))
                    $(blockTreat).find('.cantreat').removeClass('selected');
            }
        });
        $('#treat_detail_area .index.cantreat').unbind('click').on('click', function () {
            let tabid = $(this).attr('data-tabid');
            let index = $(this).attr('data-index');
            let obj = $('#treatdetail_' + tabid + '_' + index);
            if (obj.hasClass('selected')) {
                obj.removeClass('selected')
            } else obj.addClass('selected')
        });
        $('#treat_detail_area .indexTreat .teethdetail').unbind('click').click(function () {
            let tabid = $(this).attr('data-tabid');
            let teethid = $(this).attr('data-teethid');
            let obj = $('#teethdetail_' + tabid + '_' + teethid);
            if (obj.hasClass('selected')) {
                obj.removeClass('selected');
            }
            else {
                obj.addClass('selected');
            }
        });
        $("#treat_detail_area .ui.dropdown").find('.remove.icon').unbind('click').on('click', function (e) {
            $(this).parent('.dropdown').dropdown('clear');
            e.stopPropagation();
        });
        $("#treat_detail_area .ui.dropdown").dropdown({
            allowCategorySelection: true,
            forceSelection: false
        });
        $('#treat_detail_area .treatdetail_conttemp_container').unbind('change').change(function () {
            let id = $(this).data("id");
            let selectedtoken = $('#treatdetail_contenttemplate_' + id).dropdown('get value');
            let content = selectedtoken.split(',').map(e => {
                return TD_DataContentTemplate.find(t => t.ID == e)?.Content ?? "";
            }).join('\n');
            $(`#treatdetail_note_${id}`).val(content);
        });
        $('#treat_detail_area .manualamount').unbind('change').change(function () {
            if (TD_FlagChange == 1) {
                TD_FlagChange = 0;
                let _v = $(this).val();
                let _max = $(this).attr('data-max');
                if (!isNaN(_v)) {
                    if (Number(_v) > _max || Number(_v)<0) {
                        $(this).val(_max)
                    }
                }
                else {
                    $(this).val(0)
                }
                $(this).divide();
                TD_FlagChange = 1;
            }
        });


        $('#treat_detail_area .treatdetail_cbb_choose_all_stage').unbind('change').change(function () {
            let id = $(this).data("id");
            let stage = $('#treatdetail_choose_stage_' + id).dropdown('get value');
            if (stage == '') {
                $(`.stage_${id}`).dropdown('clear');
                return;
            }
            $(`.stage_${id}`).dropdown("refresh");
            $(`.stage_${id}`).dropdown("set selected", stage);
        });
    }
    //#endregion

    //#region // Main Event
    function TreatDetail_Save (is_continue) {

        TreatDetail_Save_Before();
        let allMultiTreat = [];
        $('#textShowMessage_Treatment').html('');
        //#region // Get basic value
        let contentNext = $("#txtContentNextTreatment").val() ? $("#txtContentNextTreatment").val() : "";
        let note = $("#txtNote").val() ? $("#txtNote").val() : "";
        let symptoms = $("#txtSymptoms").val() ? $("#txtSymptoms").val() : "";
        let Doc1 = Number($('#doc1').dropdown('get value')) ? Number($('#doc1').dropdown('get value')) : 0;
        let Doc2 = Number($('#doc2').dropdown('get value')) ? Number($('#doc2').dropdown('get value')) : 0;
        let Doc3 = Number($('#doc3').dropdown('get value')) ? Number($('#doc3').dropdown('get value')) : 0;
        let Doc4 = Number($('#doc4').dropdown('get value')) ? Number($('#doc4').dropdown('get value')) : 0;
        let Ass1 = Number($('#ass1').dropdown('get value')) ? Number($('#ass1').dropdown('get value')) : 0;
        let Ass2 = Number($('#ass2').dropdown('get value')) ? Number($('#ass2').dropdown('get value')) : 0;
        let Ass3 = Number($('#ass3').dropdown('get value')) ? Number($('#ass3').dropdown('get value')) : 0;
        let Ass4 = Number($('#ass4').dropdown('get value')) ? Number($('#ass4').dropdown('get value')) : 0;
        let Tech1 = Number($('#Tech1').dropdown('get value')) ? Number($('#Tech1').dropdown('get value')) : 0;
        let Tech2 = Number($('#Tech2').dropdown('get value')) ? Number($('#Tech2').dropdown('get value')) : 0;
        let dateCreated = (ser_ChooseDateCustomer == "1") ? ($('#dateCreatedExt').val() ? $('#dateCreatedExt').val() : formatDate_to_ddmmyyyyHHMM(new Date())) : formatDate_to_ddmmyyyyHHMM(new Date());
        let dateTreatNext = $('#dateTreatNextExt').val() ? $('#dateTreatNextExt').val() : '';
        if (((Doc1 == Doc2) && (Doc1 > 0 || Doc2 > 0)) ||
            ((Doc1 == Doc3) && (Doc1 > 0 || Doc3 > 0)) ||
            ((Doc1 == Doc4) && (Doc1 > 0 || Doc4 > 0)) ||
            ((Doc2 == Doc3) && (Doc2 > 0 || Doc3 > 0)) ||
            ((Doc2 == Doc4) && (Doc2 > 0 || Doc4 > 0)) ||
            ((Doc3 == Doc4) && (Doc3 > 0 || Doc4 > 0))) {
            $('#textShowMessage_Treatment').html('@Local["Trùng bác sĩ"]');
        }

        if (((Ass1 == Ass2) && (Ass1 > 0 || Ass2 > 0)) ||
            ((Ass1 == Ass3) && (Ass1 > 0 || Ass3 > 0)) ||
            ((Ass1 == Ass4) && (Ass1 > 0 || Ass4 > 0)) ||
            ((Ass2 == Ass3) && (Ass2 > 0 || Ass3 > 0)) ||
            ((Ass2 == Ass4) && (Ass2 > 0 || Ass4 > 0)) ||
            ((Ass3 == Ass4) && (Ass3 > 0 || Ass4 > 0))) {
            $('#textShowMessage_Treatment').html('@Local["Trùng phụ tá"]');
        }
        if ((Tech1 == Tech2) && (Tech1 > 0 || Tech2 > 0)) {
            $('#textShowMessage_Treatment').html('@Local["Trùng hỗ trợ chuyên môn"]');
        }
        //#endregion

        $(".tabPercent.error").each(function () { $(this).removeClass("error"); })
        $('#fr_treatdetail').form('validate form');
        $('#fr_treatdetailarea').form('validate form');
        if ($('#textShowMessage_Treatment').html() == "" && $('#fr_treatdetail').form('is valid') && $('#fr_treatdetailarea').form('is valid')) {

            let _indexcantreat = document.getElementsByClassName('cantreat index');
            let tabselected = document.getElementsByClassName('cantreat selected');
            let teethchoose = '';
            let teethselected = document.getElementsByClassName('teethdetail selected');

            if (ser_TreatID == 0) {
                if (_indexcantreat != undefined && _indexcantreat.length != 0) // Hien so lan dieu tri
                {
                    if (tabselected != undefined && tabselected.length != 0) {
                        for (i = 0; i < tabselected.length; i++) {
                            let serviceid = Number(tabselected[i].dataset.serviceid);
                            let tabid = Number(tabselected[i].dataset.tabid);
                            let elementItem = TreatDetail_CreateElement(serviceid, tabid, Doc1, Doc2, Doc3, Doc4
                                , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, 0, '', [], dateCreated, contentNext, note, symptoms, dateTreatNext, 0);
                            allMultiTreat.push(elementItem);
                        }
                        TreatDetail_Save_Execute(allMultiTreat, is_continue);
                    }
                    else {
                        $('#textShowMessage_Treatment').html('@Local["Chưa chọn dịch vụ điều trị"]');
                        TreatDetail_Save_Complete();
                    }

                }
                else {
                    let notetab = document.querySelectorAll(".treatnote ");
                    let selected = [];
                    if (notetab != undefined && notetab.length != 0) {
                        for (i = 0; i < notetab.length; i++) {
                            let e = {};
                            e.tabid = notetab[i].dataset.tab;
                            e.serviceid = notetab[i].dataset.service;
                            selected.push(e);
                        }
                    }
                    if (selected.length != 0) {
                        for (i = 0; i < selected.length; i++) {
                            teethchoose = '';
                            let tabid = selected[i].tabid;
                            let serviceid = selected[i].serviceid;
                            let isFinish = 0;
                            let finishid = 'treatdetail_finish_' + tabid;
                            if ($('#' + finishid).length) {
                                isFinish = ($('#' + finishid).children('input').is(':checked')) ? 1 : 0;
                            }
                            teethchoose = '';
                            if (teethselected != undefined && teethselected.length != 0) {
                                for (ii = 0; ii < teethselected.length; ii++) {
                                    if (Number(teethselected[ii].dataset.tabid) == tabid) {
                                        teethchoose = teethchoose + Number(teethselected[ii].dataset.teethid) + ',';
                                    }
                                }
                            }

                            let noteid = 'treatdetail_note_' + tabid;
                            if ($('#' + noteid).length) {
                                $('#' + noteid).removeClass('error');
                                //if ($('#' + noteid).val() != '')
                                //{
                                let percentid = 'treatdetail_percent_' + tabid;
                                // percent choose
                                if ($('#' + percentid).length) {
                                    let percent = Number($('#' + percentid).dropdown('get value')) ? Number($('#' + percentid).dropdown('get value')) : 0;
                                    if (percent != 0) {
                                        let elementItem = TreatDetail_CreateElement(serviceid, tabid, Doc1, Doc2, Doc3, Doc4
                                            , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, percent, teethchoose, [], dateCreated, contentNext, note, symptoms, dateTreatNext, isFinish);
                                        allMultiTreat.push(elementItem);
                                    }
                                    else $('#' + percentid).addClass('error');
                                }
                                // stage choose
                                else {
                                    let treatdetail = [];
                                    let stages = document.querySelectorAll(".stage_" + tabid);
                                    if (stages != undefined && stages.length != 0) {
                                        for (q = 0; q < stages.length; q++) {
                                            let teeth = stages[q].dataset.teeth;
                                            let _idstage = 'treatdetail_stage_' + tabid + '_' + teeth;
                                            let _stage = Number($('#' + _idstage).dropdown('get value')) ? Number($('#' + _idstage).dropdown('get value')) : 0;
                                            if (_stage != 0) {
                                                let _per = $('#' + _idstage + ' .selected')[0].dataset.per;
                                                let e = {};
                                                e.tabid = tabid;
                                                e.stageid = _stage
                                                e.teeth = teeth;
                                                e.completeper = _per;
                                                teethchoose = teethchoose + teeth + ',';
                                                treatdetail.push(e);
                                            }
                                        }
                                    }
                                    let elementItem = TreatDetail_CreateElement(serviceid, tabid, Doc1, Doc2, Doc3, Doc4
                                        , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, 0, teethchoose, treatdetail, dateCreated, contentNext, note, symptoms, dateTreatNext, isFinish);
                                    allMultiTreat.push(elementItem);
                                }
                                //}
                               // else $('#' + noteid).addClass('error');
                            }

                        }
                        let per_error = document.getElementsByClassName('tabPercent error');
                        let note_error = document.getElementsByClassName('treatnote error');
                        if (per_error.length == 0 && note_error.length == 0)
                            TreatDetail_Save_Execute(allMultiTreat, is_continue)
                        else TreatDetail_Save_Complete();
                    }
                    else {
                        TreatDetail_Save_Complete();
                        $('#textShowMessage_Treatment').html('@Local["Chưa chọn dịch vụ điều trị"]');
                    }
                }
            }
            else {

                let _indextreat = document.getElementsByClassName('indextreated');
                if (_indextreat != undefined && _indextreat.length != 0) {
                    let elementItem = TreatDetail_CreateElement(0, ser_TabID, Doc1, Doc2, Doc3, Doc4
                        , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, 0, '', [], dateCreated, contentNext, note, symptoms, dateTreatNext, 0);
                    allMultiTreat.push(elementItem);
                    TreatDetail_Save_Execute(allMultiTreat, is_continue);
                }
                else {
                    if (teethselected != undefined && teethselected.length != 0) {
                        for (ii = 0; ii < teethselected.length; ii++) {
                            teethchoose = teethchoose + Number(teethselected[ii].dataset.teethid) + ',';
                        }
                    }
                    let percentid = 'treatdetail_percent_' + ser_TabID;
                    // percent choose
                    let percent = 0;
                    if ($('#' + percentid).length) {
                        percent = Number($('#' + percentid).dropdown('get value')) ? Number($('#' + percentid).dropdown('get value')) : 0;
                    }

                    let elementItem = TreatDetail_CreateElement(0, ser_TabID, Doc1, Doc2, Doc3, Doc4
                        , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, percent, teethchoose, [], dateCreated, contentNext, note, symptoms, dateTreatNext, 0);
                    allMultiTreat.push(elementItem);
                    TreatDetail_Save_Execute(allMultiTreat, is_continue);
                }
            }

        }
        else {
            TreatDetail_Save_Complete();
        }
        return false;
    }
    function TreatDetail_CreateElement(serviceid, tabid, Doc1, Doc2, Doc3, Doc4
        , Ass1, Ass2, Ass3, Ass4, Tech1, Tech2, Percent, teethchoose, treatdetail, dateCreated, contentNext, note, symptoms, dateTreatNext, isFinish) {
        let elementItem = {};

        let manualamount = $('#treatmanualamount_' + tabid).val();
        elementItem.ServiceID = serviceid;
        elementItem.Tab_ID = tabid;
        elementItem.Percent = Percent;
        elementItem.Doc1 = Doc1; elementItem.Doc2 = Doc2; elementItem.Doc3 = Doc3; elementItem.Doc4 = Doc4;
        elementItem.Ass1 = Ass1; elementItem.Ass2 = Ass2; elementItem.Ass3 = Ass3; elementItem.Ass4 = Ass4;
        elementItem.Tech1 = Tech1; elementItem.Tech2 = Tech2;
        elementItem.dateCreated = dateCreated;
        elementItem.teethChoosing = teethchoose;
        elementItem.Content = $('#treatdetail_note_' + tabid).val();
        if (manualamount != "" && !isNaN(manualamount) && manualamount > 0)
            elementItem.ManualAmount = manualamount;
        else elementItem.ManualAmount = 0;
        elementItem.ContentNext = contentNext;
        elementItem.Note = note;
        elementItem.Symptoms = symptoms;
        elementItem.dateTreatNext = dateTreatNext;
        elementItem.StageContentTemplate = $('#treatdetail_contenttemplate_' + tabid).length ? $('#treatdetail_contenttemplate_' + tabid).dropdown('get value') : '';
        elementItem.IsFinish = isFinish;
        if (treatdetail.length != 0) {
            elementItem.StageNum = treatdetail.length;
            elementItem.DetailTeeth = JSON.stringify(treatdetail)
        }
        else {
            elementItem.StageNum = 0
            elementItem.DetailTeeth = ""
        }
        return elementItem;
    }
    function TreatDetail_Save_Execute(data, is_continue) {
        AjaxLoad(url = "/Customer/Treatment/TreatMultiv2/?handler=ExecuteData"
            , data = {
                'data': JSON.stringify(data)
                , 'CurrentID': ser_TreatID
                , 'CustomerID': ser_MainCustomerID
                , 'UsingDateCustomer': ser_ChooseDateCustomer
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {

                if (result != "-1") {
                    let _re = JSON.parse(result);
                    if (_re[0].RESULT == 1) {
                    notiSuccess();
                    syslog_cuttreat(ser_TreatID == 0 ? 'i' : 'u', ser_MainCustomerID, '');
                    if (typeof Treatment_List_Service_Load === 'function') Treatment_List_Service_Load();

                        if (is_continue == 1) {
                            ResetFieldTreat();
                        }
                        else {
                            $('#textShowMessage_Treatment').html('');
                            $("#Div_Treament_List_Detail").empty();
                            $('#Div_Treament_List_Master').css('display', 'block');
                            if ($('#treatheader').length) $('#treatheader').css('display', 'block');
                            if ($('#aftertreat').length) $('#aftertreat').css('display', 'block');
                        }

                        if (typeof LoadCustomerPaymentInfo === 'function') LoadCustomerPaymentInfo();
                    }
                    else notiError_SW();
                }
                else if (result == "0") {
                    notiWarning("@Local["Thời gian tạo không cho phép"] ");
                }
                else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function () {
                TreatDetail_Save_Before();
            },
            complete = function (e) {
                TreatDetail_Save_Complete();
            }
        );
    }
    function TreatDetail_LoadUpdate(id, tabid) {
        AjaxLoad(url = "/Customer/Treatment/TreatMultiv2/?handler=LoadDataUpdate"
            , data = {
                'CurrentID': id
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    Flag_Change_Service = 0;
                    let dataMaster = JSON.parse(result);
                    let data = dataMaster.Table[0];

                    //#region // Basic Content
                    $("#doc1").dropdown("refresh"); $("#doc1").dropdown("set selected", data.BS1);
                    $("#doc2").dropdown("refresh"); $("#doc2").dropdown("set selected", data.BS2);
                    $("#doc3").dropdown("refresh"); $("#doc3").dropdown("set selected", data.BS3);
                    $("#doc4").dropdown("refresh"); $("#doc4").dropdown("set selected", data.BS4);
                    $("#ass1").dropdown("refresh"); $("#ass1").dropdown("set selected", data.PT1);
                    $("#ass2").dropdown("refresh"); $("#ass2").dropdown("set selected", data.PT2);
                    $("#ass3").dropdown("refresh"); $("#ass3").dropdown("set selected", data.PT3);
                    $("#ass4").dropdown("refresh"); $("#ass4").dropdown("set selected", data.PT4);
                    $("#Tech1").dropdown("refresh"); $("#Tech1").dropdown("set selected", data.Tech1);
                    $("#Tech2").dropdown("refresh"); $("#Tech2").dropdown("set selected", data.Tech2);
                    $("#txtContentNextTreatment").val(formatHTML(data.ContentNext));
                    $("#txtNote").val(formatHTML(data.Note));
                    $("#txtSymptoms").val(formatHTML(data.Symptoms));
                    let dataCreatedDate = ConvertToDateRemove1900((data.createdDate ?? '')) != '' ? new Date(data.createdDate) : new Date();
                    let dataTreatDateNext = ConvertToDateRemove1900((data.treatDateNext ?? '')) != '' ? new Date(data.treatDateNext) : new Date();
                    $("#dateCreatedExt").flatpickr({
                        dateFormat: 'd-m-Y H:i:s',
                        enableTime: true,
                        defaultDate: dataCreatedDate
                    });
                    $("#dateTreatNextExt").flatpickr({
                        dateFormat: 'd-m-Y H:i:s',
                        enableTime: true,
                        defaultDate: dataTreatDateNext
                    });
                    //#endregion
                    TD_IsLastbasePer = data.IsLastBasePer;
                    TD_MinPer = data.MinPer;


                    TDD_Load(tabid);


                    //#region // Setting Edit
                    $("#dateCreated").hide();
                    $('.tabStage').addClass('disabled');
                    $('.tabPercent').addClass('disabled');
                    $("#button_save_treatment_multi").remove();
                    $("#treatdetail_choose_all_container").remove();
                    //#endregion
                }
            }
        );
    }
    function ResetFieldTreat() {
        $("#treat_detail_area").html("");
        TD_Ini();
    }

    function TreatDetail_Save_Before() {
        $("#button_save_treatment").prop("disabled", true);
        $("#button_save_treatment_multi").prop("disabled", true);
    }
    function TreatDetail_Save_Complete() {
        $("#button_save_treatment").prop("disabled", false);
        $("#button_save_treatment_multi").prop("disabled", false);
    }

    function TD_Event() {
        //Render quicknote to content next
        $('#lgeneral #tm_quicknote').unbind('change').change(function () {
            let selectedtoken = $(this).dropdown('get value');
            let content = selectedtoken.split(',').map(e => {
                return TD_DataContentTemplate.find(t => t.ID == e)?.Content ?? "";
            }).join('\n');
            $(`#txtContentNextTreatment`).val(content);
        });
    }
    //#endregion


    //#region // OTHER

    function TD_CheckPersonResMySelf() {
        if ($("#btnTreatResMyself").length == 0) {
            $("#TreatPerResID").addClass("disabled");
            $("#TreatPerResID").dropdown("refresh");
            $("#TreatPerResID").dropdown("set selected", sys_employeeID_Main);
        }
        else {
            $("#TreatPerResID").dropdown("refresh");
            $("#TreatPerResID").dropdown("set selected", "0");
            $("#btnTreatResAll").removeClass("d-none");
        }
    }

    function TD_TreatMySelf(isMySelf = false) {
        if (isMySelf) {
            $("#TreatPerResID").addClass("disabled");
            $("#TreatPerResID").dropdown("refresh");
            $("#TreatPerResID").dropdown("set selected", sys_employeeID_Main);
        }
        else {
            $("#TreatPerResID").removeClass("disabled");
            $("#TreatPerResID").dropdown("refresh");
            $("#TreatPerResID").dropdown("set selected", "0");
        }
    }

    //#endregion
</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<style>
    #listtreatment .nav-item {
        display: block;
    }

        #listtreatment .nav-item.undofinish {
            display: none;
        }

    #listtreatment.undofinish .nav-item {
        display: none;
    }

        #listtreatment.undofinish .nav-item.undofinish {
            display: block;
        }

    .treatment_area_selected .treatnote {
        pointer-events: auto;
        background: #f2f2f23d;
    }

    .treatnote {
        pointer-events: none;
        background: #9e9e9e21;
    }


    .index.cantreat {
        cursor: pointer;
        background: #9e9e9e;
        display: inline-block;
    }

    .index.nocantreat {
        opacity: 0.1;
        display: inline-block;
    }

    .treatnote.error {
        background: #ffe8e8;
    }

    .cantreat.selected {
        opacity: 1;
        background: #003f70;
    }

    .teethdetail.selected {
        opacity: 1;
    }

    .teethdetail {
        opacity: 0.3;
    }

    .indextreated {
        opacity: 1 !important;
    }

    .treat_detail:hover .close_service_treat {
        opacity: 1 !important;
    }

    .secontent {
        border: 0 !important;
        border-radius: 7px 7px 0px 0px !important;
        border-bottom: 1px solid rgb(var(--bs-primary),0.5) !important;
    }

    #listtreatment .nav-link-treat.active {
        box-shadow: 0px 0px 1px 1px rgb(var(--bs-primary),1) !important;
        background: rgb(var(--bs-primary),0.1) !important;
    }

    #listtreatment .nav-link-treat:hover {
        box-shadow: 0px 0px 1px 1px rgb(var(--bs-primary),1) !important;
        background: rgb(var(--bs-primary),0.1) !important;
    }
</style>
