@page
@model MLunarCoffee.Pages.Customer.Payment.CommissionMultiModel
@{
    Layout = null;
}

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header pb-0">
                <div class="d-lg-flex">
                    <div class=" col-auto my-auto">
                        <div class="h-100">
                            <h6 id="commission_header" class="mb-0"></h6>
                            <p id="commission_hintdate" class="text-sm mb-0"></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0">
                <div class="row px-2">
                    <div class="col-12 col-sm-12 col-xl-12 p-1">
                        <div class="row px-2">
                            <div class="col-12 col-sm-4 col-xl-4 px-1">
                                <label>@Local["Tìm kiếm"]</label>
                                <div class="input-group" id="CM_DivFilter">
                                    <span class="input-group-text px-2">
                                        <i class="fas fa-search" aria-hidden="true"></i>
                                        <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                    </span>
                                    <input id="CM_InputFilter" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                                    <span class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></span>
                                </div>
                            </div>
                            <div class="col-12 col-sm-4 col-xl-4 px-1">
                                <label id="commission_date">@Local["Ngày"]</label>
                                <div class="input-group mb-0 flex-nowrap">
                                    <div class="ui fluid search selection dropdown max-width-100" id="CM_TypeFilterDate">
                                        <input type="hidden" name="branch" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cm_cbbTypeFilterDate" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                    <input id="CM_DateSearch" class="flatpickr form-control ps-2" type="text" placeholder="eg .@Local["Ngày"]" onchange="event.preventDefault(); return Commission_LoadService();" />
                                    <div class="input-group-text" style="border-right: 1px solid #e6e6e6 !important;">
                                        <span onclick="event.preventDefault(); return Commission_RemoveDateSearch();" class="me-0 cursor-pointer text-danger" aria-hidden="true">
                                            <i class="fas fa-times"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-2 col-xl-2 px-1">
                                <label>@Local["Thanh toán"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="CM_TypeFilterPaid">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">@Local["Thanh toán"]</div>
                                    <div id="cm_cbbTypeFilterPaid" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-2 col-xl-2 px-1">
                                <label>@Local["Tình trạng"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="CM_TypeFilterStatus">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">@Local["Tình trạng"]</div>
                                    <div id="cm_cbbTypeFilterStatus" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col col-md-12 col-xl-8 mt-3 p-1">
                        <div class="">
                            <div class="pb-0 px-0 max-height-500 overflow-auto">
                                <table class="table vt-table mb-0">
                                    <thead>
                                        <tr>
                                            <th style="min-width: 40px;">#</th>
                                            <th>@Local["Mã dịch vụ"]</th>
                                            <th>@Local["Tên dịch vụ"]</th>
                                            <th style="min-width: 100px;">@Local["Ngày tạo"]</th>
                                            <th id="commissDateTreat" style="min-width: 100px;">@Local["Ngày điều trị"]</th>
                                            <th>@Local["Hoàn thành"]</th>
                                            <th>@Local["Tổng hoàn thành"]</th>
                                            <th>@Local["Thanh toán"]</th>
                                            <th>@Local["Hoa hồng"]</th>
                                            <th>@Local["Đã chia"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="CM_RenderBody"></tbody>
                                </table>
                            </div>
                            <button id="cm_loadmore" class="btn btnsysmore btn-secondary w-100 p-1" onclick="event.preventDefault(); return Commission_LoadService(1);">@Local["Xem thêm"]</button>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-xl-4 mt-3 p-1">
                        <div>
                            <div class="row px-2">
                                <div class="col-12 col-sm-12 col-xl-12 p-1 align-items-stretch">
                                    <div class="card-body mt-0 p-3 bg-gray-100 rounded-2">
                                        <div class="text-dark text-sm">
                                            <div class="">
                                                <div>
                                                    <h6 id="cm_sercode" class="text-primary mb-0 fw-bold">--</h6>
                                                    <p id="cm_sername" class="text-dark text-sm mb-0">--</p>
                                                    <hr class="horizontal dark my-2">
                                                </div>
                                            </div>
                                            <div class="">
                                                <p class="mb-0 text-sm mt-1">@Local["Đơn giá"]</p>
                                                <p class="text-sm font-weight-bold my-auto">
                                                    <span id="cm_serprice">00</span>
                                                </p>
                                            </div>
                                        </div>
                                        <div class="row px-2">
                                            <div class="field flex-grow-1 col-12 col-sm-6 px-1 mt-2">
                                                <label>@Local["Chi nhánh"]</label>
                                                <div class="ui fluid search selection dropdown form-control" id="CommissionBranch">
                                                    <input type="hidden" name="branch" />
                                                    <i class="dropdown icon"></i>
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">@Local["Chi nhánh"]</div>
                                                    <div id="ccbCommissionBranch" class="menu" tabindex="-1">
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="divBlockCreated" class="field px-1 mt-2 col-12 col-sm-6">
                                                <label>@Local["Ngày chia"]</label>
                                                <input id="CreatedCommission" class="flatpickr form-control" name="date" type="text" placeholder="eg. @Local["Ngày chia"]" />
                                            </div>
                                            <div id="divDevideAllEmp" class="field px-1 mt-2 col-auto d-none pe-1">
                                                <div class="align-items-center d-flex form-check mt-3">
                                                    <input class="form-check-input mt-0" type="checkbox" id="CommissionAllEmployee">
                                                    <label class="form-check-label mb-0 ms-2 text-body text-truncate" for="CommissionAllEmployee">@Local["Tất cả nhân viên"]</label>
                                                </div>
                                            </div>
                                            <div class="field px-1 mt-2 col-auto">
                                                <div class="align-items-center d-flex form-check mt-3">
                                                    <input class="form-check-input mt-0" type="checkbox" id="CM_ChooseBranch">
                                                    <label class="form-check-label mb-0 ms-2 text-body text-truncate" for="CM_ChooseBranch">@Local["Chọn chi nhánh"]</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 px-1">
                                    <div id="CM_TextMessage" class="badge bg-danger mt-2 rounded-1 text-wrap w-100" style="display: none;"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 col-sm-12 col-xl-12 p-1">
                                    <div class="card-body p-3 pt-1">
                                        <div class="row">
                                            <div class="m-0 my-3 px-1">
                                                <ul class="list-group" id="dtTableConsultantBody"></ul>
                                                <button type="button" class="btn btn-secondary button_chose p-3 mx-1" onclick="event.preventDefault();return CM_Detail_AddRevenue();">
                                                </button>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="field px-1 mt-2 col-12">
                                                <label>@Local["Ghi chú"]</label>
                                                <textarea id="note" class="form-control" name="note" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="Cancel_Commission_Detail()">@Local["Đóng"]</button>
                        <button id="button_save_commission_muldetail" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return Commission_ExcuteData(1)">@Local["Lưu và tiếp tục"]</button>
                        <button id="button_save_commission_muldetail" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return Commission_ExcuteData()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">


    //#region // DECLARE & INIT

    let ser_CustomerCommission = '@Model._CustomerID';
    let ser_ChooseDateCustomer = '@Model._ChooseDateCustomer';
    let CM_DataCommission = {};
    let CM_ServiceTab = {};
    let CM_DataEmployee;
    let CM_CommissionType = '@Model._Type';
    let CM_DataUser;
    let CM_TimerOnChnage;
    let CM_IDService = 0;
    let CM_AmountTotal = 0;
    let CM_AmountCommission = 0;
    let CM_FlagChange = 0;
    let CM_FlagRevenue = 0;
    let CM_BeginID = 0 ;
    let CM_IsAllEmployee = 0;
    let CM_BranchEmployee = '';
    let CM_IsChooseBranch = 0;
    let CM_DataFilterDate = [
        {
            ID: 0,
            Name: "@Local["Mặc định"]"
        }, {
            ID: 1,
            Name: "@Local["Ngày tạo"] (A - Z)"
        }, {
            ID: 2,
            Name: "@Local["Ngày tạo"] (Z - A)"
        }, {
            ID: 3,
            Name: "@Local["Ngày điều trị"] (A - Z)"
        }, {
            ID: 4,
            Name: "@Local["Ngày điều trị"] (Z - A)"
        }
    ];
    let CM_DataFilterPaid = [
        {
            ID: 0,
            Name: "@Local["Tất cả"]"
        }, {
            ID: 1,
            Name: "@Local["Đã thanh toán"]"
        }, {
            ID: 2,
            Name: "@Local["Chưa thanh toán"]"
        }
    ];
    let CM_DataFilterStatus = [
        {
            ID: 0,
            Name: "@Local["Tất cả"]"
        }, {
            ID: 1,
            Name: "@Local["Hoàn thành"]"
        }, {
            ID: 2,
            Name: "@Local["Chưa hoàn thành"]"
        }
    ];
    let CM_DateChoose;

    $(document).ready(function () {
        Commission_SetForm();
        Commission_EventInit();
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                CM_DataUser = data[0];
                Commission_Init();
            }
        );
    });

    function Commission_SetForm() {
        let stringHeader = "";
        let stringHint = "";
        switch (CM_CommissionType) {
            case "consult":
                stringHeader = "@Local["Chia hoa hồng tư vấn viên"]";
                stringHint = "@Local["Ngày tạo dịch vụ"]";
                $("#commissDateTreat").hide();
                break;
            case "doctor":
                stringHeader = "@Local["Chia hoa hồng bác sĩ điều trị"]";
                stringHint = "@Local["Ngày điều trị"]";
                $("#divDevideAllEmp").removeClass("d-none");
                break;
            case "assistant":
                stringHeader = "@Local["Chia hoa hồng kỹ thuật viên - phụ tá"]";
                stringHint = "@Local["Ngày điều trị"]";
                $("#divDevideAllEmp").removeClass("d-none");
                break;
            case "tele":
                stringHeader = "@Local["Chia hoa hồng telesale"]";
                stringHint = "@Local["Ngày tạo dịch vụ"]";
                $("#commissDateTreat").hide();
                break;
            default:
        }
        $("#commission_header").html(stringHeader);
        $("#commission_hintdate").html(stringHint);
        $("#commission_date").html(stringHint);

        if (ser_ChooseDateCustomer == "0") $("#divBlockCreated").hide();

        Load_Combo(CM_DataFilterDate, 'cm_cbbTypeFilterDate', true);
        Load_Combo(CM_DataFilterPaid, 'cm_cbbTypeFilterPaid', true);
        Load_Combo(CM_DataFilterStatus, 'cm_cbbTypeFilterStatus', true);

        $("#CM_TypeFilterDate").dropdown('refresh');
        $("#CM_TypeFilterDate").dropdown('set value', '0');
        $("#CM_TypeFilterPaid").dropdown('refresh');
        $("#CM_TypeFilterPaid").dropdown('set value', '0');
        $("#CM_TypeFilterStatus").dropdown('refresh');
        $("#CM_TypeFilterStatus").dropdown('set value', '0');

    }

    //#endregion


    //#region // SEARCH

    function Commission_EventInit () {

        CM_DateChoose = $("#CM_DateSearch").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false
        });

        $("#CM_InputFilter").on('keyup', function (event) {
            if ($(this).val().length > 0) $("#CM_InputFilter .btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#CM_DivFilter .fa-search").hide();
            $("#CM_DivFilter .spinner-border").show();
            clearTimeout(CM_TimerOnChnage)
            CM_TimerOnChnage = setTimeout(function (e) {
                Commission_Filter();
            }, 300);
        });

        $("#CM_TypeFilterDate, #CM_TypeFilterPaid, #CM_TypeFilterStatus").on('change', function () {
            clearTimeout(CM_TimerOnChnage)
            CM_TimerOnChnage = setTimeout(function (e) {
                Commission_Filter();
            }, 300);
        })

        $("#CM_DivFilter .btn_clear").unbind().click(function (e) {
            $('#CM_InputFilter').val('');
            $("#CM_InputFilter .btn_clear").addClass('opacity-1');
            Commission_Filter();
        });

        $("#CommissionAllEmployee").unbind("change").change(function () {
            let isCheck = $(this).is(":checked");
            CM_IsAllEmployee = isCheck ? 1 : 0;
            for ([key, value] of Object.entries(CM_DataCommission)) {
                CM_RenderDetail_AddDataEmployee(key);
                $("#cm_employee_" + key).dropdown("refresh");
                $("#cm_employee_" + key).dropdown("set selected", value.EmployeeID);
            }
        });
        $("#CM_ChooseBranch").unbind("change").change(function () {
            let isCheck = $(this).is(":checked");
            CM_BranchEmployee = $('#CommissionBranch').dropdown("get value") ? $('#CommissionBranch').dropdown("get value") : 0;
            CM_IsChooseBranch = isCheck ? 1 : 0;
            for ([key, value] of Object.entries(CM_DataCommission)) {
                CM_RenderDetail_AddDataEmployee(key);
                $("#cm_employee_" + key).dropdown("refresh");
                $("#cm_employee_" + key).dropdown("set selected", value.EmployeeID);
            }
        });
        $("#CommissionBranch").unbind("change").change(function () {
            $("#CM_ChooseBranch").trigger("change");
        })
    }

    function Commission_Filter() {
        try{
            let search = xoa_dau($('#CM_InputFilter').val().toLowerCase()).trim();
            let dateSort = $("#CM_TypeFilterDate").dropdown('get value') ? $("#CM_TypeFilterDate").dropdown('get value') : 0;
            let paid = Number($("#CM_TypeFilterPaid").dropdown('get value')) ? Number($("#CM_TypeFilterPaid").dropdown('get value')) : 0;
            let status = Number($("#CM_TypeFilterStatus").dropdown('get value')) ? Number($("#CM_TypeFilterStatus").dropdown('get value')) : 0;
            let data = Object.values(CM_ServiceTab);
            if (search != "" || paid != 0 || status != 0) {
                data = data.filter(function (item) {
                    if (
                        (search == '' || (xoa_dau(item["Name"]).toLowerCase().includes(search)) || (xoa_dau(item["Code"]).toLowerCase().includes(search)))
                        &&
                        (paid == 0 || (paid == 1 && item.AmountPaid > 0) || (paid == 2 && item.AmountPaid == 0))
                        &&
                        (status == 0 || (status == 1 && item.AmountPaid != 0 && item.AmountPaid == item.TotalCommission) || (paid == 2 && item.AmountPaid == 0))
                    )
                        return true;
                    return false;
                });
            };

            if(dateSort == 0){
                if(CM_CommissionType == 'consult')
                    dateSort = 2
                if(CM_CommissionType != 'consult')
                    dateSort = 4
            }

            data = data.sort(function(a, b){
                if(dateSort == '1')
                    return (new Date(a.Created) - new Date(b.Created));
                if(dateSort == '2')
                    return (new Date(b.Created) - new Date(a.Created));
                if(dateSort == '3')
                    return (new Date(a.TreatDate) - new Date(b.TreatDate));
                if (dateSort == '4')
                    return (new Date(b.TreatDate) - new Date(a.TreatDate));
            });

            $("#CM_RenderBody").empty();
            fnRenderBlock(data, "CM_RenderBody"
                , blocknum = 30
                , fnrender = Commission_RenderService
                , fnsuccess = function (e) { }
                , fnbegin = function (e) { }
            );
            $("#CM_DivFilter .fa-search").show();
            $("#CM_DivFilter .spinner-border").hide();

        }
        catch(ex){

        }
    }

    //#endregion

    //#region // LOAD DATA

    function Commission_Init() {
        AjaxLoad(url = "/Customer/Payment/CommissionMulti/?handler=LoadComboMain"
            , data = {
                'CustomerID': ser_CustomerCommission
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    CM_DataEmployee = data.Employee;
                    Load_Combo(data.Branch, "ccbCommissionBranch", true);
                    $("#CommissionBranch").dropdown("refresh");
                    $("#CommissionBranch").dropdown("set selected", Master_branchID);
                    Commission_LoadService();
                    CM_FlagChange = 1;
                }
            }
        );
    }

    function Commission_LoadService(isLoadMore = 0, currentid = 0) {
        if(isLoadMore == 0 && currentid == 0){
            $("#CM_RenderBody").empty();
            CM_ServiceTab = {};
            CM_BeginID = 0;
        }
        let isSearchDate = 1;
        let date = $('#CM_DateSearch').val() != '' ? $('#CM_DateSearch').val() : '01-01-1900';
        if (date == '' || date == '01-01-1900') isSearchDate = 0;
        let dateFrom;
        let dateTo;
        if (date.includes(" to ")) {
            date = date.replace(" to ", "#");
            dateFrom = date.split('#')[0];
            dateTo = date.split('#')[1];
        }
        else {
            dateFrom = date;
            dateTo = date;
        }

        AjaxLoad(url = "/Customer/Payment/CommissionMulti/?handler=LoadDataServiceByTypeCommission"
            , data = {
                'CustomerID': ser_CustomerCommission,
                'Type': CM_CommissionType,
                'CurrentID' : currentid,
                'DateFrom': dateFrom,
                'DateTo': dateTo,
                'IsSearchDate': isSearchDate,
                'BeginID': CM_BeginID
            }
            , async = true
            , error = function () {
                notiError_SW()
            }
            , success = function (result) {
                if (result != '') {
                    let data = JSON.parse(result);
                    if(data && data.length != 0){
                        if(currentid != 0){
                            let item = data[0];
                            let rowComm = $("#rowCommission_" + item.ID);
                            if (rowComm.length > 0) {
                                rowComm.replaceWith(Commission_RenderEach(item));
                            }
                            CM_ServiceTab[item.ID] = item;
                            Commission_EventDetail();
                        }
                        else{
                            CM_BeginID = data[data.length - 1].ID
                            CM_ServiceTab = data.reduce((pre, arr) => {
                                if (arr.ID) pre[arr.ID] = arr;
                                return pre;
                            }, {});
                            Commission_Filter();
                        }
                    }
                }
            }
        );
    }

    //#endregion

    //#region // VIEW DETAIL

    function Commission_FillDetail(ID) {
        if (CM_ServiceTab[ID] != undefined) {
            let item = CM_ServiceTab[ID];
            let totalcomm = item.TotalCommission;
            let totalpaid = item.AmountPaid;
            let totalrevenue = (item.ReAssAmount != undefined ? item.ReAssAmount : 0);

            let mindatedevide = item.MinDateDevide;
            let obj = Fun_GetObject_ByID(CM_DataUser, item.CreatedBy);
            let name = (obj != null) ? obj.Name : 'unknown';

            CM_FlagRevenue = (totalrevenue != 0 ? 1 : 0);
            CM_AmountTotal = (totalrevenue != 0 ? totalrevenue : totalpaid);
            CM_AmountCommission = totalcomm;
            $('#DetailRevenue').show();
            $('#dtTableConsultant').show();
            $("#cm_sercode").html(item.Code);
            $("#cm_sername").html(item.Name);
            $("#cm_sercreateby").html(name);
            $("#cm_serprice").html(formatNumber(item.PriceDiscounted));
            $("#cm_sercreate").html(GetDateTime_String_DMYHM(item.Created));
            //$("#cm_serpaid").html(formatNumber(totalpaid));
            $("#cm_sercomm").html(formatNumber(totalcomm));

            $("#CreatedCommission").flatpickr("destroy");
            $("#CreatedCommission").flatpickr({
                dateFormat: 'd-m-Y H:i',
                minDate: new Date(mindatedevide),
                enableTime: true,
                defaultDate: new Date()
            });
        };
        $("#CM_TextMessage").html('').hide();
        $("#textShowMessage").html('');
        $("#dtTableConsultantBody").empty();
        CM_DataCommission = {};
        return false;
    }

    //#endregion


    //#region //RENDER

    async function Commission_RenderService (data,id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                       let item = data[i];

                       let tr = Commission_RenderEach(item);
                       myNode.insertAdjacentHTML('beforeend', tr);
                    }
                    Commission_EventDetail();
                    $("#CM_RenderBody .rowService:first").trigger("click");
                }
            }
        });
    }

    function Commission_RenderIsComm(item){
        try{
            return (Number(item.TotalCommission) != 0 ? 'border-success' : '')
        }
        catch(ex){
            return '';
        }
    }

    function Commission_RenderEach(item){
        let iscom = Commission_RenderIsComm(item);
        let detail = Commission_percentTreatment(item.TreatIndex, item.PercentTeeth, item.NumberTeeth, item.TeethChoosing, item.PercentService, item.PercentNew);
        let detailall = Commission_percentTreatmentAll(item.TimeToTreatment, item.PercentTeeth, item.NumberTeeth, item.TeethChoosing, item.PercentService);
        let tr = `
        <tr id="rowCommission_${item.ID}" class="rowService vt-number row_app border-bottom-0 border-top-0 border-end-0 border-5 ${iscom}" data-id="${item.ID}">
            <td class="vt-number-order"></td>
            <td>${item.Code}</td>
            <td>${item.Name}</td>
            <td>${ConvertDateTimeUTC_DMY(item.Created)}</td>
            ${CM_CommissionType != 'consult' ? `<td>${ConvertDateTimeUTC_DMY(item.TreatDate)}</td>` : ''}
            <td>${detail}</td>
            <td>${detailall}</td>
            <td>${formatNumber(item.AmountPaid)}</td>
            <td>${formatNumber(item.ReAssAmount)}</td>
            <td>${formatNumber(item.TotalCommission)}</td>
        </tr>
        `
        return tr;
    }

    function Commission_percentTreatment(TreatIndex, PercentTeeth, NumberTeeth, TeethChoosing, PercentService, PercentNew) {
        try {
            let percentinfo = '';
            if (Number(sys_dencos_Main) == 0) {
                percentinfo = TreatIndex;
            }
            else {
                let PercentOfService = 0;
                if (PercentTeeth != 0) {
                    if (TeethChoosing != '') PercentOfService = (PercentService / NumberTeeth);
                    else PercentOfService = PercentNew
                }
                else {
                    PercentOfService = PercentNew
                }
                percentinfo = Math.ceil(PercentOfService) + '%';
            }
            return percentinfo;
        }
        catch (ex) {
            return '';
        }
    }

    function Commission_percentTreatmentAll(TimeToTreatment, PercentTeeth, NumberTeeth, TeethChoosing, PercentService) {
        try {
            let percentinfo = '';
            if (Number(sys_dencos_Main) == 0) {
                percentinfo = TimeToTreatment;
            }
            else {
                let PercentOfService = 0;
                if (PercentTeeth != 0) {
                    if (TeethChoosing != '') PercentOfService = (NumberTeeth == 0) ? 0 : (PercentTeeth / NumberTeeth);
                    else PercentOfService = PercentTeeth
                }
                else {
                    PercentOfService = PercentService
                }
                percentinfo = Math.ceil(PercentOfService) + '%';
            }
            return percentinfo;
        }
        catch (ex) {
            return '';
        }
    }

    //#endregion


    //#region // DETAIL

    function CM_Detail_AddRevenue() {
        let element = {};
        let id = (new Date()).getTime();
        element.EmployeeID = 0;
        element.ReAmount = 0;
        element.RePer = 0;
        CM_DataCommission[id] = element;
        CM_Detail_RenderRow(id, element, 'dtTableConsultantBody');
        return id;
    }

    async function CM_Detail_RenderRow(key, value, id) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let isDisablePer = CM_AmountTotal == 0 ? "disabled" : "";
                    let tr =
                        '<li id=rowCommission_' + key + ' data-id="' + key + '" class=" row row-add border-dashed border-1 position-relative border-secondary border-radius-lg pb-3  border-0 d-flex justify-content-between ps-0 mb-1 border-radius-lg ">'
                        + (' <i data-id="' + key + '" class="opacity-2 position-absolute buttonDeleteClass w-auto d-inline-block cursor-pointer text-gradient text-danger fas fa-times" ></i> ')
                        + '<div class="row col-12 w-100 mx-0">'
                        + '<div class="col-12 col-md-5 px-1 mt-2">'
                        + '<label>@Local["Nhân viên"]</label>'
                        + CM_Detail_RenderRow_AddEmployee(key)
                        + '</div>'
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Tiền mặt"]</label>'
                        + '<input id="cm_employeeamount_' + key + '" value="0" type="text" class="cm_employeeamount fw-bold form-control d-block">'
                        + '</div>'
                        + '<div class="col-12 col-md-3 px-1 mt-2">'
                        + '<label>@Local["Phần trăm"]</label>'
                        + '<input id="cm_employeepercent_' + key + '" value="0" type="text" class="cm_employeepercent fw-bold form-control d-block " ' + isDisablePer + '>'
                        + '</div>'
                        + '</div>'
                        + '</li>';
                    myNode.insertAdjacentHTML("beforeend", tr);
                }
                CM_Detail_FillData(key, value);
                CM_Detail_EventRow(key);
                resolve();
            }, 10)
        });
    }

    function CM_Detail_RenderRow_AddEmployee(randomNumber) {
        let resulf = '<div class="ui fluid search selection dropdown cm_employee form-control" id="cm_employee_' + randomNumber
            + '"><input type="hidden"/><input class="search" autocomplete="off" tabindex="0" /><div class="default text">eg .@Local["Nhân viên"]</div>'
            + '<div id="cbbcm_employee_' + randomNumber + '" class="menu" tabindex="-1">';
        resulf = resulf + '</div></div>';
        return resulf;
    }

    async function CM_Detail_FillData(key, value) {
        return new Promise((resolve, reject) => {
            CM_RenderDetail_AddDataEmployee(key);
            $("#cm_employee_" + key).dropdown("refresh");
            $("#cm_employee_" + key).dropdown("set selected", value.EmployeeID);
            $("#cm_employeeamount_" + key).val(value.ReAmount);
            $("#cm_employeepercent_" + key).val(value.RePer);
            resolve();
        });
    };

    function CM_RenderDetail_AddDataEmployee(key) {
        try {
            let DataEmpFilter = [];
            let IDService = CM_IDService
            switch (CM_CommissionType) {
                case "tele":
                case "consult":
                    DataEmpFilter = CM_DataEmployee;

                    if (CM_IsChooseBranch == 1 && DataEmpFilter && DataEmpFilter.length > 0) {
                        DataEmpFilter = DataEmpFilter.filter((item) => {return (item.isAllBranch == 1 ||("," + item.BranchID + ",").includes("," + CM_BranchEmployee + ","))})
                    }
                    break;
                case "doctor":
                case "assistant":
                    if(CM_IsAllEmployee == 1){
                        DataEmpFilter = CM_DataEmployee;
                        if (CM_IsChooseBranch == 1 && DataEmpFilter && DataEmpFilter.length > 0) {
                            DataEmpFilter = DataEmpFilter.filter((item) => {return (item.isAllBranch == 1 || ("," + item.BranchID + ",").includes("," + CM_BranchEmployee + ","))})
                        }
                    }
                    else{
                        let treatment = Object.values(CM_ServiceTab).filter(word => word["ID"] == IDService);
                        if (treatment.length == 1) {
                            for (let i = 1; i <= 4; i++) {
                                let id_emp = Number(treatment[0]["Emp" + i]);
                                if (id_emp != 0) {
                                    let emp_item = CM_DataEmployee.filter(word => word["ID"] == id_emp);

                                    if (emp_item.length == 1) {
                                        DataEmpFilter.push(emp_item[0]);
                                        if (CM_IsChooseBranch == 1) {
                                            DataEmpFilter = DataEmpFilter.filter((item) => {return (item.isAllBranch == 1 || ("," + item.BranchID + ",").includes("," + CM_BranchEmployee + ","))})
                                        }
                                    }
                                }
                            }
                        }
                    }

                    break;
                default:
                    break;
            }
            Load_Combo(DataEmpFilter, "cbbcm_employee_" + key, false)
        }
        catch {

        }

    }

    function CM_Detail_EventRow(key) {

        $("#dtTableConsultantBody #cm_employeeamount_" + key).divide();
        $("#dtTableConsultantBody #cm_employeepercent_" + key).divide();
        $('#dtTableConsultantBody #rowCommission_' + key + '.ui.dropdown').dropdown({
            allowCategorySelection: true,
            forceSelection: false,
            transition: "fade up"
        });

        $('#dtTableConsultantBody #rowCommission_' + key + ' .cm_employee').unbind('change').change(function () {
            if (CM_FlagChange == 0) return;
            let idcom = this.id
            let id = idcom.replace("cm_employee_", "");
            CM_DataCommission[id].EmployeeID = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
        });

        $('#dtTableConsultantBody #rowCommission_' + key + ' .cm_employeeamount').unbind('change').change(function () {
            if (CM_FlagChange == 0) return;
            CM_FlagChange = 0;
            let id = this.id.replace("cm_employeeamount_", "");
            let value = Number($(this).val());
            if (isNaN(value) || value == 0) {
                $(this).val(0);
                value = 0;
            }
            $("#cm_employeepercent_" + key).val(0);
            CM_DataCommission[id].ReAmount = value;
            CM_DataCommission[id].RePer = 0;
            Commission_CheckAmountDevide();
            CM_FlagChange = 1;
        });

        $('#dtTableConsultantBody #rowCommission_' + key + ' .cm_employeepercent').unbind('change').change(function () {

            if (CM_FlagChange == 0) return;
            CM_FlagChange = 0;
            let id = this.id.replace("cm_employeepercent_", "");
            let value = Number($(this).val());
            let amount = 0;
            if (isNaN(value) || value < 0 || value > 100) {
                $(this).val(0);
                value = 0;
            };
            if(value != 0){
                amount = Math.floor(value * (CM_AmountTotal - CM_AmountCommission) / 100);
                if(amount <= 0) {
                    amount = 0;
                    $(this).val(0);
                    value = 0;
                }
            }
            $("#cm_employeeamount_" + key).val(formatNumber(amount));
            CM_DataCommission[id].ReAmount = amount;
            CM_DataCommission[id].RePer = value;
            Commission_CheckAmountDevide();
            CM_FlagChange = 1;
        });

        $('#dtTableConsultantBody #rowCommission_' + key + ' .buttonDeleteClass').unbind('click').click(function (event) {
            let timespan = $(this).attr("data-id");
            delete CM_DataCommission[timespan];
            $('#rowCommission_' + timespan).remove();
            Commission_CheckAmountDevide();
            event.stopPropagation();
        });

    }

    function Commission_CheckAmountDevide(){
        let totalDevide = Object.values(CM_DataCommission).reduce((pre, arr) => {
            if (arr.ReAmount != 0 || arr.RePer != 0) {
                pre += Number(arr.ReAmount);
            };
            return pre;
        }, 0);

        if(totalDevide != 0 && CM_AmountCommission + totalDevide > CM_AmountTotal) {
            $("#CM_TextMessage").html(CM_FlagRevenue == 1 ? "@Local["Kiểm tra dữ liệu"]" : "@Local["Số tiền chia hoa hồng cao hơn số tiền khách thanh toán"]").show();
        }
        else{
            $("#CM_TextMessage").html("").hide();
        }
    }

    //#endregion

    //#region //Event

    function Commission_EventDetail () {
        $("#CM_RenderBody .rowService").unbind().on('click', function (e) {
            $('#CM_RenderBody .rowService').removeClass('active');
            $(this).addClass('active');
            let ID = Number($(this).attr('data-id'));
            CM_IDService = ID;
            Commission_FillDetail(ID);
        });
    }

    //#endregion


    //#region //Other

    function Commission_ExcuteData(isNext = 0) {
        let isValid = Commission_CheckData();
        if (!isValid) return;

        let datamain = [];
        for([key, value] of Object.entries(CM_DataCommission)){
            let e = {};
            e.Consult = value.EmployeeID;
            e.ConsultAmount = value.ReAmount;
            datamain.push(e);
        }

        let Note = $('#note').val() ? $('#note').val() : "";
        let CM_DateSearch = $('#CreatedCommission').val() ? $('#CreatedCommission').val() : "";
        let BranchID = Number($('#CommissionBranch').dropdown("get value")) ? Number($('#CommissionBranch').dropdown("get value")) : 0;
        let serviceTab = CM_IDService;
        $('#form3').form('validate form')
        if ($('#form3').form('is valid') && serviceTab != 0) {
            if (datamain.length > 0 && $('#textShowMessage').html() == "") {
                AjaxLoad(url = "/Customer/Payment/CommissionMulti/?handler=ExcuteData"
                    , data = {
                        'data': JSON.stringify(datamain),
                        'customerID': ser_CustomerCommission,
                        "note": Note,
                        "created" : CM_DateSearch,
                        "serviceTab": serviceTab,
                        "type": CM_CommissionType,
                        "branchID": BranchID
                    }
                    , async = true
                    , error = function () {notiError_SW()}
                    , success = function (result) {
                        if (result == "1") {
                            notiSuccess();
                            LoadTabCommissionAjax();

                            if(isNext == 1){
                                Commission_LoadService(0, serviceTab);
                                Commission_ResetField();
                            }
                            else{
                                Cancel_Commission_Detail();
                            }
                        }
                        else {
                            notiError("@Local["Số tiền chia hoa hồng không được cao hơn số tiền khách thanh toán"]");
                        }
                    }
                    , sender = $("#button_save_commission_muldetail")
                );
            } else $('#textShowMessage').html("@Local["Kiểm tra tiền hoa hồng"]");
        } else $('#textShowMessage').html("@Local["Kiểm tra dữ liệu"]");
    }


    //#endregion

    //#region //
    function Commission_ResetField(){
        $('#dtTableConsultantBody .buttonDeleteClass').trigger('click');
    }

    function Commission_CheckData() {
        let message = $("#textShowMessage");
        message.html("");
        let isDoc = SRE_CheckData_ByType(CM_DataCommission);
        if (!isDoc ) {
            message.html(Outlang["Kiem_tra_du_lieu"])
            return false
        }
        return true;
    }

    function SRE_CheckData_ByType(data){
        let isdup = 0, isvalue = 0;
        let empcheck = '';
        let preClass = 'cm_employee';
        for (let [key, value] of Object.entries(data)) {
            if(value.ReAmount == 0 && value.RePer == 0) {
                isvalue = 1;
                $('#' + preClass + 'amount_' + key).addClass('error');
                $('#' + preClass + 'percent_' + key).addClass('error');
            }
            else{
                $('#' + preClass + 'amount_' + key).removeClass('error');
                $('#' + preClass + 'percent_' + key).removeClass('error');
            }
            if (value.EmployeeID == 0){
                isvalue = 1;
                $('#' + preClass + '_' + key).addClass('error');
            }
            else $('#' + preClass + '_' + key).removeClass('error');

            if (empcheck.includes('[' + value.EmployeeID + ']')) {
                isdup = 1;
                $('#' + preClass + '_' + key).addClass('error');
            }
            else $('#' + preClass + '_' + key).removeClass('error');
            empcheck += '[' + value.EmployeeID + ']'
        }
        if (isvalue == 1 || isdup == 1) return false;
        return true;
    }
    //#endregion


    //#region // OTHER

    function Commission_RemoveDateSearch() {
        CM_DateChoose.clear();
    }

    //#endregion
</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>

<style>

    #dtTableConsultantBody .buttonDeleteClass:hover {
        opacity: 1 !important;
        transition: 0.3s all;
    }

    #dtTableConsultantBody .buttonDeleteClass {
        bottom: 30px;
        left: -11px;
    }
</style>