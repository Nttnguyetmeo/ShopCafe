@page
@model MLunarCoffee.Pages.Customer.Payment.PaymentBrokerDetailModel
@{
    Layout = null;
}
<div class="card card-plain ps-0" id="broker_list">
    <div class="d-flex justify-content-end  mt-lg-n2 mt-0">
        <ul id="PDBrokerType" class="nav nav-pills  p-1 bg-transparent mt-2" role="tablist">
            <li class="nav-item"  role="presentation">
                <a class="nav-link cursor-pointer detail" data-type="0" data-bs-toggle="pill"
                   data-bs-target="#BrokerMoney" role="tab">@Local["Số tiền"]</a>
            </li>
            <li class="nav-item"  role="presentation">
                <a class="nav-link cursor-pointer detail" data-type="1" data-bs-toggle="pill"
                   data-bs-target="#BrokerPoint" role="tab">@Local["Điểm tích lũy"]</a>
            </li>
        </ul>
    </div>
    <div class="card-body pe-3 ps-0 pt-0">
        <div class="col-12">
            <div class="pt-2 form3" id="frBrokerDetail">
                <div class="row">
                    <div class="col-12 col-lg-8 col-md-7 ps-0">
                        <div class="nav-wrapper position-relative end-0">
                            <div class="nav-wrapper position-relative end-0">
                                <div class="tab-content">
                                    <div class="tab-pane fade" id="BrokerMoney" role="tabpanel">
                                        <div id="PD_WaringDiv" class="badge bg-gradient-danger d-none">
                                        </div>
                                        <div id="PD_DetailSer">
                                            <div class="row row-cols-1 row-cols-sm-1 flex-grow-1 mb-2 accordion overflow-y" id="PD_DetailSerFirstDiv">
                                                <div class="accordion-item col">
                                                    <h5 class="accordion-header p-2 bg-gray-200" id="PD_DetailSerFirstHead">
                                                        <button class="accordion-button border-0 border-bottom font-weight-bold p-0" type="button" data-bs-toggle="collapse" data-bs-target="#PD_DetailSerFirst" aria-expanded="true" aria-controls="PD_DetailSerFirst">
                                                            <i class="collapse-close fa fa-plus me-3 pt-1 text-primary text-xs" aria-hidden="true"></i>
                                                            <i class="collapse-open fa fa-minus me-3 pt-1 text-primary text-xs" aria-hidden="true"></i>
                                                            <span class="pt-1 text-md text-primary">@Local["Ngày đầu"]</span>
                                                           
                                                            <span class="pt-1 ps-1 text-md text-primary" id="PD_SerDateFirst">-</span>
                                                        </button>
                                                    </h5>
                                                    <div id="PD_DetailSerFirst"  style="max-height: 50vh" class="overflow-y ps-4 bg-gray-100 collapsesticky border-radius-md border-top-end-radius-0 border-top-start-radius-0 mx-0 px-2 py-3 row accordion-collapse collapse show"
                                                         aria-labelledby="PD_DetailSerFirst" data-bs-parent="#PD_DetailSerFirstDiv">
                                                        
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row row-cols-1 row-cols-sm-1 flex-grow-1 mb-4 accordion" id="PD_DetailSerAfterDiv">
                                                <div class="accordion-item mb-3 col">
                                                    <h5 class="accordion-header p-2 bg-gray-200" id="PD_DetailSerAfterHead">
                                                        <button class="accordion-button border-0 border-bottom font-weight-bold collapsed p-0" type="button" data-bs-toggle="collapse" data-bs-target="#PD_DetailSerAfter" aria-expanded="false"
                                                                aria-controls="PD_DetailSerAfter">
                                                            <i class="collapse-close fa fa-plus me-3 pt-1 text-primary text-xs" aria-hidden="true"></i>
                                                            <i class="collapse-open fa fa-minus me-3 pt-1 text-primary text-xs" aria-hidden="true"></i>
                                                            <span class="pt-1 text-md text-primary">@Local["Ngày sau"]</span>
                                                        </button>
                                                    </h5>
                                                    <div id="PD_DetailSerAfter" style="max-height: 50vh" class="overflow-y ps-4 bg-gray-100 collapsesticky border-radius-md border-top-end-radius-0 border-top-start-radius-0 mx-0 px-2 py-3 row accordion-collapse collapse"
                                                         aria-labelledby="PD_DetailSerAfter" data-bs-parent="#PD_DetailSerAftertDiv">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade" id="BrokerPoint" role="tabpanel">
                                        <div class="row">
                                            <div class="field col-12 p-1">
                                                <label>@Local["Điểm tích lũy"]</label>
                                                <input class="form-control" name="greater0" id="PDPointNumber" type="number" placeholder="eg. @Local["Điểm tích lũy"]" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-lg-4 col-sm-5 ">
                        <div class="bg-gray-100 py-3 px-2 rounded-2 row">
                            <div class="field col-12">
                                <label>@Local["Chi nhánh"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="PDBranch">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">@Local["Chi nhánh"]</div>
                                    <div id="PDCbbBranch" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-xl-6">
                                <label>@Local["Hình thức"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="PDMethod" onchange="event.preventDefault(); PD_changePayMethod();">
                                    <input type="hidden" name="paymentMethod" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg. @Local["Hình thức"]</div>
                                    <div id="PDCbbMethod" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-xl-6 ps-0">
                                <label>@Local["Chi tiết"]</label>
                                <div class="ui fluid search selection dropdown disabled form-control" id="PD_MethodType">
                                    <input type="hidden" name="paymentMethodType" class="input payment" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Chi tiết"]</div>
                                    <div id="PD_CbbMethodType" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div id="PD_divBlockCreated" class="field col-12">
                                <label>@Local["Ngày chia"]</label>
                                <input id="CreatedCommission" class="flatpickr form-control" name="date" type="text" placeholder="eg. @Local["Ngày chia"]" />
                            </div>
                            <div class="field col-12">
                                <label>@Local["Nội dung"]</label>
                                <textarea rows="2" id="PD_Content" placeholder="eg .Nội dung" class="form-control"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer fixed-botombutton ms-3 px-0">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="PDShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" onclick="PaymentBroker_Cancel()">@Local["Đóng"]</button>
                        <button class="btn btn-secondary" onclick="PaymentBroker_CheckingAmount()">@Local["Cập nhật"]</button>
                        <button id="PDBtnSave" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="PaymentBroker_Excute()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var ser_PaymentCustomerID = '@Model._PaymentCustomerID';
    var ser_BrokerID = '@Model._BrokerID';
    var ser_CustomerDesti = '@Model._CustomerDesti';
    let PDB_ChooseDateCustomer = '@Model._ChooseDateCustomer';
    let PD_DataMethodType = [];
    var data_payment_selected = {};
    let PDB_FlagChange = 1;
    let PDB_Type = 0;
    $(document).ready(function () {
        PaymentBroker_Ini();
        PaymentBrokerMaster_Event();
        $('#PDBrokerType a[data-type="0"]').tab('show');
    });
    function PaymentBrokerMaster_Event () {
        $('#PDBrokerType .detail').on('shown.bs.tab', function (e) {
            PDB_Type = Number($(this).attr("data-type"));
            $('#PDBrokerType .detail').removeClass('active')
            $(this).addClass('active');
            if (PDB_Type == 1) {
                $('#PDMethod').addClass('disabled');
                $('#PDMethod input').attr('name', '');
                $('#PDPointNumber').attr('name', 'greater0');
                $('#PD_MethodType input').attr('name', '');
            }
            else {
                $('#PDMethod').removeClass('disabled');
                $('#PDMethod input').attr('name', 'paymentMethod');
                $('#PDPointNumber').attr('name', '');
            }
        });
    }
    //#region //Load
    function PaymentBroker_Ini() {
        if (PDB_ChooseDateCustomer == "0") $("#PD_divBlockCreated").hide();
        AjaxLoad(url = "/Customer/Payment/PaymentBrokerDetail/?handler=LoadComboMain"
            , data = {}
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                let data = JSON.parse(result);

                Load_Combo(data.Branch, "PDCbbBranch", true);
                $("#PDBranch").dropdown("refresh");
                $("#PDBranch").dropdown("set selected", Master_branchID);


                Load_Combo(data.Method, "PDCbbMethod", true);
                $("#PDBtnSave").prop("disabled", true);
                $('#PDAmountPayment').divide();

                PD_DataMethodType = data.MethodType;
                PaymentBroker_Load();
            }
        );
    }
    function PaymentBroker_Load() {
        $('#PD_SerDateFirst').html('');
        AjaxLoad(url = "/Customer/Payment/PaymentBrokerDetail/?handler=LoadDataPayment"
            , data = { 'CustomerID': ser_PaymentCustomerID }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {

                if (result != "") {
                    let data = JSON.parse(result);
                    let DataDetail = data;
                    let mindatedevide = DataDetail[0]?.DateCreated ?? new Date();
                    for (let i = 0; i < DataDetail.length; i++) {
                        let _e = [];
                        let item = DataDetail[i];
                        _e.AmoutDevide = 0;
                        _e.TabID = item.TabID;
                        _e.PriceSer = item.Price_Discounted;
                        data_payment_selected[item.TabID] = _e;
                    }

                    $("#CreatedCommission").flatpickr({
                        dateFormat: 'd-m-Y H:i',
                        minDate: new Date(mindatedevide),
                        enableTime: true,
                        defaultDate: (new Date(mindatedevide) > new Date()) ? new Date(mindatedevide) :new Date()
                    });
                    $('#PD_SerDateFirst').html(`${DataDetail[0] ? ConvertDateTimeUTC_DMY(INTYMDToDate(DataDetail[0].NumFirstDate)) : ''}`);
                    PaymentBroker_Render(DataDetail, "PD_DetailSerFirst", "PD_DetailSerAfter");
                }
            }
            , sender = null
            , before = function () {
                $("#PDWaiting").show();
            }
            , complete = function (e) {
                $("#PDWaiting").hide();
            }
        );
    }
    //endregion
    //#region //Render
    function PaymentBroker_Render(data, idF, idS) {
        var myNodeF = document.getElementById(idF);
        var myNodeS = document.getElementById(idS);
        let hasFirst = 0, hasAfter = 0;
        if (myNodeF != null && myNodeS) {
            myNodeF.innerHTML = '';
            myNodeS.innerHTML = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let str = `
                            <div class="row mt-2 RowComiss ps-3" id="RowComiss_${item.TabID}" datavalue="${item.Price_Discounted}">
                                <div class="ps-1 rowBrokerPayment">
                                    <div class="d-flex">
                                        <div class="my-auto">
                                            <div class="h-100">
                                                <h6 class="mb-0 fw-bold">
                                                        ${item.ServiceName} <span class="text-primary">${formatNumber(item.Price_Discounted)}</span>
                                                </h6>
                                                <p class="text-sm text-dark d-inline">${Fun_GetName_ByID(DataEmployee, item.PerCreated)} , ${GetDateTime_String_DMY(item.DateCreated)}</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="pb-3">
                                        <div class="mb-2 px-2 row">
                                            <div class="col-12 col-lg-6 px-1 field">
                                                <label class="m-0 ">@Local["Tiền mặt"]</label>
                                                <input value="0" class="fw-bold form-control d-block money MoneyInput" type="text" id="Money_${item.TabID}"></input>
                                            </div>
                                            <div class="col-12 col-lg-6 px-1">
                                                <label class="m-0">@Local["Phần trăm"]</label>
                                                <input value="0" class=" fw-bold form-control d-block money MoneyInput ${item.Price_Discounted == 0 ? 'bg-gray-200' : ''}" ${item.Price_Discounted == 0 ? 'disabled' : ''} type="text" id="Percent_${item.TabID}"></input>
                                            </div>
                                        </div>
                                        <p class="mb-0 text-sm mt-3 text-end">@Local["Thanh toán"] / @Local["Đã chia"]</p>
                                        <p class="text-sm font-weight-bold text-end">${formatNumber(item.AmountPaid)} / ${formatNumber(item.AmountComis)}</p>
                                    </div>
                                </div>
                            </div>
                            <hr class="horizontal dark"></hr>`
                    if (item.IsFirst == 1) {
                        myNodeF.insertAdjacentHTML('beforeEnd', str)
                        hasFirst = 1;
                    }
                    else {
                        myNodeS.insertAdjacentHTML('beforeEnd', str);
                        hasAfter = 1;
                    }
                }
            }
            if (hasFirst == 0) {
                myNodeF.insertAdjacentHTML('beforeEnd', '<p class="fw-bold mb-0 text-dark text-lg">@Local["Không có dữ liệu"]</p>')
            }
            if (hasAfter == 0) {
                myNodeS.insertAdjacentHTML('beforeEnd', '<p class="fw-bold mb-0 text-dark text-lg">@Local["Không có dữ liệu"]</p>')
            }
            $('.money').divide();
        }
        PaymentBroker_Event();
        ToolPopper();
    }

    //endregion
    //#region //Event

    function PaymentBroker_Excute() {
        PaymentBroker_CheckingAmount();
        if (document.getElementById("PDShowMessage").innerHTML == '') {
            let Method_Type = Number($('#PD_MethodType').dropdown('get value')) ? Number($('#PD_MethodType').dropdown('get value')) : 0;
            let dataMaster = new Object();
            dataMaster.BranchID = Number($('#PDBranch').dropdown('get value')) ? Number($('#PDBranch').dropdown('get value')) : 0;
            dataMaster.MethodID = Number($('#PDMethod').dropdown('get value')) ? Number($('#PDMethod').dropdown('get value')) : 0;
            dataMaster.TransferTypeID = dataMaster.MethodID == 4 ? Method_Type : 0;
            dataMaster.PosTypeID = dataMaster.MethodID == 5 ? Method_Type : 0;
            dataMaster.MedthodDetail = ((dataMaster.MethodID != 4 && dataMaster.MethodID != 5) ? Method_Type : 0);
            dataMaster.Content = $('#PD_Content').val() ? $('#PD_Content').val() : "";
            let point = $('#PDPointNumber').val() ? Number($('#PDPointNumber').val()) : "0";
            let TotalAmount = 0;
            let DataDetail = [];
            for ([key, value] of Object.entries(data_payment_selected)) {
                if (value.AmoutDevide > 0) {
                    let item = {};
                    item.TabID = key;
                    item.Amount = value.AmoutDevide;
                    TotalAmount += Number(value.AmoutDevide);
                    DataDetail.push(item);
                }
            }
            dataMaster.DataDetail = JSON.stringify(DataDetail);
            dataMaster.BrokerID = ser_BrokerID;
            dataMaster.Amount = TotalAmount;
            dataMaster.Created = $('#CreatedCommission').val() ? $('#CreatedCommission').val() : new Date();


            $('#frBrokerDetail').form('validate form');
            if ($('#frBrokerDetail').form('is valid')) {
                let custDest = typeof BroCustomerDesti != 'undefined' ? BroCustomerDesti : ser_CustomerDesti;
                AjaxLoad(url = "/Customer/Payment/PaymentBrokerDetail/?handler=ExcuteData"
                    , data = {
                        'data': JSON.stringify(dataMaster)
                        , 'CustomerID': ser_PaymentCustomerID
                        , 'point': point
                        , 'type': PDB_Type
                        , 'CustomerDesti': custDest



                    }
                    , async = true
                    , error = function () { notiError_SW() }
                    , success = function (result) {
                        if ((result != "[]") && (result != 0)) {
                            let data = JSON.parse(result);
                            if (data[0].ID != "0") {
                                notiSuccess();
                                if (typeof BrokerMaster_LoadList !== 'undefined') BrokerMaster_LoadList();
                                if (typeof LoadBrokerValue === 'function') LoadBrokerValue(ser_BrokerID);
                                if (typeof BrokerDetail_Cancel === 'function') BrokerDetail_Cancel();
                                if (typeof BL_CancelDevide === 'function') BL_CancelDevide();
                                if (typeof BL_Detail_LoadData === 'function') BL_Detail_LoadData();
                                if (typeof PaymentBroker_UpdateThirdAccount === 'function') PaymentBroker_UpdateThirdAccount(data[0].ID);
                            }
                            else notiError_SW('@Local["Kiểm tra dữ liệu"]');
                        }
                        else {
                            notiError_SW();
                        }
                    }
                    , sender = $("#PDBtnSave")
                );
            }
        }

    }

    function PD_changePayMethod() {
        let MethodID = $("#PDMethod").dropdown("get value") ? Number($("#PDMethod").dropdown("get value")) : 0;
        $("#PD_MethodType").dropdown("clear");
        $("#PD_CbbMethodType").html("");

        let Data = PD_DataMethodType.filter(word => { return word["Type"] == MethodID });
        Load_Combo(Data, "PD_CbbMethodType", true);


        if (Data.length > 0) {
            $("#PD_MethodType").removeClass('disabled');
            $("#PD_MethodType").dropdown("refresh");
            $("#PD_MethodType").dropdown("set selected", Data[0].ID.toString());
            $("#PD_MethodType input.payment").attr('name', "paymentMethodType");
        }
        else {
            $("#PD_MethodType").addClass('disabled');
            $("#PD_MethodType input.payment").attr('name', "");
        }
    }

    function PaymentBroker_Cancel() {
        if (typeof BrokerDetail_Cancel === 'function') BrokerDetail_Cancel();
        if (typeof BL_CancelDevide === 'function') BL_CancelDevide();
    }
    //#region //ThirdAccount
    function PaymentBroker_UpdateThirdAccount(id)
    {
        if (typeof syn_Accountbrand != 'undefined' && syn_Accountbrand && syn_Accountbrand != "") {
            APIAccount_Excute(currentID = id , type = 8, action = "save"
                , beforefunc = function () { }
                , successfunc = function (e)
                {
                    if(typeof BrokerMaster_LoadList == 'function') BrokerMaster_LoadList();
                }
                , failfunc = function (message) {notiWarning(message)}
                , completefunc = function () { }
            );
        }
    }
    //#endregion
    function PaymentBroker_Event() {
        $(".MoneyInput").change(function () {
            if (PDB_FlagChange == 0) return;
            PDB_FlagChange = 0;
            let Price = $(this).closest('.RowComiss').attr('datavalue') == '' ? 0 : Number($(this).closest('.RowComiss').attr('datavalue'));
            let TabID = $(this).closest('.RowComiss').attr('id').replace("RowComiss_", '');
            let Type = $(this).attr('id').split('_')[0];
            let value = $(this).val();
            let valueCurrentPercent = Number($("#Percent_" + TabID).val()).toFixed(2);
            let valueCurrentMoney = Number($("#Money_" + TabID).val()).toFixed(2);
            if (isNaN(value) || ($(this).val() == '')) {
                $(this).val(0);
                value = 0;
            }
            if ((Type == 'Money') && (Price != 0)) {
                //let valueNew = (value * 100 / Price);
                //if (valueCurrentPercent != valueNew) {
                //    $("#Percent_" + TabID).val(valueNew);
                //}
                $("#Percent_" + TabID).val(0);
            }
            if ((Type == 'Percent') && (Price != 0)) {
                let valueNew = (value * Price / 100);
                if (valueCurrentPercent != valueNew) {
                    $("#Money_" + TabID).val(valueNew);
                }
            }
            PDB_FlagChange = 1;
            data_payment_selected[TabID].AmoutDevide = $("#Money_" + TabID).val() == "" ? "0" : Number($("#Money_" + TabID).val());
        });
    }
    function PaymentBroker_CheckingAmount() {
        document.getElementById("PDShowMessage").innerHTML = '';
        if (PDB_Type == 0) {
            let isError = 0;
            let isWarning = 0;
            let dataDetail = [];
            if (Object.keys(data_payment_selected).length === 0) isError = 1
            for ([key, value] of Object.entries(data_payment_selected)) {
                if (Number(value.AmoutDevide) < 0) {
                    $('#RowComiss_' + key).addClass("error");
                    isError = 1;
                }
                else if (Number(value.AmoutDevide) > Number(value.PriceSer)) {
                    $("#PD_WaringDiv").removeClass('d-none');
                    $("#PD_WaringDiv").html("@Local["Số tiền chia hoa hồng lớn hơn tiền dịch vụ"]!");
                    //$('#RowComiss_' + key).addClass("warning");
                    $('#Money_' + key).closest('.field').addClass("error");
                    isWarning = 1;
                }
                if (Number(value.AmoutDevide) > 0) dataDetail.push(data_payment_selected[key]);

            }

            if (isError == 0 && dataDetail.length != 0) {
                $(".RowComiss").removeClass('error');
                $("#PDShowMessage").html("");
                $("#PDBtnSave").prop("disabled", false);
            }
            else $("#PDShowMessage").html("@Local["Kiểm tra dữ liệu"]");
            if (isWarning == 0) {
                $(".RowComiss").removeClass('warning');
                $("#PD_WaringDiv").addClass('d-none');
            }
        }
        else {
            $("#PDBtnSave").prop("disabled", false);
        }
    }
    //endregion
</script>
<style>
    #PD_DetailSer .warning {
        border-left: 5px solid #fbcf33;
    }

    #PD_DetailSer .error {
        border-left: 5px solid red;
    }
</style>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
