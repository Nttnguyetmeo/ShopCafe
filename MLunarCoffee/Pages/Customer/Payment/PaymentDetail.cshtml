@page
@model MLunarCoffee.Pages.Customer.Payment.PaymentDetailModel
@{
    Layout = null;
}
<script>js_require_notasync('/js/PaymentDetail/service.js', true);</script>
<div class="row m-2 me-0">
    <div class="col-md-7">
        <div id="div_waiting" class="waitingdiv text-center" style="display: none;">
            <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div id="payment_list_service" class="row">
            <div class="align-items-center col-12 d-flex">
                <div class="d-flex align-items-center mb-sm-0 mb-4 position-relative px-3">
                    <a data-bs-toggle="collapse" role="tab" data-bs-target="#pd_filterarea" class="cursor-pointer px-2">
                        <i class=" text-gradient text-primary fas fa-filter"></i>
                    </a>
                    <div id="pd_filterarea" class="collapse card p-3 position-absolute z-index-3 end-1 top-100 mt-1 shadow-lg" style="min-width:250px;">
                        <div class="form-check">
                            <input id="pdfiler_serlist" onchange="event.preventDefault();return Payment_Detail_FilterItem();" class="form-check-input pr-2"
                                   type="checkbox" checked="checked">
                            <label class="custom-control-label mb-0" for="pdfiler_serlist">@Local["Danh sách sản phẩm & dịch vụ thanh toán"]</label>
                        </div>
                        <div class="form-check">
                            <input id="pdfiler_treatinday" onchange="event.preventDefault();return Payment_Detail_FilterItem();" class="form-check-input pr-2"
                                   type="checkbox" checked="checked">
                            <label class="custom-control-label mb-0" for="pdfiler_treatinday">@Local["Phát sinh điều trị trong ngày"]</label>
                        </div>
                        <hr class="horizontal dark my-1">
                        <div class="form-check">
                            <input id="pdfiler_ispayment" onchange="event.preventDefault();return Payment_Detail_FilterItem();" class="form-check-input pr-2"
                                   type="checkbox" checked="checked">
                            <label class="custom-control-label" for="pdfiler_ispayment">@Local["Thanh toán"]</label>
                        </div>
                        <div class="form-check">
                            <input id="pdfiler_isnotpayment" onchange="event.preventDefault();return Payment_Detail_FilterItem();" class="form-check-input pr-2"
                                   type="checkbox" checked="checked">
                            <label class="custom-control-label" for="pdfiler_isnotpayment">@Local["Chưa thanh toán"]</label>
                        </div>
                        <div id="title_type_servicefree" style="display: none;">
                            <hr class="horizontal dark my-1">
                            <a class="align-items-center d-flex nav-link p-0 text-body" style="min-height: 26px">
                                <div class="form-check">
                                    <input id="pdfiler_serfree" onchange="event.preventDefault();return Payment_Detail_ServiceFree(this);" name="radioinstall" class="form-check-input cursor-pointer" type="checkbox" />
                                    <label for="pdfiler_serfree" class="mb-0 custom-control-label">
                                        @Local["Dịch vụ miễn phí"]
                                    </label>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-2" id="title_treat_inday" style="display:none;">
                <div class="card-header pb-0 px-3">
                    <h6 class="mb-0 ms-2 text-primary fw-bold">@Local["Phát sinh điều trị trong ngày"]</h6>
                </div>
                <div class="card-body pt-4 p-2">
                    <div id="TreatmentInDay" class="card-body pt-0 ps-0"></div>
                </div>
            </div>
            <div class="mb-2" id="title_treat_other" style="display:none;">
                <div class="card-header pb-0 px-3">
                    <h6 class="mb-0 ms-2 text-primary fw-bold">@Local["Danh sách sản phẩm & dịch vụ thanh toán"]</h6>
                </div>
                <div class="card-body pt-4 p-2">
                    <div id="ListPaymentDetail" class="card-body pt-0 ps-0"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-5 mt-md-0 mt-4">
        <div class="card position-sticky top-5">
            <div id="deposit_info" style="display: none;">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="fw-bold text-primary mb-0">@Local["Thông tin cọc"]</h6>
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1">
                            <div id="deposit_info_check" class="form-check" style="display: none;">
                                <input id="PaymentDeposit" class="form-check-input pr-2" type="checkbox" onchange="event.preventDefault(); return Payment_UsingDeposit();" checked>
                                <label class="custom-control-label cursor-pointer" for="PaymentDeposit">@Local["Cấn trừ tiền cọc"]</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0 ">
                    <div class="row px-1">
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Tổng ban đầu"]</label>
                            <input id="AmountDeposit" type="text" class="form-control money" disabled />
                        </div>
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Sau cấn trừ"]</label>
                            <input id="AmountDepositLeft" type="text" class="form-control money" disabled />
                        </div>
                    </div>
                </div>
                <hr class="horizontal dark my-0" />
            </div>
            <div class="">
                <div class="card-header pb-0">
                    <div class="d-lg-flex ">
                        <div class="col-auto my-auto flex-fill">
                            <div class="h-100">
                                <div class="h6 fw-bold text-primary mb-0 ellipsis_one_line">
                                    <div class="avatar-xs bg-gradient-primary d-inline-block me-2 px-2 py-1 rounded-3 text-center text-white">
                                        <span id="pd_listserpaynumber" class="text-xs">0</span>
                                    </div>
                                    @Local["Danh sách sản phẩm & dịch vụ thanh toán"]
                                </div>
                            </div>
                        </div>
                        <div class="ms-auto">
                            <div data-bs-toggle="collapse" href="#pd_listserpay" class="cursor-pointer opacity-10 ms-auto" data-bs-placement="right" aria-expanded="true">
                                <i class="fas fa-chevron-down fs-6"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0">
                    <div id="pd_listserpay" class="collapse collapsesticky pt-2 ps-3">
                        <ol id="pd_listserpaydetail" class="list-group position-relative rounded-0 ps-4" style="list-style:decimal !important;">
                        </ol>
                    </div>
                </div>
                <hr class="horizontal dark my-0" />
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="fw-bold text-primary mb-0">@Local["Thông tin thanh toán"]</h6>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-0 form3" id="frpay_detail">
                    <div class="row px-1">
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Hình thức"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="PaymentDetail_Method">
                                <input type="hidden" name="paymentMethod" onchange="event.preventDefault();return Payment_Detail_MethodChange();" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">@Local["Hình thức"]</div>
                                <div id="ccbPaymentDetail_Method" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Chi tiết"]</label>
                            <div class="ui fluid search selection dropdown form-control disabled" id="PaymentDetail_MethodType">
                                <input type="hidden" name="paymentMethodType" class="input payment" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">@Local["Chi tiết"]</div>
                                <div id="ccbPaymentDetail_MethodType" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="row px-1">
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Mã ngân hàng"]</label>
                            <input placeholder="eg .@Local["Mã ngân hàng"]" class="form-control" id="bankInvoiceCode" type="text" disabled="disabled" />
                        </div>
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Ngày tạo"]</label>
                            <input id="dateCreatedExt" class="form-control flatpickr detail" type="text" placeholder="eg .@Local["Ngày tạo"]" />
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Tổng tiền"]</label>
                            <input id="AmountPayment" name="discountOther" type="text" class="form-control money" disabled="" />
                        </div>
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Tiền thu khách hàng"]</label>
                            <input id="AmountPaymentReal" type="text" class="form-control money" disabled />
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Chi nhánh"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="PaymentDetail_Branch">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">@Local["Chi nhánh"]</div>
                                <div id="ccbPaymentDetail_Branch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-xl-6 px-1 mt-2">
                            <label>@Local["Mã hóa đơn"]</label>
                            <input type="text" class="form-control" placeholder="eg .@Local["Mã hóa đơn"]" id="txtBillCode" />
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 px-1 mt-2">
                            <label>@Local["Nội dung"]</label>
                            <textarea data-validation="content_customer" class="form-control _validation_option_" id="txtContentPayment" rows="3" name="content" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="fixed-botombutton pe-2">
    <div class="action_Save">
        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage_Payment"></div>
        <div class="action_Save-Content">
            <button class="btn btn-secondary" form="frpay_detail" onclick="CancelPaymentDetail()">@Local["Đóng"]</button>
            <button id="confirm" class="btn btn-secondary" form="frpay_detail" onclick="Payment_Detail_Confirm()">@Local["Cập nhật"]</button>

            <button id="btn_save_payment_detail" form="frpay_detail" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="Payment_Detail_Save()"
                    disabled="disabled">
                @Local["Lưu"]
            </button>
        </div>
    </div>
</div>

<script>
    var ser_ChooseDateCustomer = '@Model._ChooseDateCustomer';
    var sys_must_used_deposit = '@Model._disable_enter_amount_payment';
    var ser_IsUsingDeposit;
    var ser_TotalDeposit;
    var data_payment_customer;
    var ser_TotalAmountCurrent;
    var ser_TotalDepositCurrent;
    var data_payment_method_type = [];
    var DataTeeth, DataUser, DataService, DataBranch;
    var dataPaymentDetail = [];
    let Payment_ChangeFlag = 0;
    let xhrPaymentDetail;
    let data_payment_method = {};
    $(document).ready(function () {
        $(".flatpickr.detail").flatpickr({
            dateFormat: 'd-m-Y H:i',
            enableTime: true,
            defaultDate: new Date()
        });
        if (ser_ChooseDateCustomer == "1") {
            $("#dateCreated").show();
        }
        Master_IndexDB_Reads(_Session_Data, [_Session_Teeth, _Session_User, _Session_Service, _Session_Branch]
            , function (data) {
                DataTeeth = data[0];
                DataUser = data[1];
                DataService = data[2];
                DataBranch = data[3];
                Payment_Detail_Initialize();
            });

    });

    function Payment_Detail_Initialize() {
        AjaxLoad(url = "/Customer/Payment/PaymentDetail/?handler=LoadInitialize"
            , data = { 'CustomerID': ser_MainCustomerID }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                let data = JSON.parse(result);
                data_payment_method = (data.Method).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre }, {});
                data_payment_method_type = data.MethodType;
                let dataDeposit = data.Deposit;

                Load_Combo(data.Branch, "ccbPaymentDetail_Branch", true);
                $("#PaymentDetail_Branch").dropdown("refresh");
                $("#PaymentDetail_Branch").dropdown("set selected", Master_branchID);


                Load_Combo(data.Method, "ccbPaymentDetail_Method", true);
                $("#PaymentDetail_Method").dropdown("refresh");
                $("#PaymentDetail_Method").dropdown("set selected", Number((data.Method)[0].ID));
                dataPaymentDetail = data.PaymentDetail;
                ser_TotalDeposit = dataDeposit[0].Deposit;
                Payment_Detail_Ini_Data(dataPaymentDetail, ser_TotalDeposit);
                Payment_Detail_Event();
            }
            , sender = null
            , before = function (e) {
                $("#div_waiting").show();
            }
            , complete = function (e) {
                $("#div_waiting").hide();
            }
        );
    }
    async function Payment_Detail_Ini_Data(_data, _deposit) {
        new Promise((resolve) => {
            Payment_ChangeFlag = 0;
            data_payment_customer = {};
            for (let i = 0; i < _data.length; i++) {
                let item = _data[i];
                let element = {};
                element.ServiceID = item.ServiceID;
                element.TabID = item.TabID;
                element.TabAmount = item.TabAmount;
                element.TabPaid = item.TabPaid;
                element.TabLeft = item.TabLeft;
                element.MinPayment = item.MinPayment;
                element.PayCurrent = 0;
                element.PayNote = "";
                element.MinusDeposit = 0;
                element.IsInstallment = item.IsInstallment;
                element.PrepayAmount = item.PrepayAmount;
                element.ManualAmountInDay = item.ManualAmountInDay;
                element.ManualAmountAllDay = item.ManualAmountAllDay;
                element.IsPaidFree = 0;
                element.ServiceName = item.TabName;
                element.IsProduct = item?.IsProduct ?? 0;
                data_payment_customer[item.TabID] = element;
            }
            Payment_Detail_Render(_data, "ListPaymentDetail", "TreatmentInDay");
            $('#AmountDeposit').val(Number(_deposit));
            $('#AmountDepositLeft').val(Number(_deposit));
            Payment_ChangeFlag = 1;
            resolve();
        })
    }

    function Payment_Detail_Save() {
        Checking_Require_Validation('@Model._dtPermissionCurrentPage');
        if (document.getElementById("textShowMessage_Payment").innerHTML === "") {
            let StrServiceName = '';
            let Method_Type = Number($('#PaymentDetail_MethodType').dropdown('get value')) ? Number($('#PaymentDetail_MethodType').dropdown('get value')) : 0;
            let dataMaster = new Object();
            dataMaster.BranchID = Number($('#PaymentDetail_Branch').dropdown('get value')) ? Number($('#PaymentDetail_Branch').dropdown('get value')) : 0;
            dataMaster.MethodID = Number($('#PaymentDetail_Method').dropdown('get value')) ? Number($('#PaymentDetail_Method').dropdown('get value')) : 0;
            dataMaster.PosType = (dataMaster.MethodID == 5 ? Method_Type : 0);
            dataMaster.TransferType = (dataMaster.MethodID == 4 ? Method_Type : 0);
            dataMaster.MedthodDetail = ((dataMaster.MethodID != 4 && dataMaster.MethodID != 5) ? Method_Type : 0);
            dataMaster.Content = $('#txtContentPayment').val() ? $('#txtContentPayment').val() : "";
            dataMaster.BillCode = $('#txtBillCode').val() ? $('#txtBillCode').val() : "";
            dataMaster.CustomerName = NameCustomer;
            dataMaster.BankInvoiceCode = $('#bankInvoiceCode').val() ? $('#bankInvoiceCode').val() : "";
            dataMaster.dateCreated = $('#dateCreatedExt').val() ? $('#dateCreatedExt').val() : new Date();
            var totalPaid = $('#AmountPayment').val() ? $('#AmountPayment').val() : 0;
            var totalPaidFinal = $('#AmountPaymentReal').val() ? $('#AmountPaymentReal').val() : 0;
            if (ser_IsUsingDeposit == 1) {
                dataMaster.PaymentDeposit = totalPaid - totalPaidFinal;
            }
            else {
                dataMaster.PaymentDeposit = 0;
            }
            dataMaster.Amount = totalPaid;
            let dataDetail = [];
            for ([key, value] of Object.entries(data_payment_customer)) {
                let element = {};
                element.TabID = Number(key);
                element.Amount = Number(value.PayCurrent) + Number(value.MinusDeposit);
                element.Note = value.PayNote;
                element.IsPaidFree = value.IsPaidFree;
                dataDetail.push(element);
                if (Number(value.PayCurrent) + Number(value.MinusDeposit) != 0) {
                    StrServiceName += xoa_dau(value.ServiceName) + ',';
                }
            }
            if (document.getElementById("textShowMessage_Payment").innerHTML == "") {
                $('#frpay_detail').form('validate form');
                if ($('#frpay_detail').form('is valid')) {
                   if (xhrPaymentDetail && xhrPaymentDetail.readyState != 4) xhrPaymentDetail.abort();
                        xhrPaymentDetail = AjaxLoad(url = "/Customer/Payment/PaymentDetail/?handler=ExcuteData"
                            , data = {
                                'data': JSON.stringify(dataMaster)
                                , 'dataDetail': JSON.stringify(dataDetail)
                                , 'CustomerID': ser_MainCustomerID
                                , 'AppToken': ser_MainAppToken
                                , 'AppPlatform': ser_MainAppPlatform
                                , 'AppUser': ser_MainApp_User
                            }
                            , async = true
                            , error = function () { notiError_SW() }
                            , success = function (result) {
                                if (result == "IsLocked") { notiError("@Local["Thanh toán bị khóa"]"); }
                                if (result != "0") {
                                    let datar = JSON.parse(result);
                                    if (datar != undefined && datar.length == 1 && datar[0]["Result"] != "0") {
                                        let idInserted = datar[0]["Result"];
                                        if (idInserted == "-1") document.getElementById("textShowMessage_Payment").innerHTML
                                            = "@Local["Đã chốt sổ, không thể thêm thanh toán trước thời gian chốt"]";
                                        else {

                                            if (typeof LoadPaymentAjax === 'function') LoadPaymentAjax(idInserted,'payment');
                                            if (typeof LoadTabDepositAjax === 'function') LoadTabDepositAjax();
                                            if (typeof LoadCustomerPaymentInfo === 'function') LoadCustomerPaymentInfo();
                                            if (typeof Tab_List_Customer_Service === 'function') Tab_List_Customer_Service();
                                            if (typeof SMSSYS_AfterPaid === 'function')
                                                SMSSYS_AfterPaid(_customerid = ser_MainCustomerID, _objCurrentID = { PaymentID: idInserted });
                                            if (typeof Payment_Detail_UpdateThirdAccount === 'function')
                                                Payment_Detail_UpdateThirdAccount(idInserted);

                                            CancelPaymentDetail();
                                            notiSuccess();
                                            fcm_sendtopic("payment", Master_circleAvatar, sys_employeeName_Main, formatNumber(totalPaidFinal));
                                            let paymethod = Fun_GetName_ByID(data_payment_method, datar[0]["PayMethod"]);
                                            let amount = formatNumber(datar[0]["Amount"]);
                                            syslog_cutpaid('i', datar[0]["Code"], ser_MainCustomerID, `${paymethod} ${amount} `);
                                        }
                                    }
                                    else notiError_SW();
                                }
                                else notiError_SW();
                            }
                            , sender = $("#btn_save_payment_detail")
                            , before = function (e) {
                            }
                            , complete = function (e) {
                            }
                        );
                }
            }
        }
        return false;
    }
    //#region //ThirdAccount
    function Payment_Detail_UpdateThirdAccount(id)
    {
        if (typeof syn_Accountbrand != 'undefined' && syn_Accountbrand && syn_Accountbrand != "") {
            APIAccount_Excute(currentID = id, type = 1, action = "save"
                , beforefunc = function () { }
                , successfunc = function (e) {
                    if (typeof LoadPaymentAjax == 'function') LoadPaymentAjax(id, 'payment');
                }
                , failfunc = function (message) { }
                , completefunc = function () { }
            );
        }
    }
    //#endregion

    function Payment_Detail_Confirm() {

        document.getElementById("textShowMessage_Payment").innerHTML = '';
        Payment_Detail_Validate();
        if (document.getElementById("textShowMessage_Payment").innerHTML == '') {
            $('#AmountPayment').val(ser_TotalAmountCurrent);
            $('#AmountPaymentReal').val(ser_TotalAmountCurrent - ser_TotalDepositCurrent);
            $("#btn_save_payment_detail").attr("disabled", false);
            $("#confirm").attr("disabled", true);
            Payment_Detail_RenderServicePayment(data_payment_customer, 'pd_listserpaydetail');
        }
        else {
            Payment_Detail_Prepare();
        }
    }
    function Payment_Detail_Validate() {
        $('#frpay_detail .field').removeClass('error');
        $('#frpay_detail').form('validate form');
        if (!$('#frpay_detail').form('is valid')) {
            document.getElementById("textShowMessage_Payment").innerHTML = "@Local["Kiểm tra dữ liệu"]";
        }
        let isError_ = 0;
        let isPaidFree = 0;
        ser_TotalAmountCurrent = 0; ser_TotalDepositCurrent = 0;
        for ([key, value] of Object.entries(data_payment_customer)) {
            ser_TotalAmountCurrent = ser_TotalAmountCurrent + Number(value.PayCurrent) + Number(value.MinusDeposit);
            ser_TotalDepositCurrent = ser_TotalDepositCurrent + Number(value.MinusDeposit);
            isPaidFree += Number(value.IsPaidFree);
            if (Number(value.PayCurrent) < 0 || (Number(value.PayCurrent) + Number(value.MinusDeposit) > Number(value.TabLeft))) {

                $('#payCurrent_' + key).addClass('paidment_error')
                isError_ = 1;
            }
            else {
                $('#payCurrent_' + key).removeClass('paidment_error')
            }
        }
        if (isError_ == 1) {
            $('#textShowMessage_Payment').html('@Local["Kiểm tra dữ liệu"]');
        }
        else if (ser_TotalAmountCurrent == 0 && isPaidFree == 0) {
            document.getElementById("textShowMessage_Payment").innerHTML = "@Local["Tổng tiền không thể bằng 0"]";
        }
    }
    function Payment_Detail_Each_Event() {
        let eventpayCurrent = window.isSafariBrowser() ? 'blur' : 'change';
        $('#ListPaymentDetail .money.payCurrent').unbind(eventpayCurrent).on(eventpayCurrent, function (e) {
            e.preventDefault();
            e.stopPropagation();
            if (Payment_ChangeFlag == 1) {
                Payment_ChangeFlag = 0;
                let id = this.id.replace("payCurrent_", "")
                let value = this.value.replace(/,/g, '');
                let dataleft = Number($(this).attr('data-left'));
                let datatreatfee = Number($(this).attr('data-treatfee'));
                let currentvalue = 0;
                if (data_payment_customer[id].TabAmount == 0) data_payment_customer[id].IsPaidFree = 1
                if (!(!isNaN(parseFloat(value)) && isFinite(value) && Number(value) > 0)) {
                    $(this).val(0);
                    data_payment_customer[id].PayCurrent = 0;
                    currentvalue = 0;
                }
                else {
                    let item = data_payment_customer[id];
                    if (Number(value) > 0 && item.MinPayment > Number(value) && item.TabPaid == 0) {
                        $(this).val(item.MinPayment);
                        data_payment_customer[id].PayCurrent = item.MinPayment;
                        currentvalue = Number(item.MinPayment);
                    }
                    else if (Number(value) > dataleft) {
                        data_payment_customer[id].PayCurrent = dataleft;
                        currentvalue = dataleft;
                        $(this).val(dataleft);
                    }
                    else {
                        data_payment_customer[id].PayCurrent = value;
                        currentvalue = value;
                    }
                }
                Payment_Detail_CheckTreatFee(id);
                Payment_Detail_Prepare();

                if (ser_IsUsingDeposit == 1) Checking_Add_Amount(id, currentvalue);
                Payment_ChangeFlag = 1;

            }

            return false;
        });
        $('#ListPaymentDetail .collect_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            let Amount = $(this).attr('data-amount');
            Checking_Add_Amount(id, Amount);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
            return false;
        });
        $('#ListPaymentDetail .collect_all_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            let Amount = $(this).attr('data-all-amount');
            Checking_Add_All_Amount(id, Amount);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
            return false;
        });
        $('#ListPaymentDetail .installment').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Customer/Installment/InstallmentDetail?Viewonly=1&TabID=" + id);
            $('#DetailModal').modal('show');
            Payment_ChangeFlag = 1;
            return false;
        });
        $('#ListPaymentDetail .remove_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            Checking_Remove_Amount(id);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
        });
        $('#ListPaymentDetail .selectPaymentTreat').bind('click', function () {
            let id = $(this).attr('data-id');
            let Amount = $(this).attr('data-amount');
            $('#payCurrent_' + id).val((Amount < 0 ? 0 : Amount));
            data_payment_customer[id].PayCurrent = Amount;
        });
        $('#ListPaymentDetail').on('change', '.payNote', function () {
            let id = this.id.replace("payNote_", "");
            var value = this.value ? this.value : "";
            data_payment_customer[id].PayNote = value;
        });
        // payment service treat inday
        $('#TreatmentInDay .payCurrent').bind(eventpayCurrent, function () {
            if (Payment_ChangeFlag == 1) {
                let id = this.id.replace("payCurrent_", "")
                var value = this.value.replace(/,/g, '');
                let dataleft = Number($(this).attr('data-left'));
                let datatreatfee = Number($(this).attr('data-treatfee'));
                let currentvalue = 0;
                if (data_payment_customer[id].TabAmount == 0) data_payment_customer[id].IsPaidFree = 1
                if (!(!isNaN(parseFloat(value)) && isFinite(value))) {
                    $(this).val(0);
                    data_payment_customer[id].PayCurrent = 0;
                    currentvalue = 0;
                }
                else {
                    let item = data_payment_customer[id];
                    if (Number(value) > 0 && item.MinPayment > Number(value) && item.TabPaid == 0) {
                        $(this).val(item.MinPayment);
                        data_payment_customer[id].PayCurrent = item.MinPayment;
                        currentvalue = Number(item.MinPayment);
                    }
                    else if (Number(value) > dataleft) {
                        data_payment_customer[id].PayCurrent = dataleft;
                        currentvalue = dataleft;
                        $(this).val(dataleft);
                    }
                    else {
                        data_payment_customer[id].PayCurrent = value;
                        currentvalue = value;
                    }
                }

                Payment_Detail_CheckTreatFee(id);
                Payment_ChangeFlag = 0;
                if (ser_IsUsingDeposit == 1) Checking_Add_Amount(id, currentvalue);
                Payment_ChangeFlag = 1;
                Payment_Detail_Prepare();
            }
        });
        $('#TreatmentInDay .payNote').bind('change', function () {
            let id = this.id.replace("payNote_", "");
            var value = this.value ? this.value : "";
            data_payment_customer[id].PayNote = value;
        });
        $('#TreatmentInDay .collect_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            let Amount = $(this).attr('data-amount');
            Checking_Add_Amount(id, Amount);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
        });
        $('#TreatmentInDay .collect_all_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            let Amount = $(this).attr('data-all-amount');
            Checking_Add_Amount(id, Amount);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
        });
        $('#TreatmentInDay .remove_amount').bind('click', function () {
            Payment_ChangeFlag = 0;
            let id = $(this).attr('data-id');
            Checking_Remove_Amount(id);
            Payment_Detail_Prepare();
            Payment_ChangeFlag = 1;
        });
        if($('.rowPaymentDetail.tabFree').length > 0){
            $('#title_type_servicefree').show();
        }
        $('.money').divide();
        ToolPopper();
    }
    function Payment_Detail_MethodChange() {
        let idMethod = Number($('#PaymentDetail_Method').dropdown('get value')) ? Number($('#PaymentDetail_Method').dropdown('get value')) : 0;
        $("#PaymentDetail_MethodType").dropdown("clear");
        $("#ccbPaymentDetail_MethodType").html("");

        let data = data_payment_method_type.filter(a => a.Type == idMethod);
        Load_Combo(data, "ccbPaymentDetail_MethodType", true);
        if (idMethod == 5)
            $("#bankInvoiceCode").prop('disabled', false);
        else
            $("#bankInvoiceCode").prop('disabled', true);

        if (data.length > 0) {
            $("#PaymentDetail_MethodType").removeClass('disabled');
            $("#PaymentDetail_MethodType input.payment").attr('name', "paymentMethodType");
        }
        else {
            $("#PaymentDetail_MethodType").addClass('disabled');
            $("#PaymentDetail_MethodType input.payment").attr('name', "");
        }
        Payment_Detail_Prepare();
    }
    function Payment_UsingDeposit() {
        if (document.getElementById('PaymentDeposit').checked) {
            ser_IsUsingDeposit = 1;
        }
        else {
            ser_IsUsingDeposit = 0;
        }
        Payment_Detail_Ini_Data(dataPaymentDetail, ser_TotalDeposit);
        Payment_Detail_Prepare();
    }
    function Payment_Detail_Prepare () {
         
        $('#AmountPaymentReal').val(0);
        $('#AmountPayment').val(0);
        $("#btn_save_payment_detail").attr("disabled", true);
        $("#confirm").attr("disabled", false);
    }

    function Payment_Detail_ServiceFree(event){
        if ($(event).is(":checked")){
            $("#payment_list_service").addClass("active");
        }
        else{
            $("#payment_list_service").removeClass("active");
        }
    }

    function Payment_Detail_FilterItem(){
        try{
            let isPayment = $('#pdfiler_ispayment').is(":checked");
            let isNotPayment = $('#pdfiler_isnotpayment').is(":checked");
            let isSerList = $('#pdfiler_serlist').is(":checked");
            let isTreatInday = $('#pdfiler_treatinday').is(":checked");
            let isAll = isPayment && isNotPayment;
            let itemPayment = $('#TreatmentInDay .rowPaymentDetail, #ListPaymentDetail .rowPaymentDetail');
            if (isAll){
                itemPayment.slideDown();
            }
            else{
                for ([key, value] of Object.entries(data_payment_customer)) {
                    let itemIsPay = Number(value.PayCurrent) + Number(value.MinusDeposit) + Number(value.IsPaidFree);
                    if ((isPayment && itemIsPay != 0) || (isNotPayment && itemIsPay == 0)){
                        $('#payCurrent_' + key)
                            .closest('.rowPaymentDetail')
                            .slideDown(200);
                    }
                    else{
                        $('#payCurrent_' + key)
                            .closest('.rowPaymentDetail')
                            .slideUp(200);
                    }
                }
            }
            if ($("#title_treat_inday").length != 0){
                if (isTreatInday) {
                    $("#title_treat_inday").slideDown(200);
                }
                else {
                    $("#title_treat_inday").slideUp(200);
                }
            }

            if (isSerList) {
                $("#title_treat_other").slideDown(200);
            }
            else {
                $("#title_treat_other").slideUp(200);
            }
        }
        catch(ex){

        }
    }

    function Payment_Detail_CheckTreatFee(tabid){
        try{
            let item = data_payment_customer[Number(tabid)];
            if(item == undefined) return;
            let input = $("#payCurrent_" + tabid);
            let value = Number(input.val());
            let datatreatfee = Number(input.attr('data-treatfee'));
            let noti = input.closest('.rowPaymentDetail').find('.payCurrentNotiTreat');
            if(noti.length == 0) return;
            if (item.IsProduct == 0 && (Number(item.TabPaid) + Number(value) + Number(item.MinusDeposit) > datatreatfee)) {
                noti.removeClass('d-none')
            }
            else {
                noti.addClass('d-none')
            }
        }
        catch(ex){

        }
    }

</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>

<style>
    .label_minus {
        display: none;
    }

    .remove_amount {
        display: none;
    }

    #payment_list_service:not(.active) .rowPaymentDetail.tabFree{
        display: none !important;
    }

  
    #pd_listserpaydetail > li::marker {
        color: rgb(var(--bs-primary));
    }
    

</style>

