@page
@model MLunarCoffee.Pages.Customer.Payment.CommissionCardMultiModel
@{
    Layout = null;
}


<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body pt-0">
                <div class="row  ms-n2">
                    <div class="col col-md-12 col-xl-5">
                        <div class="row px-2">
                            <div class="col-12 col-sm-12 col-xl-12 p-1">
                                <label class="ms-0">@Local["Tìm kiếm"]</label>
                                <div class="input-group" id="CCM_DivFilter">
                                    <span class="input-group-text px-2">
                                        <i class="fas fa-search" aria-hidden="true"></i>
                                        <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                    </span>
                                    <input id="CCM_InputFilter" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                                    <span class="input-group-text">
                                        <div class="ui dropdown text-dark fw-bold text-sm border-0" id="CCM_TypeFilter" tabindex="0">
                                            <i class="dropdown icon"></i>
                                            <input type="hidden" value="1">
                                            <div class="text"></div>
                                            <div id="CCM_cbbTypeFilter" class="menu transition hidden" tabindex="-1">
                                            </div>
                                        </div>
                                    </span>
                                    <span class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></span>
                                </div>
                            </div>
                            <div class="p-1 pb-0 " style="height: 600px; overflow-y: auto; overflow-x: hidden;">
                                <div class="pb-0 mt-3 px-0 max-height-500 overflow-auto">
                                    <ul class="list-group mb-2" id="CCM_RenderBody">
                                    </ul>
                                </div>                               
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-12 col-xl-7">
                        <div>
                            <div class="row px-2">
                                <label>&nbsp; </label>
                                <div class="col-12 col-sm-12 col-xl-6 p-1 align-items-stretch">
                                    <div class="bg-gray-100 card-header p-3 rounded-2">
                                        <div class="ps-1 pt-0 text-dark text-sm">
                                            <p class="mb-0 text-sm mt-3">@Local["Dịch vụ"] / @Local["Đơn giá"]</p>
                                            <p class="text-sm font-weight-bold my-auto">
                                                <span class="text-primary">
                                                    <span id="CCM_CardCode"></span>
                                                    <span> - </span>
                                                    <span id="CCM_CardName"></span>
                                                </span>
                                                <span> / </span>
                                                <span id="CCM_CardPrice">00</span>
                                            </p>
                                            <hr class="horizontal dark">
                                            <p class="mb-0 text-sm mt-3">@Local["Người tạo"] / @Local["Ngày tạo"]</p>
                                            <p class="text-sm font-weight-bold my-auto">
                                                <span id="CCM_CardCreateby"></span>
                                                <span> / </span>
                                                <span id="CCM_CardCreate"></span>
                                            </p>
                                            <hr class="horizontal dark">
                                            <p class="mb-0 text-sm mt-3">@Local["Đã chia"] / @Local["Thanh toán"] </p>
                                            <p class="text-sm font-weight-bold my-auto">
                                                <span id="CCM_CardComm"></span>
                                                <span> / </span>
                                                <span id="CCM_CardPaid"></span>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-xl-6 p-1">
                                    <div class="bg-gray-100 card-header p-3 rounded-2 h-100">
                                        <div class="field flex-grow-1 col-12 col-sm-12 px-1 mt-2">
                                            <label>@Local["Chi nhánh"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="CCM_Branch">
                                                <input type="hidden" name="branch" />
                                                <i class="dropdown icon"></i>
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">@Local["Chi nhánh"]</div>
                                                <div id="CCM_cbbBranch" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div id="divBlockCreated" class="field px-1 mt-2 col-12 col-sm-12">
                                            <label>@Local["Ngày chia"]</label>
                                            <input id="CCM_CreatedCOM" class="flatpickr form-control" name="date" type="text" placeholder="eg. @Local["Ngày chia"]" />
                                        </div>

                                    </div>
                                </div>
                                <div class="col-12 px-1">
                                    <div id="datamain" class="badge bg-gradient-danger mt-2 rounded-1" style="display: none;"></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12 col-sm-12 col-xl-12 p-1">
                                    <div class="card-body p-3 pt-1">
                                        <div class="row">
                                            <div class="m-0 my-3 px-1">
                                                <ul class="list-group" id="CCM_tableCOMContent">
                                                </ul>
                                                <button type="button" class="btn btn-secondary button_chose p-3 mx-1" onclick="event.preventDefault();return CCM_AddCOM();">
                                                </button>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="field px-1 mt-2 col-12">
                                                <label>@Local["Ghi chú"]</label>
                                                <textarea id="note" class="form-control" name="note" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="Cancel_Commission_Card_Detail()">@Local["Đóng"]</button>
                        <button id="button_save_CCM_muldetail" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="ExcuteData()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    var ser_CustomerCommission = '@Model._CustCommissionCard';
    let ser_ChooseDateCustomer = '@Model._ChooseDateCustomer';
    var dataCommission = {};
    var dataServiceTab = {};
    var dataEmployee;
    let DataUser;
    let CCM_TimerOnChnage;
    let CCM_PriceSale = 0;
    let CCM_AmountPaid = 0;
    let CCM_AmountCOM = 0;
    let CCM_FlagChange = 0;
    let CCM_DataFilter = [
        {
            ID: 0,
            Name: "@Local["Tất cả"]"
        }, {
            ID: 1,
            Name: "@Local["Ngày tạo"] (A - Z)"
        }, {
            ID: 2,
            Name: "@Local["Ngày tạo"] (Z - A)"
        }
    ];
    $(document).ready(function () {
        if (ser_ChooseDateCustomer == "0") $("#divBlockCreated").hide();
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                CCM_LoadComboInit();
                CCM_EventInit();
            }
        )
        Load_Combo(CCM_DataFilter, 'CCM_cbbTypeFilter', true);
        $("#CCM_TypeFilter").dropdown('refresh');
        $("#CCM_TypeFilter").dropdown('set value', '0');        
    });

    //#region //LOAD
    function CCM_LoadComboInit() {
        AjaxLoad(url = "/Customer/Payment/CommissionCardMulti/?handler=LoadComboMain"
            , data = {}
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result)
                    dataEmployee = data.Employee;
                    Load_Combo(data.Branch, "CCM_cbbBranch", true);
                    $("#CCM_Branch").dropdown("refresh");
                    $("#CCM_Branch").dropdown("set selected", Master_branchID);
                    CCM_LoadServiceByType();
                }
            }
        );        
    }
    function CCM_EventInit(){    
        let filter = document.getElementById("CCM_InputFilter");
        filter.addEventListener("keyup", function (event) {
            if ($(this).val().length > 0) $("#CCM_InputFilter .btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#CCM_DivFilter .fa-search").hide();
            $("#CCM_DivFilter .spinner-border").show();
            clearTimeout(CCM_TimerOnChnage)
            CCM_TimerOnChnage = setTimeout(function (e) {
                CCM_Filter();
            }, 300)
        });

        $("#CCM_TypeFilter").on('change', function () {
            clearTimeout(CCM_TimerOnChnage)
            CM_TimerOnChnage = setTimeout(function (e) {
                CCM_Filter();
            }, 300);
        })

        $("#CCM_DivFilter .btn_clear").unbind().click(function (e) {
            $('#CCM_InputFilter').val('');
            $("#CCM_InputFilter .btn_clear").addClass('opacity-1');
            CCM_Filter();
        });
    }

    function CCM_LoadServiceByType() {
        AjaxLoad(url = "/Customer/Payment/CommissionCardMulti/?handler=LoadDataCommissionCard"
            , data = {
                'CustomerID': ser_CustomerCommission
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != '') {
                    let data = JSON.parse(result);
                    $('#CCM_RenderBody').empty();
                    fnRenderBlock(data, "CCM_RenderBody"
                        , blocknum = 30
                        , fnrender = CCM_RenderService
                        , fnsuccess = function () {
                            let row = $('#CCM_RenderBody .rowService:first-child');
                            if (row.length != 0) row.trigger('click');
                        }
                    );
                    dataServiceTab = data.reduce((pre, arr) => {
                        if (arr.ID) pre[arr.ID] = arr;
                        return pre;
                    }, {});
                }
            }
        );
    }


    //#endregion


    //#region //RENDER
    async function CCM_RenderService(data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr =
                            `
                            <li class="rowService list-group-item border-0 flex-column ps-0 py-0 mb-2 py-2 border-radius-lg cursor-pointer" data-id="${item.ID}">
                                <div class="checklist-item ps-2 ms-1 ">
                                    <div class="d-flex align-items-center">
                                        <span class="border-bottom border-primary code fw-bold mb-0 mt-0 my-auto text-primary text-sm">${item.CardCode}</span>
                                        <span class="text-sm text-dark ps-2">  - ${item.CardName}</span>
                                    </div>
                                    <div class="d-flex align-items-center mt-1 gap-3">
                                        <div>
                                            <p class="text-xs mb-0 text-secondary font-weight-bold">@Local["Ngày tạo"]</p>
                                            <span class="text-sm text-dark">${GetDateTime_String_DMYHM(item.CardCreated)}</span>
                                        </div>
                                        <div>
                                            <p class="text-xs mb-0 text-secondary font-weight-bold">@Local["Thanh toán"]</p>
                                            <span class="text-sm text-dark">${formatNumber(item.AmountPaid)}</span>
                                        </div>
                                        <div>
                                            <p class="text-xs mb-0 text-secondary font-weight-bold">@Local["Đã chia"]</p>
                                            <span class="text-sm text-dark">${formatNumber(item.TotalCommission)}</span>
                                        </div>
                                    </div>
                                <div class="horizontal dark my-0"></div>
                            </li>
                            `
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                    CCM_EventDetail();
                }
            }
        });
    }

    function CCM_RenderDetail(ID) {
        let TotalCommission = 0;

        if (dataServiceTab[ID] != undefined) {
            let item = dataServiceTab[ID];
            $("#CCM_CardCode").html(item.CardCode);
            $("#CCM_CardName").html(item.CardName);
            $("#CCM_CardPrice").html(formatNumber(item.Price_Sale));
            $("#CCM_CardCreateby").html(DataUser[item.CardCreatedBy] != undefined ? DataUser[item.CardCreatedBy].Name : '');
            $("#CCM_CardCreate").html(GetDateTime_String_DMYHM(item.CardCreated));
            $("#CCM_CardComm").html(formatNumber(item.TotalCommission));
            $("#CCM_CardPaid").html(formatNumber(item.AmountPaid));
            $("#CCM_CreatedCOM").flatpickr("destroy");
            $("#CCM_CreatedCOM").flatpickr({
                dateFormat: 'd-m-Y H:i',
                minDate: new Date(item.CardCreated),
                enableTime: true,
                defaultDate: new Date()
            });
            CCM_PriceSale = item.Price_Sale;
            CCM_AmountPaid = item.AmountPaid;
            CCM_AmountCOM = item.TotalCommission;
            $("#datamain").html('').hide();
            $("#textShowMessage").html('');
            $("#CCM_tableCOMContent").empty();
        }


        $("#textShowMessage").html('');
        dataCommission = {};
        //CCM_AddRow(dataCommission, "CCM_tableCOMContent");
        return false;
    }



    function CCM_AddCOM() {
        let ele = {};
        let random = (new Date()).getTime();
        ele.EmpID = 0;
        ele.ReAmount = 0;
        ele.RePer = 0;
        dataCommission[random] = ele;
        CCM_AddRow(random, 'CCM_tableCOMContent');
        CCM_FlagChange = 1;
        return random;
    }
    function CCM_AddRow(Key, ID) {
        var myNode = document.getElementById(ID);
        if (myNode != null) {
            //myNode.innerHTML = '';
            let tr =
                `
                <li id="rowCommission_${Key}" data-id="${Key}" class="rowCommission row row-add position-relative pb-3 border-0 d-flex justify-content-between ps-0 mb-1">
                    <i data-id="${Key}" class="opacity-2 position-absolute buttonDeleteClass cursor-pointer text-gradient text-danger vtt-icon vttech-icon-delete" style="width: 40px;right: 6px;top:0;"></i>
                    <div class="row w-100 mx-0">
                        <div class="field col-12 col-md-6 px-1 mt-2">
                            <label>@Local["Nhân viên"]</label>
                            ${CCM_AddRow_RenderEmp(Key)}
                        </div>
                        <div class="field col-12 col-md-3 px-1 mt-2">
                            <label>@Local["Tiền mặt"]</label>
                            <input id="CCM_EmpAmount_${Key}" type="text" class="CCM_EmpAmount fw-bold form-control d-block">

                            </input>
                        </div>
                        <div class="field col-12 col-md-3 px-1 mt-2">
                            <label>@Local["Phần trăm"]</label>
                            <input id="CCM_EmpPercent_${Key}" type="text" class="CCM_EmpPercent fw-bold form-control d-block">

                            </input>
                        </div>
                    </div>
                </li>
                `
            myNode.insertAdjacentHTML('beforeend', tr);
            CCM__AddDataEmployee(Key);
            CCM_EventRow(Key);            
        }
        $(".ui.dropdown").dropdown({
            allowCategorySelection: true,
            forceSelection: false,
            transition: "fade up"
        });        
    }
    
    function CCM_AddRow_RenderEmp(Key) {
        let resulf = '<div class="ui fluid search selection dropdown cm_employee form-control" id="CCM_Emp_' + Key
            + '"><input type="hidden"/><input class="search" autocomplete="off" tabindex="0" /><div class="default text">eg .@Local["Nhân viên"]</div>'
            + '<div id="cbbCCM_Emp' + Key + '" class="menu" tabindex="-1">';
        resulf = resulf + '</div></div>';
        return resulf;
    }

    function CCM_EventRow(key) {
        $("#CCM_tableCOMContent #CCM_EmpAmount_" + key).divide();
        $("#CCM_tableCOMContent #CCM_EmpPercent_" + key).divide();

        $("#CCM_tableCOMContent #rowCommission_" + key + " #CCM_Emp_" + key).unbind('change').change(function () {
            if (CCM_FlagChange == 0) return;
            let idCom = this.id
            let id = idCom.replace('CCM_Emp_', '');
            $(this).removeClass('error');
            dataCommission[id].EmpID = Number($('#' + idCom).dropdown('get value')) ? Number($('#' + idCom).dropdown('get value')) : 0;
        });
        $("#CCM_tableCOMContent #rowCommission_" + key + " #CCM_EmpAmount_" + key).unbind('change').change(function () {          
            if (CCM_FlagChange == 0) return;
            CCM_FlagChange = 0
            let id = this.id.replace('CCM_EmpAmount_', '');
            let value = Number(this.value.replaceAll(',',''));
            if (isNaN(value) || (value == 0)) {
                $(this).val(0);
                value = 0;
            }   
            $("#CCM_EmpPercent_" + key).val(0);
            dataCommission[id].ReAmount = value;
            dataCommission[id].RePer = 0;
            CCM_CheckAmountDevide();
            CCM_FlagChange = 1;
            $(this).removeClass('error');
        });
        $("#CCM_tableCOMContent #rowCommission_" + key + " #CCM_EmpPercent_" + key).unbind('change').change(function () {
            if (CCM_FlagChange == 0) return;
            CCM_FlagChange = 0
            let id = this.id.replace('CCM_EmpPercent_', '');
            let value = Number(this.value.replaceAll(',', ''));
            let amount = 0;
            if (isNaN(value) || value < 0 || value > 100) {
                $(this).val(0);
                value = 0;
            }
            if(value != 0){
                amount = Math.floor(value * CCM_PriceSale / 100);
                if(amount <= 0){
                    amount = 0;
                    $(this).val(0);
                    value = 0;
                }
            }
            $("#CCM_EmpAmount_" + key).val(amount);
            $("#CCM_EmpAmount_" + key).divide();
            dataCommission[id].ReAmount = amount;
            dataCommission[id].RePer = value;
            CCM_CheckAmountDevide();
            CCM_FlagChange = 1;
            $(this).removeClass('error');
        });
        $("#CCM_tableCOMContent #rowCommission_" + key + " .buttonDeleteClass").unbind('click').click(function (event) {
            delete dataCommission[key];
            $("#rowCommission_" + key).remove();            
            event.stopPropagation();
        });

    }


    //#endregion


    //#region //Event
    function CCM_Filter() {
        let search = xoa_dau($('#CCM_InputFilter').val().toLowerCase()).trim();
        let type =  $("#CCM_TypeFilter").dropdown('get value') ? $("#CCM_TypeFilter").dropdown('get value') : 0;
        let data = Object.values(dataServiceTab);

        if (search != "") {
            data = data.filter(function (item) {
                if (xoa_dau(item["CardName"]).toLowerCase().includes(search))
                    return true;
                return false;
            });
        }
        
        if(type != 0){
            data = data.sort(function(a, b){
                if(type == '1')
                    return (new Date(a.CardCreated) - new Date(b.CardCreated));
                if(type == '2')
                    return (new Date(b.CardCreated) - new Date(a.CardCreated));
                if(type == '3')
                    return (new Date(a.CardCreated) - new Date(b.CardCreated));
                if(type == '4')
                    return (new Date(b.CardCreated) - new Date(a.CardCreated));
            })

        }
        $("#CCM_RenderBody").empty();
        fnRenderBlock(data, "CCM_RenderBody"
            , blocknum = 30
            , fnrender = CCM_RenderService
            , fnsuccess = function (e) { }
            , fnbegin = function (e) { }
        );
        $("#CCM_DivFilter .fa-search").show();
        $("#CCM_DivFilter .spinner-border").hide();
    }

    function CCM_EventDetail() {
        $("#CCM_RenderBody .rowService").unbind().on('click', function (e) {
            $('#CCM_RenderBody .rowService').removeClass('active');
            $(this).addClass('active');
            let ID = Number($(this).attr('data-id'));
            CCM_IDService = ID;
            CCM_RenderDetail(ID);
        });
    }
    
    //#endregion



    //#region //Other

    function ExcuteData() {
        let datamain = [];
        for ([key, value] of Object.entries(dataCommission)) {
            let e = {};
            e.Consult = value.EmpID;
            e.ConsultAmount = value.ReAmount;
            datamain.push(e);
        }        
        let Note = $('#note').val() ? $('#note').val() : "";
        let BranchID = Number($('#CCM_Branch').dropdown("get value")) ? Number($('#CCM_Branch').dropdown("get value")) : 0;
        let DateCreated = $('#CCM_CreatedCOM').val() ? $('#CCM_CreatedCOM').val() : "";
        let CardID = CCM_IDService;
        $('#form3').form('validate form')
        if ($('#form3').form('is valid') && CardID != 0) {
            if (CCM_CheckingCommission() && $('#textShowMessage').html() == "") {
                AjaxLoad(url = "/Customer/Payment/CommissionCardMulti/?handler=ExcuteData"
                    , data = {
                        'data': JSON.stringify(datamain),
                        'customerID': ser_CustomerCommission,
                        "note": Note,
                        "CardID": CardID,
                        "created": DateCreated,
                        "branchID": BranchID
                    }
                    , async = true
                    , error = function () { notiError_SW() }
                    , success = function (result) {
                        if (result == "1") {
                            notiSuccess();
                            if (typeof LoadCardCommissionAjax === 'function') LoadCardCommissionAjax();
                            if (typeof Cancel_Commission_Card_Detail === 'function') Cancel_Commission_Card_Detail();
                        }
                        else if(result == "-1"){
                            $('#textShowMessage').html("@Local["Kiểm tra dữ liệu"]");
                        }
                        else {
                            notiError();
                        }
                    }
                    , sender = $("#button_save_CCM_muldetail")
                );
            } else $('#textShowMessage').html("@Local["Kiểm tra tiền hoa hồng"]");
        } else $('#textShowMessage').html("@Local["Kiểm tra dữ liệu"]");
    }
    
    //#endregion


    //sys...//

    function CCM_CheckAmountDevide(){
        let totalDevide = Object.values(dataCommission).reduce((pre, arr) => {
            if (arr.ReAmount != 0 || arr.RePer != 0) {
                pre += Number(arr.ReAmount);
            };
            return pre;
        }, 0);

        if (totalDevide != 0 && CCM_AmountCOM + totalDevide > CCM_PriceSale) {
            $("#datamain").html("@Local["Số tiền chia hoa hồng cao hơn giá tiền của thẻ"]").show();
        }
        else {
            $("#datamain").html("").hide();
        }
    }
    function CCM_CheckingCommission() {
        let message = $("#textShowMessage");
        message.html("");
        let isDoc = CCM_CheckingDataComission(dataCommission);
        if (!isDoc) {
            message.html("@Local["Kiểm tra dữ liệu"]")
            return false
        }
        return true;
    }
    function CCM_CheckingDataComission(data){
        let isdup = 0, isvalue =0;
        let empcheck ='';
        let preClass = 'CCM_Emp';
        for (let [key, value] of Object.entries(data)){            
            if(value.ReAmount == 0 && value.RePer == 0){
                isvalue = 1;
                $('#' + preClass + 'Amount_' + key).parent().addClass('error');
                $('#' + preClass + 'Percent_' + key).parent().addClass('error');
            } else {
                $('#' + preClass + 'Amount_' + key).parent().removeClass('error');
                $('#' + preClass + 'Percent_' + key).parent().removeClass('error');
            }
            if ((value.EmpID == 0) || (empcheck.includes('[' + value.EmpID + ']'))) {
                isvalue = 1;
                $('#' + preClass + '_' + key).addClass('error');
            }
            else $('#' + preClass + '_' + key).removeClass('error');
            
            empcheck += '[' + value.EmpID + ']'
        }
        if (isvalue == 1 || isdup == 1) return false;
        return true;
    }



    function CCM__AddDataEmployee(CbbID) {
        try {
            let DataEmpFilter = [];
            let IDService = CCM_IDService
            DataEmpFilter = dataEmployee;
            Load_Combo(DataEmpFilter, "cbbCCM_Emp" + CbbID, false)
        }
        catch {

        }

    }



</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>

