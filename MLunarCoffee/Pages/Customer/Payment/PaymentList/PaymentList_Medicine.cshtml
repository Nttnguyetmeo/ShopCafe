@page
@model MLunarCoffee.Pages.Customer.Payment.PaymentList.PaymentList_MedicineModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="container-fluid py-0 px-0">
    <div class="row">
        <div class="col-12">
            <div class="card card-plain" id="Div_Payment_List_Medicine_Master">
                <div class="card-header py-0">
                    <div class="d-lg-flex">
                        <ul class="nav nav-pills p-1 bg-transparent permissionlist" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer  " data-bs-toggle="collapse" href="#dtContentPaymentMedicine_infodes">
                                    <i class="text-gradient  text-lg text-primary fas fa-info-circle"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="ms-auto my-auto mt-1">
                            <button class="btn bg-gradient-primary btn-sm mt-1" onclick="PayMedicine_NewPayment()">@Local["Thêm mới"]</button>
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm mt-1 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                    @Local["Xem thêm"]
                                </button>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="detail" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi tiết"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="created" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thông tin tạo"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="sign" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chữ ký"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="billcode" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Mã hóa đơn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="content" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nội dung"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi nhánh"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="thirdaccounting" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Dữ liệu kế toán"]</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dtContentPaymentMedicine_infodes" class="border-dashed border-1 border-secondary border-radius-md p-3 text-sm text-dark ms-1 mb-2 mt-2 multi-collapse collapse">
                        <h6 class="mb-0">@Local["Quy định chỉnh sửa"]</h6>
                        <p class="text-sm mb-0">@Local["Xóa trong ngày. Chỉ người tạo mới được quyền xóa"]</p>
                    </div>
                </div>
                <div class="card-body pt-2 position-relative">
                    <div class="m-0 mb-3 mobile-responsive" style="max-height:80vh;">
                        <div id="payment_list_card_waiting" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <div class="sheet_cart_load_empty" id="PaymentMedicine_List_Empty" style="display:none">
                            @Local["Không có dữ liệu"]
                        </div>
                        <table data-name="ContentPaymentMedicine" class="table vt-table mb-0" id="dtContentPaymentMedicine">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>

                                    <th style="width: 25px;">@Local["#"]</th>
                                    <th>@Local["Mã phiếu"]</th>
                                    <th>@Local["Hình thức thanh toán"]</th>
                                    <th>@Local["Tổng tiền"]</th>
                                    <th data-name="created" >@Local["Người tạo"]</th>
                                    <th data-name="detail" class="detail">@Local["Chi tiết"]</th>
                                    <th data-name="billcode">@Local["Mã hóa đơn"]</th>
                                    <th data-name="content">@Local["Nội dung"]</th>
                                    <th data-name="branch" >@Local["Chi nhánh"]</th>
                                    <th data-name="sign">@Local["Chữ ký"]</th>
                                    <th style="min-width: 150px;" data-name="thirdaccounting" >@Local["Dữ liệu kế toán"]</th>
                                    <th>@Local["Xử lý"]</th>

                                </tr>
                            </thead>
                            <tbody id="dtContentPaymentMedicineBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="PML_btnloadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" style="pointer-events: auto;" onclick="event.preventDefault(); return PayMedicine_LoadData(0, 1);">
                        @Local["Xem thêm"]
                    </button>
                </div>
            </div>
            <!--Detail-->
            <div id="Div_Payment_List_Medicine_Detail">
            </div>
        </div>
    </div>

</div>

<script type="text/javascript">
    var ser_PaymentMedicineID = 0;
    let shtable;
    let DataUser;
    let PML_data;
    let PML_limit = 100, PML_beginID = 0;
    let PML_isDoneLoadMore = false;
    $(document).ready(function () {
        shtable = $("#dtContentPaymentMedicine").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                PayMedicine_LoadData(0, 0);
                PayMedicine_Event();
            })
        Checking_TabControl_Permission();
    });

    //#region // Load list
    function PayMedicine_LoadData(PML_currentID = 0, PML_isLoadMore = 0) {
        if (PML_currentID == 0 && PML_isLoadMore == 0) {
            PML_data = [];
            PML_beginID = 0;
            PML_isDoneLoadMore = false;
            $('#dtContentPaymentMedicineBody').html('');
        }

        AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Medicine/?handler=LoadataPaymentMedicine"
            , data =
            {
                'CustomerID': ser_MainCustomerID
                , 'id': PML_currentID
                , 'limit': PML_limit
                , 'beginID': PML_beginID
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    if (PML_currentID == 0) {
                        PML_data = PML_data.concat(data);
                        PML_beginID = data[data.length - 1].ID;
                        fnRenderBlock(data, "dtContentPaymentMedicineBody"
                            , blocknum = 50
                            , fnrender = PayMedicine_RenderData
                            , fnsuccess = function (e) { }
                            , fnbegin = function (e) { }
                        );
                    }
                    else {
                        if (data && data.length != 0) {
                            if ($('#PML_rowContent_' + PML_currentID).length > 0) {
                                PML_data = PML_data.reduce((pre, arr) => {
                                    if (arr.ID == data[0].ID) arr = data[0];
                                    pre.push(arr);
                                    return pre;
                                }, []);
                                $('#PML_rowContent_' + PML_currentID).replaceWith(PML_RenderEach(data[0]));
                                PayMedicine_Event();
                            }
                            else {
                                if (PML_isDoneLoadMore) {
                                    PML_data.push(data[0]);
                                    $('#dtContentPaymentMedicineBody').prepend(PML_RenderEach(data[0]));
                                    PayMedicine_Event();
                                }
                                else {
                                    PayMedicine_LoadData(0, 0);
                                }
                            }
                        }
                        else {
                            if ($('#PML_rowContent_' + PML_currentID).length > 0) {
                                PML_data = PML_data.filter(word => {
                                    return word.ID != PML_currentID
                                })
                                $('#PML_rowContent_' + PML_currentID).remove();
                            }
                        }
                    }
                }
                else if (result == "[]") {
                    if (PML_isLoadMore == 1) {
                        $("#PML_btnloadMore").hide();
                        PML_isDoneLoadMore = true;
                    }
                    else {
                        if (PML_currentID != 0) {
                            if ($('#PML_rowContent_' + PML_currentID).length > 0) {
                                PML_data = PML_data.filter(word => {
                                    return word.ID != PML_currentID
                                })
                                $('#PML_rowContent_' + PML_currentID).remove();
                            }
                        }
                        else {
                            
                        }
                    }
                }
                else {
                    notiError_SW();
                }
                shtable.Refresh();
            }
            , before = function () {
                $("#payment_list_card_waiting").show();
            }
            , complete = function (e) {
                $("#payment_list_card_waiting").hide();
            });
    }
    //#endregion

    //#region // Render Data

    async function PayMedicine_RenderData(data, id) {
        new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = PML_RenderEach(item);
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
            }
            resolve();
        })
    }
    function PML_RenderEach(item) {
        try {
            let obj = Fun_GetObject_ByID(DataUser, item.Created_By);
            let name = (obj != null && obj.EmployeeName != undefined) ? obj.EmployeeName : 'unknown';
            let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
            let ThirdAccount = PayMedicine_ThirdAccount(item?.AccountingRefid, item?.AccountingIsSuccess);
            let tr = `
                        <td class="d-none">${item.ID}</td>
                        <td class="vt-number-order text-center"></td>
                        <td>
                            <h6 class="mb-0 text-dark text-sm">${item.InvoiceNum}</h6>
                            <span class="text-xs">${GetDateTime_String_DMY(item.Created)}</span>
                        </td>
                        <td>
                            <div class="d-flex align-items-center">
                                <span>
                                    ${author_get("UserLang") == 'en' ? Outlang[item.MethodNameLangKey] : item.MethodName}
                                    ${item.TransferType != "" ? ' - ' + item.TransferType : ''}
                                    ${item.PosType != "" ? ' - ' + item.PosType : ''}
                                </span>
                            <div>
                        </td>
                        <td><i class="text-success fas fa-plus me-2" aria-hidden="true"></i>${formatNumber(item.Amount)}</td>
                        <td data-name="created">
                            <div class="d-inline">
                                <img class="avatar avatar-xs me-2" src="${img}" alt="label-image" />
                                <span>${name}</span>
                            </div>
                        </td>
                        <td  data-name="detail"> ${item.NamePrescription} </td>
                        <td data-name="billcode"> ${item.BillCode} </td>
                        <td data-name="content"> ${item.Content} </td>
                        <td data-name="branch"> ${item.BranchName} </td>
                        <td data-name="sign" class="text-center">
                            ${(item.IsSign != 0)
                            ? `<a data-id="${item.ID}" class="text-sm buttonSignClassPaymentMedicine text-primary d-block text-center">@Local["Đã ký tên"]</a>`
                            : `<a data-id="${item.ID}" class="text-sm buttonSignClassPaymentMedicine text-secondary d-block text-center">@Local["Ký tên"]</a>`}
                        </td>
                        <td id="PayMedList_ThirdAccount_${item.ID}" class="${ThirdAccount.status} text-center" data-code="${item.InvoiceNum}" data-type="${item.AccountingVoucherType}" data-refid="${item.AccountingRefid}" data-name="thirdaccounting">${ThirdAccount.value}</td>
                        <td class="text-nowrap"> ${PayMedicine_RenderData_Button(item.ID, item.InvoiceNum, item.IsDelete)} </td>
            `
            tr = `<tr id="PML_rowContent_${item.ID}" role="row" class="vt-number CLS_clsRowContent cursor-pointer vt-number">${tr}</tr>`
            return tr;
        }
        catch (ex) {
            return '';
        }
    }
    function  PayMedicine_RenderData_Button(id, code, isDelete) {
        let buttons = [];
        buttons.push(`<button class="buttonGrid" value="${id}"><i datacode="${code}" class="buttonPrintClass vtt-icon vttech-icon-print"></i></button>`)
        if (isDelete == 1) {
            buttons.push(`<button class="buttonGrid _tab_control_" data-tab="delete_tab_payment" value="${id}"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>`);
        }
        return Render_Button_Grid(buttons);
    }

    //#region //THIRD ACCOUNTING
    function PayMedicine_ThirdAccount(refid, issuccess){
        let result = { status: '', value: ''};
        refid ??= '', issuccess ??= 0;
        if(refid != '') {
            if(issuccess == 1) {
                result.value = decodeHtml('@Local["Đã đồng bộ"]')
                result.status = 'text-success'
            }
            else {
                result.value = decodeHtml('@Local["Đang đồng bộ"]')
                result.status = 'text-secondary'
            }
        }
        return result;
    }
    //#endregion
    //#endregion

    // #region // Handle List

    function PayMedicine_Event() {
        $('#dtContentPaymentMedicine tbody').on('click', '.buttonSignClassPaymentMedicine', function (event) {
            let ID = $(this).attr("data-id");
            AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Medicine/?handler=GetSign_Payment"
                , data = {
                    'id': ID
                }
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    if (result != "0") {
                        let _sigdata = JSON.parse(result);
                        let _datasign = '';
                        if (_sigdata != undefined && _sigdata.length == 1) _datasign = _sigdata[0].SignData;
                        PayMedicine_ExecuteSignature(ID,  _datasign);
                    }
                }
            );
        });
        $('#dtContentPaymentMedicine tbody').on('click', '.buttonPrintClass', function () {
            let ID = Number($(this).closest('tr')[0].children[0].innerHTML);
            let code = $(this).attr("datacode");
            syslog_cutpaid('p', code, ser_MainCustomerID);
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load('/Print/print?Type=invoice_medicine&DetailID=' + ID);
            $('#DetailModal').modal('show');


        });
        $('#dtContentPaymentMedicine tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].children[0].innerHTML);
            PayMedicine_DeleteData(ID);
        });
    }

    function PayMedicine_DeleteData(id) {
        const promise = notiConfirm();
        promise.then(function () { PayMedicine_ExecuteDeleteData(id); }, function () { });
    }

    async function PayMedicine_ExecuteDeleteData(id) {
        new Promise((resolve, reject) => {
            AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Medicine/?handler=DeleteItemMedicine"
                , data = { 'id': id }
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        let data = JSON.parse(result);
                        if ((data[0]?.RESULT ?? 0) == 1) {
                            if(typeof Tab_PayMed_DelThirdAccounting === 'function') Tab_PayMed_DelThirdAccounting(id)
                            PayMedicine_LoadData(id, 0);
                            syslog_cutpaid('d', data[0]?.Code, ser_MainCustomerID, `${formatNumber(data[0]["Amount"])}`);
                            if (typeof LoadCustomerPaymentInfo !== 'undefined' && $.isFunction(LoadCustomerPaymentInfo)) {
                                LoadCustomerPaymentInfo();
                            }
                            
                        }
                        else {
                            notiError_SW();
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
            resolve();
        });
    }
    //#region //ThirdAccount Delete
    function Tab_PayMed_DelThirdAccounting(id)
    {
        if (typeof syn_Accountbrand != 'undefined' && syn_Accountbrand && syn_Accountbrand != "") {
            APIAccount_Excute(id, type = 7, action = "del"
                , beforefunc = function () { }
                , successfunc = function (e){}
                , failfunc = function (message) {notiWarning(message)}
                , completefunc = function () { }
            );
        }
    }
    //#endregion
    async function  PayMedicine_ExecuteSignature(id,dataSign) {
        await Signature_Action(dataSign,0);
        if (Signature_ResultSignation != "") {
            AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Medicine/?handler=UpdateSign_PaymentMedicine"
                , data = { 'id': id, 'sign': Signature_ResultSignation }
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    if (result != "0") {
                        PayMedicine_LoadData(id, 0);
                        syslog_cutpaid('s', result, ser_MainCustomerID);
                    }
                }
            );
        }

    }

    // #endregion

    function PayMedicine_NewPayment() {
        $("#Div_Payment_List_Medicine_Detail").empty();
        $("#Div_Payment_List_Medicine_Detail").load("/Customer/Payment/PaymentMedicineDetail?CustomerID=" + ser_MainCustomerID + "&ver=" + versionofWebApplication,
            function () {
                $("#Div_Payment_List_Medicine_Master").hide();
                $("#Div_Payment_List_Medicine_Detail").show();
            });
    }

    function PayMedicine_CancelDetail() {
        $("#Div_Payment_List_Medicine_Detail").empty();
        $("#Div_Payment_List_Medicine_Master").show();
    }

</script>
<script>js_require('/js/main.js');</script>