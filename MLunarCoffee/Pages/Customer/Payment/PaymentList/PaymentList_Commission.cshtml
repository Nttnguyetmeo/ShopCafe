@page
@model MLunarCoffee.Pages.Customer.Payment.PaymentList.PaymentList_CommissionModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="container-fluid py-0 px-0">
    <div class="row">
        <div class="col-12">
            <div class="card card-plain" id="Div_Payment_List_Commission_Master">
                <div class="card-header py-0">
                    <div class="d-lg-flex">
                        <ul class="nav nav-pills p-1 bg-transparent permissionlist" role="tablist">
                            <li class="nav-item" role="presentation">
                                <a class="nav-link cursor-pointer" data-bs-toggle="collapse" href="#dtContentCommissioninfodes">
                                    <i class="text-gradient text-lg text-primary fas fa-info-circle"></i>
                                </a>
                            </li>
                        </ul>
                        <div class="ms-auto my-auto mt-1">
                            <div id="Chb_CommissionList" class="d-inline mt-1">
                                <div class="btn-group ">
                                    <a class="btn btn-dark btn-sm form-check px-3">
                                        <input class="input_commission form-check-input text-sm mt-0 ms-0" type="checkbox" data-commission="consult" id="chb_commission_consult" checked="checked">
                                    </a>
                                    <a class="btn btn-dark btn-sm px-2">@Local["Tư vấn"]</a>
                                    <a class="_tab_control_ btn btn-dark btn-sm px-3 border-start border-light" onclick="addNewCommissionMulti('consult')"
                                       data-tab="add_tab_payment_com"><i class="ni text-white vtt-icon vttech-icon-add"></i></a>
                                </div>

                                <div class="btn-group ">
                                    <a class="btn btn-dark btn-sm form-check px-3">
                                        <input class="input_commission form-check-input text-sm mt-0 ms-0" type="checkbox" data-commission="doctor" id="chb_commission_doctor" checked="checked">
                                    </a>
                                    <a class="btn btn-dark btn-sm px-2">@Local["Bác sĩ"]</a>
                                    <a class="_tab_control_ btn btn-dark btn-sm px-3 border-start border-light" onclick="addNewCommissionMulti('doctor')" data-tab="add_tab_payment_com"><i class="ni text-white vtt-icon vttech-icon-add"></i></a>
                                </div>

                                <div class="btn-group ">
                                    <a class="btn btn-dark btn-sm form-check px-3">
                                        <input class="input_commission form-check-input text-sm mt-0 ms-0" type="checkbox" data-commission="assistant" id="chb_commission_assistant" checked="checked">
                                    </a>
                                    <a class="btn btn-dark btn-sm px-2">@Local["Kỹ thuật viên"]</a>
                                    <a class="_tab_control_ btn btn-dark btn-sm px-3 border-start border-light" onclick="addNewCommissionMulti('assistant')" data-tab="add_tab_payment_com"><i class="ni text-white vtt-icon vttech-icon-add"></i></a>
                                </div>
                                <div class="btn-group ">
                                    <a class="btn btn-dark btn-sm form-check px-3">
                                        <input class="input_commission form-check-input text-sm mt-0 ms-0" type="checkbox" data-commission="tele" id="chb_commission_consult" checked="checked">
                                    </a>
                                    <a class="btn btn-dark btn-sm px-2">@Local["Telesale"]</a>
                                    <a class="_tab_control_ btn btn-dark btn-sm px-3 border-start border-light" onclick="addNewCommissionMulti('tele')"
                                       data-tab="add_tab_payment_com"><i class="ni text-white vtt-icon vttech-icon-add"></i></a>
                                </div>
                            </div>
                            <div class="position-relative d-inline">
                                <button class="btn btn-dark btn-sm  position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                    @Local["Xem thêm"]
                                </button>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi nhánh"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="createdname" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thông tin tạo"]</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dtContentCommissioninfodes" class="border-dashed border-1 border-secondary border-radius-md p-3 text-sm text-dark ms-1 mb-2 mt-2 multi-collapse collapse">
                        <h6 class="mb-0">@Local["Quy định chỉnh sửa"]</h6>
                        <p class="text-sm mb-0">@Local["Xóa trong ngày. Chỉ người tạo mới được quyền xóa"]</p>
                        <p class="text-sm mb-0">@Local["Hoa hồng tư vấn theo mặt định của dịch vụ tương ứng sẽ mất trên tất cả các tư vấn viên"]</p>
                    </div>
                </div>
                <div class="card-body pt-2 position-relative">
                    <div class="m-0 my-3 mb-0 mobile-responsive" style="max-height: 80vh;">
                        <div id="payment_list_commission_waiting" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table data-name="ContentCommission" class="table vt-table mb-0" id="dtContentCommission">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th class="d-none">Type</th>
                                    <th style="width: 25px;">@Local["#"]</th>
                                    <th>@Local["Hoa hồng"]</th>
                                    <th>@Local["Dịch vụ"]</th>
                                    <th style="width: 120px;">@Local["Loại"]</th>
                                    <th data-name="branch">@Local["Chi nhánh"]</th>
                                    <th data-name="createdname">@Local["Thông tin tạo"]</th>
                                    <th style="width: 70px;">@Local["Xóa"]</th>

                                </tr>
                            </thead>
                            <tbody id="dtContentCommissionBody">
                            </tbody>
                        </table>
                    </div>
                    <button id="" class="btn btnsysmore btn-secondary w-100 p-1 mt-1" onclick="TabCommission_ViewMore()">@Local["Xem thêm"]</button>
                </div>
            </div>
            <!--Detail-->
            <div id="Div_Payment_List_Commission_Detail">
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">


    //#region // Declare & Init Data
    let DataCommissionEmployee = [];
    let TC_DataListSlide = [];
    let DataUser;
    let DataEmployee;
    let shtable;
    let TC_Index = 0;

    $(document).ready(function () {
        shtable = $("#dtContentCommission").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        TabCommission_FilterByTypeCommission();
        Master_IndexDB_Reads(_Session_Data, [_Session_User, _Session_Employee]
            , function (data) {
                DataUser = data[0];
                DataEmployee = data[1];
                LoadTabCommissionAjax();
            })

        $('#dtContentCommission tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let Type = $(this).closest('tr')[0].childNodes[1].innerHTML;
            DeleteTabCommission(ID, Type)
        });
        Checking_TabControl_Permission();
        CheckPermissionControlInPage(sys_PerControlMH,'@Model._dtPermissionCurrentPage');
    });

    function LoadTabCommissionAjax () {

        TC_Index = 0;
        TC_DataListSlide = [];
        $("#dtContentCommissionBody").empty();

        AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Commission/?handler=LoadataTabCommission"
            , data = { 'CustomerID': ser_MainCustomerID }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "") {
                    DataCommissionEmployee = JSON.parse(result);
                    console.log(DataCommissionEmployee);
                    TC_DataListSlide = sliceIntoChunks(JSON.parse(JSON.stringify(DataCommissionEmployee)), 200);
                    fnRenderBlock(TC_DataListSlide[TC_Index], "dtContentCommissionBody"
                        , blocknum = 50
                        , fnrender = RenderTableCommission
                        , fnsuccess = null
                    );
                }
            }
            , sender = null
            , before = function () {
                $("#payment_list_commission_waiting").show();
            }
            , complete = function (e) {
                $("#payment_list_commission_waiting").hide();
            }
        );
    }

    function TabCommission_ViewMore () {
        TC_Index += 1;
        if (TC_DataListSlide && TC_DataListSlide[TC_Index]) {
            fnRenderBlock(TC_DataListSlide[TC_Index], "dtContentCommissionBody"
                , blocknum = 50
                , fnrender = RenderTableCommission
                , fnsuccess = null
            );
        }
    }

    //#endregion


    //#region // Render Date

    async function RenderTableCommission(data, id) {
        new Promise((resolve)=>{
            setTimeout(() =>{
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    //myNode.innerHTML = '';
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = '<td class="d-none">' + item.ID + '</td>'
                                + '<td class="d-none">' + item.Type + '</td>'
                                + '<td class="vt-number-order"></td>'
                                + '<td>'
                                + '<ul class="p-0 row m-0">'
                                + RenderTableCommissionEmployee(item.EmpID, item.Commission)
                                + RenderTableCommissionEmployee(item.EmpID1, item.Commission1)
                                + RenderTableCommissionEmployee(item.EmpID2, item.Commission2)
                                + '</ul>'
                                + '</td>'
                                + '<td >'
                                + item.ServiceName
                                + ((item.Content != '') ? '</br><span class="text-xs text-secondary">' + item.Content + '</span>' : '')
                                + '</td>'
                                + '<td class="text-center">'
                                + RenderTableCommissionType(item.Type)
                                + '</td>'
                                + '<td data-name="branch">' + item.BranchName + '</td>'
                                + '<td data-name="createdname">'
                                + RenderTableCommissionCreated(item.CreatedBy, item.CreatedDate)
                                + '</td>'
                                + '<td>'
                                + Render_Button_Grid(
                                    [(item.DeleteButton == 1) ? '<button class="buttonGrid" value="'
                                        + item.ID
                                        + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>' : ''
                                    ])
                                + '</td>';
                            stringContent = '<tr role="row" id="commission_tab_' + item.ID + '" data-type="' + item.Type + '" class="vt-number row_commission">' + tr + '</tr>';
                            myNode.insertAdjacentHTML('beforeend', stringContent);
                        }
                    }
                    //myNode.innerHTML = stringContent;
                }
                TabCommission_EventRender();
            }, 100)
        })
    }



    function RenderTableCommissionEmployee(EmpID, Commission) {
        try {
            let result = "";
            if (EmpID != 0) {
                let obj = Fun_GetObject_ByID(DataEmployee, EmpID);
                let name = (obj != null) ? obj.Name : 'unknown';
                let img = (obj != null && obj.Avatar != "") ? obj.Avatar : Master_Default_Pic;
                result = '<div class="col-4 p-1">'
                    + '<div class="d-flex">'
                    + '<div class="d-flex align-items-center">'
                    + '<img class="icon icon-shape icon-sm me-2 bg-gradient-dark shadow text-center" src="' + img + '">'
                    + '<div class="d-flex flex-column">'
                    + '<h6 class="mb-0 text-dark text-sm">' + formatNumber(Commission)  + '</h6>'
                    + '<span class="text-xs">' + name + '</span>'
                    + '</div>'
                    + '</div>'
                    + '</div>'
                    + '</div>';



            }
            return result;
        }
        catch {
            return "";
        }
    }

    function RenderTableCommissionType(Type) {
        try {
            let result = "";
            switch (Type) {
                case 'consult':
                    result = '<span class="badge bg-gradient-success rounded-1">@Local["Tư vấn"]</span>'
                    break;
                case 'tele':
                    result = '<span class="badge bg-gradient-success rounded-1">@Local["Telesale"]</span>'
                    break;
                case 'doctor':
                    result = '<span class="badge bg-gradient-info rounded-1">@Local["Bác sĩ"]</span> '
                    break;
                case 'assistant':
                    result = '<span class="badge bg-gradient-info rounded-1">@Local["Kỹ thuật viên"]</span> '
                    break;
                default:
                    break;
            }

            return result;
        }
        catch {
            return "";
        }
    }

    function RenderTableCommissionCreated(UserID, Created) {
        try {
            let result = "";
            let obj = Fun_GetObject_ByID(DataUser, UserID);
            let name = (obj != null) ? obj.Name : 'unknown';
            let img = (obj != null && obj.Avatar != "") ? obj.Avatar : Master_Default_Pic;
            result = '<div class="d-flex align-items-center">'
                + '<img class="avatar avatar-xs me-2" src="' + img + '" alt="label-image" />'
                + '<div class="flex-column">'
                + '<h6 class="text-sm mb-0">' + name + '</h6>'
                + '<span class="text-xs mb-0">' + GetDateTime_String_DMY(Created) + '</span>'
                + '</div>'
                + '</div>'
            return result;
        }
        catch {
            return "";
        }
    }

    function TabCommission_EventRender() {
        $(".hoverpopup").popup({
            transition: "scale up",
            position: "top right"
        });
        shtable.Refresh();
    }

    //#endregion

    function TabCommission_FilterByTypeCommission() {
        $("#Chb_CommissionList").on("change", '.input_commission', function () {
            $(".row_commission").removeClass("active");
            let dataRender = [];
            $("#Chb_CommissionList .input_commission").each(function () {
                if ($(this).prop("checked") == true) {
                    let data_commission = $(this).attr("data-commission");
                    let dataFilter = DataCommissionEmployee.filter(work => work["Type"] == data_commission);
                    dataRender = dataRender.concat(dataFilter);
                }
            })
            if (dataRender.length != 0) {
                dataRender.sort(function (a, b) {
                    return b["CreatedNum"] - a["CreatedNum"];
                });
            }
            TC_Index = 0;
            TC_DataListSlide = [];
            $("#dtContentCommissionBody").empty();

            TC_DataListSlide = sliceIntoChunks(JSON.parse(JSON.stringify(dataRender)), 200);
            fnRenderBlock(TC_DataListSlide[TC_Index], "dtContentCommissionBody"
                , blocknum = 50
                , fnrender = RenderTableCommission
                , fnsuccess = null
            );
        })
    }


    //#region // Delete Commission By Type

    function DeleteTabCommission(id, type) {
        const promiseCms = notiConfirm();
        promiseCms.then(function () { ExecuteDeleteTabCommission(id, type); }, function () { });
    }

    function ExecuteDeleteTabCommission(id, type) {
        AjaxLoad(url = "/Customer/Payment/PaymentList/PaymentList_Commission/?handler=DeleteItemCms"
            , data = { 'id': id, 'type': type  }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    $("#commission_tab_" + id + "[data-type=" + type + "]").remove();
                    DataCommissionEmployee = DataCommissionEmployee.filter(item => {return (item.ID != id || item.Type != type)});

                } else {
                    notiError_SW();
                }
            }
        );
    }

    //#endregion


    function addNewCommissionMulti(Type) {
        $("#Div_Payment_List_Commission_Master").css("display", "none");
        $("#Div_Payment_List_Commission_Detail").css("display", "block");
        $("#Div_Payment_List_Commission_Detail").empty();
        $("#Div_Payment_List_Commission_Detail").load("/Customer/Payment/CommissionMulti?CustomerID=" + ser_MainCustomerID + "&Type=" + Type + "&ver=" + versionofWebApplication);
    }
    function Cancel_Commission_Detail() {
        $("#Div_Payment_List_Commission_Detail").empty();
        $("#Div_Payment_List_Commission_Master").show();
    }

</script>