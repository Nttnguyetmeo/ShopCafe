@page
@model MLunarCoffee.Pages.Customer.Deposit.TabDepositDetailModel
@{
    Layout = null;
}
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title>VTTech Solution</title>

</head>

<body>
    <div class="container-fluid py-3 px-0">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="w-50 col-auto my-auto">
                                <div class="h-100">
                                    <h6 id="header" class="mb-0">@Local["Tiền cọc"]</h6>
                                    <p class="text-sm mb-0">@Local["Chi tiết tiền cọc"]</p>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="card-body pt-2 form3" id="form3">
                        <div class="row px-1 ">
                            <div class="field col-12 px-1 mt-2">
                                <label>@Local["Chi nhánh"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="BranchID">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">@Local["Chi nhánh"]</div>
                                    <div id="ccbBranch" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-xl-6 px-1 mt-2">
                                <label>@Local["Hình thức"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="Method" onchange="OnchangeMethod();">
                                    <input type="hidden" name="paymentMethod" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg. @Local["Hình thức"]</div>
                                    <div id="ccbMethod" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-xl-6 px-1 mt-2">
                                <label>@Local["Chi tiết"]</label>
                                <div class="ui fluid search selection dropdown disabled form-control" id="MethodType">
                                    <input type="hidden" name="paymentMethodType" class="input payment" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Chi tiết"]</div>
                                    <div id="ccbMethodType" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row px-1 ">
                            <div class="field col-12 col-xl-6 px-1 mt-2">
                                <label>@Local["Số tiền"]</label>
                                <input id="Amount_Deposit" name="discountOther" type="text" class="form-control money" placeholder="eg .@Local["Số tiền"]" />
                            </div>
                            <div class="field col-12 col-xl-6 px-1 mt-2">
                                <label>@Local["Mã hóa đơn ngân hàng"]</label>
                                <input id="bankInvoiceCode" class="form-control" type="text" disabled="disabled" placeholder="eg .@Local["Mã hóa đơn ngân hàng"]" />
                            </div>
                            <div class="field col-12 col-xl-6 px-1 mt-2">
                                <label>@Local["Mã hóa đơn"]</label>
                                <input type="text" class="form-control" placeholder="eg .@Local["Mã hóa đơn"]" id="txtBillCode" />
                            </div>
                            <div class="field col-12 col-xl-6 px-1 mt-2" id="dateCreated" style="display: none;">
                                <label>@Local["Ngày tạo"]</label>
                                <input id="dateCreatedExt" class="flatpickr detail form-control" type="text" placeholder="eg .@Local["Ngày tạo"]" />

                            </div>
                        </div>
                        <div class="row px-1 ">
                            <div class="field col-12 px-1 mt-2">
                                <label>@Local["Nội dung"]</label>
                                <textarea id="txtContentDeposit" data-validation="content_customer" class="form-control _validation_option_" name="content" rows="4" placeholder="eg .@Local["Nội dung"]"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer fixed-botombutton">
                        <div class="action_Save">
                            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                            <div class="action_Save-Content">
                                <button class="btn btn-secondary" form="form3" onclick="CloseModal()">@Local["Đóng"]</button>
                                <button id="button_save_deposit_detail" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2"
                                        onclick="ExcuteData()">
                                    @Local["Lưu"]
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var ser_ChooseDateCustomer = '@Model._ChooseDateCustomer';
        var ser_CustomerDeposit = '@Model._CustomerDeposit';
        var ser_CurrentDepositID = '@Model._CurrentDepositID';
        let TDD_dataMethod = {};

        var data_payment_method_type = [];
        $(document).ready(function () {
            $("#dateCreatedExt.flatpickr").flatpickr({
                dateFormat: 'd-m-Y H:i',
                enableTime: true,
                defaultDate: new Date()
            });
            if (ser_ChooseDateCustomer == "1") {
                $("#dateCreated").show();
            }
            InitializeCustomerDeposit()
            $('#Amount_Deposit').divide();

        });
        function InitializeCustomerDeposit() {
            AjaxLoad(url = "/Customer/Deposit/TabDepositDetail/?handler=LoadInitialize"
                , data = {}
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    let data = JSON.parse(result);
                    TDD_dataMethod = (data.dtMethod).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre }, {});
                    Load_Combo(data.Branch, "ccbBranch", true);
                    $("#BranchID").dropdown("refresh");
                    $("#BranchID").dropdown("set selected", Master_branchID);

                    Load_Combo(data.dtMethod, "ccbMethod", true);
                    $("#Method").dropdown("refresh");
                    $("#Method").dropdown("set selected", Number(data.dtMethod[0].ID));
                    data_payment_method_type = data.dtMethodType;
                    LoadDataUpdate();
                }
            );
        }

        function LoadDataUpdate() {
            if (ser_CurrentDepositID != "0") {
                AjaxLoad(url = "/Customer/Deposit/TabDepositDetail/?handler=Loadata"
                    , data = { 'id': ser_CurrentDepositID }
                    , async = true
                    , error = function () { notiError_SW() }
                    , success = function (result) {
                        let data = JSON.parse(result);
                        $("#Method").dropdown("refresh");
                        $("#Method").dropdown("set selected", data[0].Method);
                        $('#Amount_Deposit').val((data[0].Amount));
                        $('#txtContentDeposit').val((data[0].Content));
                        $('#txtBillCode').val((data[0].BillCode));
                    }
                );
            }
        }

        function OnchangeMethod() {
            let idMethod = Number($('#Method').dropdown('get value')) ? Number($('#Method').dropdown('get value')) : 0;
            $("#MethodType").dropdown("clear");
            $("#ccbMethodType").html("");

            let data = data_payment_method_type.filter(a => a.Type == idMethod);
            Load_Combo(data, "ccbMethodType", true);
            if (idMethod == 5)
                $("#bankInvoiceCode").prop('disabled', false);
            else
                $("#bankInvoiceCode").prop('disabled', true);

            if (data.length > 0) {
                $("#MethodType").removeClass('disabled');
                $("#MethodType input.payment").attr('name', "paymentMethodType");

                $("#MethodType").dropdown("refresh");
                $("#MethodType").dropdown("set selected", data[0].ID.toString());
            }
            else {
                $("#MethodType").addClass('disabled');
                $("#MethodType input.payment").attr('name', "");
            }
        }
        function ExcuteData() {
            Checking_Require_Validation('@Model._dtPermissionCurrentPage');
            var data = new Object();
            document.getElementById("textShowMessage").innerHTML = "";
            var Method = Number($('#Method').dropdown('get value')) ? Number($('#Method').dropdown('get value')) : 0;
            let Method_Type = Number($('#MethodType').dropdown('get value')) ? Number($('#MethodType').dropdown('get value')) : 0;
            var depositAmount = $('#Amount_Deposit').val() ? Number($('#Amount_Deposit').val()) : 0;
            if (isNaN(depositAmount) || depositAmount <= 0) {
                document.getElementById("textShowMessage").innerHTML = "@Local["Tiền cọc phải lớn hơn 0"]";
                $('#Amount_Deposit').css('background-color', 'rgb(255 216 216)');
            }
            else $('#Amount_Deposit').css('background-color', 'white');

            data.BranchID = Number($('#BranchID').dropdown('get value')) ? Number($('#BranchID').dropdown('get value')) : 0;
            data.AmountDeposit = depositAmount;
            data.Method = Method;
            data.PosType = (data.Method == 5 ? Method_Type : 0);
            data.TransferType = (data.Method == 4 ? Method_Type : 0);
            data.MedthodDetail = ((Method != 4 && Method != 5) ? Method_Type : 0);
            data.Content = $('#txtContentDeposit').val() ? $('#txtContentDeposit').val() : "";
            data.BillCode = $('#txtBillCode').val() ? $('#txtBillCode').val() : "";

            data.CustomerName = NameCustomer;
            data.BankInvoiceCode = $('#bankInvoiceCode').val() ? $('#bankInvoiceCode').val() : "";
            data.dateCreated = $('#dateCreatedExt').val() ? $('#dateCreatedExt').val() : new Date();
            $('#form3').form('validate form');
            if (document.getElementById("textShowMessage").innerHTML == "") {
                if ($('#form3').form('is valid')) {
                    AjaxLoad(url = "/Customer/Deposit/TabDepositDetail/?handler=ExcuteData"
                        , data = {
                            'data': JSON.stringify(data)
                            , 'CustomerID': ser_CustomerDeposit
                            , 'CurrentID': ser_CurrentDepositID
                            , 'AppToken': ser_MainAppToken
                            , 'AppPlatform': ser_MainAppPlatform
                            , 'AppUser': ser_MainApp_User
                        }
                        , async = true
                        , error = function () { notiError_SW() }
                        , success = function (result) {
                            if (result != "0") {
                                let datar = JSON.parse(result);
                                if (datar != undefined && datar.length == 1) {
                                    let idInserted = datar[0]['Result'];
                                    if (idInserted == "-1") document.getElementById("textShowMessage").innerHTML
                                        = "@Local["Đã chốt sổ, không thể thêm thanh toán trước thời gian chốt"]";
                                    else {
                                        if (idInserted == "0") notiError_SW();
                                        else {
                                            notiSuccess();
                                            if (typeof LoadCustomerPaymentInfo === 'function') LoadCustomerPaymentInfo();
                                            if (typeof LoadPaymentAjax === 'function') LoadPaymentAjax(idInserted, 'deposit');
                                            if (typeof SMSSYS_AfterPaid === 'function')
                                                SMSSYS_AfterPaid(_customerid = ser_CustomerDeposit, _objCurrentID = { DepositID: idInserted })
                                            if (typeof TabDepositDetail_UpdateThirdAccount === 'function')
                                                TabDepositDetail_UpdateThirdAccount(idInserted);
                                            let paymethod = Fun_GetName_ByID(TDD_dataMethod, datar[0]["PayMethod"]);
                                            fcm_sendtopic("payment", Master_circleAvatar, sys_employeeName_Main, formatNumber(depositAmount));
                                            syslog_cutpaid(ser_CurrentDepositID == 0 ? 'i' : 'u', datar[0]['Code'], ser_CustomerDeposit, `${paymethod}  ${formatNumber(datar[0]["Amount"])} `);
                                            CloseModal();
                                        }
                                    }
                                }
                                else notiError_SW();
                            } else notiError_SW();

                        }, sender = $("#button_save_deposit_detail")
                    );

                }
                return false;
            }
        }

        //#region //ThirdAccount
        function TabDepositDetail_UpdateThirdAccount(id) {
            if (typeof syn_Accountbrand != 'undefined' && syn_Accountbrand && syn_Accountbrand != "") {
                APIAccount_Excute(currentID = id, type = 3, action = "save"
                    , beforefunc = function () { }
                    , successfunc = function (e) {   
                        if (typeof LoadPaymentAjax == 'function') LoadPaymentAjax(id, 'deposit');
                    }
                    , failfunc = function (message) { }
                    , completefunc = function () { }
                );
            }
        }
        //#endregion
    </script>
    <script>js_require('/js/main.js');</script>
    <script>js_require('/js/comon/initialize_setting.js');</script>
    <script>js_require('/js/customjs/custom-validation.js');</script>

</body>

</html>

