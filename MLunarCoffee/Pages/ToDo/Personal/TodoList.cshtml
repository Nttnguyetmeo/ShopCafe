@page
@model SourceMain.Pages.ToDo.Personal.TodoListModel
@{
}

<div class="container-fluid py-3 px-0">
    <div class="row">
        <div class="col-12 col-md-8 col-xl-8">
            <!--Master-->
            <div class="card">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <!-- #region header -->
                                <h6 data-languagestatic="" class="mb-0">Todo</h6>
                                <p data-languagestatic="" class="text-sm mb-0">Todo Detail</p>
                                <!-- #endregion -->
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1">
                            <!-- #region button -->
                            <button title="New" class="btn bg-gradient-primary btn-sm mt-1" id="Todo_AddNew">Add New</button>
                            <button title="Refresh" class="btn btn-dark btn-sm mt-1" id="Todo_Refresh">Refresh</button>
                            <!-- #endregion -->

                        </div>
                    </div>
                </div>
                <div id="Todo_Filter_Content" class="Todo_Filter_Content">
                    <div class="Todo_Filter_Item" data-filter="0">Unread</div>
                    <div class="Todo_Filter_Item" data-filter="1">Closed</div>
                    <div class="Todo_Filter_Item" data-filter="2">Owner</div>
                </div>
                <div class="card-body pt-2" id="Todo_Content_Main">

                </div>
                <!--Load more-->
                <div class="Todo_Btn_LoadMore">
                    <button class="loadmore btn btn-secondary w-100 p-1" onclick="TodoList_LoadData(0, 1)">Load more</button>
                </div>
            </div>
        </div>
        <div class="col-12 col-md-4 col-xl-4">
            <div class="card">
                <div id="Todo_Detail_Empty" class="m-auto todo-detail">
                    <div class="sheet_cart_load_empty flex-center">No Selected</div>
                </div>
                <div class="container-fluid py-3 px-0 todo-right" id="Todo_Detail">
                </div>
            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
        let todo_timeMessbegin = 0;
        let todo_limit = 20;
        var current_todo_id = 0;
        var initial_todo_id = Number("@Model._TodoID")
        var Data_Todo_List = [];
        var DataUser;
        $(document).ready(function () {
            Master_IndexDB_Reads(_Session_Data, [_Session_User]
                , function (data) {
                    DataUser = data[0];
                    TodoList_LoadData();
                });


            Todo_Click_DetailItem();
            Todo_Click_Filter_List();
            Todo_Click_Close_Detail();
            Todo_Click_Add_New();
            $("#Todo_AddNew").popup({
                transition: "scale up",
                position: "top right"
            });
        });


        function TodoList_LoadData(currentid, isLoadmore, _ismovetop, _markunread) {

            let ismovetop = (_ismovetop != undefined) ? Number(_ismovetop) : 0;
            let markunread = (_markunread != undefined) ? Number(_markunread) : 0;
            let TodoCurrentID = 0;
            if (currentid != undefined && Number(currentid) != 0) {
                TodoCurrentID = Number(currentid);
            }
            if (Number(isLoadmore) != 1 && TodoCurrentID == 0) {
                Data_Todo_List = [];
                todo_timeMessbegin = 0;
            }
            AjaxLoad(url = "/Todo/Personal/TodoList/?handler=LoadData"
                , data = {
                    CurrentID: TodoCurrentID
                    , limit: todo_limit
                    , TimeMessbegin: todo_timeMessbegin
                }, async = true, error = null
                , success = function (result) {
                    let data = JSON.parse(result);
                    if (data != undefined && data.length != 0) {

                        if (TodoCurrentID == 0) {
                            Data_Todo_List = Data_Todo_List.concat(data);
                            if (Data_Todo_List != undefined && Data_Todo_List.length != 0) {
                                todo_timeMessbegin = Data_Todo_List[Data_Todo_List.length - 1].TimeMess;
                                Data_Todo_List = TodoList_ArrayUnique(Data_Todo_List)
                                Todo_Render_Data(Data_Todo_List, 'Todo_Content_Main');
                                if (initial_todo_id != 0) {
                                    let idfirstclick = 'todo_item_list_' + initial_todo_id;
                                    if ($('#' + idfirstclick).length) {
                                        $('#' + idfirstclick).trigger("click");
                                    }
                                    initial_todo_id = 0;
                                }
                            }
                        }
                        else {
                            let itemTodo = data[0];
                            if (ismovetop == 1) {
                                TodoList_DeleteRowItem(TodoCurrentID);
                                TodoList_AddTopRowItem(TodoCurrentID, itemTodo);
                                if (markunread == 1) {
                                    let id = "todo_item_list_" + TodoCurrentID;
                                    if ($('#' + id).find('.todo_item_content').length) {
                                        if (!$('#' + id).find('.todo_item_content').hasClass('un_read'))
                                            $('#' + id).find('.todo_item_content').addClass('un_read')
                                    }
                                }

                            }
                            else {
                                TodoList_EditRowItem(TodoCurrentID, itemTodo);
                            }

                        }
                    }
                    else {
                        $(".Todo_Btn_LoadMore").hide();
                    }
                    TodoList_HoverImage();
                });
        }

        function TodoList_ArrayUnique(array) {
            var a = array.concat();
            for (var i = 0; i < a.length; ++i) {
                for (var j = i + 1; j < a.length; ++j) {
                    if (a[i].ID === a[j].ID)
                        a.splice(j--, 1);
                }
            }
            return a;
        }

        function TodoList_Sort_By_TimeMess() {
            Data_Todo_List.sort(function (a, b) {
                if (a.TimeMess < b.TimeMess) { return 1 }
                if (a.TimeMess > b.TimeMess) { return -1 }
                return 0;
            });
        }

        //#region // Action Item Todo
        function TodoList_DeleteRow_Todo(id) {
            $("#Todo_Detail_Empty").show();
            $("#Todo_Detail").hide();
            TodoList_DeleteRowItem(id);
        }
        function TodoList_DeleteRowItem(id) {
            for (let i = 0; i < Data_Todo_List.length; i++) {
                if (id == Data_Todo_List[i].ID) {
                    Data_Todo_List.splice(i, 1);
                    break;
                }
            }
            let _row_todo = $("#todo_item_list_" + id);
            if (_row_todo.length) {
                _row_todo.remove();
            }
        }
        function TodoList_EditRowItem(id, item) {

            for (let i = 0; i < Data_Todo_List.length; i++) {
                if (id == Data_Todo_List[i].ID) {
                    Data_Todo_List[i] = item;
                    break;
                }
            }
            let el = Todo_RenderData_Each(item)
            let obj = createElementFromHTML(el);
            if ($('#todo_item_list_' + id).length) {
                let currentnode = document.getElementById('todo_item_list_' + id);
                currentnode.parentNode.replaceChild(obj, currentnode);
            }
        }
        function TodoList_AddTopRowItem(id, item) {
            Data_Todo_List.unshift(item);
            if (!$('#todo_item_list_' + id).length) {
                let el = Todo_RenderData_Each(item)
                $('#Todo_Content_Main').prepend(el);
            }
        }
        function TodoList_Json_Execute(json) {
            let data = JSON.parse(json);
            if (data != undefined) {
                let type = data.type;
                let todoid = data.todoid;
                let messid = data.messid;
                let userreceipt = data.userreceipt;
                let idRow = 'todo_item_list_' + todoid;
                if (Number(userreceipt) == Number(sys_userID_Main)) {
                    if (type == 0)
                        TodoList_LoadData(todoid, 0, 1, 1);
                    if (Number(todoid) == current_todo_id && messid != 0) {
                        switch (type) {
                            case 0:
                            case 1:
                                ToDoDetail_LoadMessage(messid)
                                break;
                            case 2:
                                TodoDetail_DeleteMessage(messid);
                                break;
                            default: break;
                        }

                    }
                }

            }
        }
        //#endregion

        //#region // Render Data

        function Todo_Render_Data(data, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var j = 0; j < data.length; j++) {
                        let item = data[j];
                        stringContent = stringContent + Todo_RenderData_Each(item);
                    }
                }
                document.getElementById(id).innerHTML = stringContent;

            }
        }
        function TodoList_HoverImage() {
            $(".todo_info_image img").popup({
                transition: "scale up",
                position: "top right"
            });
            $(".todo_input_info_image img").popup({
                transition: "scale up",
                position: "top right"
            });
        }
        function Todo_RenderData_Each(item) {
            let result = "";
            if (item != undefined) {
                let obj = Fun_GetObject_ByID(DataUser, item.UserCreated);
                let name = (obj != null) ? obj.Name : '';
                let img = (obj != null && obj.Avatar != "") ? obj.Avatar : Master_Default_Image;

                let obj_to = Fun_GetObject_ByID(DataUser, item.UserTo);
                let name_to = (obj_to != null) ? obj_to.Name : '';
                let img_to = (obj_to != null && obj_to.Avatar != "" ) ? obj_to.Avatar : Master_Default_Image;
                let inputinfo = '';
                if (item.IsHaveInput == 1) {
                    let obj_input = Fun_GetObject_ByID(DataUser, item.LastInput);
                    let name_input = (obj_input != null) ? obj_input.Name : '';
                    let img_input = (obj_input != null && obj_input.Avatar != "") ? obj_input.Avatar : Master_Default_Image;
                    inputinfo =
                        '<p class="text-secondary font-weight-bold text-sm mt-1 mb-0 pt-2 ellipsis_one_line">'
                        + '<a href="javascript:;" class="avatar avatar-xs rounded-circle pe-1" data-bs-toggle="tooltip">'
                    + '<img title="' + name_input + '" src="' + img_input + '" onerror="Master_OnLoad_Error_Image(this)" alt="Image placeholder">'
                        + '</a>'
                        + item.LastInput_Content
                        + ' </p>'
                }
                let mark = '';
                let bgcolor = '';
                if (item.ColorStatus == '')
                    bgcolor = '<span class="badge badge-sm todo_change_status d-table" style="background-color:red; width: 50px; height:50px;" data-id="' + item.ID + '" data-IsToTake ="' + item.IsToTake + '">' + item.NameStatus + '</span>'
                else
                    bgcolor = '<span class="badge badge-sm todo_change_status d-table" style="background-color:' + item.ColorStatus + '90" data-id="' + item.ID + '" data-IsToTake ="' + item.IsToTake + '">' + item.NameStatus + '</span>'



                if (Number(item.IsToTake) == 0)
                    mark = bgcolor;
                else mark = '<span class="badge badge-sm todo_change_status d-table" style="cursor: not-allowed; border: 2px solid #e6e6e6;background-color:' + item.ColorStatus + '1f" data-id="' + item.ID + '" data-istotake="' + item.IsToTake + '">' + item.NameStatus + '</span>'
                result = '<div class="timeline timeline-one-side" data-timeline-axis-style="dotted">'
                    + '<div class="timeline-block mb-3">'
                    + '<span class="timeline-step">'
                    + '<i class="ni ni-bell-55 text-success text-gradient"></i>'
                    + '</span>'
                    + '<div class="row">'
                    + '<div class="col-10">'
                    + '<div class="timeline-content">'
                    + mark

                    + '<p class="col-12 text-sm mt-3 mb-2 ellipsis_one_line todo_item_content ' + ((item.IsUnRead == 1) ? 'un_read' : '') + '" >'
                    + ((item.Content != '') ? item.Content : 'no content')
                    + '<i class="fas fa-circle newicon"></i>'
                    + '<span class="badge badge-sm bg-gradient-danger todo_item_close ' + ((item.IsClose == 1) ? 'close' : '') + '" title="Close">Close</span>'

                    + '</p>'
                    + inputinfo
                    + '</div>'

                    + '</div>'

                    + '<div class="col-2 text-end">'
                    + '<div class="avatar-group">'
                    + '<a href="javascript:;" class="avatar avatar-xs rounded-circle" data-bs-toggle="tooltip" data-original-title="" data-bs-original-title="" title="">'
                    + '<img title="' + name + '" src="' + img + '" alt="Image placeholder" onerror="Master_OnLoad_Error_Image(this)">'
                    + ((obj_to != null) ? ('<a href="javascript:;" class="avatar avatar-xs rounded-circle" data-bs-toggle="tooltip" data-original-title="" data-bs-original-title="" title="">' + '<img title="' + name_to + '" src="' + img_to + '" onerror="Master_OnLoad_Error_Image(this)" alt="Image placeholder">' + '</a>') : '')
                    + '</a>'
                    + '</div>'
                    + '<p class="text-secondary font-weight-bold text-xs mt-1 mb-0">'+GetTimeAgo_FromCurrent(item.Created)+'</p>'
                    + '</div>'
                    + '</div>'
                    + ' </div>'
                    + '</div>'
                result =  '<div class="card">'
                    + '<div id="todo_item_list_' + item.ID + '" class="todo_item_list" data-id="' + item.ID + '">' + result + '</div>'
                    + '</div>';
            }
            return result;
        }

        //#endregion


        //#region // Todo Event Click

        function Todo_Click_DetailItem() {
            $("#Todo_Content_Main").on('click', '.todo_item_list', function (event) {
                current_todo_id = $(this).attr("data-id");
                //$(this).addClass("selected").siblings().removeClass("selected");
                $(this).parent().siblings().children().removeClass('selected');
                $(this).addClass('selected');

                $("#Todo_Detail_Empty").hide();
                $('.todo-right').addClass("absolute_detail");
                if (typeof Todo_Detail_Load_Data_Outside !== 'undefined' && $.isFunction(Todo_Detail_Load_Data_Outside)) {
                    Todo_Detail_Load_Data_Outside();
                    $("#Todo_Detail").show()
                }
                else {
                    let link = '/ToDo/Personal/TodoDetail?DetailID=' + current_todo_id
                        + "&ver=" + versionofWebApplication;
                    $('#Todo_Detail').load(link);
                    $('#Todo_Detail').show();
                }
            });
            $("#Todo_Content_Main").on("click", '.todo_change_status', function () {
                event.preventDefault();
                let IsToTake = Number($(this).attr("data-istotake"));
                let TodoID = Number($(this).attr("data-id"));
                if (IsToTake != 1) {
                    let TicketID = 0;
                    let CustID = 0;
                    Master_Todo_Open_Popup_ChangeStatus(this, TodoID, CustID, TicketID);
                }
                $(this).removeClass('selected');
            })
        }

    function Todo_Click_Filter_List () {
        $("#Todo_Filter_Content .Todo_Filter_Item:not(.unclick)").on("click", function () {
            let id_filter = Number($(this).attr('data-filter'));
            let DataResult = [];
            let FilterBy = "";
            let FilterValue = 0;

            if ($(this).hasClass("active") == true || id_filter == 10) {
                id_filter = 10;
                $('.Todo_Filter_Item').removeClass("active");
            }
            else {
                $(this).addClass("active").siblings().removeClass("active");
            }
            switch (id_filter) {
                case 0:
                    //Filter By Read
                    FilterBy = "IsUnRead";
                    FilterValue = 1;
                    break;
                case 1:
                    //Filter By Close
                    FilterBy = "IsClose";
                    FilterValue = 1;
                    break;
                case 2:
                    //Filter By To Send
                    FilterBy = "IsToSend";
                    FilterValue = 1;
                    break;
                default:
                    FilterBy = "";
                    break;
            }
            if (FilterBy != '') {
                DataResult = Data_Todo_List.filter(word => word[FilterBy] == FilterValue);
            }
            else {
                DataResult = Data_Todo_List;
            }
            Todo_Render_Data(DataResult, 'Todo_Content_Main');
            if (current_todo_id != 0) {
                $("#todo_item_list_" + current_todo_id).addClass("selected");
            }
        })
    }

        function Todo_Click_Close_Detail() {
            $(".buttonCloseTodoDetail").on("click", function () {
                $('.todo-right').removeClass("absolute_detail");
                //$('.todo-right').addClass("d-none");
            })
        }

        function Todo_Click_Add_New() {
            $("#Todo_AddNew").on("click", function () {
                let currentid = 0;
                let custid = 0;
                let ticketid = 0;
                Master_Todo_Open_Popup_Detail(this, currentid, custid, ticketid);
            })
            $("#Todo_Refresh").on("click", function () {
                current_todo_id = 0;
                Data_Todo_List = []; $("#Todo_Detail_Empty").show();
                $("#Todo_Detail").hide();
                TodoList_LoadData();
            })

        }

        //#endregion

</script>

<style>
    .moving-tab .nav-link.active {
        background: none !important;
        box-shadow: none !important;
    }
    .todo-detail {
        padding: 10px;
        height: calc(100vh - 90px);
        min-height: 500px;
        overflow-x: hidden;
        overflow-y: auto;
    }
    .timeline-content {
        /*max-width: 51rem !important;*/
        min-width: 40rem !important;
    }

@*    .moving-tab .nav-link.active {
        background: none !important;
        box-shadow: none !important;
    }*@
    /*#region // Header Filter*/
    .todo_filter_container {
        display: flex;
        width: 100%;
        padding: 10px;
        background-color: white;
        font-size: 13px;
        color: #0a3c62;
        margin-bottom: 15px;
        transition: all 0.3s cubic-bezier(.25,.8,.25,1);
        border: 1px solid rgba(217, 219, 228, 0.7);
        box-shadow: rgb(17 17 26 / 10%) 0px 4px 16px, rgb(217 217 217 / 0%) 0px 1px 8px;
        height: 60px;
    }

        .todo_filter_container .todo_filter_title {
            width: 90px;
            font-size: 17px;
            text-align: left;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: 600;
        }

    .Todo_Filter_Content {
 @*       width: calc(100% - 150px);
        overflow-x: auto;
        overflow-y: hidden;*@
        display: flex;
        margin-left: 10px;
    }

        .Todo_Filter_Content .Todo_Filter_Item {
            color: #3F4254;
            padding: 10px 15px;
            border-radius: 5px;
            margin-right: 10px;
            cursor: pointer;
            transition: 0.3s ease-in-out;
            min-width: max-content;
        }

            .Todo_Filter_Content .Todo_Filter_Item:hover {
                background-color: #dcecfc;
            }

            .Todo_Filter_Content .Todo_Filter_Item.active {
                color: #3699FF;
                background-color: #dcecfc;

            }


    /*#endregion // Header Filter*/

    /*#region // Block section */
@*    .todo_main_container {
        display: flex;
        position: relative;
    }*@

    @*    .todo_main_container .section_todo_left {
            width: calc(100% - 415px);
            margin-right: 15px;
            height: calc(100vh - 90px);
            min-height: 500px;
            font-size: 13px;
            position: relative;
        }

        .todo_main_container .section_todo_right {
            width: 400px;
            transition: all 0.3s cubic-bezier(.25,.8,.25,1);
            border: 1px solid rgba(217, 219, 228, 0.7);
            box-shadow: rgb(17 17 26 / 10%) 0px 4px 16px, rgb(217 217 217 / 0%) 0px 1px 8px;
            padding: 10px;
            font-size: 13px;
            height: calc(100vh - 90px);
            min-height: 500px;
            overflow-x: hidden;
            overflow-y: auto;
            background: white;
        }*@

    /*#endregion // Block Section*/

    /*#region // Block List TOdo */
    #Todo_Content_Main {
        height: calc(100% - 75px);
        overflow: auto;
        transition: all 0.3s cubic-bezier(.25,.8,.25,1);
        /*border: 1px solid rgba(217, 219, 228, 0.7);*/
        /*box-shadow: rgb(17 17 26 / 10%) 0px 4px 16px, rgb(217 217 217 / 0%) 0px 1px 8px;*/
    }

        #Todo_Content_Main .todo_item_list {
            padding: 8px 20px 10px 25px;
            -webkit-transition: all 0.3s ease;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            border-bottom: 1px solid #e6e6e6ab;
        }

            #Todo_Content_Main .todo_item_list.move {
                animation: moveitem 2s ease;
            }

            #Todo_Content_Main .todo_item_list.selected {
                border-radius: 10px;
                background-color: #dcecfc;
            }

            #Todo_Content_Main .todo_item_list:not(.selected):hover {
                border-radius: 10px;
                background-color: #dcecfc;
                transform: translateX(-10px);
            }

            #Todo_Content_Main .todo_item_list .todo_item_grow {
                flex-grow: 1;
                max-width: calc(100% - 200px);
            }

           @* #Todo_Content_Main .todo_item_list .todo_item_box {
                width: 20px;
                height: 20px;
                background-color: #e8e8ea;
                margin-right: 5px;
                text-align: center;
                border-radius: 3px;
                line-height: 20px;
                color: #d3d3d3;
                font-size: 12px;
                position: relative;
            }

                #Todo_Content_Main .todo_item_list .todo_item_box i {
                    margin-right: 0;
                }



                #Todo_Content_Main .todo_item_list .todo_item_box.line:before {
                    content: "";
                    position: absolute;
                    top: 100%;
                    left: 50%;
                    height: 15px;
                    background: #dad9d9;
                    transform: translateX(-50%);
                    width: 2px;
                }

                #Todo_Content_Main .todo_item_list .todo_item_box.line:after {
                    content: "";
                    position: absolute;
                    left: 9px;
                    top: calc(100% + 15px);
                    height: 2px;
                    background: #dad9d9;
                    width: 13px;
                }*@


            #Todo_Content_Main .todo_item_list .todo_info {
                text-align: right;
                min-width: max-content;
                position: absolute;
                right: 30px;
                top: 8px;
            }

            #Todo_Content_Main .todo_item_list .todo_item_detail {
                display: flex;
            }

        #Todo_Content_Main .todo_item_content {
            color: #0a3c62;
            margin-bottom: 5px;
            font-size: 14px;
        }

            #Todo_Content_Main .todo_item_content.un_read {
                font-weight: 600;
                text-decoration: underline;
            }

    /*#endregion // Block section */
    .todo_item_content.ellipsis_one_line.un_read .newicon {
        display: block;
    }

    .todo_input_info_image {
        position: relative;
    }

        .todo_input_info_image .text {
            margin-left: 25px;
            color: #002846;
            background: #6435c912;
            font-size: 13px;
            padding: 2px 10px;
            border-radius: 7px;
            max-width: 200px;
        }

        .todo_input_info_image img {
            width: 15px;
            height: 15px;
            background-color: #cacaca;
            border-radius: 3px;
            border: 1px solid #ffffff;
            position: absolute;
            top: 2px;
            left: 7px;
        }

    .todo_item_content.ellipsis_one_line .newicon {
        position: absolute;
        left: -60px;
        top: 12px;
        color: #db2828b8;
        font-size: 12px;
        display: none;
    }

    .todo_item_close {
        display: none;
    }

        .todo_item_close.close {
            display: block;
            position: absolute;
            left: -68px;
            font-size: 9px;
            top: 32px;
        }




        @*    #Todo_AddNew, #Todo_Refresh {
        font-size: 20px !important;
        cursor: pointer;
        display: inline-block;
        margin-right: 5px;
        position: absolute;
        right: 25px;
        top: 15px;
        color: #2185d0;
    }

    #Todo_Refresh {
        right: 60px !important;
    }*@
        .text_status {
        height: 20px;
        line-height: 20px;
        padding-right: 5px;
        border-radius: 3px;
        margin-right: 5px;
        font-size: 13px;
    }

    .todo_info_image {
        width: 20px;
        height: 20px;
        display: inline-flex;
    }

        .todo_info_image .imggroup {
            display: inline-flex;
            margin-left: -11px;
            height: 15px;
            width: 15px;
            margin-top: 10px;
        }

        .todo_info_image img {
            width: 20px;
            height: 20px;
            background-color: #cacaca;
            border-radius: 3px;
            border: 1px solid #ffffff;
        }

    #Todo_Detail {
        width: 100%;
        min-height: 300px;
    }

@*    .Todo_Btn_LoadMore {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 35px;
        text-align: center;
    }*@

 @*   .loadmore {
        height: 20px;
        border-style: none;
        border-radius: 10px;
        font-size: 12px;
        color: #db2828;
        font-weight: 600;
        text-align: center;
        padding: 0px 10px;
        opacity: 0.2;
    }

        .loadmore:hover {
            opacity: 1;
        }*@

    .buttonCloseTodoDetail {
        display: none;
    }

    @@keyframes moveitem {
        0% {
            background-color: white;
        }

        25% {
            background-color: #b7d6fd;
        }

        50% {
            background-color: white;
        }

        75% {
            background-color: #b7d6fd;
        }

        100% {
            background-color: white;
        }
    }

    @@media only screen and (max-width:992px) {
        .todo_main_container {
            flex-wrap: wrap;
        }

            .todo_main_container .section_todo_left {
                width: 100%;
                margin-right: 0;
            }

            .todo_main_container .section_todo_right {
                right: -415px;
                margin-bottom: 10px;
                position: absolute;
                max-width: 100%;
            }

        .todo-right.absolute_detail {
            right: 0;
            top: 0px;
            display: block;
        }

        .buttonCloseTodoDetail {
            display: block;
        }
    }

    @@media only screen and (min-width:500px) {
        .timeline-one-side .timeline-content {
            min-width: 20rem !important;
        }
    }

    @@media only screen and (min-width: 992px) {
        .timeline-content {
            max-width: 35rem !important;
        }
    }


    @@media only screen and (min-width:100px) {
        .timeline-one-side .timeline-content {
            min-width: 5rem !important;
        }
    }
</style>

<script>js_require('/js/Todo/Personnal_Todo.js');</script>

