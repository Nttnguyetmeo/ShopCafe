@page
@model MLunarCoffee.Pages.ToDo.WorkingProject.TodoStatusOptionModel
@{ Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js?ver=@DateTime.Now.Ticks');</script>
<div class="card">
    <div class="card-header pb-0">
        <div class="d-lg-flex">
            <div class="w-50 col-auto my-auto">
                <div class="h-100">
                    <h6 class="mb-0">Project Status</h6>
                    <p class="text-sm mb-0">Some text of detail sub</p>
                </div>
            </div>
            <div class="ms-auto my-auto">
                <button data-languagestatic="create_new" id="btnNewTypeAccount" class="btn bg-gradient-primary btn-sm mt-1" onclick="return TodoStatus_AddNew()">Thêm Mới</button>
            </div>
        </div>
    </div>
    <div class="card-body pt-0">
        <div class="m-0 my-3 mobile-responsive">
            <div id="loaderList" class="waitingdiv text-center w-100 mt-2" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
                </div>
            </div>
            <table class="table vt-table mb-0" id="TodoStatus_Content">
                <thead>
                    <tr>
                        <th class="d-none">ID</th>
                        <th data-languagestatic="no">STT</th>
                        <th data-languagestatic="name">Tên Loại</th>
                        <th data-languagestatic="color_code">Mã Màu</th>
                        <th data-languagestatic="handlelname">Người Sửa</th>
                        <th data-languagestatic="delete">#</th>
                    </tr>
                </thead>
                <tbody id="TodoStatus_BodyContent">
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    let DataUser;
    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                TodoStatus_LoadData();
            })
        $('#TodoStatus_Content tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            TodoStatus_Edit(ID);
        });
        $('#TodoStatus_Content tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            TodoStatus_Delete(ID)
        });
    });
    function TodoStatus_LoadData() {
        AjaxLoad(url = "/ToDo/WorkingProject/TodoStatusOption/?handler=LoadData"
            , data = {}, async = true, error = null
            , success = function (result) {
                let data = JSON.parse(result);
                TodoStatus_Render(data, "TodoStatus_BodyContent");
                CheckPermissionControlInPage(sys_PerControl, '@Model.CurrentPath');
                CheckPermissionControlInPage(sys_PerControlMH, '@Model.CurrentPath');
            }
            , sender = null
            , before = function (e) {
                $("#TodoStatus_Content").hide();
                $("#loaderList").show();
            }
            , complete = function (e) {
                $("#TodoStatus_Content").show();
                $("#loaderList").hide();
            }
        );
        return false;
    }
    function TodoStatus_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let obj = Fun_GetObject_ByID(DataUser, item.PerEditor);
                    let name = (obj != null) ? obj.Name : 'unknown';
                    let img = (obj != null) ? obj.Avatar : Master_circleAvatar;
                    let tr ='<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td><a class="buttonEditClass">' + item.Name + '</a></td>'
                        + '<td>' + item.ColorCode + '</td>'
                        + '<td><div class="d-inline">'
                        + '<img title="'
                        + name + '" class="avatar avatar-xs me-2" src="data:image/png;base64, ' + img + '" alt="label-image" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="'+name+'" />'
                        + '<span title="' + GetDateTime_String_DMYHM(item.DayEditor) + '" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="' + GetDateTime_String_DMYHM(item.DayEditor)+'">'
                        + GetDateTime_String_DMY(item.DayEditor) + '</span>'
                        + '</div></td>'
                        + '<td>'
                        + ((item.EditButton === 1)
                            ? Render_Button_Grid(['<button class="buttonGrid" value="'
                                + item.ID
                                + '"><i class="buttonDeleteClass vtt-icon vttech-icon-delete"  data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Delete"></i></button>']) : '')
                        + '</td>'
                    stringContent = stringContent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
            ToolPopper();
        }
    }
    function TodoStatus_Edit(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/ToDo/WorkingProject/TodoStatusOptionDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function TodoStatus_AddNew() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/ToDo/WorkingProject/TodoStatusOptionDetail" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function TodoStatus_Delete(id) {
        const promise = notiConfirm();
        promise.then(function () { TodoStatus_ExcuteDelete(id); }, function () { });
    }
    function TodoStatus_ExcuteDelete(id) {
        AjaxLoad(url = "/ToDo/WorkingProject/TodoStatusOption/?handler=DeleteItem"
            , data = {id:id}, async = true, error = null
            , success = function (result) {
                 if (result == "1") {
                    notiSuccess();
                    TodoStatus_LoadData();
                } else {
                    notiError_SW();
                }
            }
        );
    }
</script>
<script src="/js/main.js" async></script>