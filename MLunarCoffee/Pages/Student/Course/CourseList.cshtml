@page
@model MLunarCoffee.Pages.Student.Course.CourseListModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()
<div class="row">
    <div class="col-12 px-0">
        <div class="card card-plain" id="Course_Main">
            <div class="vtcardheader card-header pb-0">
                <div class="left">
                    <h6 class="mb-0">@Local["Danh sách khóa học"]</h6>
                    <p class="text-sm mb-0">@Local["Danh sách khóa đào tạo"]</p>
                </div>
                <div class="right overflow-unset w-100 w-lg-70">
                    <div class="wrap overflow-unset w-100">
                        <div class="wrapblock overflow-unset">
                            <div class="form-control border-0 p-0">
                                <div class="form-check mb-0">
                                    <input id="CourseChkDisable" class="form-check-input pr-2" type="checkbox">
                                    <label class="mb-0 cursor-pointer text-nowrap" for="CourseChkDisable">@Local["Khóa học sử dụng"]</label>
                                </div>
                            </div>
                        </div>
                        <div class="wrapblock overflow-unset w-100">
                            <div class="vtcondition w-100">
                                <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                                <div class="fulllap collapse collapsesticky show">
                                    <div class="row m-0">
                                        <div class="col-12 col-sm-4 px-0 py-1 pe-sm-2">
                                            <div class="ui fluid search selection dropdown form-control" id="CourseBranch" onchange="event.preventDefault(); return Course_Load();">
                                                <input type="hidden" name="statusType" />
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg. Branch</div>
                                                <div id="cbbCourseBranch" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-sm px-0 py-1 pe-sm-2">
                                            <input class="flatpickr form-control d-inline" id="CourseDate" name="" type="text" placeholder="eg. Date" onchange="event.preventDefault(); return Course_Load();" />
                                        </div>
                                        <div class="col-12 col-sm-auto px-0 py-1">
                                            <button class="btn bg-gradient-primary btn-sm  ms-lg-2 mb-0" data-value="fade up" onclick="return Course_AddNew()" style="min-width:max-content;">@Local["Thêm mới"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0 ">
                <div class="row px-2">
                    <div class="col-12 col-sm-lg col-xl-4 p-1">
                        <div class="row p-2">
                            <div class="col-12 col-sm-12 p-1">
                                <div class="input-group" id="course_InputSearchBlock">
                                    <div class="input-group-text input-group-text px-2">
                                        <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                                        <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                                    </div>
                                    <input id="course_InputSearch" type="text" class="form-control ps-2" placeholder="eg .search">
                                    <span class="input-group-text"><i class="btn_clear fas fa-minus-circle"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="position-relative mt-3 pb-2">
                            <div id="WaitingCouList" class="waitingdiv text-center w-100 mt-2 position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <div class="overflow-y" style="height: calc(100vh - 285px)">
                                <div id="dtContentCourseBody" class="list-group block-horizontal">
                                </div>
                            </div>
                            <div id="CouList_PopupAction" class="position-absolute collapse" style="z-index: 2000;">
                                <div class="col-w-200 rounded-3 shadow-lg">
                                    <ul class="nav nav-pills flex-column bg-white border-radius-lg py-3 px-2">
                                        <li class="nav-item" role="presentation">
                                            <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Course_Edit();">@Local["Chỉnh sửa"]</a>
                                        </li>
                                        <li><hr class="horizontal dark my-0 opacity-2" /></li>
                                        <li class="nav-item" role="presentation">
                                            <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Course_Disable();" id="course_DisabledName"></a>
                                        </li>
                                        <li><hr class="horizontal dark my-0 opacity-2" /></li>
                                        <li class="nav-item" role="presentation">
                                            <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Course_Delete();">@Local["Xóa"]</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <button class="btnsysmore btn btn-secondary w-100 p-1 my-1 cursor-pointer position-absolute top-100 start-50 translate-middle-x z-index-3" onclick="event.preventDefault();return Course_Load(1);">
                                @Local["Xem thêm"]
                            </button>
                        </div>
                    </div>
                    <div class="col-12 col-lg-7 col-xl-8 p-1">
                        <div id="CourseViewDetail" style="display: none;">
                            <div class="text-dark card card-plain mb-1">
                                <div class="card-body py-3 bg-gray-100 border-radius-lg mt-2 mb-2">
                                    <div class="my-auto">
                                        <div class="h-100">
                                            <div class="d-flex align-items-center">
                                                <h6 class="ps-1 text-primary mb-0">
                                                    <span id="course_code" class="fw-bold"></span>
                                                    <span>-</span>
                                                    <span id="course_name"></span>
                                                </h6>
                                                <div class="ms-auto my-auto mt-1">
                                                    <div class="d-flex flex-wrap gap-2 justify-content-end">
                                                        <div class="btn-group">
                                                            <a class="btn btn-dark btn-sm px-3 py-2 pe-none">@Local["Gửi lịch học"]</a>
                                                            <a class="btn btn-dark border-start border-light btn-sm px-3  py-2" onclick="event.preventDefault(); return Course_sendScheMail();">
                                                                <i class="fas fa-at" style="font-size: 14px;"></i>
                                                            </a>
                                                            <a class="btn btn-dark border-start border-light btn-sm px-3  py-2" onclick="event.preventDefault(); return Course_PrintSchedule();">
                                                                <i class="fas fa-print" style="font-size: 14px;"></i>
                                                            </a>
                                                        </div>
                                                        <div class="btn-group">
                                                            <a class="btn btn-dark btn-sm px-3 py-2 pe-none">@Local["Gửi chứng chỉ"]</a>
                                                            <a class="btn btn-dark border-start border-light px-3  py-2" style="font-size:8px;" onclick="event.preventDefault(); return Course_sendCertMail();">
                                                                <i class="fas fa-at" style="font-size: 14px;"></i>
                                                            </a>
                                                            <a class="btn btn-dark border-start border-light btn-sm px-3  py-2" onclick="event.preventDefault(); return Course_PrintCer();">
                                                                <i class="fas fa-print" style="font-size: 14px;"></i>
                                                            </a>
                                                        </div>
                                                        <div class="btn-group">
                                                            <a class="btn btn-dark border-start border-light btn-sm px-3 py-2" onclick="event.preventDefault(); return Course_EditStatus();">
                                                                <span>@Local["Trạng thái"]</span>
                                                            </a>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="ps-1 pt-0 text-dark text-sm">
                                        <div class="d-flex align-items-center pe-0">
                                            <div class="ps-0 justify-content-center">
                                                <p class="mb-0 opacity-5 text-sm mt-3">@Local["Chi nhánh"]</p>
                                                <p id="course_branch" class="text-sm my-auto"></p>
                                            </div>
                                            <div class="ps-5 justify-content-center">
                                                <p class="mb-0 opacity-5 text-sm mt-3">@Local["Thời gian"]</p>
                                                <p id="course_date" class="text-sm my-auto"></p>
                                            </div>
                                            <div class="ps-5 justify-content-center">
                                                <p class="mb-0 opacity-5 text-sm mt-3">@Local["Đơn giá"]</p>
                                                <p id="course_price" class="text-sm my-auto"></p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body pt-2 pb-0">
                                    <div class="row px-2 form3">
                                        <div class="col-12 col-sm-12 p-1">
                                            <div class="text-dark card mb-3 card-plain">
                                                <div class="card-body mt-0 p-0 pe-4 position-relative">
                                                    <h6 class="text-sm fw-bold">@Local["Danh sách lớp học"]</h6>
                                                    <div id="course_classlist" class="mt-2 block-horizontal">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="CourseTabList" style="display:none;">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="Course_Detail">
        </div>
    </div>
</div>



<script type="text/javascript">

    //#region // INIT & DECLARE

    let DataUser = {}, DataSubjects = {}, DataListCourse = {}, DataBranchs = {};
    var DataLevelStatus = {}, DataReviStatus = {};
    let CouList_DataMain = [];
    let CouList_BeginID = 0, CouList_Limit = 50, Cou_Flag = 0;
    let CouList_CurrentID = 0, CouList_CurrentClassID = 0;
    let xhrCourseList;
    let CouList_TimeOutSearch;
    let sys_branchID = Number("@Model._branchID");
    let CouList_TitleDisable = {
        1: "@Local["Không sử dụng"]",
        2: "@Local["Sử dụng"]"
    }

    $(document).ready(function () {
        $("#CourseDate").flatpickr({
            mode: "range"
            , dateFormat: 'd-m-Y'
            , enableTime: false
        });
        let date = new Date();
        let firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        $("#CourseDate").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));

        $('#CourseChkDisable').unbind().change(function (event) {
            if ($('#CourseChkDisable').is(':checked'))
                $('#dtContentCourseBody').addClass('showdis');
            else $('#dtContentCourseBody').removeClass('showdis');
        });

        $('#course_InputSearch').unbind().keyup(function () {
            let btnClear = $("#course_InputSearchBlock .btn_clear");
            if ($(this).val().length > 0) btnClear.removeClass('opacity-1');
            else btnClear.addClass('opacity-1');
            $("#course_InputSearchBlock .fa-search").hide();
            $("#course_InputSearchBlock .spinner-border").show();
            clearTimeout(CouList_TimeOutSearch);
            CouList_TimeOutSearch = setTimeout(function (e) {
                Course_SearchCourse(xoa_dau($('#course_InputSearch').val().toLowerCase()).trim());
            }, 500);
        });

        $("#course_InputSearchBlock .btn_clear").on('click', function (e) {
            $('#course_InputSearch').val('');
            $(this).children(".btn_clear").addClass('opacity-1');
            Course_SearchCourse('');
        });

        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                Course_LoadInit();
            }
        );
    });

    function Course_LoadInit() {
        AjaxLoad(url = "/Student/Course/CourseList/?handler=Init"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != '0') {
                    let data = JSON.parse(result);

                    DataListCourse = (data.ListCourse).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                    DataSubjects = (data.Subject).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                    DataBranchs = (data.Branch).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                    DataLevelStatus = (data.Level).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                    DataReviStatus = (data.Revision).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});

                    Load_Combo(data.Branch, "cbbCourseBranch", true)
                    $("#CourseBranch").dropdown('refresh');
                    $("#CourseBranch").dropdown('set selected', sys_branchID);

                    Cou_Flag = 1;
                    //Course_Load();
                }
                else notiError_SW();
            }
        );
    }

    //#endregion


    //#region // LOAD DATA

    async function Course_Load(isLoadMore = 0, currentid = 0) {
        new Promise((reslove) => {
            setTimeout(() => {
                if (Cou_Flag != 1) return;

                if (xhrCourseList && xhrCourseList.readyState != 4) xhrCourseList.abort();

                if (isLoadMore == 0 && currentid == 0) {
                    CouList_DataMain = [];
                    CouList_BeginID = 0;
                    $("#dtContentCourseBody").empty();
                }

                let branchID = Number($("#CourseBranch").dropdown("get value")) ? Number($("#CourseBranch").dropdown("get value")) : 0;
                let dateFrom = "";
                let dateTo = "";
                let date = $('#CourseDate').val() ? $('#CourseDate').val() : new Date()
                if (date.includes(" to ")) {
                    dateFrom = date.split(" to ")[0];
                    dateTo = date.split(" to ")[1];
                }
                else {
                    dateFrom = date;
                    dateTo = date;
                }

                xhrCourseList = AjaxLoad(url = "/Student/Course/CourseList/?handler=LoadData"
                    , data = {
                        "BranchID": branchID,
                        "DateFrom": dateFrom,
                        "DateTo": dateTo,
                        "BeginID": CouList_BeginID,
                        "Limit": CouList_Limit,
                        "Currentid": currentid
                    }
                    , async = true
                    , error = null
                    , success = function (result) {
                        if (result != '0') {
                            let data = JSON.parse(result);
                            if (currentid != 0) {
                                if (data && data.length != 0) {
                                    let rowContent = Course_RenderEach(data[0]);
                                    let rowItem = $("#courseItem_" + currentid);
                                    if (rowItem.length != 0) {
                                        rowItem.replaceWith(rowContent);
                                    }
                                    else {
                                        document.getElementById('dtContentCourseBody').insertAdjacentHTML("beforeend", rowContent);
                                    }
                                }
                                Course_Event();
                            }
                            else if (data && data.length != 0) {
                                CouList_DataMain = CouList_DataMain.concat(data);
                                CouList_BeginID = data[data.length - 1].ID;
                                Course_Render(data, 'dtContentCourseBody');
                            }
                        }
                        else notiError_SW();
                    }
                    , sender = null
                    , before = function (e) {
                        $("#WaitingCouList").show();
                    }
                    , complete = function (e) {
                        $("#WaitingCouList").hide();
                    }
                );
            }, 20);
        })
    }

    function Course_LoadViewDetail() {
        if (CouList_CurrentID && CouList_CurrentID != 0) {
            AjaxLoad(url = "/Student/Course/CourseList/?handler=LoadDetail"
                , data = {
                    "Currentid": CouList_CurrentID
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        if (data && data.length != 0) {
                            let dataInfo = data.Table;
                            let dataClass = data.Table1;
                            Course_FillDetail(dataInfo[0]);
                            Course_RenderClass(dataClass, 'course_classlist');
                            Course_LoadViewDetailTab(CouList_CurrentID);
                        }
                    }
                    else notiError_SW();
                }
                , sender = null
                , before = function (e) {
                }
                , complete = function (e) {
                    $("#CourseViewDetail").fadeIn(100);
                }
            );
        }
    }

    function Course_LoadViewDetailTab(id) {
        $("#CourseTabList").load('/Student/Course/CourseTabList?CurrentID=' + id + '&ver=' + versionofWebApplication, function () {
            $(this).show();
        });
    }

    //#endregion

    //#region // SEARCH

    function Course_SearchCourse(text) {
        $("#dtContentCourseBody").empty();
        if (text == '') {
            Course_Render(CouList_DataMain, 'dtContentCourseBody');
        }
        else {
            let _detail = CouList_DataMain.filter(s => (
                xoa_dau(s.Name).trim().toLowerCase().includes(text)
                || xoa_dau(s.Code).trim().toLowerCase().includes(text)));
            Course_Render(_detail, 'dtContentCourseBody');
        }
        $("#course_InputSearchBlock .fa-search").show();
        $("#course_InputSearchBlock .spinner-border").hide();
    }

    //#endregion

    //#region // View Detail

    async function Course_FillDetail(item) {
        if (item == undefined) return;
        $("#course_name").html(item.Name)
        $("#course_code").html(item.Code)
        $("#course_date").html(ConvertBetweenYMDInt_ToDate(item.TimeBegin, item.TimeEnd))
        $("#course_branch").html(Fun_GetName_ByID(DataBranchs, item.BranchID));
        $("#course_price").html(formatNumber(item.Price));
    }



    async function Course_RenderClass(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let teacher = item.TeacherAlias != '' ? '<span class=" ms-2">@Local["Giảng viên"]: </span>' + item.TeacherAlias + ' ' : '';
                            let tr = `
                                        <div class="d-flex justify-content-between rowCouStu">
                                            <div>
                                                <div>
                                                    <a data-id="${item.ID}" class="cursor-pointer mb-0 fw-bold text-sm detail border-bottom border-primary" >${Fun_GetName_ByID(DataSubjects, item.SubjectID)}</a >
                                                    <span class="fw-bold text-sm text-dark">
                                                       - ${formatNumber(item.Price)}
                                                    </span>
                                                </div>
                                                <div class="text-sm"><span class="">@Local["Đăng ký"]: </span>${item.TotalStudent} ${teacher} </div>
                                            </div>
                                            <div class="text-sm ms-auto">${ConvertBetweenYMDInt_ToDate(item.TimeBegin, item.TimeEnd)}</div>
                                        </div>
                                        <hr class="horizontal dark mt-2 mb-1">
                                    `
                            stringContent += tr;
                        }
                    }
                    myNode.insertAdjacentHTML('beforeend', stringContent);
                    Course_Class_Event();
                }

            }, 100)
        })
    }

    function Course_Class_Event() {
        $("#course_classlist .detail").unbind('click').on('click', function (event) {
            event.preventDefault();
            event.stopPropagation();
            let id = Number($(this).attr("data-id"));
            if (isNaN(id)) return;
            CouList_CurrentClassID = id;
            Course_Class_Student();
        });
    }

    function Course_Class_Student() {
        if (CouList_CurrentClassID && CouList_CurrentClassID != 0) {
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Student/General/Course/StudentList?ClassID=" + CouList_CurrentClassID + "&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
        }
        return false;
    }

    //#region //RENDER

    async function Course_Render(data, id) {
        return new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let itemContent = Course_RenderEach(item);
                            stringContent += itemContent;
                        }
                    }
                    myNode.insertAdjacentHTML('beforeend', stringContent);
                }
                Course_Event();

            }, 100)
        })
    }

    function Course_RenderEach(item) {
        try {
            let result = '';
            let classDisable = item.IsDisabled === 1 ? 'table-active' : "";
            let badgeActive = item.IsDisabled !== 1 ? ' <span class="badge bg-gradient-primary badge-sm">@Local["Sử dụng"]</span>' : "";

            result = `
                        <li id="courseItem_${item.ID}" class="courseItem cursor-pointer list-group-item border-0 justify-content-between pb-0 ps-0 border-radius-lg ${classDisable}" data-id="${item.ID}">
                            <div class="d-flex">
                                <div class="d-flex align-items-center pe-2">
                                    <a data-id="4" class="moreCourse mb-0 me-3 p-3 btn-sm d-flex align-items-center justify-content-center">
                                       <i class="text-lg fw-bold fas fa-ellipsis-v" aria-hidden="true"></i>
                                    </a>
                                    <div class="d-flex flex-column">
                                        <div>
                                            <h6 class="mb-0 text-primary fw-bold text-sm border-bottom border-primary d-inline-block">${item.Code}</h6>
                                        </div>
                                        <span class="text-sm text-dark ellipsis_one_line" >${item.Name}</span>
                                    </div>
                                </div>
                                <div class="align-items-center ms-auto text-end">
                                    ${badgeActive}
                                    <p class="text-sm text-dark mb-0" >${formatNumber(item.Price)}</p>
                                    <span class="text-sm">${ConvertBetweenYMDInt_ToDate(item.TimeBegin, item.TimeEnd)}</span>
                                </div>
                            </div>
                            <hr class="horizontal dark mt-2 mb-1" />
                        </li>
                    `
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    //#endregion

    //#region // EVENT

    function Course_Event() {

        $("#dtContentCourseBody .courseItem").unbind("click").on('click', function (event) {
            event.preventDefault();
            event.stopPropagation();
            let _parent = $(this).closest('.courseItem');
            _parent.addClass('active').siblings().removeClass('active')
            let _id = Number(_parent.attr('data-id'));
            if (!isNaN(_id)) {
                CouList_CurrentID = _id;
                Course_LoadViewDetail()
            }
        })

        $("#dtContentCourseBody .moreCourse").unbind("click").on('click', function (event) {
            event.preventDefault();
            event.stopPropagation();
            let isDisabled = 1;
            let _parent = $(this).closest('.courseItem')
            if (_parent.hasClass("table-active")) isDisabled = 2;
            $("#course_DisabledName").html(CouList_TitleDisable[isDisabled]);
            _parent.addClass('active').siblings().removeClass('active')
            let _id = Number(_parent.attr('data-id'));
            if (_id && !isNaN(_id) && _id != 0) {
                CouList_CurrentID = _id;
                if (_parent && _parent.length != 0) {
                    let { top } = _parent.offset();
                    top += 30 - $("#dtContentCourseBody").offset().top;
                    let scrollTop = $("#dtContentCourseBody").parent().scrollTop();
                    $("#CouList_PopupAction").css({
                        "top": top - scrollTop + 20,
                        "left": 30
                    }).animate({
                        "left": 00
                    }).addClass('show');
                }
            }
        })

        $("#dtContentCourseBody .courseItem:first-child").trigger('click');
    }

    //#endregion

    //#region // DELETE & DISABLED

    function Course_Delete() {
        if (CouList_CurrentID && CouList_CurrentID != 0) {
            const promise = notiConfirm();
            promise.then(function () { Course_ExecuteDelete(CouList_CurrentID); }, function () { });
        }
    }

    function Course_ExecuteDelete(id) {
        AjaxLoad(url = "/Student/Course/CourseList/?handler=DeleteItem"
            , data = { id: id }, async = false, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    let rowItem = $("#courseItem_" + id);
                    if (rowItem.length != 0) rowItem.remove();
                }
                else {
                    notiError_SW();
                }
            }
        );
    }

    function Course_Disable() {
        if (CouList_CurrentID && CouList_CurrentID != 0) {
            AjaxLoad(url = "/Student/Course/CourseList/?handler=DisableItem"
                , data = { id: CouList_CurrentID }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        Course_Load(0, CouList_CurrentID);
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        }
    }

    //#endregion

    //#region // OTHER

    function Course_Edit() {
        if (CouList_CurrentID && CouList_CurrentID != 0) {
            Course_OpenDetail();
            $("#Course_Detail").load("/Student/Course/CourseDetail?CurrentID=" + CouList_CurrentID + "&ver=" + versionofWebApplication);
            $('#Course_Detail').show();
            return false;
        }
    }

    function Course_OpenDetail() {
        $("#Course_Detail").empty();
        $("#Course_Main").hide();
        document.getElementById("Course_Detail").innerHTML = '';
    }

    function Course_Close() {
        document.getElementById("Course_Detail").innerHTML = '';
        $("#Course_Main").show();
        $("#Course_Detail").hide();
    }

    function Course_AddNew() {
        Course_OpenDetail();
        $("#Course_Detail").load("/Student/Course/CourseDetail" + "?ver=" + versionofWebApplication);
        $('#Course_Detail').show();
        return false;
    }

    function Course_EditStatus() {
        let urlDetail = "/Student/General/Course/CourseStatus?CourseID=" + CouList_CurrentID + "&ver=" + versionofWebApplication;
        Course_OpenDetail();
        $("#Course_Detail").load(urlDetail);
        $('#Course_Detail').show();
    }

    function Course_MailTemplate(type = "", studentid = 0, masterid = 0) {
        $("#MainSendMail_Content").empty();
        $("#MainSendMail_Content").load('/Student/Email/EmailTemplate?&ver=' + versionofWebApplication
            , function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    $("#MainSendMail").addClass('active');
                    if (typeof ETemp_SendMailStu === 'function')
                        ETemp_SendMailStu(type, studentid, masterid);
                }
                if (statusTxt == "error") {

                }
            })
    }

    function Course_sendScheMail() {
        Course_MailTemplate('ST_Email_Scheduler', 0, CouList_CurrentID);
    }
    function Course_sendCertMail() {
        Course_MailTemplate('ST_Email_Certificate', 0, CouList_CurrentID);
    }
    function Course_PrintSchedule() {
        let str = "0" + ";" + CouList_CurrentID.toString();
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load('/Print/print?Type=student_schedule&DetailID=' + str);
        $('#DetailModal').modal('show');
    }
    function Course_PrintCer() {
        let str = "0" + ";" + CouList_CurrentID.toString();
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load('/Print/print?Type=student_certificate&DetailID=' + str);
        $('#DetailModal').modal('show');
    }

            //#endregion

</script>


<style>

    /*.table-active {
                display: none;
                background-color: #e9ecef54 !important;
            }
        */
    .showdis .table-active {
        display: none;
        background-color: #e9ecef54 !important;
        /*display: table-row;*/
    }

    .courseItem.active {
        background-color: #e9ecef !important;
    }
</style>
