@page
@model MLunarCoffee.Pages.Student.Settings.Course.CourseDetailModel
@{
    Layout = null;
}
@Html.AntiForgeryToken()

<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="">
    <div class="container-fluid px-0">
        <div id="CourseMain" class="card">
            <div class="card-header pb-0">
                <h6 class="mb-0">@Local["Khoá học"]</h6>
                <p class="text-dark text-sm">@Local["Cài đặt khóa học"]</p>
            </div>
            <div class="card-body pt-2 step-body" data-index="1">

                <div class="row p-3 pt-0 pe-0 form3" id="formCourseDetail">
                    <div class="field col-12 col-md-6 col-xl-3 px-2 ps-1">
                        <div class="row">
                            <div class="field col-12 mt-2 px-1">
                                <label>@Local["Khoá học"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="CD_ListCourse" onchange="CourseDetail_ChangeCourse()">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .Course</div>
                                    <div id="ccbCD_ListCourse" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 mt-2 col-md-6 col-xl-6 px-1">
                                <label>@Local["Mã"]</label>
                                <input id="CD_Code" name="code" type="text" placeholder="eg. Code" class="form-control" />
                            </div>
                            <div class="field col-12 mt-2 col-md-6 col-xl-6 px-1">
                                <label>@Local["Giá"]</label>
                                <input id="CD_Price" type="text" class="form-control price_money" placeholder="eg.Price" value="0" disabled />
                            </div>
                            <div class="field col-12 mt-2 col-md-6 col-xl-6 px-1">
                                <label>@Local["Ngày bắt đầu"]</label>
                                <input id="CD_DateBegin" type="text" class="form-control flatpickr" autocomplete="off" onchange="CourseDetail_ChangeDate()" placeholder="eg.Date Begin" />
                            </div>
                            <div class="field col-12 mt-2 col-md-6 col-xl-6 px-1">
                                <label>@Local["Ngày kết thúc"]</label>
                                <input id="CD_DateEnd" type="text" class="form-control flatpickr" autocomplete="off" onchange="CourseDetail_ChangeDate()" placeholder="eg.Date End" />
                            </div>
                            <div class="field col-12 mt-2 px-1">
                                <label>@Local["Chi nhánh"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="CD_Branch">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Chi nhánh"]</div>
                                    <div id="ccbCD_Branch" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 mt-2 px-1">
                                <label>@Local["Nội dung"]</label>
                                <textarea id="CD_Content" name="content" class="form-control" autocomplete="off" placeholder="eg.Content" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="field col-12 col-md-6 col-xl-9 px-2">
                        <div class="p-3 pt-2 ps-0 position-relative mt-n0 mt-lg-n5 pe-0">
                            <div class="text-dark  mb-3">
                                <div class="card-header pb-0">
                                    <h6 class="mb-0">@Local["Môn học"]</h6>
                                    <p class="text-dark text-sm">@Local["Danh sách môn học trong khóa"]</p>
                                </div>
                                <div class="card-body m-3 mt-0 p-3 px-2 bg-gray-100 border-radius-lg">
                                    <div id="CourseDetail_subwait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x d-none">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                    </div>
                                    <div class="p-3 ps-0 block-horizontal" id="CourseDetail_sub">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row d-none" id="CDTime_AreaSubject">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 id="CDTime_CurrentSubject" class="fw-bold d-inline text-primary mb-0"></h6>
                                <div class="text-dark text-sm">
                                    @Local["Thời gian"]:
                                    <p id="CDTime_CurrentTime" class="d-inline text-sm fw-bold my-auto"></p>
                                    <p id="CDTime_CurrentNumber" class="d-inline text-sm fw-bold text-primary"></p>
                                    <span class="fw-bold">@Local["Buổi"]</span>
                                    <p id="CDTime_SchedulerNumber" class="d-inline text-sm fw-bold text-primary"></p>
                                </div>
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1 d-lg-flex position-relative">
                            <button class="btn bg-gradient-dark btn-sm me-2 mb-0"
                                    onclick="return CDTime_Clear()">
                                @Local["Xoá tất cả"]
                            </button>
                            <div class="btn-group me-2">
                                <a class="btn bg-gradient-dark btn-sm px-3 mb-0 text-white">@Local["Ngoại lệ"]</a>
                                <a onclick="return CDTime_AddExcept()" class="btn bg-gradient-dark border-start border-light btn-sm px-3 mb-0 cursor-pointer">
                                    <i class="ni text-white fa fa-plus text-xs"></i>
                                </a>
                                <a onclick="return CDTime_EditExcept(event)" class="btn bg-gradient-dark border-start border-light btn-sm px-3 mb-0 cursor-pointer">
                                    <i class="fas fa-tools text-white text-xs"></i>
                                </a>
                            </div>
                            <button class="btn bg-gradient-primary btn-sm  mb-0"
                                    onclick="return CDTime_New()">
                                @Local["Lịch tuần"]
                            </button>
                            <div id="CDTime_Popup" class="collapsesticky position-absolute collapse" style="z-index: 2000">
                                <div class="col-w-400 card card-body shadow-lg text-dark text-capitalize opacity-10 px-3">
                                    <div class="field col-12 my-0 px-1 mt-2">
                                        <div class="form-check">
                                            <input id="CDC_EditRemove"
                                                   class="form-check-input pr-2" type="checkbox">
                                            <label>@Local["Xóa"]</label>
                                        </div>
                                    </div>

                                    <div class="field col-12 my-0 px-1 mt-2">
                                        <div class="form-check">
                                            <input id="CDC_EditTeacher" onchange="CDC_ChangeTeacher()"
                                                   class="form-check-input pr-2" type="checkbox">
                                            <label>@Local["Giảng viên"]</label>
                                        </div>
                                        <div class="ui fluid search selection dropdown form-control disabled" id="CD_EditTeacher">
                                            <input type="hidden" name="teacher" />
                                            <i class="dropdown icon"></i>
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .@Local["Giảng viên"]</div>
                                            <div id="ccbCD_EditTeacher" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 my-0 px-1 mt-2">
                                        <div class="form-check">
                                            <input id="CDC_EditRoom" onchange="CDC_ChangeRoom()"
                                                   class="form-check-input pr-2" type="checkbox">
                                            <label>@Local["Phòng"]</label>
                                        </div>
                                        <div class="ui fluid search selection dropdown form-control disabled" id="CD_EditRoom">
                                            <input type="hidden" name="teacher" />
                                            <i class="dropdown icon"></i>
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .@Local["Phòng"]</div>
                                            <div id="ccbCD_EditRoom" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 my-0 px-1 mt-2">
                                        <div class="form-check ">
                                            <input id="CDC_EditTime" onchange="CDC_ChangeTime()"
                                                   class="form-check-input pr-2" type="checkbox">
                                            <label>@Local["Thời gian"]</label>
                                        </div>
                                        <div id="CDC_EditTimeArea" class="d-flex disabled">
                                            <input id="CD_EditBegin" name="timeBegin" type="text" placeholder="eg. Time Begin " class="form-control flatpickr d-none" readonly="readonly">
                                            <input id="CD_EditEnd" name="timeBegin" type="text" placeholder="eg. Time End " class=" mt-2 form-control flatpickr d-none" readonly="readonly">
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-center align-items-center mt-5">
                                        <button class="btn btn-secondary mx-2 btn-sm mb-0 mt-2" onclick="CD_EditClose()">@Local["Đóng"]</button>
                                        <button class="btn btn-primary mx-2 btn-sm mb-0 mt-2" onclick="CD_EditSave()">@Local["Lưu"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 p-1">
                        <div class="text-dark mb-3">
                            <div class="m-3 mt-0">
                                <div class="row">
                                    <hr class="horizontal dark mt-1 mb-1">
                                    <div class="col-12 row p-3 position-relative p-3 ">
                                        <div id="CDTime_wait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x d-none">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </div>
                                        <div class="row px-3" id="CDTime_scheduler">
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ hai"]</span>
                                                <div class="content week1"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ ba"]</span>
                                                <div class="content week2"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ tư"]</span>
                                                <div class="content week3"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ tư"]</span>
                                                <div class="content week4"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ sáu"]</span>
                                                <div class="content week5"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Thứ bảy"]</span>
                                                <div class="content week6"></div>
                                            </div>
                                            <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                                <span class="title fw-bold text-dark ">@Local["Chủ nhật"]</span>
                                                <div class="content week0"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="action_Save mt-2 me-2">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessageMaster"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" onclick="event.preventDefault(); return Course_Close()">@Local["Đóng"]</button>
                        <button id="CD_Save" type="button" class="btn bg-gradient-primary mt-2 me-2 d-none" onclick="event.preventDefault();return CourseDetail_Execute()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    //#region // INIT
    var CD_CurrentID = '@Model._CourseCurrentID';
    var CD_DataBranchs;
    var CD_DataKeySubject = {}, CD_DataKeyManuClass = {}, CD_DataKeyTeacher = {}, CD_DataKeyListCoure = {};
    var CD_Couresub = {}, CD_Coursescheduler = {}, CD_Eachscheduler = {};
    let CD_CurrentSub = 0;
    let CD_CurrentScheduler = 0;
    var CD_Dow = ["@Local["Chủ nhật"]", "@Local["Thứ hai"]", "@Local["Thứ ba"]", "@Local["Thứ tư"]", "@Local["Thứ năm"]", "@Local["Thứ sáu"]", "@Local["Thứ bảy"]"];
    let CD_FlagChangesub = 0;
    var CD_Begindate, CD_Enddate;

    $(document).ready(function () {
        $(".price_money").divide();
        $("#CD_DateBegin,#CD_DateEnd").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            defaultDate: new Date()
        });
        CourseDetail_ChangeDate();
        Master_IndexDB_Reads(_Session_Data, [_Session_Branch]
            , function (data) {
                CD_DataBranchs = data[0];
                CourseDetail_LoadInit();
            }
        );
    });

    function CourseDetail_LoadInit () {
        AjaxLoad(url = "/Student/Course/CourseDetail/?handler=LoadInit"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != '0') {
                    let data = JSON.parse(result);
                    if (data && data.length != 0) {
                        let dataSubjects = data.Subjects;
                        let dataManuClass = data.ManuClass;
                        let dataTeacher = data.Teachers;
                        let dataBranchs = data.Branch;
                        let dataListCourse = data.ListCourse;
                        Load_Combo(dataTeacher, 'ccbCD_EditTeacher', false);
                        Load_Combo(dataManuClass, 'ccbCD_EditRoom', false);
                        CD_DataKeySubject = dataSubjects.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                        CD_DataKeyManuClass = dataManuClass.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                        CD_DataKeyTeacher = dataTeacher.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                        CD_DataKeyListCoure = dataListCourse.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                        Load_Combo(dataBranchs, 'ccbCD_Branch', true);
                        Load_Combo(dataListCourse, 'ccbCD_ListCourse', true);
                        $("#CD_Branch").dropdown('refresh');
                        $("#CD_Branch").dropdown('set selected', dataBranchs[0] != undefined ? dataBranchs[0].ID : 0);
                        CourseDetail_LoadDetail();
                    }
                }
                else notiError_SW();
            }
        );
    }
    //#endregion

    //#region // LOAD DETAIL And Save
    function CourseDetail_LoadDetail () {
        if (CD_CurrentID && CD_CurrentID != '0') {
            AjaxLoad(url = "/Student/Course/CourseDetail/?handler=LoadDetail"
                , data = {'id': CD_CurrentID}
                , async = true
                , error = null
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        if (data && data.length != 0) {
                            let dataInfo = data.Table;
                            let dataClass = data.Table1;
                            let dataClassTime = data.Table2;
                            CourseDetail_FillClassAndTime(dataClass, dataClassTime);
                            if (dataInfo && dataInfo.length === 1) CourseDetail_Fillinfo(dataInfo[0]);
                            CD_FlagChangesub = 1;
                        }
                    }
                    else notiError_SW();
                }
            );
        }
        else {
            $('#CD_Save').removeClass('d-none');
            CD_FlagChangesub = 1;
        }
    }
    function CourseDetail_FillClassAndTime (data,datatime) {
        CD_Couresub = {};
        CD_Coursescheduler = {};
        for (let i = 0; i < data.length; i++) {
            let timeob = datatime.filter(s => s.ClassID == data[i].ID);
            CourseDetail_CreateSub(ranid = data[i].ID
                , subjectid = data[i].SubjectID
                , totalprice = data[i].Price
                , timeteach = data[i].TimeTeach
                , itemprice = data[i].ItemPrice
                , selected = 1
                , numscheduler = (timeob != undefined ? timeob.length : 0)
                , mainteach = data[i].MainTeacherID
                , stulimit = data[i].StudentLimit
            );

            if (timeob != undefined && timeob.length != 0) {
                let e = {};
                for (let j = 0; j < timeob.length; j++) {
                    let ee = CourseTime_Spe_scheduler(timeob[j].ID, timeob[j].Dayint, timeob[j].DOW, timeob[j].TimeStart, timeob[j].TimeEnd, timeob[j].TeacherID, timeob[j].ManuClassID, timeob[j].ClassID);
                    e[timeob[j].ID] = ee;
                }
                CD_Coursescheduler[data[i].ID] = e;
            }

        }
        CourseDetail_SubjectRender(CD_Couresub, "CourseDetail_sub", function () {
            for ([key, item] of Object.entries(CD_Couresub)) {
                $("#cbcoursemainteach_" +key).dropdown("refresh")
                $("#cbcoursemainteach_" + key).dropdown("set selected", item.MainTeacherID);

                if(item.StudentLimit != undefined && item.StudentLimit != 0){
                    $("#courselimit_" +key).prop("disabled", false);
                    $("#courselimitchecked_" +key).prop("checked", true);
                }
            }
        });

    }
    function CourseDetail_Fillinfo (itemInfo) {
        $("#CD_Code").val(itemInfo.Code);
        $("#CD_Price").val(itemInfo.Price);
        $("#CD_DateBegin").val(ConvertYMDInt_ToDate(itemInfo.TimeBegin));
        $("#CD_DateEnd").val(ConvertYMDInt_ToDate(itemInfo.TimeEnd));
        $("#CD_Content").val(itemInfo.Note);
        $("#CD_Branch").dropdown("refresh")
        $("#CD_Branch").dropdown("set selected", itemInfo.BranchID);
        $("#CD_ListCourse").dropdown("refresh")
        $("#CD_ListCourse").dropdown("set selected", itemInfo.ListCourseID);
        CourseDetail_ChangeDate();
        if (itemInfo.State == 0) {
            $('#CD_Save').removeClass('d-none');
        }
    }
    function CourseDetail_Execute () {
        $('#formCourseDetail').form('validate form');
        if ($('#formCourseDetail').form('is valid')) {
            let dataCourse = {};
            dataCourse.ListCourseID = Number($("#CD_ListCourse").dropdown('get value')) ? Number($("#CD_ListCourse").dropdown('get value')) : 0;
            dataCourse.Code = $("#CD_Code").val() ? $("#CD_Code").val() : '';
            dataCourse.Price = $("#CD_Price").val() ? Number($("#CD_Price").val()) : 0;
            dataCourse.BranchID = Number($("#CD_Branch").dropdown('get value')) ? Number($("#CD_Branch").dropdown('get value')) : 0;
            dataCourse.TimeBegin = $("#CD_DateBegin").val() ? ConvertDMY_ToInt($("#CD_DateBegin").val()) : 0;
            dataCourse.TimeEnd = $("#CD_DateEnd").val() ? ConvertDMY_ToInt($("#CD_DateEnd").val()) : 0;
            dataCourse.Note = $("#CD_Content").val();
            let classsubject = Object.values(CD_Couresub).filter(s => s.Selected == 1);
            let classtime = Object.values(CD_Coursescheduler).reduce((pre, arr) => {
                pre = [...pre, ...Object.values(arr)];
                return pre;
            }, []);

            AjaxLoad(url = "/Student/Course/CourseDetail/?handler=ExcuteData"
                , data = {
                    "CurrentID": CD_CurrentID,
                    "dataInfo": JSON.stringify(dataCourse),
                    "dataClass": JSON.stringify(Object.values(classsubject)),
                    "dataClassTime": JSON.stringify(Object.values(classtime))
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        if (data && data.length != 0 && data[0].RESULT == 1) {
                            notiSuccess();
                            if (typeof Course_Load === 'function') Course_Load();
                            if (typeof Course_Close === 'function') Course_Close();
                        }
                        else notiError('@Local["Trùng dữ liệu"]');
                    }
                    else notiError_SW();
                }
            );
        }
    }
    //#endregion

    //#region // Sub Area
    function CourseDetail_ChangeDate () {
        CD_Begindate = formatDMY_To_Date($("#CD_DateBegin").val());
        CD_Enddate = formatDMY_To_Date($("#CD_DateEnd").val());
    }
    function CourseDetail_ChangeCourse () {
        if (CD_FlagChangesub == 1) {
            let CourseID = $('#CD_ListCourse').dropdown('get value') ? Number($('#CD_ListCourse').dropdown('get value')) : 0;
            let _detail = Object.values(CD_DataKeyListCoure).filter(s => s.ID == CourseID);
            if (_detail != undefined && _detail.length == 1) {
                $("#CD_Price").val(_detail[0].TotalPrice);
            }
            let _detailsub = Object.values(CD_DataKeySubject).filter(s => s.ListCourseID == CourseID);
            if (_detailsub != undefined && _detailsub.length != 0) {
                CD_Couresub = {};
                for (let i = 0; i < _detailsub.length; i++) {
                    CourseDetail_CreateSub(ranid = 0 - ((new Date()).getTime() + RandomNumber())
                        , subjectid = _detailsub[i].ID
                        , totalprice = _detailsub[i].TotalPrice
                        , timeteach = _detailsub[i].TimeTeach
                        , itemprice = _detailsub[i].ItemPrice
                        , selected = 1
                        , numscheduler = 0
                        , mainteach = 0
                        , stulimit = 0
                    );
                }
                CourseDetail_SubjectRender(CD_Couresub, "CourseDetail_sub");
            }
        }
    }
    function CourseDetail_CreateSub(ranid, subjectid, totalprice, timeteach, itemprice, selected, numscheduler, mainteach, stulimit) {
        let e = {};
        e.ID = ranid;
        e.SubjectID = subjectid;
        e.Price = totalprice;
        e.TimeTeach = timeteach;
        e.ItemPrice = itemprice;
        e.Selected = selected;
        e.Numscheduler = numscheduler;
        e.MainTeacherID = mainteach;
        e.StudentLimit = stulimit;
        CD_Couresub[ranid] = e;
    }
    async function CourseDetail_SubjectRender (data, id, callback) {
        return new Promise((resolve) => {
            $("#CourseDetail_subwait").removeClass('d-none');
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';

                    for ([key, item] of Object.entries(data)) {
                        let subject = CD_DataKeySubject[item.SubjectID];
                        let tr = `
                                <div class="ps-2">
                                    <div class="row px-2">
                                        <div class="col-12 col-sm-12 col-md-12 col-xl-4 p-1">
                                            <div class="">
                                                <label class="ms-0">@Local["Môn học"]</label>
                                                <div class="form-check ">
                                                    <input id="coursecheck_${item.ID}" data-id="${item.ID}" data-subject="${item.SubjectID}" class="subject form-check-input" type="checkbox" checked ${(item.Numscheduler != 0) ? `disabled` : ``}>
                                                    <a data-id="${item.ID}" data-subject="${item.SubjectID}" class="position-relative text-capitalize mb-0 pe-3 mt-2 detail border-bottom border-primary text-sm fw-bold">
                                                        <i class="position-absolute top-50 start-0 translate-middle text-danger fas fa-caret-right" style="display:none; left: -50px !important;font-size: 32px;"></i>
                                                        ${subject != undefined ? subject.Name : ''}
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-sm-12 col-md-6 col-xl-4 p-1 ">
                                            <label>@Local["Người phụ trách"]</label>
                                            <div id="cbcoursemainteach_${item.ID}" data-id="${item.ID}" class="mainteachercb ui fluid search selection dropdown form-control">
                                                <input type="hidden" name="branch" />
                                                <i class="dropdown icon"></i>
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">eg .@Local["Người phụ trách"]</div>
                                                <div id="coursemainteach_${item.ID}" class="mainteacher menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-sm-12 col-md-6 col-xl-4 p-1 ">
                                            <div class="form-group d-flex align-items-center justify-content-between mb-1">
                                                <label class="mb-0">@Local["Giới hạn"]</label>
                                                <div class="form-check form-switch ms-3">
                                                <input id="courselimitchecked_${item.ID}" class="form-check-input stulimitchecked" type="checkbox" data-id="${item.ID}">
                                                </div></div>
                                            <input id="courselimit_${item.ID}" data-id="${item.ID}"  disabled="disabled"  type="number" class="stulimit form-control" placeholder="eg. @Local["Giới hạn"]" value="${item.StudentLimit}">
                                        </div>
                                    </div>
                                    <div class="">
                                         <div class="row px-2">
                                             <div class="col-12 col-sm-12 col-md-4 p-1">
                                                  <label>@Local["Tổng số buổi"]</label>
                                                  <input id="courseitem_${item.ID}" data-id="${item.ID}" type="number" class="subtime form-control" placeholder="eg.Time Teach" value="${item.TimeTeach}">
                                             </div>
                                             <div class="col-12 col-sm-12 col-md-4 p-1">
                                                  <label>@Local["Tiền từng buổi"]</label>
                                                  <input id="coursenum_${item.ID}" data-id="${item.ID}" type="text" placeholder="eg. Item Price" class="subitemprice form-control price_money" value="${item.ItemPrice}">
                                             </div>
                                                 <div class="col-12 col-sm-12 col-md-4 p-1">
                                                <label>@Local["Tổng tiền"]</label>
                                                <div class="input-group flex-nowrap mt-lg-0  " >
                                                    <input id="coursetotal_${item.ID}" data-id="${item.ID}" type="text" placeholder="eg. Price" class="subprice form-control price_money" value="${item.Price}" disabled >
                                                     <div  class="input-group-text bg-gray-200">
                                                        <div id="coursenumscheare_${item.ID}" class="${item.Numscheduler != 0 ? `` : `d-none`}">
                                                            <span id="coursenumsche_${item.ID}" class="text-sm fw-bold text-primary pe-2">${item.Numscheduler}</span>
                                                            <i class="fas  text-primary pe-2 fa-calendar-check"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                         </div>
                                    </div>
                                </div>
                                <hr class="my-3 w-80 mx-auto horizontal dark" />
                            `
                        stringContent += tr;
                    }
                    myNode.innerHTML = stringContent;
                }

                $('#' + id + ' .mainteacher').each(function (index) {
                    Load_Combo(Object.values(CD_DataKeyTeacher), $(this)[0].id, false);
                });
                if (typeof callback === "function") callback();
                CourseDetail_SubjectEvent();
                $("#CourseDetail_subwait").addClass('d-none');
            }, 100);
        });
    }
    function CourseDetail_SubjectEvent () {
        $("#CourseDetail_sub .subject").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                CD_Couresub[id].Selected = $(this).is(":checked") ? 1 : 0;
                let totalprice = 0;
                for ([key, item] of Object.entries(CD_Couresub)) totalprice = totalprice + (item.Selected == 1 ? Number(item.Price) : 0)
                $('#CD_Price').val(totalprice);
                CD_FlagChangesub = 1;
            }
        });
        $("#CourseDetail_sub .subtime").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                let va = $(this).val();
                let num = (!isNaN(va) && Number(va) >= 0) ? va : 0;
                CD_Couresub[id].TimeTeach = num;
                CD_Couresub[id].Price = Number(CD_Couresub[id].ItemPrice) * num;
                $('#coursetotal_' + id).val(CD_Couresub[id].Price);
                let totalprice = 0;
                for ([key, item] of Object.entries(CD_Couresub)) totalprice = totalprice + (item.Selected == 1 ? Number(item.Price) : 0)
                $('#CD_Price').val(totalprice);
                CD_FlagChangesub = 1;
            }
        });
        $("#CourseDetail_sub .stulimit").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                let va = $(this).val();
                let num = (!isNaN(va) && Number(va) >= 0) ? Number(va) : 0;
                CD_Couresub[id].StudentLimit = num;
                CD_FlagChangesub = 1;
            }
        });
        $("#CourseDetail_sub .stulimitchecked").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                let isCheck = $(this).is(":checked");
                if(isCheck){
                    $("#courselimit_" + id).prop("disabled", false);
                }
                else{
                    $("#courselimit_" + id).prop("disabled", true);
                    $("#courselimit_" + id).val(0);
                    CD_Couresub[id].StudentLimit = 0;
                }
                CD_FlagChangesub = 1;
            }
        });
        $("#CourseDetail_sub .mainteachercb").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                let va = $(this).dropdown('get value');
                let num = (!isNaN(va) && Number(va) >= 0) ? va : 0;
                CD_Couresub[id].MainTeacherID = Number(num);
                CD_FlagChangesub = 1;
            }
        });

        $("#CourseDetail_sub .subitemprice").unbind('change').on('change', function () {
            if (CD_FlagChangesub == 1) {
                CD_FlagChangesub = 0;
                let id = Number($(this).attr('data-id'));
                let va = $(this).val();
                let num = (!isNaN(va) && Number(va) >= 0) ? va : 0;
                CD_Couresub[id].ItemPrice = num;
                CD_Couresub[id].Price = Number(CD_Couresub[id].TimeTeach) * num;
                $('#coursetotal_' + id).val(CD_Couresub[id].Price);
                let totalprice = 0;
                for ([key, item] of Object.entries(CD_Couresub)) totalprice = totalprice + (item.Selected == 1 ? Number(item.Price) : 0)
                $('#CD_Price').val(totalprice);
                CD_FlagChangesub = 1;
            }
        });

        $("#CourseDetail_sub .detail").unbind('click').on('click', function () {
            CD_CurrentSub = Number($(this).attr('data-id'));
            let subject = Number($(this).attr('data-subject'));
            $('#CDTime_AreaSubject').removeClass('d-none');
            $("#CourseDetail_sub .detail").removeClass('active');
            $(this).addClass('active');
            CD_Eachscheduler = CD_Coursescheduler[CD_CurrentSub] != undefined ? JSON.parse(JSON.stringify(CD_Coursescheduler[CD_CurrentSub])) : {};
            CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
            CourseTime_Info(subject);
        });
        $(".price_money").divide();
    }
    function CourseTime_Info (subjectid) {
        let subject = CD_DataKeySubject[subjectid];
        $('#CDTime_CurrentSubject').html(subject.Name);
        $('#CDTime_CurrentNumber').html(subject.TimeTeach);
        let begin = ConvertDMY_ToInt($("#CD_DateBegin").val());
        let end = ConvertDMY_ToInt($("#CD_DateEnd").val());
        $('#CDTime_CurrentTime').html(ConvertBetweenYMDInt_ToDate(begin, end));
    }
    function CDTime_New () {

        let currweek = Object.keys(CD_Eachscheduler).length;
        if (currweek != 0) {
            const promise = notiConfirm('@Local["Thao tác này sẽ reset lại lịch hiện có"]');
            promise.then(function () {
                CDTime_NewAction();
            }, function () { });
        }
        else {
            CDTime_NewAction();
        }


    }
    function CDTime_NewAction () {
        $("#DetailModal_Content").html('');
        let MainTeacher_obj = CD_Couresub[CD_CurrentSub];
        let MainTeacher = MainTeacher_obj != undefined ? MainTeacher_obj.MainTeacherID : 0;
        let url = `/Student/Course/CourseClassTimedow?ID=${CD_CurrentSub}&MainTeacher=${MainTeacher}&Mindate=${ConvertDateTime_To_YMDInt(CD_Begindate)}&Maxdate=${ConvertDateTime_To_YMDInt(CD_Enddate)}`
        $("#DetailModal_Content").load(url);
        $('#DetailModal').modal('show');
    }
    function CDTime_Clear () {
        const promise = notiConfirm();
        promise.then(function () {
            CD_Eachscheduler = {};
            CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
            CourseTime_UpdateSub();
        }, function () { });
    }
    function CourseTime_CreateDow (begindate, endate, ob) {
        CD_Eachscheduler = {};
        var copiedDate = new Date(begindate.getTime());
        for (var d = copiedDate; d <= endate; d.setDate(copiedDate.getDate() + 1)) {
            let dow = d.getDay();
            if (ob[dow] != undefined && ob[dow] != "") {
                let ran = (new Date()).getTime() + RandomNumber();
                let e = CourseTime_Spe_scheduler(ran, dayint = ConvertDateTime_To_YMDInt(d)
                    , dow, start = ConvertTime_ToString(ob[dow].timestart)
                    , end = ConvertTime_ToString(ob[dow].timeend)
                    , teacher = ob[dow].teacher, manuclass = ob[dow].manuclass
                    , CD_CurrentSub);
                CD_Eachscheduler[ran] = e;
            }
        }
        CourseTime_UpdateSub();
        CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
    }
    //#endregion

    //#region // Time Area
    async function CourseTime_Render (data, id) {
        $("#CDTime_wait").removeClass('d-none');
        return new Promise((resolve) => {
            $('#' + id + ' .content').html('');
            var myNode = document.getElementById(id);
            if (myNode != null) {
                for ([key, item] of Object.entries(data)) {
                    $('#' + id + ' .week' + item.Dow)
                        .append(
                            `<a data-id="${item.ID}" class="scheduler badge text-normal my-2 p-2 w-100 bg-gray-100 text-dark cursor-pointer text-start">
                            <span class="text-sm">${ConvertTimeInt_ToTime(item.TimeStart)}</span>
                              -
                            <span class="text-sm">${ConvertTimeInt_ToTime(item.TimeEnd)}</span>
                            <span data-id="${item.ID}" class="text-danger fw-bold text-sm border-bottom date">${ConvertYMDInt_ToDM(item.DayInt)}</span>
                            <div class="d-block">
                                <span class="text-sm">${CD_DataKeyManuClass[item.Manuclass] != undefined ? CD_DataKeyManuClass[item.Manuclass].Name : ""}</span>
                                <span class="text-sm">${CD_DataKeyTeacher[item.Teacher] != undefined ? CD_DataKeyTeacher[item.Teacher].NickName : ""}</span>
                            </div>
                        </a>`);
                }
            }
            $('#CDTime_wait').addClass('d-none');
            CourseTime_Event();
        });
    }
    function CourseTime_Event () {
        $("#CDTime_scheduler .week .date").unbind('click').on('click', function () {
            CD_CurrentScheduler = Number($(this).attr('data-id'));
            let itemselected = CD_Eachscheduler[CD_CurrentScheduler];
            let DayInt = itemselected.DayInt;
            let Dow = itemselected.Dow;
            let TimeEnd = itemselected.TimeEnd;
            let TimeStart = itemselected.TimeStart;
            let Teacher = itemselected.Teacher;
            let Manuclass = itemselected.Manuclass;
            $("#DetailModal_Content").html('');
            let url = `/Student/Course/CourseClassTimeDetail?ID=${CD_CurrentScheduler}&DayInt=${DayInt}&TimeStart=${TimeStart}&TimeEnd=${TimeEnd}&Teacher=${Teacher}&Manuclass=${Manuclass}&Mindate=${ConvertDateTime_To_YMDInt(CD_Begindate)}&Maxdate=${ConvertDateTime_To_YMDInt(CD_Enddate)}`
            $("#DetailModal_Content").load(url);
            $('#DetailModal').modal('show');
        });
        $("#CDTime_scheduler .week .scheduler").unbind('click').on('click', function () {
            if ($(this).hasClass('active')) $(this).removeClass('active');
            else $(this).addClass('active');
        });
    }
    function CDTime_AddExcept () {
        let MainTeacher_obj = CD_Couresub[CD_CurrentSub];
        let MainTeacher = MainTeacher_obj != undefined ? MainTeacher_obj.MainTeacherID : 0;
        $("#DetailModal_Content").html('');
        let url = `/Student/Course/CourseClassTimeDetail?ID=0&Teacher=${MainTeacher}&Mindate=${ConvertDateTime_To_YMDInt(CD_Begindate)}&Maxdate=${ConvertDateTime_To_YMDInt(CD_Enddate)}`
        $("#DetailModal_Content").load(url);
        $('#DetailModal').modal('show');
    }
    function CDTime_EditExcept (event) {
        event.preventDefault();
        event.stopPropagation()
        $("#CDTime_Popup").css({
            "top": -115,
            "left": -40
        }).animate({
            "left": -32
        }).addClass('show');
        CD_EditReset();
    }
    function CD_EditClose () {
        $('#CDTime_Popup').collapse('hide');
        CD_EditReset();
    }
    function CD_EditReset () {
        $("#CD_EditTeacher").dropdown('clear');
        $("#CD_EditRoom").dropdown('clear');
        $("#CDC_EditTeacher").prop('checked', false);
        $("#CDC_EditRemove").prop('checked', false);
        $("#CDC_EditRoom").prop('checked', false);
        $("#CDC_EditTime").prop('checked', false);
        $("#CD_EditTeacher").addClass('disabled');
        $("#CD_EditRoom").addClass('disabled');
        $("#CDC_EditTimeArea").addClass('disabled');
        $("#CD_EditBegin,#CD_EditEnd").flatpickr({
            enableTime: true,
            inline: true,
            dateFormat: "H:i",
            noCalendar: true,
            time_24hr: true,
            minTime: "06:30",
            maxTime: "23:00",
            defaultDate: new Date().setHours(07, 0, 0)
        });
    }
    function CDC_ChangeRoom () {
        if ($('#CDC_EditRoom').is(":checked")) $("#CD_EditRoom").removeClass('disabled');
        else $("#CD_EditRoom").addClass('disabled');
    }
    function CDC_ChangeTime () {
        if ($('#CDC_EditTime').is(":checked")) $("#CDC_EditTimeArea").removeClass('disabled');
        else $("#CDC_EditTimeArea").addClass('disabled');
    } 
    function CDC_ChangeTeacher () {
        if ($('#CDC_EditTeacher').is(":checked")) $("#CD_EditTeacher").removeClass('disabled');
        else $("#CD_EditTeacher").addClass('disabled');
    }
    function CD_EditSave () {
        let obj = $('#CDTime_scheduler .scheduler.active');
        if (obj != undefined && obj.length != 0) {
 
            for (let i = 0; i < obj.length; i++) {
                let id = obj[i].dataset.id;
                if ($('#CDC_EditRemove').is(":checked")) {
                    delete CD_Eachscheduler[id];
                }
                else {
                    if ($('#CDC_EditTeacher').is(":checked")) {
                        let v = $("#CD_EditTeacher").dropdown('get value') ? Number($("#CD_EditTeacher").dropdown('get value')) : 0;
                        CD_Eachscheduler[id].Teacher = v;
                    }
                    if ($('#CDC_EditRoom').is(":checked")) {
                        let v = $("#CD_EditRoom").dropdown('get value') ? Number($("#CD_EditRoom").dropdown('get value')) : 0;
                        CD_Eachscheduler[id].Manuclass = v;
                    }
 
                    if ($('#CDC_EditTime').is(":checked")) {
 
                        let start = ConvertTime_ToString($("#CD_EditBegin").val());
                        let end = ConvertTime_ToString($("#CD_EditEnd").val());
                        if (start < end) {
                            CD_Eachscheduler[id].TimeStart = start;
                            CD_Eachscheduler[id].TimeEnd = end; 
                        }
                   
                    }

                 
                }
            }
          
            CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
            CourseTime_UpdateSub();
        }
        
        CD_EditClose();
    }
    function CourseTime_Updatecheduler (id, dayint, dow, start, end, teacher, manuclass) {
        let newid = Number(id) || -Object.values(CD_Eachscheduler).slice(-1)[0].ID + 1;
        let e = CourseTime_Spe_scheduler(newid, dayint, dow, start, end, teacher, manuclass, CD_CurrentSub);
        CD_Eachscheduler[newid] = e;
        CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
        CourseTime_UpdateSub();
    }
    function CourseTime_Removecheduler (id) {
        delete CD_Eachscheduler[id];
        CourseTime_Render(CD_Eachscheduler, "CDTime_scheduler");
        CourseTime_UpdateSub();
    }
    function CourseTime_UpdateSub () {
        let tshe = Object.keys(CD_Eachscheduler).length;
        if (tshe == 0) {
            $("#coursecheck_" + CD_CurrentSub).prop('disabled', false);
            $("#coursenumscheare_" + CD_CurrentSub).addClass('d-none');

        }
        else {
            $("#coursenumscheare_" + CD_CurrentSub).removeClass('d-none');
            $("#coursecheck_" + CD_CurrentSub).prop('disabled', true);
        }
        $("#coursenumsche_" + CD_CurrentSub).html(tshe);
        $('#CDTime_SchedulerNumber').html('(Đã xếp lịch : ' + tshe + ')');
        CD_Coursescheduler[CD_CurrentSub] = CD_Eachscheduler;
    }
    function CourseTime_Spe_scheduler (id, dayint, dow, start, end, teacher, manuclass, classID) {
        let e = {};
        e.ID = id;
        e.Dow = dow;
        e.TimeStart = start;
        e.TimeEnd = end;
        e.DayInt = dayint;
        e.Teacher = teacher;
        e.Manuclass = manuclass;
        e.ClassID = classID;
        return e;
    }
     //#endregion

</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<link href="/css/student.css?ver=@ViewData["Time"]" rel="stylesheet" />

<style>
    #CDTime_scheduler .week {
        width: 14%;
        text-align: center;
    }

        #CDTime_scheduler .week .scheduler:hover {
            font-weight: 600;
        }

    #CourseDetail_sub .detail.active i {
        display: block !important;
    }

    .col-w-120 {
        width: 120px;
    }

    #CDTime_scheduler .week .scheduler.active {
        background-color: rgb(var(--bs-primary)) !important;
        color: white !important;
    }

    #CDTime_Popup .flatpickr-calendar {
        box-shadow: none;
        border: none;
    }

    #CDC_EditTimeArea.disabled {
        opacity: 0.2;
        pointer-events: none;
    }
</style>

