@page
@model MLunarCoffee.Pages.Student.Settings.Subjects.SubjectsListModel
@{
    Layout = null;
}
@Html.AntiForgeryToken()


<div class="row">
    <div class="col-12">
        <div id="SL_DivMain">
            <div class="d-lg-flex">
                <div class="card col-w-300 me-2 mx-auto">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="ms-auto my-auto mt-1">
                                <button class="btn btn-dark btn-sm mt-1" onclick="Subjects_NewCourse();">@Local["Thêm khóa học"]</button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-2">
                        <div class="row">
                            <div class="col-12 px-0">
                                <ul class="list-group p-2 pe-0 ps-0" id="SL_Course" style="height: calc(100vh - 280px); overflow: scroll;">
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="flex-grow-1">
                    <div class="card">
                        <div class="card-header pb-0 pe-3">
                            <div class="d-lg-flex">
                                <div class="w-50 col-auto my-auto">
                                    <div class="h-100">
                                        <h6 class="mb-0">@Local["Môn học"]</h6>
                                        <p class="text-sm mb-0 text-dark">@Local["Danh sách môn học"]</p>
                                    </div>
                                </div>
                                <div class="ms-auto my-auto mt-1">
                                    <button class="btn bg-gradient-primary btn-sm mt-1" onclick="Subjects_NewSubject();">@Local["Thêm môn học"]</button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body p-3 pt-1">
                            <div class="row d-none pt-3" id="SL_DivInfoCourse">
                                <div class="col-8 d-flex">
                                    <div class="ps-1">
                                        <img id="SL_AvtCourse" src="/default.png" onerror="Master_OnLoad_Error_Image(this)" class="avatar avatar-sm me-3 mt-1" alt="avatar image">
                                    </div>
                                    <div class="d-flex flex-column justify-content-center">
                                        <h6 id="SL_PsCourse" class="mb-0 text-sm fw-bold"></h6>
                                        <p id="SL_DateCourse" class="text-sm"></p>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <span class="badge ms-auto float-end" id="SL_ColorCourse" style="background-color: #573728;">-</span>
                                </div>
                                <div class="col-12">
                                    <div class="ms-1 px-1 mt-2">
                                        <span class="text-dark">@Local["Tổng tiền môn học"] :</span>
                                        <span class="text-primary fw-bold ms-1" id="SL_SumPriceCourse"></span>
                                    </div>
                                    <div class="ms-1 px-1 mt-2">
                                    </div>
                                </div>
                            </div>
                            <div class="row px-1 pt-4 ShowAll" id="SL_FixHeight">
                                <div class="mobile-responsive pe-1 height-fix" style="overflow-y: scroll;">
                                    <table class="table vt-table mb-0">
                                        <thead>
                                            <tr>
                                                <th class="d-none">ID</th>
                                                <th class="d-none">CourseID</th>
                                                <th>#</th>
                                                <th>@Local["Tên"]</th>
                                                <th>@Local["Màu"]</th>
                                                <th>@Local["Tiền môn học"]</th>
                                                <th>@Local["Xóa"]</th>
                                            </tr>
                                        </thead>
                                        <tbody id="SL_SubjectBody">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="DL_DivDetail">
        </div>
    </div>
</div>
<script>

    //#region // DECLARE & INIT

    let SL_DtUser;
    let SL_DtSubject;
    let SL_DtCourse;
    let SL_CourFocusID = 0;

    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                SL_DtUser = data[0];
                Subjects_LoadList();
            }
        );
    });

    //#endregion


    //#region LOAD

    function Subjects_LoadList () {
        AjaxLoad(url = "/Student/Settings/Subjects/SubjectsList?handler=Loadata"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let dt_Course = data["Table"];
                    let dt_Subjects = data["Table1"];
                    SL_DtCourse = dt_Course;
                    SL_DtSubject = dt_Subjects;
                    fnRenderBlock(dt_Course, "SL_Course"
                        , blocknum = 50
                        , fnrender = Subjects_RenderCourse
                        , fnsuccess = function (e) { }
                        , fnbegin = function (e) { }
                    );
                    fnRenderBlock(dt_Subjects, "SL_SubjectBody"
                        , blocknum = 50
                        , fnrender = Subjects_RenderSubject
                        , fnsuccess = function (e) { }
                        , fnbegin = function (e) { }
                    );
                }
                else {
                    notiError_SW();
                }
            }
        );
    }

    //#endregion

    //#region RENDER
    async function Subjects_RenderCourse (data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            let TotalCourse = 0;
            if (myNode != null) {
                myNode.innerHTML = '';
                if ((data && data.length) > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        TotalCourse = TotalCourse + Number(item.NumSubject);
                        let tr = Subjects_RenderCourseEach(item);
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
                let itemSum = `
                                <li class="list-group-item border-0 d-flex justify-content-between ps-0 mb-1 border-radius-lg SL_btnDetail" data-id="0">
                                <div class="d-flex ms-2">
                                    <div class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center my-auto">
                                        <h6 class="my-auto text-white ">${TotalCourse}</h6>
                                    </div>
                                    <div class="my-auto">
                                        <h6 class="text-dark mb-0">Tổng môn học</h6>
                                    </div>
                                </div>
                            </li>
                        `
                myNode.insertAdjacentHTML("afterbegin", itemSum);
                Subjects_EventCourse();
            }
        });
    }

    function Subjects_RenderCourseEach (item) {
        try {
            let result = `
                    <li class="list-group-item border-0 d-flex justify-content-between ps-0 mb-1 border-radius-lg SL_btnDetail" data-id="${item.ID}">
                        <div class="d-flex ms-2">
                            <div class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center mt-1">
                                <h6 class="my-auto text-white">${item.NumSubject}</h6>
                            </div>
                            <div class="my-auto">
                                <h6 class="text-dark text-sm mb-0 text-decoration-underline SL_btnCourseEdit cursor-pointer" data-id="${item.ID}">${item.Name}</h6>
                                <span class="text-dark text-sm">${formatNumber(item.TotalPrice)}</span>
                            </div>
                        </div>
                        <div class="d-flex">
                            <button class="btn btn-link btn-icon-only btn-rounded btn-sm text-dark my-auto cursor-pointer buttonDeleteClass">
                                <i class="remove icon"></i>
                            </button>
                        </div>
                    </li>
                `;
            return result;
        }
        catch (ex) {
            return "";
        }
    }

    async function Subjects_RenderSubject (data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                if ((data && data.length) > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = Subjects_RenderSubjectEach(item);
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                    Subjects_EventSubject();
                }
            }
        })
    }
    function Subjects_RenderSubjectEach (item) {
        try {
            let tr = `
                    <td class="d-none">${item["ID"]}</td>
                    <td class="d-none">${item["CourseID"]}</td>
                    <td class="vt-number-order text-center"></td>
                    <td><a class="text-decoration-underline fw-bold btn_EditSubject">${item.Name}</a></td>
                    <td><span class="badge ms-auto float-end" style="background-color: ${item.Color};">${item.Color}</span></td>
                    <td class="text-dark">${formatNumber(item.ItemPrice)} <span class="text-sm text-primary fw-bold">x</span> ${formatNumber(item.TimeTeach)} = <span class="text-sm fw-bold">${formatNumber(item.TotalPrice)}</span></td>
                    <td class="text-center">
                        <button class="buttonGrid _tab_control_ btn_DeleteSubject">
                            <i class="vtt-icon vttech-icon-delete"></i>
                        </button>
                    </td>
                `;
            tr = `<tr role="row" class="vt-number">${tr}</tr>`
            return tr;
        }
        catch (ex) {
            return '';
        }
    }

    //#endregion

    //#region //EVENT

    function Subjects_EventCourse () {
        $('#SL_Course .SL_btnCourseEdit').unbind().click(function () {
            let ID = Number($(this).closest('li')[0].getAttribute('data-id'));
            Subjects_EditCourse(ID);
        })

        $('#SL_Course .SL_btnDetail').unbind().click(function () {
            let ID = Number($(this).attr('data-id'));
            $('.SL_btnDetail').removeClass('active');
            $(this).addClass('active');
            SL_CourFocusID = ID;
            Subjects_FillDetail(ID);
        })

        $('#SL_Course .buttonDeleteClass').unbind().click(function () {
            let ID = Number($(this).closest('li')[0].getAttribute('data-id'));
            Subjects_DeleteCourse(ID);
        })

    }
    function Subjects_EventSubject () {
        $('#SL_SubjectBody .btn_EditSubject').unbind().click(function () {
            let SubID = Number($(this).closest('tr').children('td')[0].innerHTML);
            let CourID = Number($(this).closest('tr').children('td')[1].innerHTML);

            Subjects_EditSubject(SubID, CourID);
        })

        $('#SL_SubjectBody .btn_DeleteSubject').unbind().click(function () {
            let IDSubject = Number($(this).closest('tr').children('td')[0].innerHTML);
            let IDCourse = Number($(this).closest('tr').children('td')[1].innerHTML);
            Subjects_DeleteSubject(IDSubject, IDCourse);
        })
    }

    //#endregion

    //#region HANDLE

    function Subjects_FillDetail (ID) {
        let Dt_FillSubject = SL_DtSubject;
        let Dt_FillCourse = '';

        if (ID != 0) {
            Dt_FillSubject = SL_DtSubject.filter(item => item.CourseID == ID);
            Dt_FillCourse = SL_DtCourse.filter(item => item.ID == ID);

            $('#SL_DivInfoCourse').removeClass('d-none');
            let obj = Fun_GetObject_ByID(SL_DtUser, Dt_FillCourse[0].Modified_By);
            $('#SL_AvtCourse').attr('src', (obj.Avatar != '' ? obj.Avatar : Master_Default_Pic));
            $('#SL_PsCourse').html(obj != null ? obj.Name : '-');
            $('#SL_DateCourse').html(GetDateTime_String_DMYHM(Dt_FillCourse[0].Modified));
            $('#SL_SumPriceCourse').html(formatNumber(Dt_FillCourse[0].TotalPrice));
            $('#SL_ColorCourse').html(Dt_FillCourse[0].Color);
            $('#SL_ColorCourse').css("background-color", Dt_FillCourse[0].Color);

            $('#SL_FixHeight').removeClass('ShowAll');
        } else {
            $('#SL_DivInfoCourse').addClass('d-none');
            $('#SL_FixHeight').addClass('ShowAll');
        }
        if (Dt_FillSubject.length == 0) $('#SL_SubjectBody').html('');

        fnRenderBlock(Dt_FillSubject, "SL_SubjectBody"
            , blocknum = 50
            , fnrender = Subjects_RenderSubject
            , fnsuccess = function (e) { }
            , fnbegin = function (e) { }
        );
    }

    //#endregion

    //#region SHOW DETAIL

    //Course
    function Subjects_EditCourse (ID) {
        Subjects_OpenDetail();
        $("#DL_DivDetail").empty();
        $("#DL_DivDetail").load("/Student/Settings/Subjects/ListCourseDetail?CurrentID=" + ID + "&ver=" + versionofWebApplication);
        return false;
    }
    function Subjects_NewCourse () {
        Subjects_OpenDetail();
        $("#DL_DivDetail").empty();
        $("#DL_DivDetail").load("/Student/Settings/Subjects/ListCourseDetail?CurrentID=" + 0 + "&ver=" + versionofWebApplication);
        return false;
    }

    //Subject
    function Subjects_EditSubject (ID, CourseID) {
        Subjects_OpenDetail();
        $("#DL_DivDetail").empty();
        $("#DL_DivDetail").load("/Student/Settings/Subjects/SubjectsDetail?CurrentID=" + ID + "&CourseID=" + CourseID + "&ver=" + versionofWebApplication);
        return false;
    }
    function Subjects_NewSubject () {
        Subjects_OpenDetail();
        $("#DL_DivDetail").empty();
        $("#DL_DivDetail").load("/Student/Settings/Subjects/SubjectsDetail?CurrentID=" + 0 + "&CourseID=" + SL_CourFocusID + "&ver=" + versionofWebApplication);
        return false;
    }

    function Subjects_OpenDetail () {
        $("#SL_DivMain").hide();
        $("#DL_DivDetail").show();
    }
    function Subjects_CloseDetail () {
        $("#SL_DivMain").show();
        $("#DL_DivDetail").hide();
    }
    //#endregion

    //#region // DELETE

    //Course
    function Subjects_DeleteCourse (id) {
        const promise = notiConfirm();
        promise.then(function () {Subjects_DeleteExecute(id);}, function () { });
    }

    function Subjects_DeleteExecute (id) {
        if (id != null && !isNaN(id)) {
            AjaxLoad(url = "/Student/Settings/Subjects/SubjectsList?handler=DeleteItem"
                , data = {'id': id}
                , async = true
                , error = function () {notiError_SW();}
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        Subjects_LoadList();
                    } else if (result == "-1") {
                        notiWarning('@Local["Không thể xóa"]');
                    } else {
                        notiError_SW();
                    }
                }
            );
        }
    }

    function Subjects_DeleteSubject (IDSub, IDCou) {
        const promise = notiConfirm();
        promise.then(function () {Subjects_DeleteExecuteSbj(IDSub, IDCou);}, function () { });
    }

    function Subjects_DeleteExecuteSbj (IDSub, IDCou) {
        if (IDSub != null && !isNaN(IDSub)) {
            AjaxLoad(url = "/Student/Settings/Subjects/SubjectsList?handler=DeleteItemSub"
                , data = {
                    'IDSubject': IDSub
                    , 'IDCourse': IDCou
                }
                , async = true
                , error = function () {notiError_SW();}
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        Subjects_LoadList();
                    } else {
                        notiError_SW();
                    }
                }
            );
        }
    }

    //Subject
    //#endregion


</script>
<style>
    .height-fix {
        height: calc(100vh - 406px);
    }

    .ShowAll .height-fix {
        height: calc(100vh - 294px);
    }
</style>