@page
@model MLunarCoffee.Pages.Student.Settings.Discount.DiscountDetailModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12 px-0">
            <div class="card card-plain mb-2">
                <div class="card-header pt-3 pb-0">
                    <h6 class="mb-0">@Local["Chương trình khuyến mãi"]</h6>
                    <p class="text-sm mb-0">@Local["Chi tiết chương trình khuyến mãi"]</p>
                </div>
                <div class="card-body pt-2" id="DD_SettingFill">
                    <div class="row m-0 form3" id="form3">
                        <div class="field col-12 col-md-6 p-1">
                            <label>@Local["Tên chương trình"]</label>
                            <input id="DD_Name" class="form-control" name="name" type="text">
                        </div>
                        <div class="field col-12 col-md-6 p-1">
                            <label>@Local["Mã chương trình"]</label>
                            <input id="DD_Code" class="form-control" name="code" type="text">
                        </div>
                        <div class="field col-12 col-md-6 p-1">
                            <label>@Local["Từ ngày"]</label>
                            <input id="DD_DateFrom" class="flatpickr form-control" type="text" placeholder="@Local["Từ ngày"] .." />
                        </div>

                        <div class="field col-12 col-md-6 p-1">
                            <label>@Local["Đến ngày"]</label>
                            <input id="DD_DateTo" class="flatpickr form-control" type="text" placeholder="@Local["Đến ngày"] .." />
                        </div>
                        <div class="field col-12 col-md-6 p-1">
                            <div class="form-check text-lg d-inline-flex ps-0">
                                <input type="checkbox" class="form-check-input m-0" id="DD_CkbAllBranch">
                                <label class="form-check-label text-sm font-weight-bold">@Local["Áp dụng tất cả chi nhánh"]</label>
                            </div>
                            <div class="mb-2 ui fluid search selection dropdown multiple form-control" id="DD_Branch">
                                <input type="hidden" name="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg .@Local["Chi nhánh"]</div>
                                <div id="DD_CbbBranch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 p-1">
                            <label class="font-default">@Local["Nội dung"]</label>
                            <input id="DD_Note" class="form-control" type="text">
                        </div>
                    </div>
                </div>

                <div class="card-header p-3 py-0">
                    <div class="d-lg-flex">
                        <div class="ms-auto my-auto mt-1">
                            <ul class="nav nav-pills nav-fill p-1 bg-transparent detaildiscount" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#DD_DiscountAll" role="tab">@Local["Tất cả khóa học"]</a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#DD_DiscountSetting" role="tab">@Local["Áp dụng theo từng khóa học"]</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="nav-wrapper position-relative end-0">
                        <div class="tab-content">
                            <div class="tab-pane fade" id="DD_DiscountAll" role="tabpanel">
                                <div class="row px-2">
                                    <div class="col-12 p-1" style="min-height: 100px;">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" id="DD_CkbChooseAll">
                                            <label class="form-check-label" for="DD_CkbChooseAll">@Local["Áp dụng cho tất cả dịch vụ/sản phẩm"]</label>
                                        </div>

                                        <div class="position-relative">
                                            <input id="DD_AmountAllCourse" class="border-right-0 form-control money" type="text" placeholder="eg .@Local["Giảm giá"]" disabled>
                                            <div class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-5 disabled" id="DD_AllCourse">
                                                <i class="dropdown icon"></i>
                                                <input type="hidden" value="1" />
                                                <div class="default text"></div>
                                                <div id="" class="menu transition hidden" tabindex="-1">
                                                    <div class="item" data-value="1">%</div>
                                                    <div class="item" data-value="2">VND</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="DD_DiscountSetting" role="tabpanel" style="min-height: 100px; ">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" id="DD_CkbChooseSeting">
                                    <label class="form-check-label" for="DD_CkbChooseSeting">@Local["Áp dụng theo nhóm dịch vụ/sản phẩm"]</label>
                                </div>
                                <div id="DD_DivListCourseDetail" class="d-none">
                                    <div class="row px-2">
                                        <div class="col-12 col-sm-5 p-1">
                                            <div class="m-0 my-3 table-responsive" style="height: 500px;">
                                                <table class="table vt-table mb-0" id="">
                                                    <thead>
                                                        <tr>
                                                            <th class="d-none">ID</th>
                                                            <th>@Local["Tên khóa học"]</th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="DD_BodyCourseChoose">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-12 col-sm-7 p-1">
                                            <div class="m-0 my-3 table-responsive" style="height: 500px;">
                                                <table class="table vt-table mb-0" id="">
                                                    <thead>
                                                        <tr>
                                                            <th>@Local["Nhóm dịch vụ/sản phẩm"]</th>
                                                            <th>@Local["Chiết khấu"]</th>
                                                            <th></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="DD_BodyCourseHasChoose">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            @*<div class="card mb-3">

            </div>*@
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" onclick="event.preventDefault();DList_CloseDetail()">@Local["Đóng"]</button>
                        <button id="" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault();return DDetail_ExcuteData()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    //#region //Init
    let DD_CurrentID = Number("@Model.CurrentID");
    let DD_CourseTotal;
    let DD_CourseDetail = [];
    let DD_DTMerge;
    let DD_ArrRule = [
        {
            "type": "all",
            "active": 0,
            "percent": 0,
            "amount": 0,
            "value": [

            ]
        },
        {
            "type": "listcourse",
            "active": 0,
            "percent": 0,
            "amount": 0,
            "value": [
                {
                    "id": 0,
                    "percent": 0,
                    "amount": 0
                }
            ]
        }
    ]
    //#endregion

    //#region //Load
    $(document).ready(function () {
        $("#DD_DateFrom").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            defaultDate: new Date(),
            onChange: function (selectedDates, dateStr, instance) {
                let timeto = $("#DD_DateTo").val();
                let arrtimeto = timeto.split("-");
                let timetonum = Number(arrtimeto[2] + arrtimeto[1] + arrtimeto[0]);

                let timefrom = dateStr;
                let arrtimefrom = timefrom.split("-");
                let timefromnum = Number(arrtimefrom[2] + arrtimefrom[1] + arrtimefrom[0]);

                if (timetonum < timefromnum) {
                    instance.setDate(timeto, true);
                };
            }
        });
        $("#DD_DateTo").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            defaultDate: new Date(),
            onChange: function (selectedDates, dateStr, instance) {

                let timeto = dateStr;
                let arrtimeto = timeto.split("-");
                let timetonum = Number(arrtimeto[2] + arrtimeto[1] + arrtimeto[0]);


                let timefrom = $("#DD_DateFrom").val();
                let arrtimefrom = timefrom.split("-");
                let timefromnum = Number(arrtimefrom[2] + arrtimefrom[1] + arrtimefrom[0]);

                if (timetonum < timefromnum) {
                    instance.setDate(timefrom, true);
                };
            }
        });
        $('.detaildiscount a:first').tab('show');
        DDetail_LoadInit();
        DDetail_Event();
    });

    function DDetail_LoadInit () {
        AjaxLoad(url = "/Student/Settings/Discount/DiscountDetail/?handler=LoadInitialize"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    DD_CourseTotal = data.ListCount;
                    DD_DTMerge = data.ListCount;

                    Load_Combo(data.cbbBranch, "DD_CbbBranch", false);
                    $('#DD_SettingFill .ui.dropdown').dropdown('restore defaults');
                    if (DD_CurrentID != 0) {
                        DDetail_Load();
                    } else {
                        DDetail_MergeData(DD_CourseTotal);
                    }
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function DDetail_Load () {
        AjaxLoad(url = "/Student/Settings/Discount/DiscountDetail/?handler=LoadDetail"
            , data = {"CurrentID": DD_CurrentID}
            , async = true
            , error = function () {notiError_SW()}
            , success = function (result) {
                if (result != '0') {
                    let data = JSON.parse(result);
                    let dataRule = JSON.parse(data[0]["Rule"]);
                    DD_CourseDetail = JSON.parse(data[0]["Rule"])[1]["value"];
                    DDetail_MergeData(DD_CourseTotal);

                    $("#DD_Name").val(data[0]["Name"]);
                    $("#DD_Code").val(data[0]["Code"]);
                    $("#DD_Note").val(data[0]["Note"]);
                    $("#DD_DateFrom").val(ConvertDateTimeUTC_DMY(data[0]["DateFrom"]));
                    $("#DD_DateTo").val(ConvertDateTimeUTC_DMY(data[0]["DateTo"]));

                    if (data[0].IsAllBranch != 0) {
                        $("#DD_CkbAllBranch").prop("checked", true);
                        $("#DD_CkbAllBranch").trigger('change');
                    }
                    else {
                        if (data[0]["BranchToken"] != undefined && data[0]["BranchToken"] != null && data[0]["BranchToken"] != "") {
                            $('#DD_Branch').dropdown('refresh');
                            $('#DD_Branch').dropdown('set selected', data[0]["BranchToken"].split(","));
                        }
                    }

                    if (Number(dataRule[0]['active']) == 1) {
                        $("#DD_CkbChooseAll").prop("checked", true);
                        $("#DD_CkbChooseAll").trigger('change');
                        $('#DD_AllCourse').dropdown('refresh');
                        $('#DD_AllCourse').dropdown('set selected', (dataRule[0]['amount'] != 0 ? 2 : 1));
                        $('#DD_AmountAllCourse').val(dataRule[0]['amount'] != 0 ? dataRule[0]['amount'] : dataRule[0]['percent']);
                    } else {
                        $("#DD_CkbChooseAll").prop("checked", false);
                    }

                    if (Number(dataRule[1]['active']) == 1) {
                        $('#DD_CkbChooseSeting').prop("checked", true);
                        $('#DD_CkbChooseSeting').trigger('change');
                    } else {
                        $('#DD_CkbChooseSeting').prop("checked", false);
                    }
                } else {
                    notiError();
                }
            }, sender = null
            , before = function (e) { }
            , complete = function (e) { }
        );
    }

    function DDetail_MergeData (data) {
        if (data && data.length > 0) {
            for (let i = 0; i < data.length; i++) {
                let Item_ComboCourse = data[i];
                DD_DTMerge[i].Type = 0;
                DD_DTMerge[i].amount = 0;
                DD_DTMerge[i].percent = 0;
                if (DD_CourseDetail && DD_CourseDetail.length > 0) {
                    for (let j = 0; j < DD_CourseDetail.length; j++) {
                        let Item_DetailCourse = DD_CourseDetail[j];
                        if (Item_ComboCourse['ID'] == Item_DetailCourse['id']) {
                            DD_DTMerge[i].Type = 1;
                            DD_DTMerge[i].amount = Item_DetailCourse["amount"];
                            DD_DTMerge[i].percent = Item_DetailCourse["percent"];
                        }
                    }
                }
            }
            DDetail_RenderCourseTotal(DD_DTMerge, "DD_BodyCourseChoose");
            DDetail_RenderCourseDetail(DD_DTMerge, "DD_BodyCourseHasChoose");
        }
    }
    //#endregion

    //#region //Render OptionListCourse

    async function DDetail_RenderCourseTotal (data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            if (item['Type'] == 0) {
                                let tr = DDetail_REachCourseTotal(item);
                                myNode.insertAdjacentHTML('beforeend', tr);
                            }
                        }
                    }
                    DDetail_EvCourseTotal();
                }
                resolve();
            }, 100);
        })
    }

    function DDetail_REachCourseTotal (value) {
        try {
            let result = '';
            result = `
                <td class="d-none">${value['ID']}</td>
                <td>${value['Name']}</td>
                <td style="width: 40px"><button class="buttonGrid btn-Add"><i class="text-dark vtt-icon vttech-icon-add"></i></button></td>
            `
            result = `<tr class="vt-number eventRowDiscount" data-id="${value["ID"]}" role="row">${result}</tr>`
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    async function DDetail_RenderCourseDetail (data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                let myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            if (item["Type"] == 1) {
                                let tr = DDetail_REachCourseDetail(item);
                                myNode.insertAdjacentHTML('beforeend', tr);
                                $('#DD_ValueAmount_' + item.ID).val(item.percent == 0 ? item.amount : item.percent);
                                $('#DD_TypeAmount_' + item.ID).dropdown("set selected", item.percent == 0 ? 2 : 1);
                            }
                        }
                        $(".ui.dropdown").dropdown();
                    }
                    DDetail_EvCourseDetail();
                }
                resolve();
            }, 100);
        })
    }

    function DDetail_REachCourseDetail (value) {
        try {
            let result = '';
            result = `
                <td class="d-none">${value["ID"]}</td>
                <td>${value["Name"]}</td>
                <td>
                    <div class="position-relative">
                        <input type="number" class="border-right-0 form-control money EventChangeValue" id="DD_ValueAmount_${value["ID"]}" placeholder="@Local["Giảm giá"]"/>
                        <div class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-5 EventChangeValue" id="DD_TypeAmount_${value["ID"]}">
                            <i class="dropdown icon"></i>
                            <input type="hidden" name="name" value="1"/>
                            <div class="default text"></div>
                            <div class="menu transition hidden" tabindex="-1">
                                <div class="item" data-value="1">%</div>
                                <div class="item" data-value="2">VND</div>
                            </div>
                        </div>
                    </div>
                </td>
                <td class="text-center">
                    <button class="buttonGrid btn-delete"><i class="vtt-icon vttech-icon-delete"></i></button>
                </td>
            `
            result = `<tr class="eventRowDetail" data-id="${value["ID"]}">${result}</tr>`
            return result;
        } catch (ex) {
            return '';
        }
    }

    //#endregion

    //#region //Event

    //Event Init
    function DDetail_Event () {
        $('#DD_CkbAllBranch').on('change', function () {
            if ($(this).is(':checked')) {
                $('#DD_Branch').addClass('disabled');
            } else $('#DD_Branch').removeClass('disabled');
        })
        $(".ui.dropdown").dropdown();
        $('#DD_CkbChooseAll').on('change', function () {
            if ($(this).is(':checked')) {
                $('#DD_AmountAllCourse').prop("disabled", false);
                $('#DD_AllCourse').removeClass('disabled');
            } else {
                $('#DD_AmountAllCourse').prop("disabled", true);
                $('#DD_AllCourse').addClass('disabled');
            }
        })
        $('#DD_CkbChooseSeting').on('change', function () {
            if ($(this).is(':checked')) {
                $('#DD_DivListCourseDetail').removeClass('d-none');
            } else {
                $('#DD_DivListCourseDetail').addClass('d-none');
            }
        })
    }

    //#Event Total
    function DDetail_EvCourseTotal () {
        $('#DD_BodyCourseChoose .btn-Add').unbind('click').click(function () {
            let ID = Number($(this).closest('tr')[0].childNodes[1].innerHTML);
            let Data;
            let DataJson = {};
            //Render
            $(".eventRowDiscount[data-id=" + ID + "]").remove();
            Data = DD_DTMerge.filter(function (item) {return item.ID == ID});
            $("#DD_BodyCourseHasChoose").append(DDetail_REachCourseDetail(Data[0]));
            DDetail_EvCourseDetail();
            $(".ui.dropdown").dropdown();
            //Data
            DataJson.id = ID;
            DataJson.percent = 0;
            DataJson.amount = 0;
            DD_CourseDetail.push(DataJson);
        })
    }

    //#Event Detail

    function DDetail_EvCourseDetail () {
        $('#DD_BodyCourseHasChoose .btn-delete').unbind('click').click(function () {
            let ID = Number($(this).closest('tr')[0].childNodes[1].innerHTML);
            let Data;
            //Render
            $(".eventRowDetail[data-id=" + ID + "]").remove();
            Data = DD_DTMerge.filter(function (item) {return item.ID == ID});
            $("#DD_BodyCourseChoose").append(DDetail_REachCourseTotal(Data[0]));
            DDetail_EvCourseTotal();

            //Data
            DD_CourseDetail = DD_CourseDetail.filter(val => !(val.id == ID));
        })



        $('#DD_BodyCourseHasChoose .EventChangeValue').unbind('change').change(function () {
            let ID = Number($(this).closest('tr')[0].childNodes[1].innerHTML);
            let _TypeAmount = $("#DD_TypeAmount_" + ID).dropdown("get value") ? Number($("#DD_TypeAmount_" + ID).dropdown("get value")) : 0;
            let _ValueAmount = $("#DD_ValueAmount_" + ID).val() ? Number($("#DD_ValueAmount_" + ID).val()) : 0;

            if (_TypeAmount == 1) {
                if (_ValueAmount < 0 || _ValueAmount > 100) {
                    $("#DD_ValueAmount_" + ID).css("background-color", "rgb(255 216 216)")
                }
                else {
                    $("#DD_ValueAmount_" + ID).css("background-color", "")
                }
            } else {
                if (_ValueAmount < 0) {
                    $("#DD_ValueAmount_" + ID).css("background-color", "rgb(255 216 216)")
                }
                else {
                    $("#DD_ValueAmount_" + ID).css("background-color", "");
                }
            }
            if (_TypeAmount == 1) {
                DD_CourseDetail.map(obj => {
                    if (obj.id == ID) {
                        obj.percent = _ValueAmount;
                        obj.amount = 0;
                    }
                })
            }
            else {
                DD_CourseDetail.map(obj => {
                    if (obj.id == ID) {
                        obj.percent = 0;
                        obj.amount = _ValueAmount;
                    }
                })
            }
        })
    }
    //#endregigon



    //#region //Executed

    function DDetail_ExcuteData () {
        let DT = {};

        DT.Code = $('#DD_Code').val() ? $('#DD_Code').val().trim() : '';
        DT.Name = $('#DD_Name').val() ? $('#DD_Name').val().trim() : '';

        DT.DateFrom = $('#DD_DateFrom').val() ? $('#DD_DateFrom').val() : new Date();
        DT.DateTo = $('#DD_DateTo').val() ? $('#DD_DateTo').val() : new Date();
        DDetail_GetValueRule();
        DDetail_CheckValue();

        if ($("#DD_CkbAllBranch").is(":checked") == false && $('#DD_Branch').dropdown('get value') == "") {
            $('#textShowMessage').html('@Local["Chưa chọn chi nhánh"]');
        }
        if ($('#DD_CkbAllBranch').is(':checked')) {
            DT.BranchToken = '';
            DT.IsAllBranch = 1;
        } else {
            DT.BranchToken = $('#DD_Branch').dropdown('get value') ? ',' + $('#DD_Branch').dropdown('get value') : '';
            DT.IsAllBranch = 0;
        }
        DT.Note = $('#DD_Note').val() ? $('#DD_Note').val() : '';
        DT.Rule = JSON.stringify(DD_ArrRule);


        $('#form3').form('validate form');
        if ($('#form3').form('is valid')) {
            if (document.getElementById("textShowMessage").innerHTML == "") {
                AjaxLoad(url = "/Student/Settings/Discount/DiscountDetail/?handler=ExcuteData"
                    , data = {
                        "CurrentId": DD_CurrentID
                        , "Data": JSON.stringify(DT)
                    }
                    , async = true
                    , error = null
                    , success = function (result) {
                        if (result != "0") {
                            let data = JSON.parse(result);
                            if (data[0]['RESULT'] == 1) {
                                DList_Load();
                                notiSuccess();
                                DList_CloseDetail();
                            } else {
                                notiError('@Local["Không đặt trùng tên và mã với khuyến mãi đã có"]');
                            }
                        } else {
                            notiError_SW();
                        }
                    }
                );
            }
        }
    }
    function DDetail_GetValueRule () {
        let TypeAllCourse = $('#DD_AllCourse').dropdown('get value') ? Number($('#DD_AllCourse').dropdown('get value')) : '';
        let AmountAllCourse = $('#DD_AmountAllCourse').val() ? Number($('#DD_AmountAllCourse').val()) : 0;


        if ($('#DD_CkbChooseAll').is(':checked')) {
            DD_ArrRule[0]['active'] = 1;
            DD_ArrRule[0]['percent'] = (TypeAllCourse == 1 ? AmountAllCourse : 0);
            DD_ArrRule[0]['amount'] = (TypeAllCourse == 2 ? AmountAllCourse : 0);
        } else {
            DD_ArrRule[0]['active'] = 0;
            DD_ArrRule[0]['percent'] = 0;
            DD_ArrRule[0]['amount'] = 0;
        }

        if ($('#DD_CkbChooseSeting').is(':checked')) {
            DD_ArrRule[1]['active'] = 1;
            DD_ArrRule[1]['value'] = DD_CourseDetail;
        } else {
            DD_ArrRule[1]['active'] = 0;
            DD_ArrRule[1]['value'] = [];
        }
    }
    function DDetail_CheckValue () {
        $('#textShowMessage').html('');
        if ($('#DD_CkbChooseAll').is(':checked')) {
            let ValueAll = $('#DD_AmountAllCourse').val() ? Number($('#DD_AmountAllCourse').val()) : 0;
            let TypeAll = $('#DD_AllCourse').dropdown('get value') ? Number($('#DD_AllCourse').dropdown('get value')) : 0;

            if (TypeAll == 1 && 0 < ValueAll && ValueAll <= 100) {
                $('#DD_AmountAllCourse').css('background-color', '');
            } else if (TypeAll == 2 && ValueAll > 0) {
                $('#DD_AmountAllCourse').css('background-color', '');
            } else {
                $('#textShowMessage').html('@Local["Sai định dạng"]');
                $('#DD_AmountAllCourse').css('background-color', 'rgb(255 216 216)');
            }
        } else {
            $('#DD_AmountAllCourse').css('background-color', '');
        }

        if ($('#DD_CkbChooseSeting').is(':checked')) {
            if (DD_CourseDetail && DD_CourseDetail.length > 0) {
                for (let i = 0; i < DD_CourseDetail.length; i++) {
                    let AmountDetail = Number(DD_CourseDetail[i]['amount']);
                    let PercentDetail = Number(DD_CourseDetail[i]['percent']);

                    if (PercentDetail < 0 || AmountDetail < 0 || PercentDetail > 100 || (PercentDetail == 0 && AmountDetail == 0)) {
                    $("#DD_ValueAmount_" + DD_CourseDetail[i]['id']).css('background-color', 'rgb(255 216 216)');
                    $('#textShowMessage').html('@Local["Sai định dạng"]');
                }
                }
            } else {
                $('#textShowMessage').html('@Local["Kiểm tra dữ liệu"]');
            }
        }

    }


    //#endregion

</script>
<script>js_require('/js/customjs/custom-validation.js');</script>