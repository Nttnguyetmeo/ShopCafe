@page
@model MLunarCoffee.Pages.Student.Teacher.TeacherListModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()

<div class="row" id="Teacher_Main">
    <div class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0">
                <div class="left">
                    <h6 class="mb-0">@Local["Danh sách giảng viên"]</h6>
                    <p class="text-sm mb-0">@Local["Danh sách cấu hình giảng viên"]</p>
                </div>
                <div class="right">
                    <div class="form-check mt-2 me-3">
                        <input id="TeacherDisable" class="form-check-input pr-2" type="checkbox">
                        <label>@Local["Giáo viên ẩn"]</label>
                    </div>
                    <button id="btn_addTeacher" class="btn bg-gradient-primary btn-sm mt-1" onclick="return Teacher_AddNew()">@Local["Thêm mới"]</button>
                </div>
            </div>
            <div class="card-body pt-2 ">
                <div class="m-0 vt-header-sticky mobile-responsive">
                    @*<div id="" class="waitingdiv text-center" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                    </div>
                    </div>*@
                    <table id="dtContentTeacher" class="table vt-table mb-0">
                        <thead class="hiddenCollapse">
                            <tr role="row">
                                <th class="d-none">ID</th>
                                <th style="width: 40px;">#</th>
                                <th class="col-3">@Local["Giảng viên"]</th>
                                <th>@Local["Biệt hiệu"]</th>
                                <th>@Local["Điện thoại"]</th>
                                <th>@Local["Địa chỉ"]</th>
                                <th>@Local["Ghi chú"]</th>
                                <th class="col-2">@Local["Người tạo"]</th>
                                <th style="width: 40px;">@Local["Ẩn"]</th>
                            </tr>
                        </thead>
                        <tbody id="dtContentTeacherbody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="Teacher_Detail"></div>



<script>

    // DECLARE & INIT
    //#region
    let DataEmployee;
    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee]
            , function (data) {
                DataEmployee = data[0];
                Teacher_LoadList();
            });
    });
    //#endregion

    // LOAD LIST
    //#region

    function Teacher_LoadList () {
        AjaxLoad(url = "/Student/Teacher/TeacherList?handler=Loadata"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    Teacher_RenderList(data, "dtContentTeacherbody");
                }
                else {
                    notiError_SW();
                }
            }
        );
    }
    //#endregion

    // DELETE
    //#region

    function Teacher_Delete (id) {
        const promise = notiConfirm();
        promise.then(function () {Teacher_DeleteExecute(id);}, function () { });
    }
    function Teacher_DeleteExecute (id) {
        if (id != null && !isNaN(id)) {
            AjaxLoad(url = "/Student/Teacher/TeacherList?handler=DeleteItem"
                , data = {'id': id}
                , async = true
                , error = function () {notiError_SW();}
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        Teacher_LoadList();
                    } else {
                        notiError_SW();
                    }
                }
            );
        }
    }
    function Teacher_Disable (id) {
        const promise = notiConfirm();
        promise.then(function () {Teacher_ExecuteDisable(id);}, function () { });
    }

    function Teacher_ExecuteDisable (id) {
        AjaxLoad(url = "/Student/Teacher/TeacherList/?handler=DisableItem"
            , data = {CurrentID: id}, async = false, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    Teacher_LoadList();
                }
                else {
                    notiError_SW();
                }
            });
    }
    //#endregion

    // RENDER
    //#region

    async function Teacher_RenderList (data, id) {
        new Promise((resolve) => {
            let myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if ((data && data.length) > 0) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        let objCreated = DataEmployee[item.CreatedBy] != undefined ? DataEmployee[item.CreatedBy] : '';

                        let tr = `<td class="d-none Teacher_ID">${item.ID}</td>
                                        <td class="vt-number-order"></td>
                                        <td>
                                            <div class="d-flex">
                                                <div class="icon icon-shape icon-sm me-2 text-center align-items-center">
                                                    <img class="avatar avatar-xs mt-2" src="${item.Avatar == '' ? Master_Default_Pic : item.Avatar}" alt="label-image">
                                                </div>
                                                <div class="d-flex flex-column">
                                                    <a href="#" class="text-decoration-underline fw-bold buttonEditClass">${item.Name}</a>
                                                    <span class="text-xs">${item.Code}</span>
                                                </div>
                                            </div>
                                        </td>
                                        <td>${item.Alias}</td>
                                        <td>${item.Phone}</td>
                                        <td>${item.Address}</td>
                                        <td>${item.Note}</td>
                                        <td>
                                            <div class="d-flex">
                                                <div class="icon icon-shape icon-sm me-2 text-center align-items-center">
                                                    <img class="avatar avatar-xs mt-2" src="${objCreated.Avatar != '' ? objCreated.Avatar : Master_Default_Pic}" alt="label-image">
                                                </div>
                                                <div class="d-flex flex-column">
                                                    <h6 class="mb-0 text-dark text-sm">${objCreated.Name}</h6>
                                                    <span class="text-xs">${ConvertDateTimeUTC_YMD(item.Created)}</span>
                                                </div>
                                            </div>
                                        </td>
                                       <td>
                                          <div class="text-nowrap cursor-pointer">
                                            ${Teacher_RenderButton(item.ID, item.IsDisabled)}
                                          </div>
                                      </td>
                                `
                        stringContent += `<tr class="vt-number ${item.IsDisabled === 1 ? "table-active" : ""}" role="row">${tr}</tr>`;

                    }
                    myNode.innerHTML = stringContent;
                }
                Teacher_Event();
            }
        });
    }
    function Teacher_RenderButton (id, isdisabled) {
        try {
            let buttons = [];
            //buttons.push('<button class="buttonGrid" value="' + id + '">'
            //    + '<i data-id="' + id + '" class="buttonDeleteClass vtt-icon vttech-icon-delete"></i>'
            //    + '</button>');
            buttons.push('<button class="buttonGrid" value="' + id + '">'
                + ((isdisabled === 1)
                    ? '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-hide"></i>'
                    : '<i data-id="' + id + '" class="buttonDisabledClass vtt-icon vttech-icon-nohide"></i>')
                + '</button>');
            return Render_Button_Grid(buttons);
        }
        catch (ex) {
            return '';
        }
    }
    //#endregion

    // EVENT
    //#region

    function Teacher_Event () {
        $('#dtContentTeacherbody .buttonEditClass').on('click', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            Teacher_Edit(ID);
        });
        //$('#dtContentTeacherbody .buttonDeleteClass').on('click', function () {
        //    let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
        //    Teacher_Delete(ID);
        //});
        $('#dtContentTeacher tbody').on('click', '.buttonDisabledClass', function () {
            let ID = Number($(this).closest('tr').find('.Teacher_ID')[0].innerHTML);
            let flag = $(this).hasClass('vttech-icon-nohide');
            Teacher_Disable(ID, flag);
        });
        $('#TeacherDisable').unbind().change(function (event) {
            if ($('#TeacherDisable').is(':checked'))
                $('#dtContentTeacher').addClass('teacher-showdis');
            else $('#dtContentTeacher').removeClass('teacher-showdis');
        });
    }


    //#endregion

    // OTHER
    //#region

    function Teacher_AddNew () {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Student/Teacher/TeacherDetail?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;

    }

    function Teacher_Edit (ID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Student/Teacher/TeacherDetail?CurrentID=" + ID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;

    }

    function Teacher_OpenDetail () {
        $("#Teacher_Main").hide();
        $("#Teacher_Detail").show();
    }

    function Teacher_CloseDetail () {
        $("#Teacher_Main").show();
        $("#Teacher_Detail").hide();
    }

            //#endregion

</script>
<style>
    #dtContentTeacher .table-active {
        display: none;
    }

    #dtContentTeacher.teacher-showdis .table-active {
        display: table-row !important;
    }
</style>