@page
@model MLunarCoffee.Pages.Student.General.Desk
@{
    Layout = null;
}
@Html.AntiForgeryToken()
<div class="h-100">
    <section class="py-3 pt-4">
        <div class="row">
            <div class="col-md-8 me-auto text-left">
                <h6 class="fw-bold mb-0">@Local["Mới cập nhật"]</h6>
                <p>@Local["Danh sách hóa đơn, ghi danh học viên theo chi nhánh"]</p>
            </div>
            <div class="col-md-4 me-auto text-left">
                <div class="ui fluid search selection dropdown form-control" id="Studesk_branch" onchange="event.preventDefault(); return Studesk_allload();">
                    <input type="hidden" name="statusType" />
                    <input class="search" autocomplete="off" tabindex="0" />
                    <div class="default text">eg. branch</div>
                    <div id="cbbStudesk_branch" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="row">
        <div class="col-sm-12 col-md-6 col-lg-5  mt-3 mt-md-0 mt-lg-0">
            <div class="card h-100">
                <div class="card-header p-3">
                    <div class="d-flex align-items-center">
                        <div class="align-items-center">
                            <h6 class="fw-bold mb-0">@Local["Hóa đơn"]</h6>
                        </div>
                        <div class="ms-auto text-end">
                            <a class="mx-1 text-sm cursor-pointer" target="_blank" href="/Student/General/Course/Payment/PaymentList">
                                @Local["Xem thêm"]
                            </a>
                            <div class="icon-hover" onclick="event.preventDefault(); return Studesk_payload();" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Refresh">
                                <i class="fas fa-sync-alt text-sm text-dark"></i>
                            </div>
                        </div>
                    </div>
                    <hr class="horizontal dark mt-2 mb-1">
                </div>
                <div class="card-body p-3 pt-0 position-relative "  >
                    <div id="Studesk_paywait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <ul class="list-group" id="studesk_paylist">
                    </ul>
                    <div id="Studesk_paypopup" class="position-absolute collapse" style="z-index: 2000">
                        <div class="col-w-200 rounded-3 shadow-lg">
                            <ul class="nav nav-pills flex-column bg-white border-radius-lg py-3 px-2">
                                <li class="nav-item" role="presentation">
                                    <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Studesk_printpayment();">@Local["In hóa đơn"]</a>
                                </li>
                                <hr class="horizontal dark my-0 opacity-2" />
                                <li class="nav-item" role="presentation">
                                    <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Studesk_sendmailpayment();">Email</a>
                                </li>
                                <hr class="horizontal dark my-0 opacity-2" />
                                <li class="nav-item" role="presentation">
                                    <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Studesk_SmsHandle();">SMS</a>
                                </li>
                                <hr class="horizontal dark my-0 opacity-2" />
                                <li class="nav-item" role="presentation">
                                    <a class="text-sm nav-link cursor-pointer" data-hover="" onclick="event.preventDefault(); return Studesk_paydelete();">@Local["Xóa hóa đơn"]</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-6 col-lg-4  mt-3 mt-md-0 mt-lg-0">
            <div class="card h-100">
                <div class="card-header p-3">
                    <div class="d-flex align-items-center">
                        <div class="align-items-center">
                            <h6 class="fw-bold mb-0">@Local["Ghi danh"]</h6>
                        </div>
                        <div class="ms-auto text-end">
                            <div class="icon-hover" onclick="event.preventDefault(); return Studesk_courseload();" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Refresh">
                                <i class="fas fa-sync-alt text-sm text-dark"></i>
                            </div>
                        </div>
                    </div>
                    <hr class="horizontal dark mt-2 mb-1">
                </div>
                <div class="card-body p-3 pt-0 position-relative">
                    <div id="Studesk_coursewait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div id="studesk_courselist">
                    </div>

                </div>
            </div>
        </div>
        <div class="col-sm-12 col-md-12 col-lg-3 mt-3 mt-lg-0">
            <div class="row ">
                <div class="col-md-6">
                    <div class="card">
                        <div class="p-3 card-body text-center">
                            <h2 class="text-gradient fw-bold text-primary">
                                <span id="Studesk_paytotal">0</span>
                                <span id="Studesk_paylabel" class="text-lg ms-n2"></span>
                            </h2>
                            <h6 class="mb-0 text-sm font-weight-bolder">@Local["Thanh toán"]</h6>
                            <p class="opacity-8 mb-0 text-sm">@Local["Trong ngày"]</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 mt-md-0 mt-4">
                    <div class="card">
                        <div class="card-body p-3 text-center">
                            <h2 class="text-gradient fw-bold text-primary">
                                <span id="Studesk_coursetotal">0</span>
                                <span class="text-lg ms-n1">@Local["HV"]</span>
                            </h2>
                            <h6 class="mb-0 text-sm font-weight-bolder">@Local["Học viên"]</h6>
                            <p class="opacity-8 mb-0 text-sm">@Local["Ghi danh"]</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card mt-3">
                <div class="card-header p-3">
                    <div class="d-flex align-items-center">
                        <div class="d-flex align-items-center justify-content-center">
                            <div class="icon-hover cursor-pointer" id="studesk_classpreview"
                                 data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Prev">
                                <i class="fas fa-chevron-left text-sm text-dark"></i>
                            </div>

                            <h6 id="studesk_classtime" class="fw-bold text-dark mb-0 mx-2"> </h6>
                            <div class="icon-hover cursor-pointer" id="studesk_classnext"
                                 data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Next">
                                <i class="fas fa-chevron-right text-sm text-dark"></i>
                            </div>

                        </div>

                        <div class="ms-auto text-end">

                            <div class="icon-hover" onclick="event.preventDefault(); return Studesk_classreload();" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-original-title="Refresh">
                                <i class="fas fa-sync-alt text-sm text-dark"></i>
                            </div>
                        </div>
                    </div>
                    <hr class="horizontal dark mt-2 mb-1">
                </div>
                <div class="card-body p-3 pt-0 position-relative">
                    <div id="Studesk_classwait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>

                    </div>
                    <div class="d-flex ">
                        <div class="align-items-center justify-content-center">
                            <i class="fas fs-1 text-gradient text-success fa-stopwatch me-3"></i>
                        </div>
                        <div class="my-auto">
                            <p class="text-dark text-sm ">
                                <b id="Studesk_classt_on"></b> @Local["Buổi học đã dạy"] /
                                <b id="Studesk_classt_all"></b> @Local["Buổi học"]"
                                <a class="mx-1 text-sm cursor-pointer" target="_blank" href="/student/trains/classtime">
                                    @Local["Xem thêm"]
                                </a>
                            </p>

                        </div>
                    </div>

                    <hr class="horizontal dark mt-2 mb-1">
                    <div class="overflow-auto" style="height:200px;">
                        <div id="studesk_classlist">
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<script type="text/javascript">

    var Studesk_flag = 0;
    var Studesk_paycurrent = 0;
    var Studesk_paycurrentCode = '';
    var Studesk_classdayindex = 0;
    var Studesk_PayName = '';
    var Studesk_PayPhone = '';
    let Studesk_DTPay;

    $(document).ready(function () {
        Studesk_Ini();
        Studesk_flag = 1;
        Studesk_allload();
    });

    function Studesk_allload () {
        Studesk_payload();
        Studesk_courseload();
        Studesk_classload();
    }

    function Studesk_Ini() {
        let dataBranch = Object.values(stugen_Branch);
        Load_Combo(dataBranch, 'cbbStudesk_branch', true);
        $("#Studesk_branch").dropdown('refresh')
        $("#Studesk_branch").dropdown('set selected', Master_branchID);
    }

    //#region // payment list

    function Studesk_payload () {
        if (Studesk_flag == 1) {
            let branchID = Number($("#Studesk_branch").dropdown('get value') ? Number($("#Studesk_branch").dropdown('get value')) : 0);
            AjaxLoad(url = "/Student/General/Desk?handler=LoadPayment"
                , data = {"branchID": branchID}
                , async = true
                , error = function () {notiError_SW()}
                , success = function (result) {
                    let data = JSON.parse(result);
                    let totalpaid = data.Table[0].Total;

                    if (totalpaid < 1000000) {
                        Count_Up("Studesk_paytotal", formatNumber(Number(Math.round(totalpaid / 1000))));
                        $('#Studesk_paylabel').html('ng');
                    }
                    else {
                        Count_Up("Studesk_paytotal", formatNumber(Number(Math.round(totalpaid / 1000000))));
                        $('#Studesk_paylabel').html('tr');
                    }
                    Studesk_DTPay = data.Table1;
                    Studesk_payrender(data.Table1, "studesk_paylist");
                }
                , sender = null
                , before = function () {
                    $("#Studesk_paywait").show();
                }
                , complete = function (e) {
                    $("#Studesk_paywait").hide();
                }
            );
        }
    }

    async function Studesk_payrender (data, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = "";
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let tr = '';
                        if (data[i] != undefined) {
                            tr = Studesk_payrenderEach(data[i], i == data.length - 1)
                        }
                        document.getElementById(id).insertAdjacentHTML('beforeend', tr);
                    }
                }
            }
            Studesk_payevent();
            resolve();
        })
    }

    function Studesk_payrenderEach (item, last) {
        let tr =
            `<li id="stupayitem_${item.ID}" class="list-group-item border-0 justify-content-between ps-0 pb-0 border-radius-lg">
                <div class="d-flex">
                    <div class="d-flex align-items-center">
                        <a data-id=${item.ID} data-name="${item.Stuname}" class="stupay mb-0 me-3 p-3 btn-sm d-flex align-items-center justify-content-center">
                           <i class="text-lg fw-bold fas fa-ellipsis-v" aria-hidden="true"></i>
                        </a>
                        <div class="d-flex flex-column">
                            <h6 class="mb-0 text-dark fw-bold text-sm">${item.Code}</h6>
                            <span class="text-sm text-dark">${item.Stucode + ' - ' + item.Stuname}</span>
                        </div>
                    </div>
                    <div class=" align-items-center  ms-auto">
                        <h6 class="mb-0 text-dark fw-bold text-sm">${formatNumber(item.Amount)}</h6>
                        <span class="text-sm">${formatDateToDMYHM(item.Created)}</span>
                    </div>
                </div>
                ${(!last) ? `<hr class="horizontal dark mt-2 mb-1">` : ``}
            </li>
            `
        return tr;
    }

    function Studesk_payevent () {
        $('#studesk_paylist .stupay').unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation()
            let _id = $(this).attr('data-id');
            if (_id && !isNaN(_id) && _id != 0) {
                let dtFill = Studesk_DTPay.filter((v) => v["ID"] == _id);
                Studesk_PayName = dtFill[0]["Stuname"];
                Studesk_PayPhone = dtFill[0]["Phone"];
                Studesk_paycurrentCode = dtFill[0]["Code"];
                Studesk_paycurrent = _id;
                debugger

                let block = $("#stupayitem_" + _id);
                if (block && block.length != 0) {
                    let { top, left } = block.position();
                    let Popup_Left = left;
                    $("#Studesk_paypopup").css({
                        "top": top,
                        "left": Popup_Left + 50
                    }).animate({
                        "left": Popup_Left + 40
                    }).addClass('show');
                }
            }


        });
    }

    function Studesk_paydelete() {
        if (Studesk_paycurrent && Studesk_paycurrent != 0) {
            const promise = notiConfirm();
            promise.then(function () { Studesk_payexecutedelete(Studesk_paycurrent); }, function () { });
        }
    }

    function Studesk_payexecutedelete(id) {
        AjaxLoad(url = "/Student/General/Desk?handler=DeletePayment"
            , data = { CurrentID: id }
            , async = true
            , error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    let rowItem = $("#stupayitem_" + id);
                    if (rowItem.length != 0) rowItem.remove();
                }
                else {
                    notiError_SW();
                }
            }
        );
    }

    function Studesk_printpayment() {
        if (Studesk_paycurrent && Studesk_paycurrent != 0) {
            syslog_stpaid('p', Studesk_paycurrentCode)
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load('/Print/print?Type=invoice_student&DetailID=' + Studesk_paycurrent);
            $('#DetailModal').modal('show');
        }
    }

    function Studesk_SmsHandle () {
        if (Studesk_paycurrent && Studesk_paycurrent != 0) {
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Sms/SmsDetail?Type=" + "SMSContentAfterPaymentStudent" + "&PaymentStudentID=" + Studesk_paycurrent + "&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
        }
    }

    function Studesk_sendmailpayment() {
        if (Studesk_paycurrent && Studesk_paycurrent != 0 && typeof Genstu_MailTemplate === 'function') {
            Genstu_MailTemplate("ST_Email_AfterPayment", 0, Studesk_paycurrent)
        }
    }

    //#endregion

    //#region // Corse
    function Studesk_courseload () {
        if (Studesk_flag == 1) {
            let branchID = Number($("#Studesk_branch").dropdown('get value') ? Number($("#Studesk_branch").dropdown('get value')) : 0);
            AjaxLoad(url = "/Student/General/Desk?handler=LoadCourse"
                , data = {"branchID": branchID}
                , async = true
                , error = function () {notiError_SW()}
                , success = function (result) {
                    let data = JSON.parse(result);
                    Studesk_courserender(data.Table1, "studesk_courselist")
                    let totalstu = data.Table[0].Total;
                    Count_Up("Studesk_coursetotal", formatNumber(totalstu));
                }
                , sender = null
                , before = function () {
                    $("#Studesk_coursewait").show();
                }
                , complete = function (e) {
                    $("#Studesk_coursewait").hide();
                }
            );
        }
    }
    async function Studesk_courserender (data, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = "";
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let tr = '';
                        if (data[i] != undefined) {
                            tr = Studesk_courserenderEach(data[i], i == data.length - 1)
                        }
                        myNode.insertAdjacentHTML('beforeend', tr);
                    }
                }
            }
            Studesk_courseevent();
            resolve();
        })
    };

    function Studesk_courserenderEach (item, last) {
        let tr =
            `<div class="ellipsis_one_line">
                <a data-id="${item.StudentID}" class="courseitem mb-0 fw-bold text-sm border-bottom border-primary">${item.Stuname}</a>
                <i class="text-warning fw-bold fas fa-angle-right"></i>
                <span class="fw-bold text-sm text-dark">
                    ${item.CourseCode} - ${item.CourseName}
                </span>
            </div>
            </br>
            <span class="text-sm text-secondary">
                 ${formatDateToDMYHM(item.Created)}
            </span>
            ${(!last) ? `<hr class="horizontal dark mt-3 mb-1">` : ``}
            `

        return tr;
    }
    function Studesk_courseevent () {
        $('#studesk_courselist .courseitem').unbind('click').click(function (event) {
            let _id = $(this).attr('data-id');
            window.open('/Student/student/studentmain?studentid=' + _id,'_blank')
        });
    }
    //#endregion
    //#region // Class
    function Studesk_classreload () {
        Studesk_classdayindex = 0;
        Studesk_classload();
    }
    function Studesk_classload () {
        if (Studesk_flag == 1) {
            var date = new Date();
            $('#studesk_classtime').html(GetDateTime_String_DMOnly(date.addDays(Studesk_classdayindex)));
            let branchID = Number($("#Studesk_branch").dropdown('get value') ? Number($("#Studesk_branch").dropdown('get value')) : 0);
            AjaxLoad(url = "/Student/General/Desk?handler=LoadClass"
                , data = {"branchID": branchID, "day": Studesk_classdayindex}
                , async = true
                , error = function () {notiError_SW()}
                , success = function (result) {
                    let data = JSON.parse(result);
                    Studesk_classrender(data.Table1, "studesk_classlist")
                    let row = data.Table[0];
                    $('#Studesk_classt_all').html(formatNumber(row.Total));
                    $('#Studesk_classt_on').html(formatNumber(row.TotalOn));

                }
                , sender = null
                , before = function () {
                    $("#Studesk_classwait").show();
                }
                , complete = function (e) {
                    $("#Studesk_classwait").hide();
                }
            );
        }
    }
    async function Studesk_classrender (data, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = "";
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let tr = '';
                        if (data[i] != undefined) {
                            tr = Studesk_classrenderEach(data[i], i == data.length - 1)
                        }
                        document.getElementById(id).insertAdjacentHTML('beforeend', tr);
                    }
                }
            }
            Studesk_classevent();
            resolve();
        })
    }
    function Studesk_classrenderEach (item, last) {
        let status = 0; let statusname = '';
        if (Studesk_classdayindex == 0) {
            if (item.Status == 1) status = 1;
            else if (item.Status == 0) status = 0;
            else status = 2;
        }
        if (Studesk_classdayindex <0) {
            if (item.Status == 1 || item.Status == 2) status = 2;
            else status = 0;
        }
        if (Studesk_classdayindex > 0) {
            status = 0;
        }


        if (status == 0) statusname = `<span class="badge badge-secondary badge-sm">Chưa dạy</span>`;
        else if (status==1) statusname = `<span class="badge badge-success badge-sm">Đang dạy</span>`;
        else statusname = `<span class="badge badge-danger badge-sm">@Local["Kết thúc"]</span>`;
        let tr =
            `<div class="mt-3">
                <a class="mb-0 text-dark fw-bold text-sm">${BigIntToHHMM(item.TimeStart)}</a>
                 <span class="text-sm text-dark">
                    ${statusname}
                </span>
            </div>
            <span class="font-italic text-sm text-secondary">
                <span class="">
                    ${item.ClassName}
                </span>
                 <span class="">
                    ${item.TeacherName}
                </span>
            </span>
            ${(!last) ? `` : ``}
            `

        return tr;
    }
    function Studesk_classevent () {
        $('#studesk_classnext').unbind('click').click(function (event) {
            Studesk_classdayindex = Studesk_classdayindex + 1;
            Studesk_classload();
        });
        $('#studesk_classpreview').unbind('click').click(function (event) {
            Studesk_classdayindex = Studesk_classdayindex - 1;
            Studesk_classload();
        });

    }
     //#endregion
</script>

