@page
@model MLunarCoffee.Pages.Appointment.StatusOptionModel
@{
    Layout = null;
}
<div class="col-12" id="SSO_Container">
    <div class="card" id="SSO_MasterContainer">
        <div class="vtcardheader card-header pb-0">
            <div class="left">
                <h6 class="mb-0 fw-bold">@Local["Thông báo"]</h6>
                <p class="text-sm mb-0">@Local["Chi tiết chuyển trạng thái"]</p>
            </div>
            <div class="right">
                <div class="icon-hover mx-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="@Local["Đóng"]">
                    <i class="fas fa-times text-lg text-primary cursor-pointer" onclick="CloseModal()"></i>
                </div>
            </div>
        </div>
        <div class="card-body pt-2 ">
            <div class="row">
                <div class="">
                    <div class="p-1">
                        <div class="d-flex">
                            <label class="fw-bold ms-0 mt-3 text-sm">@Local["Thông tin chung"] </label>
                            <i class="cursor-pointer ms-2 mt-3 text-lg text-primary fas fa-angle-up" data-bs-toggle="collapse" href="#SSO_InfoDiv" aria-expanded="true"></i>
                            <div class="ms-auto my-auto d-flex align-items-center">
                                <div class="align-items-center d-flex p-2 text-primary text-sm SSO_clsStatus cursor-pointer" id="SSO_StatusScheDiv" title="@Local["Trạng thái"]" style="">
                                    <div class="tickettaggroup_item-index">
                                        <span class="" id="SSO_StatusSche"></span>
                                    </div>
                                    <div class="fw-bold ms-2 text-capitalize tickettaggroup_item-title" id="SSO_StatusScheTime"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row pe-0 collapse collapsesticky show" id="SSO_InfoDiv">
                            <div class="col-12 col-md-4 col-lg-4">
                                <p class="mb-0 text-sm mt-3">@Local["Mã khách hàng"]</p>
                                <p id="SSO_CustCode" class="text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <p class="mb-0 text-sm mt-3">@Local["Khách hàng"]</p>
                                <p id="SSO_CustName" class="text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <p class="mb-0 text-sm mt-3">@Local["Điện thoại"]</p>
                                <p id="SSO_CustPhone" data-tab="phone_customer" data-info="" class="_tab_control_ text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <p class="mb-0 text-sm mt-3">@Local["Email"]</p>
                                <p id="SSO_CustEmail" class="text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <p class="mb-0 text-sm mt-3">@Local["Địa chỉ"]</p>
                                <p id="SSO_CustAddress" class="text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                            <div class="col-12">
                                <p class="mb-0 text-sm mt-4">@Local["Nội dung"]</p>
                                <p id="SSO_Content" class="text-sm my-auto text-dark fw-bold">-</p>
                            </div>
                        </div>
                        <hr class="dark horizontal mt-4">
                    </div>
                </div>

                <div class="card card-plain text-dark">
                    <div class="mt-0 ps-0">
                        <ul class="nav nav-pills p-1 bg-transparent permissionlist" role="tablist" id="SSO_ActionContainer">
                            <li class="SSO_clsTab nav-item d-none" role="presentation" id="SSO_NextScheduleTab">
                                <a class="linkgroup nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#SSO_NextScheduleDiv" role="tab" aria-selected="true">
                                    <i class="far fa-calendar-alt me-1 text-gradient text-success"></i>
                                    @Local["Lịch hẹn kế tiếp"]
                                </a>
                            </li>
                            <li class="SSO_clsTab nav-item d-none" role="presentation" id="SSO_RatingTab">
                                <a class="linkgroup nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#SSO_RatingDiv" role="tab" aria-selected="false">
                                    <i class="text-gradient text-warning fas fa-star"></i>
                                    @Local["Đánh giá"]
                                </a>
                            </li>
                            <li class="SSO_clsTab nav-item d-none" role="presentation" id="SSO_RatingPoratalTab">
                                <a class="linkgroup nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#SSO_RatingPortalDiv" role="tab" aria-selected="false">
                                    <i class="text-gradient text-primary fas fa-star"></i>
                                    @Local["Đánh giá"] (Portal)
                                </a>
                            </li>
                            <li class=" SSO_clsTab nav-item d-none" role="presentation" id="SSO_TreatindayTab">
                                <a class="linkgroup nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#SSO_TreatDiv" role="tab" aria-selected="false">
                                    <i class="text-gradient text-info vtt-icon vttech-icon-treatment"></i>
                                    @Local["Điều trị"] (@Local["Trong ngày"])
                                </a>
                            </li>
                        </ul>
                    </div>
                    <div class="row px-2">
                        <div class="nav-wrapper position-relative end-0 mt-2 px-1">
                            <div class="tab-content">
                                <div class="fade tab-pane active mx-1" id="SSO_NextScheduleDiv" role="tabpanel">
                                    <div class="d-md-flex mt-3 bg-success-soft border-radius-md p-2 pt-4" id="SSO_NextSche">
                                    </div>
                                    <div class="text-center" id="SSO_NextScheNon" style="display: none">
                                        <div class="bg-gray-100 border-radius-lg card-body mt-2 p-2">
                                            <h6 class="fw-bold mb-0 my-2 text-2xl">@Local["Chưa có dữ liệu"]</h6>
                                            <p class="fw-bold mb-0 my-2 text-secondary text-sm">@Local["Chưa có lịch hẹn kế tiếp. Có đặt lịch hẹn cho khách hàng này không"]</p>
                                            <button id="SSO_btnAddSchedule" type="button" class="btn bg-gradient-primary mt-3 me-2">@Local["Thêm mới"]</button>
                                        </div>
                                    </div>

                                </div>
                                <div class="tab-pane fade" id="SSO_RatingDiv" role="tabpanel">
                                    <div class="d-lg-flex">
                                        <div class="w-70 col-auto my-auto">
                                            <label class="ms-0">@Local["Danh sách tiêu chí đánh giá"]</label>
                                            <p class="text-xs mb-0">@Local["Đánh giá ứng dụng"]</p>
                                        </div>
                                    </div>
                                    <div class="card card-plain">
                                        <div class="card-body pt-0 text-center overflow-auto">
                                            <div id="SSO_MainRatingdtContent">

                                            </div>

                                        </div>
                                        <div class="bottom-0 mt-2 position-sticky">
                                            <div class="fixed-botombutton">
                                                <div class="action_Save">
                                                    <div class="action_Save-Content">
                                                        <button id="SSO_MainRatingbtnexe" type="button" class="ms-2 bg-gradient-primary btn btn-sm m-0 mt-3" onclick="SSO_MainRatingExcecuteData()">@Local["Đánh giá"]</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="SSO_RatingPortalDiv" role="tabpanel">
                                    <div class="d-lg-flex">
                                        <div class="w-70 col-auto my-auto">
                                            <label class="ms-0">@Local["Danh sách thiết bị"]</label>
                                            <i class="fas fa-check text-primary ms-1" id="SSO_iconCheckedDevice"></i>
                                            <p class="text-xs mb-0 text-danger">@Local["Những thiết bị hoạt động mới nhận được yêu cầu đánh giá"]!</p>
                                        </div>
                                    </div>
                                    <div class="progress-wrapper" style="display: none" id="SSO_ProcessLoadDevice">
                                        <div class="progress-info mb-2">
                                            <div class="progress-percentage">
                                                <span class="text-sm font-weight-bold">@Local["Kiểm tra thông tin"]</span>
                                                <span class="text-sm font-weight-bold ms-1" id="SSO_ProcessPer">0%</span>
                                                <div class="spinner-border spinner-border-sm text-primary text-sm d-none" id="SSO_ProcessLoading" role="status">
                                                    <span class="sr-only">Loading...</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="progress">
                                            <div class="progress-bar bg-gradient-primary" id="SSO_ProcessBar" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
                                        </div>
                                    </div>

                                    <div class="col-12 mt-3 px-3 flex-grow-1 vt-header-sticky" id="SSO_dtContentDevice">
                                        <table class="table align-items-center mb-0">
                                            <thead>
                                                <tr>
                                                    <th class="ps-2 px-1 text-center" style="width: 50px;">
                                                        <div class="form-check">
                                                            <input id="SSO_ckbCheckDeviceAll" class="form-check-input mt-2" name="teleAll" type="checkbox" onchange="event.preventDefault();return SSO_CheckAllDevice();" style="">
                                                        </div>
                                                    </th>
                                                    <th class="ps-2">
                                                        <p class="mb-0 text-sm text-dark fw-bold">@Local["Thiết bị"]</p>
                                                    </th>
                                                    <th class="ps-2">
                                                        <div class="mb-0 text-sm text-dark fw-bold">@Local["Chi nhánh"]</div>
                                                    </th>
                                                    <th class="ps-2">
                                                        <div class="mb-0 text-sm text-dark fw-bold">@Local["Trạng thái"]</div>
                                                    </th>
                                                    <th class="ps-2">
                                                        <p class="mb-0 text-sm text-dark fw-bold">@Local["Thao tác gần nhất"]</p>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody id="SSO_dtDeviceContentBody">
                                            </tbody>
                                        </table>
                                        <div class="bottom-0 mt-2 position-sticky">
                                            <div class="fixed-botombutton">
                                                <div class="action_Save">
                                                    <div class="action_Save-Content">
                                                        <button id="SSO_btnCheckRatingPortal" type="button" class="bg-gradient-primary btn btn-sm m-0 mt-3">@Local["Kiểm tra"]</button>
                                                        <button id="SSO_btnAddRatingPortal" type="button" class="ms-2 bg-gradient-primary btn btn-sm m-0 mt-3">@Local["Gửi"]</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="tab-pane fade" id="SSO_TreatDiv" role="tabpanel">
                                    <div id="SSO_TreatmentContainer" class="col-12 mt-3">
                                        <label class="text-sm fw-bold mt-3">
                                            @Local["Chi tiết điều trị"]
                                        </label>
                                        <div class="col-12 p-1 flex-grow-1" id="SSO_dtContent">
                                            <table class="table align-items-center mb-0">
                                                <thead>
                                                    <tr>
                                                        <td class="ps-0">
                                                            <span class="text-sm fw-bold text-dark">@Local["Dịch vụ"]</span>
                                                        </td>
                                                        <td class="">
                                                            <span class="text-sm fw-bold text-dark">@Local["Chi tiết"]</span>
                                                        </td>
                                                        <td class="">
                                                            <span class="text-sm fw-bold text-dark">@Local["Nội dung"]</span>
                                                        </td>
                                                        <td style="width: 50px">
                                                            <span class="text-sm fw-bold text-dark">@Local["Xử lý"]</span>
                                                        </td>
                                                    </tr>
                                                </thead>
                                                <tbody id="SSO_dtContentTreatBody">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="SSO_DetailContainer"></div>
</div>

<script src="/js/comon/initialize_setting.js"></script>
<script>
    //#region //DECLARE - INIT
    let SSO_CustomerID = "@Model._CustomerID";
    let SSO_StatusID = "@Model._StatusID";
    let SSO_AppID = "@Model._AppID";
    var SSO_DataProfile = [];
    let SSO_TotalDevice = 0;
    let SSO_IsCheckDone = 0;
    let SSO_DateNow;
    let SSO_MainRatingtotalType = 0;
    let SSO_DataTeeth, SSO_DataBranch, SSO_DataEmp, SSO_DataEmpGroup, SSO_dfGroupEmp = 17;
    let SSO_MainRatingdataDefault = [{
        Type: 0,
        Title: '@Local["Đánh giá chúng tôi"]',
        SubTitle: "",
        IsNote: 1
    }]
    $(document).ready(function () {
        ToolPopper();
        SSO_DateNow = new Date();
        Master_IndexDB_Reads(_Session_Data, [_Session_Teeth, _Session_Branch]
            , function (data) {
                SSO_DataTeeth = data[0];
                SSO_DataBranch = data[1];
                SSO_Event();
                SSO_Init();
            });

    })

    function SSO_Init() {
        $('#SSO_ProcessLoadDevice').hide();
        AjaxLoad(url = "/Appointment/StatusOption/?handler=Ini"
            , data = {
            }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    SSO_DataEmp = datas.Emp;
                    SSO_DataEmpGroup = datas.EmpGroup;
                    SSO_LoadData();
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {

            }
            , complete = function (e) {

            }
        );
        return false;
    }
    function SSO_LoadData() {
        $('#SSO_ProcessLoadDevice').hide();
        AjaxLoad(url = "/Appointment/StatusOption/?handler=LoadData"
            , data = {
                'statusid': SSO_StatusID,
                'custID': SSO_CustomerID,
                'appID': SSO_AppID,
            }
            , async = true
            , error = function () {
                notiError_SW()
            }
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let { Table: dataCustInfo, Table1: dataStatusInfo, Table2: dataOption } = datas;
                    SSO_LoadInfo(dataCustInfo, dataStatusInfo)
                    SSO_LoadAction(dataOption);
                } else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {

            }
            , complete = function (e) {

            }
        );
        return false;
    }
    //#endregion

    //#region //LOADDATA

    async function SSO_LoadInfo(dtCust, dtStatus) {
        let itemCust = dtCust[0] ?? {};
        let itemStatus = dtStatus[0] ?? {};
        let address = itemCust?.Address ?? '';
        let commune = itemCust?.Commune != "" ? ', ' + itemCust?.Commune : '';
        let district = itemCust?.District != "" ? ', ' + itemCust?.District : '';
        let city = itemCust?.City != "" ? ', ' + itemCust?.City : '';

        $('#SSO_StatusSche').html(itemStatus?.StatusName ?? '-');
        $('#SSO_StatusScheTime').html(ConvertDateTimeUTC_Time(itemStatus?.Created));

        $('#SSO_CustCode').html(itemCust?.CustCode ?? '-');
        $('#SSO_CustName').html(itemCust?.CustName ?? '-');
        $('#SSO_CustPhone').attr('data-info', encrypt_phone(itemCust.Phone));
        $('#SSO_CustPhone').html(itemCust?.Phone ?? '-');
        $('#SSO_CustEmail').html(itemCust?.Email ?? '-');
        $('#SSO_CustAddress').html(address + commune + district + city);

        Checking_TabControl_Permission();
    }

    function SSO_LoadAction(data) {
        if (data && data.length > 0) {
            let item = data[0] ?? {};
            let isOpen = 0;
            let content = (item?.Content ?? "");
            if (content != '') {
                isOpen = 1;
                $('#SSO_Content').html(content);
            }
            if ((item?.IsNextSchedule ?? 0) == 1) {
                //Call NextSchedule
                isOpen = 1;
                $('#SSO_NextScheduleTab').removeClass(`d-none`);
                if(!$('.SSO_clsTab:not(.d-none):first .linkgroup').hasClass("active")) {
                    $('.SSO_clsTab:not(.d-none):first .linkgroup')[0].click()
                }
                SSO_handleNextSchedule(SSO_CustomerID);
            }

            if ((item?.IsTreatInDay ?? 0) == 1) {
                //Call TreatInDay
                isOpen = 1;
                $('#SSO_TreatindayTab').removeClass(`d-none`);
                if(!$('.SSO_clsTab:not(.d-none):first .linkgroup').hasClass("active")) {
                    $('.SSO_clsTab:not(.d-none):first .linkgroup')[0].click()
                }
                SSO_handleTreatinDay(ser_MainCustomerID);
            }
            if ((item?.IsEvaluate ?? 0) == 1) {
                //Call Evaluate
                isOpen = 1;
                $('#SSO_RatingTab').removeClass(`d-none`);
                if(!$('.SSO_clsTab:not(.d-none):first .linkgroup').hasClass("active")) {
                    $('.SSO_clsTab:not(.d-none):first .linkgroup')[0].click()
                }
                SSO_handleEvaluating(SSO_CustomerID);
            }
            if ((item?.IsEvaluatePortal ?? 0) == 1) {
                //Call Evaluate
                isOpen = 1;
                $('#SSO_RatingPoratalTab').removeClass(`d-none`);
                if(!$('.SSO_clsTab:not(.d-none):first .linkgroup').hasClass("active")) {
                    $('.SSO_clsTab:not(.d-none):first .linkgroup')[0].click()
                }
                SSO_handleEvaluatingPortal(Master_branchID);
            }

            let {
                SmsIDNextSchedule = 0,
                SmsIDTreatInDay = 0,
                SmsIDEvaluating = 0
            } = item;
            debugger
            //Auto
            if ((item?.IsSendTreatInDay ?? 0) == 1) {
                //Call Send TreatInDay
                SSO_handleSendTreatInDay(ser_MainCustomerID, SmsIDTreatInDay);
            }
            if ((item?.IsSendEvaluate ?? 0) == 1) {
                //Call Send EvaluatingPortal
                SSO_handleSendEvaluating(ser_MainCustomerID, SmsIDEvaluating);
            }
            if ((item?.IsSendNextSchedule ?? 0) == 1) {
                //Call Send NextSchedule
                SSO_handleSendNextSchedule(ser_MainCustomerID, SmsIDNextSchedule);
            }
            if (!isOpen) {
                CloseModal();
            }

        }
        else {
            CloseModal();
        }
    }

    //#endregion

    //#region //Handle Next Option
    //#region //NextSchedule
    async function SSO_handleNextSchedule(customerID) {
        new Promise(async resolve => {
            let para = {
                "custID": customerID
            }
            let result = await SMSSYS_AfterStatus(para, "schedule");
            let data = JSON.parse(result);
            if (result != 0) {
                if (data && data.length > 0) {
                    let strSche = '';
                    let item = data[0];
                    $('#SSO_NextScheNon').hide();
                    $("#SSO_NextSche").css({ 'display': '' });
                    let dateNext = SSO_getDOWFromDate(item.DateFrom)
                    strSche = `<div class="p-3 text-center ${dateNext == {} ? 'd-none' : ''}">
                                   <h4 class="fw-bold mb-0 text-3xl text-nowrap">${dateNext?.dow ?? ''}</h4>
                                   <h4 class="text-nowrap">${dateNext?.day ?? ''}</h4>
                               </div>
                               <div class="ms-2">

                                   <h6 class="text-dark text-sm font-weight-bold mb-0">${item.ScheCode}</h6>
                                   <div class="d-flex text-secondary">
                                   <i class="text-xs mt-1 far fa-clock"></i>
                                   <p class="ms-1 font-weight-bold mb-0 mt-1 text-secondary text-xs">${GetDateTime_String_HHMM(item.DateFrom) + ' - ' + GetDateTime_String_HHMM(item.DateTo)}</p>
                                       <i class="ms-2 text-xs mt-1 fas fa-map-marker-alt"></i>
                                   <p class="ms-1 font-weight-bold mb-0 mt-1 text-secondary text-xs">${item.Branch}</p>
                                   </div>
                                   <p class="fw-bold mb-0 mt-2 text-sm">@Local["Nội dung lịch hẹn"]</p>
                                   <p class="ellipsis_one_line mt-1 text-sm">${item.Note || "-"}</p>
                               </div>`
                    $('#SSO_NextSche').html(strSche);
                }
                else {
                    $('#SSO_NextScheNon').show();
                    $("#SSO_NextSche").css("cssText", "display: none !important;");
                }

            }
            else {
                $('#SSO_NextScheNon').show();
                $("#SSO_NextSche").hide();
            }
            resolve();
        })
    }

    function SSO_getDOWFromDate(date) {
        try {
            let result = {
                dow: '',
                day: ''
            };
            if (date != '') {
                let dayofweek = ["@Local["Chủ nhật"]", "@Local["Thứ 2"]", "@Local["Thứ 3"]", "@Local["Thứ 4"]", "@Local["Thứ 5"]", "@Local["Thứ 6"]", "@Local["Thứ 7"]"];
                let numDate = ConvertDateTime_To_YMDInt(date);
                let dowDate = ConvertYMDInt_ToDOW(numDate);
                result.dow = decodeHtml(dayofweek[dowDate] ?? '');

                let dateNext = INTYMDToDate(numDate);
                let currDate = new Date();
                if (dateNext.getFullYear() == currDate.getFullYear()) {
                    result.day = ConvertDateTimeToString_D_M(dateNext).replaceAll('/', '-');

                }
                else {
                    result.day = ConvertDateTimeUTC_DMY(dateNext);
                }

            }
            return result;
        }
        catch (e) {
            return {};
        }
    }
    //#endregion

    //#region //TreatinDay
    async function SSO_handleTreatinDay(customerID) {
        new Promise(async resolve => {
            let para = {
                "custID": customerID
            }

            let result = await SMSSYS_AfterStatus(para, "treatinday");
            let data = JSON.parse(result);
            if (result != 0) {
                if (data && data.length > 0) {
                    SSO_TreatRenderData(data, id = 'SSO_dtContentTreatBody');
                }
            }
            resolve();
        })
    }

    function SSO_TreatRenderData(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringcontent = '';
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            detail = SSO_RenderTreatDetail(ser_sys_DentistCosmetic
                                , item.TimeToTreatment
                                , item.TimeTreatIndex
                                , item.TeethChoosing
                                , item.Percent, item.PercentNew
                                , item.PercentNewDetail, item.PercentCurentDetail, item.Quantity, item.HavingStage, item.TeethType
                            )
                            let tr = `
                                       <td class="align-middle ps-0 text-dark text-sm">
                                           ${item.ServiceName}
                                       </td>
                                       <td class="align-middle  text-dark text-sm">
                                           ${detail}
                                       </td>
                                       <td class="align-middle text-dark text-sm">
                                            <div class="text-pre-wrap content_line_clamp">${item.Content}</div>
                                       </td>
                                       <td class="align-middle text-dark text-sm">
                                          <div class="d-flex align-items-center text-sm justify-content-center">
                                              <button id="SSO_btnTreat_${item.ID}" data-id="${item.ID}" class="btnSendSms btn btn-link text-dark text-sm mb-0 px-0">
                                                  <i class="fas fa-sms text-sm me-1" aria-hidden="true"></i>
                                              </button>
                                          </div>
                                       </td>
                                       `;
                            stringcontent = stringcontent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                        }
                    }
                    document.getElementById(id).innerHTML = stringcontent;
                    SSO_EventTreatGrid();
                }
            }, 10)
        })
    }

    function SSO_RenderTreatDetail(dencos, TimeToTreatment, TimeTreatIndex
        , TeethChoosing, Percent, PercentNew
        , PercentNewDetail, PercentCurentDetail, Quantity, HavingStage, TeethType) {
        let per_total_pro = '';
        let index_label = '', index_time = '';

        if (dencos == 0 && HavingStage == 0) {
            index_label = '@Local["Lần điều trị"]: ' + TimeTreatIndex + ' | ' + TimeToTreatment;
            index_time = '<div class="d-grid" style="grid-template-columns: repeat(15, 30px);">' + index_time + '</div></div>';

        }
        else {

            let per_new = 0, percurrent = 0;
            let teethdetail = (TeethChoosing != '') ? `<div class="text-dark" title="@Local["Chi tiết"]"> @Local["Chi tiết"]: ${Fun_GetTeeth_ByToken(DataTeeth, TeethChoosing, TeethType)} </div>` : '';
            if (Percent == 0 && PercentNew == 0) {
                if (TeethChoosing == '') {
                    per_new = (Quantity == 0) ? 0 : PercentNewDetail;
                    percurrent = (Quantity == 0) ? 0 : PercentCurentDetail;
                }
                else {
                    per_new = (Quantity == 0) ? 0 : PercentNewDetail / Quantity;
                    percurrent = (Quantity == 0) ? 0 : PercentCurentDetail / Quantity;
                }
            }
            else { per_new = PercentNew; percurrent = Percent };
            per_new = Math.round(per_new * 100) / 100;
            percurrent = Math.round(percurrent * 100) / 100;
            per_total_pro = teethdetail
                + '<div class="">@Local["Hoàn thành"]:'
                + '<span class="ms-2 fw-bold" title="@Local["Hoàn thành"]">' + percurrent + ' %</span>'
                + '<span class="ms-2 text-danger" title="@Local["Điều trị"]">(' + per_new + ' %)</span>'
                + '</div>';
        }

        let result =

            '<div class="d-flex flex-column">'
            + '<div class="text-dark text-sm">'
            + '<span class="col-w-200 text-muted">' + index_label + '</span>'
            + index_time
            + '</div>'
            + per_total_pro;


        return result;
    }
    //#endregion

    //#region //Evaluate In Main
    async function SSO_handleEvaluating(custid) {
        new Promise(async resolve => {
            let para = {
                "custID": custid
            }
            let result = await SMSSYS_AfterStatus(para, "evaluate");
            let data = JSON.parse(result);
            if (result != 0) {
                data = (data?.length ?? 0) > 0 ? data : SSO_MainRatingdataDefault;
                SSO_MainRatingtotalType = data.length || 1;
                SSO_MainRatingRender(data, 'SSO_MainRatingdtContent');
            }
            resolve();
        })
    }

    async function SSO_MainRatingRender(data, id) {
        return new Promise(resolve => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = '';
                        let title = Outlang[item.LangKey] != undefined ? Outlang[item.LangKey] : decodeHtml(item.Title)
                        tr = `
                              <hr class="dark horizontal">
                              <div class="mb-3 SSO_MainRatingcslRatingType" data-type="${item?.Type}">
                                   <div class="text-center text-muted">
                                       <h5 class="text-dark fw-bold mb-1 text-xl">${title}</h5>
                                       <span class="text-muted text-sm">${item?.SubTitle ?? ''}</span>

                                   </div>
                                   <div class="row gx-2 gx-sm-3">
                                        <ul id="SSO_MainRatingrating_${item.Type}" class="nav nav-pills nav-fill p-1 bg-transparent px-0  my-3" role="tablist">
                                           <li class="nav-item" role="presentation">
                                               <a data-value="1" class="SSO_ratingstar nav-link nav-link-rating cursor-pointer" data-bs-toggle="pill" role="tab">
                                                   <i class="fas fa-angry text-2xl emotion-icon emotion-vuns cursor-pointer" value="1"></i>
                                               </a>
                                           </li>
                                           <li class="nav-item" role="presentation">
                                               <a data-value="2" class="SSO_ratingstar nav-link nav-link-rating cursor-pointer" data-bs-toggle="pill" role="tab">
                                                   <i class="fas fa-frown text-2xl emotion-icon emotion-uns cursor-pointer" value="2"></i>
                                               </a>
                                           </li>
                                           <li class="nav-item" role="presentation">
                                               <a data-value="3" class="SSO_ratingstar nav-link nav-link-rating cursor-pointer" data-bs-toggle="pill" role="tab">
                                                   <i class="fas fa-meh text-2xl emotion-icon emotion-neu cursor-pointer" value="3"></i>
                                               </a>
                                           </li>
                                           <li class="nav-item" role="presentation">
                                               <a data-value="4" class="SSO_ratingstar nav-link nav-link-rating cursor-pointer" data-bs-toggle="pill" role="tab">
                                                   <i class="fas fa-smile text-2xl emotion-icon emotion-sat cursor-pointer" value="4"></i>
                                               </a>
                                           </li>
                                           <li class="nav-item" role="presentation">
                                               <a data-value="5" class="SSO_ratingstar nav-link nav-link-rating cursor-pointer" data-bs-toggle="pill" role="tab">
                                                   <i class="fas fa-grin-hearts text-2xl emotion-icon emotion-vsat cursor-pointer"></i>
                                               </a>
                                           </li>
                                       </ul>

                                   </div>
                                   <div class="row gx-2 gx-sm-3 px-2">
                                       <div class="mb-1 px-0 col-12 col-md-6 text-start flex-grow-1 ${item.IsEmployee == 1 ? '' : 'd-none'}">
                                            <label class="my-2">@Local["Nhân viên"]</label>
                                            <div class="input-group">
                                                <div class="input-group mb-0 flex-nowrap">
                                                    <div class="ui fluid search selection dropdown form-control SSO_clsEmpGroup col-w-200"  data-type="${item.Type}" id="SSO_EmpGroup${item.Type}">
                                                        <input type="hidden" name="emp" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Nhóm nhân viên"]</div>
                                                        <div id="SSO_cbbEmpGroup${item.Type}" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                    <div class="ui fluid search selection dropdown form-control border" id="SSO_Emp${item.Type}">
                                                        <input type="hidden" name="emp" />
                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                        <div class="default text">eg .@Local["Nhân viên"]</div>
                                                        <div id="SSO_cbbEmp${item.Type}" class="menu" tabindex="-1">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                       </div>
                                      <div class="mb-1 px-0 col-12 col-md-6 text-start ps-2  flex-grow-1 ${item.IsNote == 1 ? '' : 'd-none'}">
                                        <label class="my-2 ps-0 text-start">@Local["Nội dung"]</label>
                                        <textarea rows="1" class="form-control" id="SSO_MainRatingtxtNote_${item.Type}" placeholder="@Local["Nội dung"]" name="note" />
                                       </div>
                                   </div>
                               </div>
                                `
                        myNode.insertAdjacentHTML('beforeend', tr);
                        SSO_ratingEvent();
                        Load_Combo(Object.values(SSO_DataEmpGroup), `SSO_cbbEmpGroup${item.Type}`, true, "@Local["Tất cả nhóm"]");

                        $(`#SSO_EmpGroup${item.Type}`).dropdown("refresh");
                        $(`#SSO_EmpGroup${item.Type}`).dropdown("set selected", SSO_dfGroupEmp);


                    }
                }
            }
            resolve();
        });
    }

    function SSO_ratingEvent() {
        $('.SSO_clsEmpGroup').unbind('change').change(function () {
            let groupID = Number($(this).dropdown('get value')) ? Number($(this).dropdown('get value')) : 0;
            let type = $(this).attr('data-type');
            let data = [...SSO_DataEmp];
            if (groupID != 0) {
                data = data.filter(e => e.GroupID == groupID)
            }
            $('#SSO_Emp' + type).dropdown("clear");
            Load_Combo(data, `SSO_cbbEmp${type}`, true);
            $('#SSO_Emp' + type).dropdown('refresh');
            $('#SSO_Emp' + type).dropdown('set selected', data[0]?.ID.toString() ?? "0");
        })
    }

    async function SSO_MainRatingExcecuteData () {
        $('#SSO_MainRatingbtnexe').addClass('disabled');
        let dataRating = [];
        $('#SSO_MainRatingdtContent .SSO_ratingstar.active').each(function() {
            let parentEle = $(this).closest('.SSO_MainRatingcslRatingType');
            let type = parentEle.attr('data-type');
            let note = $(`#SSO_MainRatingtxtNote_${type}`).val();
            let empid = !isNaN(Number($(`#SSO_Emp${type}`).dropdown('get value'))) ? Number($(`#SSO_Emp${type}`).dropdown('get value')) : 0;
            let star = $(this).attr('data-value');
            dataRating.push({ type, note, star, empid });
        });
        if (dataRating && dataRating.length == SSO_MainRatingtotalType) {
            let objdata = {};
            objdata.dtItem = dataRating;
            objdata.customer = SSO_CustomerID;
            objdata.branchid = Master_branchID;

            return new Promise(resolve => {
                AjaxJWT(url = "/api/AfterStatus/evaluateInsert"
                    , data = JSON.stringify(objdata)
                    , async = true
                    , success = function (result) {
                        let isError = 0;
                        if (result != "0") {
                            let data = JSON.parse(result);

                            if (data && data.length != 0) {
                                let item = data[0];
                                isError = Number(item.ErrorCode);
                                if (isError == 1) {
                                    notiSuccess();

                                }
                            }
                            else {
                                notiError();
                            }
                        }
                        else {
                            notiError();
                        }
                        if (isError == 1) {
                            setTimeout(() => {
                                DBoard_CloseModal();
                            }, 500)
                        }
                        else {
                            $('#SSO_MainRatingwait').addClass('d-none');
                            $('#SSO_MainRatingbtnexe').removeClass('disabled');
                        }

                    }
                );
                resolve();
            });
        }
        else {
            notiError('@Local["Chưa có đánh giá"]');
            $('#SSO_MainRatingwait').addClass('d-none');
            $('#SSO_MainRatingbtnexe').removeClass('disabled');
        }


    }
    //#endregion

    //#region //Evaluation Portal
    async function SSO_handleEvaluatingPortal(branchID) {
        new Promise(async resolve => {
            let para = {
                "branchID": branchID
            }
            let result = await SMSSYS_AfterStatus(para, "evaluateportal");
            SSO_DataProfile = [];
            SSO_TotalDevice = 0;
            let data = JSON.parse(result);
            if (result != 0) {
                if (data && data.length > 0) {
                    SSO_EvalPorRenderData(data, 'SSO_dtDeviceContentBody')
                }
            }
            resolve();
        })
    }

    function SSO_EvalPorRenderData(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringcontent = '';
                    if (data && data.length > 0) {

                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let status = item.UserToken != "" ? SSO_getStatusDevice('nonactive') : SSO_getStatusDevice('noconect')

                            let tr = `<td class="text-center text-dark">
                                                          <div class="form-check mt-1">
                                                              <input class="form-check-input SSO_clsCheckDeviceItem" name="deviceItem" data-id="${item.ID}" type="checkbox">
                                                          </div>
                                                      </td>
                                                      <td class="pt-3 text-dark text-sm">
                                                          #${item.KeyDevice}
                                                      </td>
                                                      <td class="pt-3 text-dark text-sm">
                                                          ${item.Branch}
                                                      </td>
                                                      <td class="pt-3 text-dark text-sm" id="SSO_StatusDevice_${item.KeyDevice}">
                                                          ${status}
                                                      </td>
                                                      <td class="text-dark text-sm cursor-pointer">
                                                          ${ConvertDateTimeUTC_DMYHM(ConvertToDateRemove1900(item.Executed))}
                                                      </td>`;
                            stringcontent = stringcontent + '<tr class="vt-number" role="row">' + tr + '</tr>';
                        }
                    }
                    SSO_TotalDevice = data.length;
                    document.getElementById(id).innerHTML = stringcontent;
                    SSO_CheckDeviceOnl();
                }
            }, 10)
        })
    }

    function SSO_getStatusDevice(status) {
        let result = '';
        switch (status) {
            case 'active':
                result = `<span class="text-xxs me-4"><i class="text-xxs text-success fas fa-circle"></i><span class="ms-2 text-dark text-sm">@Local["Hoạt động"]</span></span>`
                break;
            case 'nonactive':
                result = `<span class="text-xxs me-4"><i class="text-xxs text-secondary fas fa-circle"></i><span class="ms-2 text-dark text-sm">@Local["Không hoạt động"]</span></span>`
                break;
            case 'noconect':
                result = `<span class="text-xxs me-4"><i class="text-xxs text-danger fas fa-exclamation-circle"></i><span class="ms-2 text-dark text-sm">@Local["Không thể kết nối"]</span></span>`
                break;
        }
        return result
    }

    async function SSO_CheckDeviceOnl() {
        new Promise(resolve => {
            let e = {
                Type: 'portcheckonl',
                userid: sys_userID_Main

            }

            SSO_IsCheckDone = 0
            fcm_sendtopic("Portal", Master_circleAvatar, sys_employeeName_Main, JSON.stringify(e));
            $('#SSO_ProcessLoadDevice').show();
            $('#SSO_ProcessLoading').removeClass('d-none');
            $('#SSO_ProcessPer').html('0%');
            $('#SSO_ProcessBar').css({ 'width': '0%' });
            let myTimeout = setTimeout(() => {
                $('#SSO_ProcessPer').html(`100%`);
                $('#SSO_ProcessBar').css({ 'width': `100%` });
                $('#SSO_ProcessLoading').addClass('d-none');
                $('#SSO_ProcessLoadDevice').fadeOut(1500)
                $('#SSO_iconCheckedDevice').removeClass('d-none');
                SSO_IsCheckDone = 1;
            }, 2000);
            resolve();
        })
    }
    //#endregion

    //#region //Send SMS
    async function SSO_handleSendTreatInDay(customerID, templateid) {
        new Promise(resolve => {
            let para = {
                "custID": customerID,
                "templateID": templateid
            }
            SMSSYS_AfterStatus(para, "sendtreat");
        })
    }

    async function SSO_handleSendEvaluating(customerID, templateid) {
        new Promise(resolve => {
            let para = {
                "custID": customerID,
                "templateID": templateid
            }
            SMSSYS_AfterStatus(para, "sendevaluate");
        })
    }

    async function SSO_handleSendNextSchedule(customerID, templateid) {
        new Promise(resolve => {
            let para = {
                "custID": customerID,
                "templateID": templateid
            }
            SMSSYS_AfterStatus(para, "sendnextschedule");
        })
    }
    //#endregion

    async function SMSSYS_AfterStatus(para, type) {
        return new Promise((resolve, reject) => {
            try {
                let urlType = {
                    "schedule": "/api/AfterStatus/bookingSchedule",
                    "treatinday": "/api/AfterStatus/treatinday",
                    "evaluate": "/api/AfterStatus/evaluate",
                    "evaluateportal": "/api/AfterStatus/evaluateInPortal",
                    "sendtreat": "/api/AfterStatus/sendSMSTreat",
                    "sendevaluate": "/api/AfterStatus/sendSMSEval",
                    "sendnextschedule": "/api/AfterStatus/sendSMSNextSchedule",
                }

                AjaxJWT(url = urlType[type]
                    , data = JSON.stringify(para)
                    , async = true
                    , success = function (result) {
                        resolve(result);
                    }
                );
            }
            catch (e) {
                resolve(0);
            }
        })
    }
    //#endregion

    //#region //EVENT
    function SSO_addNewSchedule(customerID) {
        $("#SSO_DetailContainer").html('');
        $("#SSO_DetailContainer").load("/Appointment/AppointmentDetail?CustomerID=" + customerID + "&typeHistory=1" + "&ver=" + versionofWebApplication
            , function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    if (typeof AD_CloseModal !== 'undefined') {
                        AD_CloseModal = SSO_CloseDetail;
                    }
                }
                if (statusTxt == "error") {

                }
            });
        $('#SSO_DetailContainer').removeClass('d-none');
        $('#SSO_MasterContainer').addClass('d-none');
    }

    function SSO_sendNewSMS(customerID, date, treatid = 0) {
        $("#SSO_DetailContainer").html('');
        $("#SSO_DetailContainer").load("/Sms/SmsDetail?TypeCare=5&CustomerID=" + customerID + "&Date=" + date + "&TreatID=" + treatid + "&ver=" + versionofWebApplication
            , function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    if (typeof SMSDetail_CloseModal !== 'undefined') {
                        SMSDetail_CloseModal = SSO_CloseDetail;
                    }
                }
                if (statusTxt == "error") {

                }
            });
        $('#SSO_DetailContainer').removeClass('d-none');
        $('#SSO_MasterContainer').addClass('d-none');
    }

    function SSO_CloseDetail() {
        $("#SSO_DetailContainer").html('');
        $('#SSO_DetailContainer').addClass('d-none');
        $('#SSO_MasterContainer').removeClass('d-none');
    }

    function SSO_Event() {
        $("#SSO_btnAddSchedule").unbind('click').on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            SSO_addNewSchedule(SSO_CustomerID);
        })

        $("#SSO_btnAddRatingPortal").unbind('click').on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            let data = {};
            $('.SSO_clsCheckDeviceItem:checkbox:checked').each(function () {
                let id = $(this).attr('data-id')
                data[id] = 1;
            });

            let ele = {
                Type: "ratingsource",
                Data: { dataKey: data, custID: SSO_CustomerID }
            }
            fcm_sendtopic("Portal", Master_circleAvatar, sys_employeeName_Main, JSON.stringify(ele));
        })

        $("#SSO_btnCheckRatingPortal").unbind('click').on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            SSO_CheckDeviceOnl();
        })
    }

    function SSO_EventTreatGrid() {
        $("#SSO_dtContentTreatBody .btnSendSms").unbind('click').on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            let id = $(this).attr('data-id');
            SSO_sendNewSMS(SSO_CustomerID, ConvertDateTimeUTC_YMD(SSO_DateNow), treatid = id);
        })
    }

    function SSO_ChangeStatusSend(treatid) {
        $(`#SSO_btnTreat_${treatid}`).removeClass('text-dark').addClass('text-primary');
    }

    function SSO_CheckAllDevice() {
        if ($('#SSO_ckbCheckDeviceAll').is(":checked")) {
            $('.SSO_clsCheckDeviceItem').prop('checked', true);
        }
        else {
            $('.SSO_clsCheckDeviceItem').prop('checked', false);
        }
    }

    //#endregion

    //#region //CALLBACK
    async function SSO_ExcuteStatusDevice(key, time) {
        new Promise(resolve => {
            SSO_DataProfile.push({ key, time });
            let status = SSO_getStatusDevice('active')
            $(`#SSO_StatusDevice_${key}`).html(status);
            if (SSO_IsCheckDone == 0) {
                let percent = SSO_TotalDevice != 0 ? Number(SSO_DataProfile.length) / Number(SSO_TotalDevice) : 0;
                percent = (percent * 100).toFixed(2);
                $('#SSO_ProcessPer').html(`${percent}%`);
                $('#SSO_ProcessBar').css({ 'width': `${percent}%` });
            }
            resolve();
        })
    }
    //#endregion

</script>
<style>
    .SSO_clsStatus {
        background-color: rgba(var(--bs-primary), 0.2);
        border: 2px solid rgb(var(--bs-primary));
        min-width: 90px;
        height: 30px;
        margin-left: 2px;
        border-radius: 10px;
        position: relative;
        padding: 3px 6px;
    }

    #SSO_MainRatingdtContent .emotion-vuns, #CDI_EvaluateTreat .emotion-vuns {
        color: #f53939 !important;
    }

    #SSO_MainRatingdtContent .emotion-uns, #CDI_EvaluateTreat .emotion-uns {
        color: #ff7f0e !important;
    }

    #SSO_MainRatingdtContent .emotion-neu, #CDI_EvaluateTreat .emotion-neu {
        color: #ffbb78 !important;
    }

    #SSO_MainRatingdtContent .emotion-sat, #CDI_EvaluateTreat .emotion-sat {
        color: #98df8a !important;
    }

    #SSO_MainRatingdtContent .emotion-vsat, #CDI_EvaluateTreat .emotion-vsat {
        color: #2ca02c !important;
    }

    #SSO_MainRatingdtContent .nav-link-rating.active {
        box-shadow: 0px 0px 1px 1px rgb(var(--bs-primary),1) !important;
        background: rgba(var(--bs-primary),0.03) !important;
    }

    #SSO_MainRatingdtContent .nav-link-rating:hover {
        box-shadow: 0px 0px 1px 1px rgb(var(--bs-primary),1) !important;
        background: rgba(var(--bs-primary),0.03) !important;
    }
</style>
<script>js_require('/js/main.js');</script>






