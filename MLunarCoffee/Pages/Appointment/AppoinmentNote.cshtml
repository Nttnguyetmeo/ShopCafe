@page
@model MLunarCoffee.Pages.Appointment.AppoinmentNoteModel
@{
    Layout = null;
}

<style>
    #apprealtime_note .content {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        transition: 0.3s all;
        position: unset !important;
    }
    #apprealtime_master.showexpand #apprealtime_note {
        margin-bottom: 40px !important;
        margin-top: 10px !important;
        padding: 10px;
    }
    #apprealtime_master.showexpand #app_btnrefresh {
        display:none !important;
    }
    #apprealtime_master.showexpand #app_btnrefreshtiny {
        display: block !important;
    }
        #apprealtime_master.showexpand {
        min-height: 700px;
        height: 700px;
        transition: 0.25s all;
        z-index: 100;
        box-shadow: 0 8px 26px -4px rgb(130 129 129 / 76%), 0 8px 9px -5px rgba(20, 20, 20, 0.06) !important;
        border-radius: 12px !important;
        padding: 20px !important;
    }
    #apprealtime_master.full {
        position: unset !important;
        width: 100% !important;
        box-shadow: none !important;
        border: none;
        max-width: 100% !important;
        max-height: unset !important;
        height: auto !important;
    }
        #apprealtime_master.full #apprealtime_inarea {
           margin-top:30px !important;
        }


    #apprealtime_master.showexpand .content {
        display: unset;
    }
    #apprealtime_master.showexpand .area {
        margin-bottom: 5px;
        margin-top: 5px;
    }
        #apprealtime_master.showexpand .areacontent {
            margin-bottom: 5px;
            background-color: #ececec !important;
            max-width: 70%;
            border-radius: 20px;
            padding: 10px !important;
        }
        #apprealtime_master.showexpand .me .areacontent {
            background-color: #e9f5ff !important;
        }
        #apprealtime_master.showexpand .me {
            display: flex;
            justify-content: end;
        }

        #apprealtime_master.showexpand .creator {
            display: flex !important;
            align-items: center;
        }

        #apprealtime_master .avatar {
            width: 18px !important;
            height: 18px !important;
        }
    #apprealtime_master:hover #app_btnrefresh {
        opacity: 1 !important;
    }
    #apprealtime_master.showexpand.full {
        min-height: unset ;
       height:unset;
    }
    @@media only screen and (max-width: 878px)
    {

        #apprealtime_master.showexpand {
            width: 100% !important;
            max-width: 100% !important;  
        }
    }
    @@media only screen and (min-width: 878px) {

        #apprealtime_master.showexpand {
            width: 700px !important;
            max-width: 90% !important;
            position: fixed;
            top: 50px;
            right: 0;
        }
        #apprealtime_master.full {
            width: 100% !important;
            max-width: 100% !important;
        }
    }
</style>
<div class="bg-white" id="apprealtime_master">

    <div class="mb-5 overflow-auto" id="apprealtime_note">
    </div>
    
    <div id="apprealtime_inarea" class="position-relative">
        <div class="position-relative w-100 ">
            <div class="position-absolute top-0 end-0" style="top: -68px !important; right: 2px !important;">
                <a id="app_btnrefresh" class="text-xs cursor-pointer text-primary opacity-0" onclick="event.preventDefault();return Appnote_Load();">
                    @Local["Tải lại"]
                </a>
            </div>
        </div>
        <div id="apprealtime_action" class="bottom-0 w-100 position-absolute">
            <div class="input-group">
                <a id="app_btncombo" class="input-group-text input-group-text ps-2 cursor-pointer text-primary">
                    <i class="fas fa-stream"></i>
                </a>
                <a id="app_btnrefreshtiny" class="d-none input-group-text input-group-text ps-2 cursor-pointer text-primary" onclick="event.preventDefault();return Appnote_Load();">
                    <i class="fas fa-sync-alt"></i>
                </a>
                <a id="app_btncollapse" class="input-group-text input-group-text ps-2 cursor-pointer text-primary">
                    <i class="fas fa-expand"></i>
                </a>
                <input id="Appnote_txtnote" type="text" class="ps-2 form-control" placeholder="eg .@Local["Nội dung"]" autocomplete="off">
                <a class="input-group-text input-group-text ps-2 cursor-pointer text-primary" onclick="event.preventDefault();return Appnote_Save();" id="app_btnsave">
                    <i class="fas fa-paper-plane"></i>
                </a>
            </div>
        </div>
        <div id="popup_SchedulerNote" class="position-absolute ui dropdown item text-sm" tabindex="0" style="display:none;">
            <div id="appreal_template" class="menu position-relative" style="display: block; max-height: 200px; overflow-y:auto;" tabindex="-1">

            </div>
        </div>
    </div>
</div>


<script>
    var Ser_Current_Appid = "@Model._CurrentID";
    var Ser_descre = "@Model._descre";
    var Ser_Scheduler_Quick_Teamplate = {};
    var DataEmployee;
    $(document).ready(function () {
        if (Number(Ser_descre) == 1) {
            $("#apprealtime_inarea").prependTo("#apprealtime_master");
        }
        Appnote_QuickLoad()
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee]
            , function (data) {
                DataEmployee = data[0];
                Appnote_Load();
            })
        Appnote_MainEvent();
    })
    function Appnote_MainEvent () {
        $("#Appnote_txtnote").keyup(function (e) {
            e.preventDefault();
            if (e.keyCode === 13) {
                Appnote_Save();
            }
            return false;
        });
        $(window).click(function () {
            $("#popup_SchedulerNote").hide();
        });
        $("#app_btncombo").click(function (event) {
            $("#popup_SchedulerNote").css({
                "display": "block"
                , "left": 35
                , "bottom": 25
            }).animate({
                left: 35
                , bottom: 0
                , display: "block"
            }, 200);
            event.stopPropagation();
        });

        $("#app_btncollapse").click(function (event) {
            Appnote_SetType("expand");
            if ($(this).children().hasClass('fa-expand')) {
                $(this).children().addClass('fa-compress').removeClass("fa-expand");
            }
            else {
                $(this).children().removeClass('fa-compress').addClass("fa-expand");
            }
        });



    }
    function Appnote_SetType (type) {
        switch (type) {
            case "tiny":
                {
                    $("#apprealtime_master").removeClass("bg-white").addClass("bg-transparent");
                    $('#apprealtime_note').css('min-height', '170px');
                    $('#apprealtime_note').css('max-height', '170px');
                    $(document).unbind("click").on("click", function (e) {
                        let App_note = $("#apprealtime_master");
                        if (!$(App_note).is(e.target) && $(App_note).has(e.target).length === 0) {
                            if (App_note.hasClass('showexpand')) {
                                App_note.removeClass('showexpand');
                                $('#apprealtime_note').css('min-height', '170px');
                                $('#apprealtime_note').css('max-height', '170px');
                                $("#apprealtime_note").parent().scrollTop($("#apprealtime_note").height());
                            }
                        }
                    })
                    break;
                }
            case "expand":
                {
                    $("#apprealtime_master").removeClass("bg-transparent").addClass("bg-white");
                    $("#apprealtime_master").toggleClass("showexpand");
                    $('#apprealtime_note').css('min-height', 'calc(100% - 42px)');
                    $('#apprealtime_note').css('max-height', 'calc(100% - 42px)');
                    break;
                }
            case "full":
                {
                    $("#apprealtime_master").removeClass("bg-transparent").addClass("bg-white");
                    $("#apprealtime_master").toggleClass("full showexpand");
                    $('#app_btncollapse').css('display', 'none');
                    $('#apprealtime_note').css('min-height', '20px');
                    break;
                }
        }
    }
    function Appnote_Load () {
        if (Ser_Current_Appid != "0") {
            AjaxLoad(url = "/Appointment/AppoinmentNote/?handler=LoadAppointmentNote"
                , data = { 'appID': Ser_Current_Appid }, async = true
                , error = function () {
                    notiError_SW();
                }
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        $({ deg: 0 }).animate({ deg: -360 }, {
                            duration: 300,
                            step: function (now) {
                                $('.button_refresh_quick_note').css({
                                    transform: 'rotate(' + now + 'deg)'
                                });
                            }
                        });
                        Appnote_Render(data, "apprealtime_note");
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        }
    }

    //#region //Render Appointment
    function Appnote_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr = Appnote_RenderEach(item);
                    if (Ser_descre == 0) stringContent = stringContent + tr;
                    else stringContent = tr + stringContent;
                }
            }
            if (Ser_descre == 0) {
                $("#apprealtime_note").animate({
                    scrollTop: $("#apprealtime_note")[0].scrollHeight
                }, 300);
            }
            else {
                $("#apprealtime_note").animate({
                    scrollTop: 0
                }, 300);
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        
    }
    function Appnote_RenderEach (item) {
        let tr = '';
        let classname = (item.EmpID == sys_employeeID_Main) ? 'me' : 'client';
        let time = ConvertDateTimeToStringDMY_HM(item.Created);
        if (item.Content != "") {
            tr =
                `<div class="area text-start py-1 ${classname}">
             <div class="areacontent">
                 <div class="text-dark text-sm content"><span class="timesm fw-bold pe-2 text-dark text-sm">${time}</span>${Remove_Char_Tiny_Useless(item.Content)}</div>
                 <div class="creator d-none pt-2">
                     <img class="avatar avatar-xs me-2" src="${Fun_GetAvatar_ByID(DataEmployee, item.EmpID)}" alt="avatar">
                      <span class="text-lowercase text-dark fst-italic text-sm">${Fun_GetName_ByID(DataEmployee, item.EmpID)}</span>
                 </div>
             </div>
         </div>` ;
           
        }
        return tr;
    }
    //#endregion


    //#region //Quick Teamplate
    function Appnote_QuickRender(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            for ([key, value] of Object.entries(data)) {
                let item = value;
                let tr = '';
                tr = `<a class="item quicknote_teamplate" data-id="${key}">
                        <span>${item.Feature}</span>
                     </a>`
                stringContent = stringContent + tr;
            }

            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function Appnote_QuickLoad() {
        AjaxLoad(url = "/Appointment/AppoinmentNote/?handler=LoadAppointmentTeamplate"
            , data = {}, async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "0") {
                    let _data = JSON.parse(result);
                    Ser_Scheduler_Quick_Teamplate = {};
                    if (_data != undefined && _data.length != 0) {
                        for (i = 0; i < _data.length; i++) {
                            let e = {};
                            e.Feature = _data[i].Feature;
                            e.Content = _data[i].Content;
                            Ser_Scheduler_Quick_Teamplate[i] = e;
                        }
                    }
                    Appnote_QuickRender(Ser_Scheduler_Quick_Teamplate, "appreal_template");
                    Appnote_QuickEvent();
                }
            }
        );

    }
    function Appnote_QuickEvent() {
        $(".quicknote_teamplate").on('click', function (event) {
            let _id = $(this).attr('data-id');
            let _content = Ser_Scheduler_Quick_Teamplate[_id].Content;
            Appnote_Save_Execute(_content);

        });
    }

    function Appnote_QuickHide() {
        $('#appreal_template').removeClass('is_active');
    }
    //#endregion

    //#region // Execute Data
    function Appnote_Save_Execute(Content) {
        $('#Appnote_txtnote').removeAttr("style");
        if (Content.length != 0) {
            AjaxLoad(url = "/Appointment/AppoinmentNote/?handler=ExcuteData"
                , data = { '_Content': Content, 'CurrentID': Ser_Current_Appid }, async = true
                , error = function () {
                    notiError_SW();
                }
                , success = function (result) {
                    if (result == "1") {
                        if (typeof Appnote_Load === 'function') {
                            Appnote_Load();
                            if ($(".note_last_" + Ser_Current_Appid).length > 0) {
                                $(".note_last_" + Ser_Current_Appid).html(Content);
                            }
                            $('#Appnote_txtnote').val("");
                            Appnote_QuickHide();
                        }

                        fcm_sendtopic("localnotification", Master_circleAvatar, sys_employeeName_Main, Content);
                    } else {
                        notiError_SW();
                    }
                }
                ,sender = $("#app_btnsave")
            );

        }
        else {
            $('#Appnote_txtnote').css({ 'background': '#FFF6F6', 'border-color': '#E0B4B4' });
        }
    }
    function Appnote_Save() {
        let Content = $('#Appnote_txtnote').val() ? $('#Appnote_txtnote').val() : "";
        $('#Appnote_txtnote').val("");
        Appnote_Save_Execute(Content);
        return false;
    }
    //#endregion

</script>


