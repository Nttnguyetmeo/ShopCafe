@page
@model MLunarCoffee.Pages.Appointment.AppointmentModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()
<script>js_require_notasync('/js/Calendar_Custom/datetime.js', true)</script>
<script>js_require_notasync('/js/Calendar_Custom/calendar.js', true)</script>
<script>js_require_notasync('/js/WorkScheduler/workscheduler.js', true)</script>
<script>js_require_notasync('/js/Calendar_Custom/appointment.js', true)</script>
<script>js_require('/assests/dist/ColorPicker/spectrum.js')</script>
<script>js_require_notasync('/assests/dist/flatpickr/plugins/weekSelect/weekSelect.js', true)</script>
<link href="/assests/dist/ColorPicker/spectrum.css" rel="stylesheet" />
<script>css_require('/js/Calendar_Custom/calendar.css')</script>

<div class="row">
    <div class="col-12 position-relative p-0">
        <div id="vtt_master" class="card card-plain">
            <div class="vtcardheader card-header pb-0 w-100">
                <div class="vtcondition w-100">
                    <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                    <div class="fulllap collapse collapsesticky show">
                        <div class="row px-2">
                            <div class="col-12 col-sm p-1">
                                <div title="Branch" class="ui fluid search selection dropdown form-control" id="BranchID" onchange="callvtt_onchangeBranch();">
                                    <input type="hidden" name="branch" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Chi nhánh"]</div>
                                    <div id="cbbBranch" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm p-1">
                                <div class="input-group flex-nowrap">
                                    <div class="ui fluid search selection dropdown form-control" id="Doctor_App_ID">
                                        <input id="Doctor" type="hidden" />
                                        <i class="dropdown icon"></i>
                                        <input id="inputdoctor" class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg .@Local["Bác sĩ"]</div>
                                        <div id="cbbDoctor_App" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                    <div class="input-group-text ps-0">
                                        <span id="btn_myself" class="btn badge bg-gradient-success my-auto me-2 _tab_control_" data-tab="callvtt_btn_doc_myself" onclick="callvtt_changeDoctor('myself');">@Local["Của tôi"]</span>
                                        <span id="btn_all" class="btn badge bg-gradient-success my-auto d-none" onclick="callvtt_changeDoctor('all');">@Local["Tất cả"]</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm p-1">
                                <div class="input-group flex-nowrap rounded-end position-relative">
                                    <input id="cal_vtt_inputdate" class="flatpickr form-control border-start rounded-2 rounded-end border-end" type="text" placeholder="eg .@Local["Ngày"]" />
                                    <div class="input-group-text px-3 position-relative text-uppercase cursor-pointer border-start border-1 text-primary" onclick="event.preventDefault();return callvtt_executed_today()">
                                        @Local["Hôm nay"]
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-auto p-1">
                                <div class="d-flex gap-2 ps-lg-1 mt-1 mt-lg-0 overflow-auto">
                                    <button class="btn bg-gradient-primary btn-sm m-0 ms-lg-2" onclick="event.preventDefault();return callvtt_executed()">@Local["Ok"]</button>
                                    <button class="btn btn-dark btn-sm m-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#settingvttLists" aria-expanded="false">
                                        @Local["Cài đặt"]
                                    </button>
                                    <button class="btn btn-dark btn-sm m-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#settingvttorder" aria-expanded="false">
                                        @Local["Sắp xếp bác sĩ"]
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="toggle">
                    <div class="collapse position-absolute  end-1 top-100 mt-2" id="settingvttLists" style="min-width:520px; z-index:10">
                        <div class="card card-body shadow-lg text-dark text-capitalize py-3 overflow-hidden">
                            <div class="row">
                                <div class="row mx-3">
                                    <div class="col-3 p-1">
                                        <p class="mb-2 text-primary text-sm">@Local["Chiều cao"] px</p>

                                        <div class="form-check mt-2">
                                            <input id="cal_h_20" class="form-check-input pr-2" type="radio" name="heightcell" value="20">
                                            <label class="fw-normal text-sm custom-control-label mb-0 cursor-pointer" for="cal_h_20">20</label>
                                        </div>
                                        <div class="form-check">
                                            <input id="cal_h_25" class="form-check-input pr-2" type="radio" name="heightcell" value="25">
                                            <label class="fw-normal text-sm custom-control-label mb-0 cursor-pointer" for="cal_h_25">25</label>
                                        </div>
                                        <div class="form-check">
                                            <input id="cal_h_30" class="form-check-input pr-2" type="radio" name="heightcell" value="30">
                                            <label class="fw-normal text-sm custom-control-label mb-0 cursor-pointer" for="cal_h_30">30</label>
                                        </div>
                                    </div>
                                    <div class="col-3 p-1">
                                        <p class="mb-2 text-primary text-sm">@Local["Thời gian"] @Local["Phút"]</p>

                                        <div class="form-check mt-2">
                                            <input class="form-check-input pr-2" type="radio" name="minutecell" value="15">
                                            <label class="fw-normal text-sm custom-control-label mb-0">15</label>
                                        </div>
                                        <div class="form-check ">
                                            <input class="form-check-input pr-2" type="radio" name="minutecell" value="30">
                                            <label class="fw-normal text-sm custom-control-label mb-0">30</label>
                                        </div>
                                        <div class="form-check ">
                                            <input class="form-check-input pr-2" type="radio" name="minutecell" value="60">
                                            <label class="fw-normal text-sm custom-control-label mb-0">60</label>
                                        </div>
                                    </div>
                                    <div class="col-3 p-1">
                                        <p class="mb-2 text-primary text-sm">@Local["Sắp xếp"]</p>

                                        <div class="form-check mt-2">
                                            <input class="form-check-input pr-2" type="radio" name="sortdoctor"
                                                   value="asc">
                                            <label class="fw-normal text-sm custom-control-label mb-0">A-Z</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input pr-2" type="radio" name="sortdoctor"
                                                   value="desc">
                                            <label class="fw-normal text-sm custom-control-label mb-0">Z-A</label>
                                        </div>
                                    </div>
                                    <div class="col-3 p-1">
                                        <p class="mb-2 text-primary text-sm">@Local["Ngày"]</p>

                                        <div class="form-check mt-2">
                                            <input class="form-check-input pr-2" type="radio" name="typeday" value="7">
                                            <label class="fw-normal text-sm custom-control-label mb-0">7</label>
                                        </div>
                                        <div class="form-check">
                                            <input class="form-check-input pr-2" type="radio" name="typeday" value="1">
                                            <label class="fw-normal text-sm custom-control-label mb-0">1</label>
                                        </div>
                                    </div>
                                    <div class="col-12 p-1">
                                        <p class="mb-0 fw-bold mt-2 text-primary text-sm">@Local["Chọn loại"]</p>
                                        <div class="row">
                                            <div class="col-6">
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input pr-2" type="checkbox" name="showcancel">
                                                    <label class="fw-normal text-sm custom-control-label mb-0">@Local["Lịch hủy"]</label>
                                                </div>
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input pr-2" type="checkbox" name="showtemp">
                                                    <label class="fw-normal text-sm custom-control-label mb-0">@Local["Lịch tạm"]</label>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input pr-2" type="checkbox" name="showconsul">
                                                    <label class="fw-normal text-sm custom-control-label mb-0">@Local["Tư vấn"]</label>
                                                </div>
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input pr-2" type="checkbox" name="showtreat">
                                                    <label class="fw-normal text-sm custom-control-label mb-0">@Local["Điều trị"]</label>
                                                </div>
                                            </div>
                                            <div id="rowShowDoctorWork" class="col-12">
                                                <div class="form-check mt-2">
                                                    <input class="form-check-input pr-2" type="checkbox" name="showdoctornowork">
                                                    <label class="fw-normal text-sm custom-control-label mb-0">@Local["Hiển thị bác sĩ không có lịch làm việc"]</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mx-3">
                                    <div class="col-12 p-1">
                                        <p class="mb-0 text-primary fw-bold mt-2 text-sm">@Local["Loại & trạng thái lịch"]</p>
                                        <div class="mt-2 d-flex item-align-center  ">
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-success"></i>
                                                <span class="text-dark text-sm">@Local["Tư vấn"]</span>
                                            </span>
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-info"></i>
                                                <span class="text-dark text-sm">@Local["Điều trị"]</span>
                                            </span>
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-danger"></i>
                                                <span class="text-dark text-sm">@Local["Lịch hủy"]</span>
                                            </span>
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-dark"></i>
                                                <span class="text-dark text-sm">@Local["Lịch tạm"]</span>
                                            </span>
                                        </div>
                                        <div class="mt-n3 d-flex item-align-center ">
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-success"></i>
                                                <span class="text-dark text-sm">@Local["CheckedIn"]</span>
                                            </span>
                                            <span class="d-flex align-items-center badge-md badge-dot me-4">
                                                <i class="bg-primary"></i>
                                                <span class="text-dark text-sm">@Local["Check out"]</span>
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 mt-4 justify-content-end d-flex">
                                    <button class="btn bg-gradient-primary btn-sm mb-0 me-2" data-value="fade up" style="" onclick="callvtt_settingsaccept();">@Local["OK"]</button>
                                    <button class="btn bg-gradient-dark btn-sm mb-0 me-2" data-value="fade up" style="" onclick="callvtt_settingsreset();">@Local["Mặc định"]</button>
                                    <button class="btn bg-gradient-dark btn-sm mb-0" data-value="fade up" data-bs-toggle="collapse" data-bs-target="#settingvttLists">@Local["Đóng"]</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="collapse position-absolute  end-1 top-100 mt-2" id="settingvttorder" style="min-width:520px; z-index:10">
                        <div class="card card-body shadow-lg text-dark text-capitalize ps-3 py-3 overflow-hidden">
                            <div class="row">
                                <ul id="vttdoc_order" class="nav nav-pills flex-column bg-white border-radius-lg pt-3 px-2">
                                </ul>
                            </div>
                            <div class="col-12 mt-4 justify-content-end d-flex">
                                <button class="btn bg-gradient-primary btn-sm mb-0 me-2" data-value="fade up" onclick="callvtt_orderaccept();">@Local["OK"]</button>
                                <button class="btn bg-gradient-dark btn-sm mb-0 me-2" data-value="fade up" onclick="callvtt_orderreset();">@Local["Mặc định"]</button>
                                <button class="btn bg-gradient-dark btn-sm mb-0" data-value="fade up" data-bs-toggle="collapse" data-bs-target="#settingvttorder">@Local["Đóng"]</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0 pe-1 pb-2 px-3">
                <div class="m-0">
                    <div id="AppointmentLoader" class="waitingdiv position-absolute top-50 start-50 translate-middle" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div id="AppointmentCalendar"></div>
                </div>
            </div>
        </div>
        <div id="vtt_actiontarea" class="position-absolute top-50 start-50 translate-middle bg-gradient-dark text-white shadow-lg card d-none">
            <div class="p-3 pb-0 d-flex">
                <div class="col-auto my-auto">
                    <div class="d-flex justify-content-end">
                        <img id="Apptem_Avatar" class="avatar avatar-md me-3" src="/default.png" alt="label-image" />
                        <div class="mt-1">
                            <h6 id="Apptem_CustName" class="text-sm fw-bold text-white mb-0 "></h6>
                            <div id="Apptem_Code" class="mt-1 text-xs text-white mb-1"></div>
                        </div>
                    </div>
                </div>
                <div class="ms-auto my-auto d-flex justify-content-end">
                    <span id="Apptem_Doctor" class="fw-bold mx-1"></span>
                    <span id="Apptem_Room" class="fw-bold me-1"></span>

                </div>
            </div>
            <hr class="horizontal light">
            <div class="card-body border-radius-lg  text-sm p-3 pt-0">
                <div>
                    <span id="Apptem_Cancel" class="badge bg-gradient-danger text-white cursor-pointer" style="display: none;"></span>
                    <span id="Apptem_btnroom" onclick="event.preventDefault(); Apptem_ChangeRoom();" class="badge bg-gradient-light text-primary  cursor-pointer d-none">@Local["Phòng"]</span>
                    <span onclick="event.preventDefault(); Apptem_Sms();" class="badge bg-gradient-light text-primary  cursor-pointer d-none">@Local["Sms"]</span>
                    <span onclick="event.preventDefault(); Apptem_Call();" class="badge bg-gradient-light text-primary  cursor-pointer d-none">@Local["Gọi"]</span>
                    <span id="Apptem_btnprint" onclick="event.preventDefault(); Apptem_Print();" class="badge bg-gradient-light text-primary  cursor-pointer">@Local["In"]</span>
                    <span onclick="event.preventDefault(); Apptem_CustLink();" class="badge bg-gradient-light text-primary  cursor-pointer">@Local["Đến khách hàng"]</span>
                    <span onclick="event.preventDefault(); addNewSMSApp();" class="badge bg-gradient-light text-primary  cursor-pointer">@Local["Sms"]</span>
                    <span onclick="event.preventDefault(); addNewMailApp();" class="badge bg-gradient-light text-primary  cursor-pointer">@Local["Mail"]</span>

                </div>
                <div class="mt-3">
                    <span>@Local["Thời gian"]</span>
                    <span id="Apptem_DateFrom" class="fw-bold mx-1 border-bottom"></span>
                    <span id="Apptem_Status" class="fw-bold mx-1 border-bottom"></span>
                </div>
                <span class="d-block mt-2">
                    <span>@Local["Chi nhánh"]</span>
                    <span id="Apptem_Branch" class="fw-bold mx-1 border-bottom"></span>
                    <span id="Apptem_Service" class="fw-bold mx-1 border-bottom"></span>
                </span>
                <span class="d-block mt-2">
                    <span id="Apptem_Content" class="text-white"></span>
                </span>
            </div>
            <hr class="horizontal light">
            <div class="card-footer pt-0">
                <div class="mb-3 me-1 d-flex justify-content-end">
                    <svg id="Apptem_Code2D"></svg>
                </div>
                <div>
                    <div class="action_Save">
                        <div class="action_Save-Content">
                            <button class="btn btn-sm bg-gradient-secondary" onclick="Apptem_Cancel()">@Local["Đóng"]</button>
                            <button id="Apptem_btncancel" class="btn btn-sm bg-gradient-danger d-none" onclick="Apptem_DestroyApp()">@Local["Hủy lịch"]</button>
                            <button id="Apptem_btnEdit" class="btn btn-sm bg-gradient-info d-none" onclick="Apptem_Edit()">@Local["Sửa lịch"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="vtt_teamporaryarea" class="position-absolute top-0 start-50 translate-middle-x mt-4 border border-1 shadow-lg card d-none  w-100 w-lg-80 w-xl-50">
            <div class="col-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="col-auto my-auto">
                                <div class="h-100">
                                    <h6 class="mb-0">@Local["Lịch ghi chú"]</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-2 ">
                        <div>
                            <div class="row px-2">
                                <div class="field col-12 col-sm-12 col-xl-6 p-1">
                                    <label>@Local["Ngày hẹn"]</label>
                                    <input id="TempDate_from" name="date" class="flatpickr form-control" type="text" placeholder="eg .@Local["Ngày"]" />
                                </div>
                                <div class="field col-12 col-sm-12 col-xl-6 p-1">
                                    <label>@Local["Dự kiến"]</label>
                                    <div class=" ui fluid search selection dropdown form-control" id="TempTimeSchedule">
                                        <input type="hidden" name="branch" />
                                        <i class="dropdown icon"></i>
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg .@Local["Thời gian"]</div>
                                        <div id="ccbTempTimeSchedule" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row px-2">
                                <div class="field col-12 col-sm-12 p-1 ">
                                    <label>@Local["Bác sĩ"]</label>
                                    <div class="ui fluid search selection dropdown form-control" id="TempDoctor_ID">
                                        <input name="doctor" type="hidden" />
                                        <i class="dropdown icon"></i>
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg .@Local["Bác sĩ"]</div>
                                        <div id="ccbTempDoctor" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row px-2">
                                <div class="field col-12 col-sm-12 px-1 position-relative">
                                    <div class="position-relative">
                                        <div id="FieldTempSearchCustomer" class="input-group mt-3 ">
                                            <span class="input-group-text">@Local["Tìm kiếm"]</span>
                                            <input id="TempSearchCustomer" type="text" placeholder="eg .@Local["Tìm tên"], @Local["Tìm số điện thoại"],..." class="form-control ps-2" />
                                            <div class="input-group-text px-3 p-0">
                                                <i class="btnsear_clear fas fa-minus-circle opacity-1 text-danger"></i>
                                                <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                            </div>
                                        </div>
                                        <div id="FieldTempSearchCustomer_Result" class="bg-white max-height-300 overflow-auto position-absolute rounded-2 shadow-lg start-0 top-100 w-100 z-index-3 mt-2" style="display:none;">
                                            <p class="bg-white font-weight-bold mb-0 mt-2 position-sticky px-3 text-capitalize text-sm top-0 z-index-3">@Local["Kết quả"]</p>
                                            <div id="FieldTempSearchCustomer_NoResult" class="d-none px-3 mt-3">
                                                @Local["Không tìm thấy khách hàng"]
                                            </div>
                                            <ul id="FieldTempSearchCustomer_ResultContent" class="nav nav-pills flex-column bg-white border-radius-lg py-3 pt-2 px-2">
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="currentEmpTemp" class="row px-2 d-none">
                                <div class="col-12 p-1">
                                    <label class="text-sm fw-bold mt-3">@Local["Hồ sơ khách hàng"]</label>
                                    <div class="row px-0 ms-0">
                                        <div class="bg-gradient-primary pt-3 border-radius-lg py-2">
                                            <div class="d-flex pb-2">
                                                <img id="txtTempCustAvatar" class="avatar avatar-md border-radius-md" alt="team-2" src="/default.png">
                                                <div class="ps-2">
                                                    <span id="txtTempCustCode" class="d-block text-white fw-bold text-sm "></span>
                                                    <span id="txtTempCustName" class="d-block text-white text-sm "></span>
                                                </div>
                                            </div>
                                            <div class="card-body pt-0 px-2">
                                                <hr class="horizontal light my-1">
                                                <span class="d-block mt-2 text-white">
                                                    <span class="text-sm">@Local["Ngày tạo"]</span>
                                                    <span id="txtTempCreated" class="fw-bold text-sm mx-1 border-bottom"></span>
                                                    <span id="txtTempSource" class="fw-bold text-sm mx-1 border-bottom"></span>
                                                    <span id="txtTempBranch" class="fw-bold text-sm mx-1 border-bottom"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="formappTemp" class="row px-2 form3">
                                <div class="field col-12 col-sm-12 col-xl-6 p-1">
                                    <label>@Local["Họ và tên"]</label>
                                    <input id="Tempnamecus" name="name" type="text" placeholder="eg .@Local["Tên"]" class="form-control" />
                                </div>
                                <div class="field col-12 col-sm-12 col-xl-6 p-1">
                                    <label>@Local["Điện thoại"]</label>
                                    <input data-tab="phone_customer" class="_tab_control_ form-control" type="text" name="phonenumber" id="Tempphone1" placeholder="eg .@Local["Số điện thoại"]" />
                                </div>
                                <div class="col-12 col-sm-12 p-1" id="__servicecareAppTemp">
                                    <label>@Local["Dịch vụ quan tâm"]</label>
                                    <div class="ui fluid search selection dropdown multiple form-control" id="TemServiceCareToken">
                                        <input type="hidden" name="" />
                                        <i class="dropdown icon"></i>
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text"></div>
                                        <div id="cbbTemServiceCare" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 p-1" id="__noteAppTemp">
                                    <label>@Local["Nội dung lịch hẹn"]</label>
                                    <textarea id="TempNoteSchedule" rows="3" class="form-control"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="position-relative mt-2">
                            <div class="fixed-botombutton">
                                <div class="action_Save">
                                    <div class="action_Save-Content">
                                        <button id="btnTempsendsms" style="display: none;" class="btn bg-gradient-info" onclick="event.preventDefault(); TempSms_ToCust()">@Local["Gửi sms"]</button>
                                        <button id="btnTempcustnew" class="btn bg-gradient-warning" onclick="event.preventDefault(); TempNewCustomer()" style="display:none;">@Local["Tạo khách hàng"]</button>
                                        <button class="btn btn-secondary" form="formappTemp" onclick="event.preventDefault();TempClose()">@Local["Đóng"]</button>
                                        <button form="formappTemp" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault();TempExecuted()">@Local["Lưu"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var data_Calendar_DateFrom;
    var data_Calendar_DateTo;


    var callvtt_doctorkv = {};
    var calOrderdoctor = [];
    var callvtt_appkv = {};

    //#region // Setting var

    var begin_range_time = "08:00";
    var end_range_time = "20:30";
    var begin_range_int = Convert_Hour_Time_To_Int(begin_range_time);
    var cal_is_scheduler = 1;
    var block_height = 25, block_time_range = 15
        , callvtt_isshowcancel = 1
        , callvtt_isshowtemp = 1
        , callvtt_isshowconsul = 1
        , callvtt_isshowtreat = 1
        , callvtt_sortdoctor = 'asc'
        , callvtt_typeday = 7
        , callvtt_showdoctornowork = true;
    var callvtt_cell = "White";
    var callvtt_celltext = "White";
    var callvtt_cellwork = "White";
    var callvtt_cellnowork = "#9e9e9e";
    var callvtt_borderbottom = "1px solid #dddee5";
    var callvtt_borderright = "1px solid #dadce0";
    var callvtt_cellbk = "rgb(255, 255, 255)";
    var callvtt_borderhour = "1px solid #dadce0";

    //#endregion

    //#region // Action
    var customer_id_app;
    var customer_phone_app;
    var customer_status_app;
    var ser_AppointmentActionID
    //#endregion

    //#region  // Temporary
    var note__doctorid;
    var note__branch;
    var note__CurrentID;
    var note__CurrentCustomer = 0;
    var note_data_customer_by_phone;
    //#endregion

    var callvtt_branch = {};
    var data_Current_Doctor = 0;
    var data_Branch_ID = Number(@Model._branchID);
    var input_date;

    //let DataEmployee, DataServiceCare, DataService, DataBranch;
    var data_Calendar_Doctor;
    var callvtt_doctor;
    var callvtt_doctorNick;
    var data_Calendar_Time;
    var data_Calender_ScheduleType = {};
    var data_Calender_Tag = {};
    var CurrentID_Appointment_Temp = 0;
    var cal_vtt_obj;
    var callvtt_cellincolumn = 0;
    let callvtt_Branch_Flag = 0;


    $(document).ready(function () {

        Master_IndexDB_Reads(_Session_Data, [_Session_Employee, _Session_ServiceCare, _Session_Service, _Session_Branch]
            , function (data) {
                DataEmployee = data[0];
                DataServiceCare = data[1];
                DataService = data[2];
                DataBranch = data[3];
                callvtt_settings();
                callvtt_viewbydate();
                let datenow = new Date();
                data_Calendar_DateFrom = new Date(datenow.setDate(datenow.getDate() - datenow.getDay() + 1));
                data_Calendar_DateTo = new Date(datenow.setDate(datenow.getDate() - datenow.getDay() + 7));
                Checking_TabControl_Permission();
                callvtt_branchload(data_Branch_ID);
                CheckPermissionControlInPage(sys_PerControlMH, '@Model.CurrentPath');
            })
        //callvtt_popupapp();
        callvtt_event();
    });

    function callvtt_viewbydate() {
        input_date = $("#cal_vtt_inputdate").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            defaultDate: new Date(),
            disableMobile: true,
            locale: {
                "firstDayOfWeek": 1
            }
            , plugins: callvtt_typeday == 7 ? [new weekSelect({})] : []
            , onChange: [function () {

            }]
        });
    };

    function callvtt_event() {
        $('#settingvttLists input[name="typeday"]').on('click', function () {
            let value = Number($(this).val());
            let blockWork = $("#settingvttLists #rowShowDoctorWork");
            let inputWork = $('#settingvttLists input[name="showdoctornowork"]')
            if (value == 1) {
                blockWork.fadeIn();
                inputWork.prop('checked', true);
            }
            else {
                blockWork.fadeOut();
                inputWork.prop('checked', true);
            }
        })
    }

    //function callvtt_popupapp() {
    //    $(document).mouseup(function(e) {
    //        let popup_color = $("#ColorBoard_ServiceCare");
    //        let popup_doctor = $("#Arrange_Doctor");
    //        let popup_setting = $("#Setting_Calendar");
    //        let specrum = $(".sp-container");
    //        let popup_note = $("#Note_Calendar");
    //        if (!popup_color.is(e.target) && popup_color.has(e.target).length === 0) {
    //            $(".divFiterdata,#ColorBoard_ServiceCare .arrow").removeClass("active");
    //        }
    //        if (!popup_doctor.is(e.target) && popup_doctor.has(e.target).length === 0) {
    //            $(".div_doctor_list,#Arrange_Doctor .arrow").removeClass("active");
    //        }
    //        if (!popup_setting.is(e.target) && popup_setting.has(e.target).length === 0
    //            && !specrum.is(e.target) && specrum.has(e.target).length === 0) {
    //            $(".div_setting_calendar,#Setting_Calendar .arrow").removeClass("active");
    //        }
    //        if (!popup_note.is(e.target) && popup_note.has(e.target).length === 0) {
    //            $(".div_note_calendar,#Note_Calendar .arrow").removeClass("active");
    //        }
    //    });
    //}

    function callvtt_branchload(_branch) {
        AjaxLoad(url = "/Appointment/Appointment/?handler=LoadComboMain"
            , data = { 'branch': _branch }, async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "") {
                    let _data = JSON.parse(result);
                    data_Calendar_Time = _data.Time;
                    data_Calender_Tag = (_data.Tag).reduce((pre, arr) => {
                        if (arr.ID) pre[arr.ID] = arr;
                        return pre;
                    }, {})

                    Load_Combo(data_Calendar_Time, "ccbTempTimeSchedule", true);
                    $("#TempTimeSchedule").dropdown("refresh");
                    $("#TempTimeSchedule").dropdown("set selected", Number(data_Calendar_Time[0].ID));
                    Load_Combo(Object.values(DataServiceCare), "cbbTemServiceCare", true);
                    let _dataBranch = _data.Branch;
                    callvtt_Branch_Flag = 0;
                    if (_dataBranch != undefined) {
                        Load_Combo(_dataBranch, "cbbBranch", true);
                        $("#BranchID").dropdown("refresh");
                        $("#BranchID").dropdown("set selected", _branch);
                        for (let ii = 0; ii < _dataBranch.length; ii++) {
                            callvtt_branch[_dataBranch[ii].ID] = _dataBranch[ii].Name;
                        }
                    }
                    callvtt_Branch_Flag = 1;
                    callvtt_ExecuteDoctor(_data.Doctor);
                    callvtt_checkIsMyself();
                    callvtt_executed();
                }
            }
        );
    }

    function callvtt_ExecuteDoctor(_doctor) {
        callvtt_doctor = _doctor;
        callvtt_doctorNick = [];
        callvtt_doctor.forEach(item => { callvtt_doctorNick.push({ "ID": item.ID, "Name": item.NickName }) });
        Load_Combo(callvtt_doctorNick, "cbbDoctor_App", true, "All");
        $("#Doctor_App_ID").dropdown("refresh");
        $("#Doctor_App_ID").dropdown("set selected", "0");
        Load_Combo(callvtt_doctor, "ccbTempDoctor", true);

        let _order = callvtt_orderget();
        calOrderdoctor = [];
        let doctorkv = {};
        for (let i = 0; i < callvtt_doctor.length; i++) {
            doctorkv[callvtt_doctor[i].ID] = callvtt_doctor[i].NickName;
        }
        callvtt_doctorkv = JSON.parse(JSON.stringify(doctorkv));
        if (_order != "") {
            for (let ii = 0; ii < _order.length; ii++) {
                if (doctorkv[_order[ii]] != undefined) {
                    calOrderdoctor.push({ "ID": _order[ii], "Name": doctorkv[_order[ii]] });
                    delete doctorkv[_order[ii]];
                }
            }
            for (let [key, value] of Object.entries(doctorkv)) {
                calOrderdoctor.push({ "ID": doctorkv[key], "Name": doctorkv[doctorkv[key]] });
            }
        }
        else {
            for (let [key, value] of Object.entries(doctorkv)) {
                calOrderdoctor.push({ "ID": key, "Name": doctorkv[key] });
            }
        }
        callvtt_renderorderdoc(calOrderdoctor, "vttdoc_order");

    }
    //#region // Order

    async function callvtt_renderorderdoc(data, id, callback) {
        return new Promise(resolve => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = `<li data-id="${item.ID}" class="nav-item border-bottom" role="presentation"><a  class="text-sm detail nav-link cursor-pointer">${item.Name}</a></li>`
                        stringContent = stringContent + tr;
                    }

                }
                document.getElementById(id).innerHTML = stringContent;

            }
            if (callback != undefined) callback();
            $("#" + id).sortable();
            resolve();
        });
    }
    function callvtt_orderaccept() {
        let _or = [];
        $('#vttdoc_order li').each(function (index) {
            _or.push($(this).attr('data-id'));

        });
        let branch = Number($('#BranchID').dropdown('get value')) ? Number($('#BranchID').dropdown('get value')) : 0;
        author_set("doctororder" + branch.toString(), JSON.stringify(_or));
        $('#settingvttorder').collapse('hide');

        callvtt_ExecuteDoctor(callvtt_doctor);
        callvtt_executed();
    }
    function callvtt_orderreset() {
        callvtt_renderorderdoc(callvtt_doctorNick, "vttdoc_order", function () {
            callvtt_orderaccept();
        });
    }
    function callvtt_orderget() {
        let branch = Number($('#BranchID').dropdown('get value')) ? Number($('#BranchID').dropdown('get value')) : 0;
        let _order = author_get("doctororder" + branch.toString());
        if (_order != '') {
            let _or = JSON.parse(_order);
            return _or;
        }
        else return "";
    }
    //#endregion
    function callvtt_executed() {
        let stringdate = $('#cal_vtt_inputdate').val().split("-")
        let _d = new Date(stringdate[2], (stringdate[1] - 1), stringdate[0]);
        let Date_Focus = new Date(_d);
        if (callvtt_typeday == 7) {
            if (_d.getDay() == 0) {
                data_Calendar_DateFrom = new Date(_d.setDate(_d.getDate() - _d.getDay() - 6));
                data_Calendar_DateTo = new Date(_d.setDate(_d.getDate() - _d.getDay() + 7));
            }
            else {
                data_Calendar_DateFrom = new Date(_d.setDate(_d.getDate() - _d.getDay() + 1));
                data_Calendar_DateTo = new Date(_d.setDate(_d.getDate() - _d.getDay() + 7));
            }
            if (data_Calendar_DateFrom > Date_Focus || Date_Focus > data_Calendar_DateTo) {
                Date_Focus = data_Calendar_DateFrom;
            }
        }
        else {
            data_Calendar_DateFrom = Date_Focus;
            data_Calendar_DateTo = Date_Focus;
        }
        data_Branch_ID = Number($('#BranchID').dropdown('get value')) ? Number($('#BranchID').dropdown('get value')) : 0;
        data_Current_Doctor = Number($('#Doctor_App_ID').dropdown('get value')) ? Number($('#Doctor_App_ID').dropdown('get value')) : 0;
        callvtt_appget(data_Branch_ID, data_Current_Doctor, Date_Focus)
    }
    function callvtt_executed_today() {
        input_date.setDate(new Date());
    }
    function callvtt_appget(branch, doctor, Date_Focus) {
        let _type = 1;
        if (Number(doctor) == 0) _type = 1
        else _type = 2;

        AjaxLoad(url = "/Appointment/Appointment/?handler=LoadScheduler"
            , data = {
                'datefrom': ConvertDateTimeToStringYMDHHMMSS(data_Calendar_DateFrom)
                , 'dateto': ConvertDateTimeToStringYMDHHMMSS(data_Calendar_DateTo)
                , 'branch': branch
                , 'DoctorID': doctor
                , 'AppID': 0
                , 'type': _type
                , 'IsTemp': 2
            }
            , async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "") {
                    let _data = JSON.parse(result);
                    let _datavalue = _data.Table;
                    callvtt_appkv = callvtt_appget_each(_datavalue);
                    callvtt_Initializeapp(data_Calendar_DateFrom, data_Calendar_DateTo, Date_Focus, branch, doctor);
                }
            }
            , sender = null
            , before = function (e) {
                $("#AppointmentLoader").show();
                $("#AppointmentCalendar").addClass('opacity-7');
            }
            , complete = function (e) {
                $("#AppointmentCalendar").removeClass('opacity-7');
                $("#AppointmentLoader").hide();
            }
        );
    }
    async function callvtt_Initializeapp(_begin, _end, _datefocus, branch, doctor) {

        let Hour_From = begin_range_time;
        let Hour_To = end_range_time;
        let _doctorsource = [];

        if (doctor != 0) {
            _doctorsource = calOrderdoctor.filter(function (obj) {
                return (obj.ID == doctor);
            });

        }
        else {
            _doctorsource = calOrderdoctor;
        }

        let tokendoctor = callvtt_doctor.map(item => item.ID).join(",");
        let dataWork = await callvtt_getdatawork(data_Calendar_DateFrom, data_Calendar_DateTo, branch, tokendoctor);
        //let dataWork = [];
        cal_vtt_obj = $("#AppointmentCalendar").cal({
            resources: JSON.parse(JSON.stringify(_doctorsource)),
            indexdoctor: undefined,
            datestart: _begin,
            dateend: _end,
            datefocus: _datefocus,
            showcancel: callvtt_isshowcancel,
            showtemp: callvtt_isshowtemp,
            showconsul: callvtt_isshowconsul,
            showtreat: callvtt_isshowtreat,
            showdate: callvtt_typeday,
            showdoctornowork: callvtt_showdoctornowork,
            doctorwork: dataWork,
            text_cell_default: callvtt_celltext,
            daytimestart: Hour_From,
            daytimeend: Hour_To,
            width: 150,
            widthtimeline: 60,
            height: block_height,
            events: "[]",
            sortkey: callvtt_sortdoctor,
            value: callvtt_appkv,
            timerange: block_time_range,
            color_background: callvtt_cellbk,
            border_bottom: callvtt_borderbottom,
            border_right: callvtt_borderright,
            border_top_hour: callvtt_borderhour,
            colortimeline: ['#ca2121', '#00b5ad', '#a333c8', '#6435c9', '#2185d0', '#e03997', '#29b87e'],
            eventClick: function (obj) {
                if (obj && obj.id != 0) {
                    callvtt_temporary(0, branch, obj.time, obj.date, obj.resource);
                }
            },
            eventDetail: function (uid, data) {
                if (uid != 0) {
                    if (uid > 0) {
                        callvtt_action(uid)
                    }
                    else {
                        CurrentID_Appointment_Temp = Math.abs(uid);
                        callvtt_temporary(CurrentID_Appointment_Temp);
                    }
                }
            },
            eventScroll: function (_date, _isRender) {
                if ((this.datefocus).getTime() != _date.getTime() && _isRender == 0) {
                    $("#AppointmentLoader").show();
                    $("#AppointmentCalendar").addClass('opacity-7');
                    new Promise((resolve, reject) => {
                        setTimeout(() => {
                            this.renderByDate(ConvertDT_To_StringYMD_Int(_date));
                            this.callEventHandle();
                            $("#AppointmentLoader").hide();
                            $("#AppointmentCalendar").removeClass('opacity-7');
                            resolve();
                        }, 10)
                    });
                }
            },
            onClickPrevDate: function () {
                let _d = new Date(data_Calendar_DateFrom.getTime());
                data_Calendar_DateFrom = new Date(_d.addDays(-callvtt_typeday).getTime());
                input_date.setDate(data_Calendar_DateFrom, true);
                callvtt_executed();
            },
            onClickNextDate: function () {
                let _d = new Date(data_Calendar_DateTo.getTime());
                data_Calendar_DateFrom = new Date(_d.addDays(1).getTime());
                input_date.setDate(data_Calendar_DateFrom, true);
                callvtt_executed();
            },
            onComplete: function () {

                new Promise((resolve, reject) => {
                    setTimeout(() => {
                        let { work, workSchedule } = this.doctorwork;
                        callvtt_setworkview(work, workSchedule);
                        resolve();
                    })
                });


            }
        })
    }


    function callvtt_onchangeBranch() {

        if (callvtt_Branch_Flag == 1) {
            let branchID = Number($('#BranchID').dropdown('get value')) ? Number($('#BranchID').dropdown('get value')) : 0;
            if (branchID != 0) {
                AjaxLoad(url = "/Appointment/Appointment/?handler=LoadComboDoctor"
                    , data = { 'branch': branchID }
                    , async = true
                    , error = function () {
                        notiError_SW();
                    }
                    , success = function (result) {
                        if (result != "") {
                            let data = JSON.parse(result);
                            if (data.length > 0) {
                                callvtt_ExecuteDoctor(data);
                            }
                        }
                    }
                    , sender = null

                );
            }
        }
    }

    //#region // Function app
    function cal_vtt_insert_app(data_result) {
        cal_vtt_obj.insert(data_result);
    }
    function cal_vtt_delete_app(_id, branch_id) {
        if (branch_id == data_Branch_ID) {
            cal_vtt_obj.delete(_id);
        }
    }

    //#endregion
    function addNewSMSApp() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Sms/SmsDetail?TypeCare=" + "1" + "&CustomerID=" + customer_id_app + "&AppID=" + ser_AppointmentActionID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
    }
    function addNewMailApp() {
        $("#MainSendMail_Content").empty();
        $("#MainSendMail_Content").load('/Mail/MailDetail?CustomerID=' + customer_id_app + '&AppID=' + ser_AppointmentActionID + '&ver=' + versionofWebApplication,
            function () {
                $("#MainSendMail").addClass('active');
            }
        );
    }
    //#region // Permission vs change select doctor myself
    function callvtt_changeDoctor(type) {
        try {
            if (type == 'all') {
                $("#Doctor_App_ID").removeClass("disabled");
                Load_Combo(callvtt_doctorNick, "cbbDoctor_App", true, "All");
                $("#Doctor_App_ID").dropdown("refresh");
                $("#Doctor_App_ID").dropdown("set selected", "0");
            } else if (type == 'myself') {
                $("#Doctor_App_ID").addClass("disabled");
                let dtFilterDocNick = callvtt_doctorNick.filter(item => item.ID == sys_employeeID_Main);

                Load_Combo(dtFilterDocNick, "cbbDoctor_App", true);
                $("#Doctor_App_ID").dropdown("refresh");
                $("#Doctor_App_ID").dropdown("set selected", sys_employeeID_Main);
            }
        }
        catch (ex) {
        }
    }
    function callvtt_checkIsMyself() {
        if ($('#btn_myself').length == 0) {
            callvtt_changeDoctor("myself");
        } else {
            $("#btn_all").removeClass("d-none");
        }
    }
    //#endregion
</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>css_require('/js/Calendar_Custom/jquery-ui.css')</script>
<script>js_require_notasync('/assests/dist/Mask/dist/jquery.inputmask.js', true)</script>
<script>js_require_notasync('/assests/dist/Mask/dist/bindings/inputmask.binding.js', true)</script>
<script>js_require('/js/customjs/custom-validation.js')</script>

