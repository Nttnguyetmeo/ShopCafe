@page
@model MLunarCoffee.Pages.Appointment.AppointmentWeek
@{
    Layout = null;
}
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Xếp lịch"] -  @Local["Điều trị"] </h6>
                                <p class="text-sm mb-0">@Local["Xếp lịch theo tuần"]</p>
                            </div>
                        </div>
                        <div class="ms-auto">

                            <button id="rw_btnUpdate" class="btn bg-gradient-primary btn-sm d-none mb-0 disabled"
                                    onclick="return rw_Updatescheduler()">
                                @Local["Cập nhật"]
                            </button>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2 position-relative">
                    <div id="Reweek_wait" class="waitingdiv text-center z-index-sticky" style="display: none; position: absolute; left: 50%;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>

                    </div>
                    <div class="row px-2 form3 " id="Reweek_form">
                        <div class="d-none" id="rw_Setarea">
                            <div class="d-lg-flex ">
                                <div class="col-w-350  mt-lg-3">
                                    <div class="justify-content-center">
                                        <div class="row">
                                            <a class="mt-0 w-auto ps-2 text-primary text-sm fw-bold ">@Local["Từ ngày"]</a>
                                            <span id="rw_datefromva" class="mt-0 w-auto ps-2 text-danger text-sm fw-bold"></span>
                                            <hr class="horizontal dark mt-1 mb-1">
                                            <input id="rw_datefrom" class="form-control flatpickr d-none" type="text" onchange="rw_changedate()" />
                                            <a class="mt-4 w-auto ps-2 text-primary text-sm fw-bold ">@Local["Đến ngày"]</a>
                                            <span id="rw_datetova" class="mt-4 w-auto ps-2 text-danger text-sm fw-bold"></span>
                                            <hr class="horizontal dark mt-1 mb-1">
                                            <input id="rw_dateto" class="form-control flatpickr d-none" type="text" onchange="rw_changedate()" />
                                        </div>
                                    </div>
                                </div>
                                <div class="flex-grow-1 px-3">
                                    <div class="row mt-3">
                                        <div class="field col-12 col-sm-12 col-lg-6 p-1">
                                            <label>@Local["Bác sĩ"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="rw_doctor">
                                                <input id="inputdoctor1" type="hidden" />
                                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                <div id="ccbrw_doctor" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 col-sm-12 col-lg-6 p-1">
                                            <label>@Local["Loại chi tiết"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="rw_scheduletype">
                                                <input id="inputshedulte1" type="hidden" />
                                                <div class="default text">eg .@Local["Loại chi tiết"]</div>
                                                <div id="ccbrw_scheduletype" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 px-1 mt-2">
                                            <label>@Local["Nội dung"]</label>
                                            <textarea id="rw_content" placeholder="eg .@Local["Nội dung"]" class="form-control" rows="3"></textarea>
                                        </div>
                                    </div>
                                    <div class="field col-sm-12 p-1 position-relative">
                                        <div id="rw_timewait" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x d-none">
                                            <div class="spinner-border text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </div>
                                        <div id="rw_timelist" class="row">
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="flex-fill flex-grow-1 overflow-auto mt-2 mt-lg-0">
                            <ul class="bg-transparent nav nav-horizontal d-none nav-pills  weeklist p-3 px-0"
                                role="tablist" id="rw_timeset">
                            </ul>
                        </div>
                        <div class="  px-3  my-3 d-none" id="rw_Scheduler">
                            <div class="d-flex">
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ hai"]</div>
                                    <div class="content week1 p-2"></div>
                                </div>
                                <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ ba"]</div>
                                    <div class="content week2 p-2"></div>
                                </div> <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ tư"]</div>
                                    <div class="content week3 p-2"></div>
                                </div> <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ năm"]</div>
                                    <div class="content week4 p-2"></div>
                                </div> <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ sáu"]</div>
                                    <div class="content week5 p-2"></div>
                                </div> <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Thứ bảy"]</div>
                                    <div class="content week6 p-2"></div>
                                </div> <div class="vr"></div>
                                <div class="week col-auto px-1 text-sm text-dark text-normal m-0">
                                    <div class="title fw-bold text-dark border-bottom pb-2">@Local["Chủ nhật"]</div>
                                    <div class="content week0 p-2"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="action_Save-Content">
                        <button id="rw_btnReset" class="btn bg-gradient-danger btn-sm d-none mb-0"
                                onclick="return rw_Resetscheduler()">
                            @Local["Xoá tất cả"]
                        </button>
                        <button class="btn btn-secondary" onclick="event.preventDefault();CloseModal()">@Local["Hủy"]</button>
                        <button type="button" form="Reweek_form" class="btn bg-gradient-primary mt-2 me-2" onclick="return rw_execute()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var rw_datadow = ["@Local["Chủ nhật"]", "@Local["Thứ hai"]", "@Local["Thứ ba"]", "@Local["Thứ tư"]", "@Local["Thứ năm"]", "@Local["Thứ sáu"]", "@Local["Thứ bảy"]"];
    var ser_CustomerID = (@Model._CustomerID);
    var ser_EmployeeID = (@Model._EmployeeID);
    let rw_data = [];
    let rw_begindate, rw_enddate;
    var re_maxcreated = 50;
    var re_Update = (@Model._Update);
    var re_currentupdate = '0';
    //#region // Load ini
    $(document).ready(function () {
        rw_Checking(re_Update,_success = function () {
            $('#rw_Setarea').removeClass('d-none');
            $('#rw_Scheduler').addClass('d-none');
            $('#rw_btnReset').addClass('d-none');
            $('#rw_btnUpdate').addClass('d-none');
            $('#rw_timeset').addClass('d-none');


        }, _fail = function (_data) {
            $('#rw_Setarea').addClass('d-none');
            $('#rw_Scheduler').removeClass('d-none');
            $('#rw_btnReset').removeClass('d-none');
            $('#rw_btnUpdate').removeClass('d-none');
            $('#rw_timeset').removeClass('d-none');
            rw_listsetRender(_data, "rw_timeset");
            $('#rw_timeset a:first').tab('show');
        });

        rw_loadini();
        $("#rw_datefrom").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            inline: true,
            defaultDate: new Date(),
            minDate: new Date()
        });
        $("#rw_dateto").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            inline: true,
            defaultDate: new Date(),
            minDate: new Date()
        });

    })
    function rw_loadini () {
        AjaxLoad(url = "/Appointment/AppointmentWeek/?handler=LoadataReweekInfo"
            , data = {'CustomerID': ser_CustomerID}
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                let data = JSON.parse(result);

                let dtDoctor = data.Doctor;
                let dtScheType = data.ScheduleType;
                let dtDetail = data.Detail;

                rw_SchedulerRender(dtDetail, "rw_Scheduler");
                Load_Combo(dtDoctor, "ccbrw_doctor", false);
                $("#rw_doctor ").dropdown("refresh");
                $("#rw_doctor ").dropdown("set selected", ser_EmployeeID);

                Load_Combo(dtScheType, "ccbrw_scheduletype", false);
                $("#rw_scheduletype ").dropdown("refresh");
                $("#rw_scheduletype ").dropdown("set selected", dtScheType[0]?.ID ?? "0");

                rw_data = [];
                for (let i = 0; i < 7; i++) {
                    let e = {};
                    e.dow = i;
                    e.selected = 0;
                    rw_data.push(e);
                }
                rw_timerender(rw_data, "rw_timelist");

                rw_changedate();

            }
            , sender = null,
            before = function (e) {
                $("#Reweek_wait").show();
            },
            complete = function (e) {
                $("#Reweek_wait").hide();
            }
        );
    }
    function rw_Checking (_isupdate, _success, _fail) {
        if (_isupdate == 0) _success();
        else {
            AjaxLoad(url = "/Appointment/AppointmentWeek/?handler=CheckAppReweek"
                , data = {'CustomerID': ser_CustomerID}
                , async = true
                , error = function () {notiError_SW();}
                , success = function (r) {
                    if (r != '0') {
                        let _d = JSON.parse(r);
                        if (_d.length > 0) _fail(_d);
                        else _success();
                    }

                }
                , sender = null
            );
        }
    }
    //#endregion
    //#region // Render
    function rw_listsetRender (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                stringContent =
                    `<li class="nav-item d-flex" role="presentation">
                     <a class="listset d-flex align-items-center nav-link cursor-pointer py-1" data-bs-toggle="pill" data-id="0"  role="tab"><i class=" text-gradient text-primary fas fa-filter"></i></a>
                     </li> `;
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    stringContent = stringContent+
                        `<li class="nav-item" role="presentation">
                            <a class="listset nav-link cursor-pointer nav-item-text py-1" data-bs-toggle="pill" data-id="${item.IsRetreat}" role="tab">
                                <div class="d-flex  align-items-center">
                                    <img class="avatar avatar-xs me-2"
                                         src="${item.Image}" onerror="Master_OnLoad_Error_Image(this)" alt="label-image">
                                    <div class="d-flex flex-column">
                                        <h6 class="text-dark text-sm mb-0">${item.EmpName}</h6>
                                        <span class="text-xs text-secondary mt-1 fst-italic"> ${ConvertDateTimeUTC_DMYHM(item.Created)}</span>
                                    </div>
                                </div>
                            </a>
                        </li>`;
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        rw_listsetEvent();
    }
    function rw_listsetEvent () {
        $("#rw_timeset .listset").unbind('click').click(function (event) {
            let id = $(this).attr("data-id");
            re_currentupdate = id;
            if (id != "0") {
                $('#rw_btnUpdate').removeClass('disabled');
                $('#rw_Scheduler .ins').addClass('d-none');
                $('#rw_Scheduler .ins.ins' + id).removeClass('d-none')
            }
            else {
                $('#rw_Scheduler .ins').removeClass('d-none');
                $('#rw_btnUpdate').addClass('disabled');
            }
        });
    }

    async function rw_SchedulerRender (data, id) {
        $("#CDTime_wait").removeClass('d-none');
        return new Promise((resolve) => {
            $('#' + id + ' .content').html('');
            var myNode = document.getElementById(id);
            if (myNode != null) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let dow = (new Date(data[i].DateFrom)).getDay();
                    $('#' + id + ' .week' + dow)
                        .append(
                            `<a data-id="${item.ID}" class="ins ins${item.RetreatCode} scheduler badge text-normal my-2 p-2 w-100 bg-gray-200 text-dark cursor-pointer text-start">
                                <div class="d-lg-flex">
                                    <h6 class="text-danger fw-bold text-sm pe-2 mb-1">${GetHHMM_FromDateTime(item.DateFrom)}</h6>
                                    <span data-id="${item.ID}" class="text-sm   date">${ConvertDateTimeUTC_DMY(item.DateFrom)}</span>
                                </div>
                                <div class="d-block">
                                    <span class="text-sm">${item.DoctorName}</span>
                                </div>
                            </a>`);
                }
            }
            $('#CDTime_wait').addClass('d-none');
            rw_SchedulerEvent();
        });
    }
    async function rw_timerender (data, id) {
        return new Promise((resolve) => {
            $("#rw_timewait").removeClass('d-none');
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';
                    for ([key, item] of Object.entries(data)) {
                        let tr =
                            `<div class="col-12 d-flex align-items-center py-2 ${item.selected == 1 ? `` : `disabled`} ">
                                <div class="form-check mb-0" style="min-width: 100px;">
                                    <input class="check form-check-input" data-id="0" data-value="${item.dow}" type="checkbox" id="schtimecheck_${item.dow}" ${item.selected == 1 ? `checked` : ``} />
                                    <label class="col-w-150 pt-1 text-dark font-weight-bold d-block text-sm mb-0">
                                        ${rw_datadow[item.dow]}
                                    </label>
                                </div>
                                <input id="schtimefrom_${item.dow}" type="text" class="schtime from flatpickr form-control d-none" placeholder="eg. @Local["Từ"]" />
                                <div class="align-items-center d-flex px-2"> - </div>
                                <input id="schtimeto_${item.dow}" type="text" class="schtime to flatpickr form-control d-none" placeholder="eg. @Local["Đến"]" />
                                <label class="pb-0 ms-auto text-danger" id="schnote_${item.dow}"></label>
                            </div>`;

                        stringContent += tr;
                    }
                    myNode.innerHTML = stringContent;
                }
                rw_timeevent();
                $("#rw_timewait").addClass('d-none');
            }, 100);
        });
    }
    function rw_timeevent () {
        let _ddatef = new Date(new Date().toDateString());
        let _ddatet = new Date(new Date().toDateString());


        $("#rw_timelist .schtime.from").flatpickr({
            enableTime: true,
            inline: true,
            noCalendar: true,
            dateFormat: "H:i",
            time_24hr: true,
            defaultDate: (_ddatef.addHours(6)).addMinutes(30),
            defaultHour: 6,
            defaultMinute: 30
        });
        $("#rw_timelist .schtime.to").flatpickr({
            enableTime: true,
            inline: true,
            noCalendar: true,
            dateFormat: "H:i",
            time_24hr: true,
            defaultDate: (_ddatet.addHours(7)).addMinutes(30),
            defaultHour: 7,
            defaultMinute: 30
        });
        $("#rw_timelist .check").unbind('change').on('change', function () {
            if ($(this).is(":checked")) $(this).parent().parent().removeClass('disabled');
            else $(this).parent().parent().addClass('disabled');

        });
         $("#rw_timelist .schtime.from").val(ConvertTimeInt_ToTime('0700'));
         $("#rw_timelist .schtime.to").val(ConvertTimeInt_ToTime('0800'));

    }
    function rw_SchedulerEvent () {
        $("#rw_Scheduler .week .date").unbind('click').on('click', function () {
            CD_CurrentScheduler = Number($(this).attr('data-id'));
            let itemselected = CD_Eachscheduler[CD_CurrentScheduler];
            let DayInt = itemselected.DayInt;
            let Dow = itemselected.Dow;
            let TimeEnd = itemselected.TimeEnd;
            let TimeStart = itemselected.TimeStart;
            let Teacher = itemselected.Teacher;
            let Manuclass = itemselected.Manuclass;
            $("#DetailModal_Content").html('');
            let url = `/Student/Course/CourseClassTimeDetail?ID=${CD_CurrentScheduler}&DayInt=${DayInt}&TimeStart=${TimeStart}&TimeEnd=${TimeEnd}&Teacher=${Teacher}&Manuclass=${Manuclass}&Mindate=${ConvertDateTime_To_YMDInt(CD_Begindate)}&Maxdate=${ConvertDateTime_To_YMDInt(CD_Enddate)}`
            $("#DetailModal_Content").load(url);
            $('#DetailModal').modal('show');
        });
        $("#rw_Scheduler .week .scheduler").unbind('click').on('click', function () {
            if ($(this).hasClass('active')) $(this).removeClass('active');
            else $(this).addClass('active');
        });
    }
    //#endregion

    //#region // Event
    function rw_Updatescheduler () {
         const promise = notiConfirm('@Local["Thao tác này sẽ reset lại lịch hiện có"]');
            promise.then(function () {
                $('#rw_Setarea').removeClass('d-none');
                $('#rw_Scheduler').addClass('d-none');
                $('#rw_btnReset').addClass('d-none');
                $('#rw_timeset').addClass('d-none');
                
            }, function () { });
    }
     function rw_Resetscheduler () {
         const promise = notiConfirm('@Local["Thao tác này sẽ xóa tất cả lịch tuần hiện có"]');
            promise.then(function () {
                AjaxLoad(url = "/Appointment/AppointmentWeek/?handler=ClearData"
                    , data = {
                        'CustomerID': ser_CustomerID
                    }
                    , async = true
                    , error = function () {notiError_SW();}
                    , success = function (result) {
                        if (result != '0') {
                            notiSuccess();
                            LoadScheduleAjax();
                            CloseModal();
                        }
                        else {
                            notiError();
                        }
                    }
                    , sender = null
                );
            }, function () { });
     }
    function rw_changedate () {
        rw_begindate = formatDMY_To_Date($("#rw_datefrom").val());
        rw_enddate = formatDMY_To_Date($("#rw_dateto").val());
        $('#rw_datetova').html(GetDateTime_String_DMY(rw_enddate));
        $('#rw_datefromva').html(GetDateTime_String_DMY(rw_begindate));

    }
    function rw_execute () {
        $('#Reweek_form').form('validate form');
        if ($('#Reweek_form').form('is valid')) {
            if (rw_begindate > rw_enddate) {
                notiWarning('@Local["Ngày bắt đầu lớn hơn ngày kết thúc"]');
            }
            else {
                let isnonvalid = 0;
                let result = {};
                let type = $("#rw_scheduletype").dropdown('get value') ? Number($("#rw_scheduletype").dropdown('get value')) : 0;
                let doc = $("#rw_doctor").dropdown('get value') ? Number($("#rw_doctor").dropdown('get value')) : 0;
                for (let i = 0; i < rw_data.length; i++) {
                    if ($('#schtimecheck_' + i).is(":checked")) {
                        let _start = $('#schtimefrom_' + i).val();
                        let _end = $('#schtimeto_' + i).val();
                        if (_start != "" && _end != "" && _end > _start) {
                            let e = {};
                            e.dow = i;
                            e.timestart = _start;
                            e.timeend = _end;
                            e.type = type;
                            e.doc = doc;
                            result[i] = e;
                            $('#schnote_' + i).html('');
                        }
                        else {
                            isnonvalid = 1;
                            $('#schnote_' + i).html('@Local["Sai định dạng"]');
                        }
                    }
                }
                if (isnonvalid == 0) {
                    if (Object.keys(result).length > 0 && Object.keys(result).length < re_maxcreated) {
                        rw_executeexe(result);
                    }
                    else {
                        notiWarning('@Local["Tối đa"] :' + re_maxcreated)
                    }
                }
            }
        }
        return false;
    }
    function rw_executeexe (_data) {
        let content = $('#rw_content').val();
        let timeSpan = ConvertDateTimeToTimeSpan(new Date());
        let DoctorID = Number($('#rw_doctor').dropdown('get value')) ? Number($('#rw_doctor').dropdown('get value')) : 0;
        let ScheduleTypeID = Number($('#rw_scheduletype').dropdown('get value')) ? Number($('#rw_scheduletype').dropdown('get value')) : 0;
        let data = [];
        for ([key, value] of Object.entries(_data)) {
            var indexd = new Date(rw_begindate);
            for (var d = indexd; d <= rw_enddate; d.setDate(d.getDate() + 1)) {
                if (d.getDay() == value.dow) {
                    data.push({
                        "ID": ConvertDateTimeToTimeSpan(new Date(d)),
                        "date_from": ConvertDT_To_StringYMD(d) + ' ' + (value.timestart != "" ? value.timestart : GetDateTime_Now_HHMM()) + ":00",
                        "date_to": ConvertDT_To_StringYMD(d) + ' ' + (value.timeend != "" ? value.timeend : GetDateTime_Now_HHMM()) + ":00",
                        "timeSpan": timeSpan
                    })
                }
            }
        }

        AjaxLoad(url = "/Appointment/AppointmentWeek/?handler=ExcuteData"
            , data = {
                'CustomerID': ser_CustomerID,
                'data': JSON.stringify(data),
                '_Content': content,
                'DoctorID': DoctorID,
                'ScheduleTypeID': ScheduleTypeID,
                'IsRetreat': re_currentupdate 
                
            }
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {

                if (result != '0') {
                    let codes = result.split(",");
                    if (codes != undefined && codes.length != 0) {
                        for (let cc = 0; cc < codes.length; cc++) {
                            if (codes[cc] != undefined && codes[cc] != '')
                                syslog_cutapp('i', codes[cc], ser_CustomerID, '')
                        }
                    }
                    notiSuccess();
                    LoadScheduleAjax();
                    CloseModal();
                }
                else {
                    notiWarning('@Local["Trùng lịch hẹn"]');
                }
            }
            , sender = null
        );
    }
    //#endregion
</script>
<style>
    #Reweek_form .flatpickr-calendar {
        box-shadow: none;
        border: none;
    }

        #Reweek_form .flatpickr-calendar.hasTime {
            width: 150px;
        }

    #Reweek_form .disabled .flatpickr-calendar {
        opacity: 0.3;
        pointer-events: none;
    }

    #rw_Scheduler .week {
        width: 14%;
        text-align: center;
        min-width: 120px;
    }

        #rw_Scheduler .week .scheduler.active {
            background-color: rgb(var(--bs-primary),0.5) !important;
            color: white !important;
        }

    #rw_Scheduler {
        overflow-x: auto;
    }
        #rw_Scheduler .vr {
            overflow-x: auto;
        }
    
</style>

