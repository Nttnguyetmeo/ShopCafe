@page
@model MLunarCoffee.Pages.Appointment.AppointmentReTreatUpdateModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
    <script>js_require('/js/comon/initialize_setting.js')</script>
</head>
<body>
    <div class="row">
        <div class="col-12">
            <div class="card" id="ReUpdate_Area" style="display: none;">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class=" col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Cập nhật lịch hẹn tái khám"]</h6>
                                <p class="text-sm mb-0">@Local["Cập nhật lịch hẹn tái khám. không thể dời lịch tái khám vào ngày đã có lịch"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row p-3">
                        <div class="rounded-3 p-3 bg-gray-100 d-flex justify-content-center">
                            <div id="ReUpdate_List" class="row font-weight-normal">
                            </div>
                        </div>
                        <div class="input-group d-flex justify-content-center my-3">
                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeMonth(-1);"><i class="fas fa-minus text-danger  pe-2"></i> @Local["Tháng"]</span>
                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeDay(-1);"><i class="fas fa-minus text-danger  pe-2"></i> @Local["Ngày"]</span>
                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeTime(-1);"><i class="fas fa-minus text-danger pe-2"></i> @Local["Giờ"]</span>

                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeTime(1);"><i class="fas fa-plus text-primary pe-2"></i> @Local["Giờ"]</span>
                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeDay(1);"><i class="fas fa-plus text-primary pe-2 "></i> @Local["Ngày"]</span>
                            <span class="changetime input-group-text" onclick="event.preventDefault();return ReUpdate_ChangeMonth(1);"><i class="fas fa-plus text-primary pe-2 "></i> @Local["Tháng"]</span>
                        </div>
                        <div class="d-flex mt-3">
                            <div class="d-flex px-2 py-0">
                                <span class="badge bg-gradient-success me-3"> </span>
                                <div class="d-flex justify-content-center">
                                    <h6 class="mb-0 text-sm">@Local["Hợp lệ"]</h6>
                                </div>
                            </div>
                            <div class="d-flex px-2 py-0">
                                <span class="badge bg-gradient-danger me-3"> </span>
                                <div class="d-flex justify-content-center">
                                    <h6 class="mb-0 text-sm">@Local["Lịch bị trùng"]</h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" id="ReUpdate_NoData" style="display: none;">
                <div class="card-body position-relative z-index-1 text-dark text-sm">
                    <h6 class="font-weight-bolder mb-3">@Local["Chú ý"]!</h6>
                    <p class="mb-3">@Local["Chưa có lịch tái khám"]</p>
                </div>
            </div>
            <div class="card-footer fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" onclick="ReUpdate_Cancel()">@Local["Đóng"]</button>
                        <button id="ReUpdate_CreateNewBtn" type="button"
                                class="btn bg-gradient-primary mt-2 me-2" onclick="ReUpdate_CreateNew()" style="display:none;">
                            @Local["Tạo lịch tái khám"]
                        </button>
                        <button id="ReUpdate_SaveBtn" type="button"
                                class="btn bg-gradient-primary mt-2 me-2" onclick="ReUpdate_Execute()" style="display:none;">
                            @Local["Lưu"]
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">

        var ser_App_CustomerID = (@Model._CustomerAppID);
        var ReUpdate_Data = [];

        $(document).ready(function () {
            ReUpdate_LoadData();
        });

        function ReUpdate_LoadData() {
            AjaxLoad(url = "/Appointment/AppointmentReTreatUpdate/?handler=LoadDataDetail"
                , data = {
                    'CustomerID': ser_App_CustomerID
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != "") {
                        let Data = JSON.parse(result);
                        if (Data.length > 0) {
                            for (let i = 0; i < Data.length; i++) {
                                let item = Data[i];
                                let ele_app = { "ID": item.ID, "DateFrom": item.DateFrom, "IsDuplicate": item.IsDuplicate, "RetreatCode": item.RetreatCode };
                                ReUpdate_Data.push(ele_app);
                            }
                            ReUpdate_Render(ReUpdate_Data, "ReUpdate_List");
                            $("#ReUpdate_Area").show();
                            $("#ReUpdate_NoData").hide();
                            $("#ReUpdate_CreateNewBtn").hide();
                            $("#ReUpdate_Area").show();
                            $("#ReUpdate_SaveBtn").show();

                        } else {
                            $("#ReUpdate_Area").hide();
                            $("#ReUpdate_NoData").show();
                            $("#ReUpdate_CreateNewBtn").show();
                            $("#ReUpdate_Area").hide();
                            $("#ReUpdate_SaveBtn").hide();
                        }
                    }
                }
                , sender = null
            );

        }
        function ReUpdate_Render (data, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let classname = item.IsDuplicate == 1 ? 'bg-gradient-danger' : 'bg-gradient-success';
                        let tr =
                            '<div class="col" >'
                            +'<div class=" d-flex px-2 py-0">'
                            + '<span class="badge ' + classname+' me-3"> </span> '
                            + '<div class="d-flex justify-content-center"> '
                            + '<h6 class="mb-0 text-sm fw-bold">'
                            + Face_Convert_Date_To_DOW_HM(item.DateFrom)
                            + '</h6>'
                            + '<h6 class="mb-0 text-sm ps-3">'
                            + ConvertDateTimeToString_D_M_Y(item.DateFrom)
                            + '</h6>'
                            + '</div>'
                            + '</div>'
                            + '<hr class="horizontal dark my-2">'
                            + '</div>'

                        stringContent = stringContent + tr;
                    }
                }
                document.getElementById(id).innerHTML = stringContent;
            }
        }
        function ReUpdate_ChangeMonth (month) {
            try {
                if (ReUpdate_Data.length > 0) {
                    let data = ReUpdate_Data;
                    let error = 0;
                    for (let i = 0; i < data.length; i++) {
                        let date = new Date(data[i].DateFrom);
                        date.setMonth(date.getMonth() + month);
                        if (date >= new Date()) {
                            data[i].DateFrom = ConvertDateTimeTo_StringT(date);
                        } else {
                            error += 1;
                        }
                    }
                    if (error == 0) {
                        $("#textShowMessage").html("");
                        ReUpdate_Data = data;
                        ReUpdate_Render(ReUpdate_Data, "ReUpdate_List");
                    } else {
                        $("#textShowMessage").html("@Local["Ngày hẹn không được nhỏ hơn ngày hiện tại"]");
                    }
                }
            }
            catch (e) {
               $("#textShowMessage").html("@Local["Sai định dạng"]");
            }
        }
        function ReUpdate_ChangeDay(day) {
            if (ReUpdate_Data.length > 0) {
                let data = ReUpdate_Data;
                let error = 0;
                for (let i = 0; i < data.length; i++) {
                    let date = new Date(data[i].DateFrom);
                    date.setDate(date.getDate() + day);
                    if (date >= new Date()) {
                        data[i].DateFrom = ConvertDateTimeTo_StringT(date);
                    } else {
                        error += 1;
                    }
                }
                if (error == 0) {
                    $("#textShowMessage").html("");
                    ReUpdate_Data = data;
                    ReUpdate_Render(ReUpdate_Data, "ReUpdate_List");
                } else {
                    $("#textShowMessage").html("@Local["Ngày hẹn không được nhỏ hơn ngày hiện tại"]");
                }
            }
        }

        function ReUpdate_ChangeTime(time) {
            if (ReUpdate_Data.length > 0) {
                let data = ReUpdate_Data;
                let error = 0;
                for (let i = 0; i < ReUpdate_Data.length; i++) {
                    let date = new Date(ReUpdate_Data[i].DateFrom);
                    date.setHours(date.getHours() + time);
                    if (date >= new Date()) {
                        ReUpdate_Data[i].DateFrom = ConvertDateTimeTo_StringT(date);
                    } else {
                        error += 1;
                    }
                }
                if (error == 0) {
                    $("#textShowMessage").html("");
                    ReUpdate_Data = data;
                    ReUpdate_Render(ReUpdate_Data, "ReUpdate_List");
                } else {
                    $("#textShowMessage").html("@Local["Giờ hẹn không được nhỏ hơn giờ ngày hiện tại"]");
                }
            }
        }
        function ReUpdate_Execute() {
            if ($('#textShowMessage').html() == '') {
                AjaxLoad(url = "/Appointment/AppointmentReTreatUpdate/?handler=ExcuteData"
                    , data = {
                        'data': JSON.stringify(ReUpdate_Data)
                        , 'Customer_ID': ser_App_CustomerID
                    }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        if (result != "") {
                            let data = JSON.parse(result);
                            if (data[0].result == "1") {
                                let codes = data[0].Code.split(",");
                                if (codes != undefined && codes.length != 0) {
                                    for (let cc = 0; cc < codes.length; cc++) {
                                        if (codes[cc] != undefined && codes[cc] != '')
                                            syslog_cutapp('u', codes[cc], ser_App_CustomerID, '')
                                    }
                                }
                                ReUpdate_Cancel();
                            } else {
                                $("#textShowMessage").html("@Local["Lịch tái khám bị trùng với một lịch hẹn đã có sẵn"].");
                                ReUpdate_Render(data, "ReUpdate_List");
                            }
                        }
                    }
                    , sender = null
                );

            }
        }
        function ReUpdate_Cancel() {
            $('#DetailModal').modal('hide');
            $('#DetailModal_Content').empty();
            if (typeof LoadScheduleAjax !== 'undefined' && $.isFunction(LoadScheduleAjax)) {
                LoadScheduleAjax();
            }
        }
        function ReUpdate_CreateNew () {
            $('#DetailModal').modal('hide');
            $('#DetailModal_Content').empty();
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Appointment/AppointmentReTreat?CustomerID=" + ser_SchedulerCustomerID);
            $('#DetailModal').modal('show');
        }
    </script>
    <style>
        #ReUpdate_Area .changetime {
            cursor: pointer;
        }

            #ReUpdate_Area .changetime:hover {
                background: #f8f9fa;
            }
    </style>
</body>
</html>
