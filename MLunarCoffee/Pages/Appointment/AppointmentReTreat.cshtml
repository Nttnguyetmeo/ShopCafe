@page
@model MLunarCoffee.Pages.Appointment.AppointmentReTreatModel
@{
    Layout = null;
}
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <div class="row">
        <div class="col-12 position-relative">
            <div id="Retreat_wait" class="waitingdiv text-center z-index-sticky" style="display: none; position: absolute; left: 50%;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>

            </div>
            <div class="row" id="Retreat_NotNew" style="display: none;">
                <div class="card-body position-relative z-index-1 text-dark text-sm">
                    <h6 class="font-weight-bolder mb-3">@Local["Chú ý"]!</h6>
                    <p class="mb-3">@Local["Khách hàng đã có lịch tái khám"]</p>
                </div>
            </div>
            <div class="card" id="Retreat_Area" style="display:none">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Lịch tái khám"]</h6>
                                <p class="text-sm mb-0">@Local["Chọn các tháng hẹn tái khám"]</p>
                                <p class="text-sm mb-0">@Local["Ngày trong tháng không hợp lệ sẽ trả về ngày lớn nhất của tháng"]</p>
                            </div>
                        </div>
                        <div class="ms-auto my-auto mt-1">
                            <ul class="nav nav-pills nav-fill p-1 bg-transparent Retreattype" role="tablist">
                                <li class="nav-item " role="presentation">
                                    <a class="type nav-link cursor-pointer active" data-value="month" data-bs-toggle="pill" role="tab">@Local["Tháng"]</a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="type nav-link" data-bs-toggle="pill" data-value="year" role="tab">@Local["Năm"]</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2 ">
                    <div class="d-lg-flex">
                        <div class="col-w-350 my-2">
                            <div class="d-flex justify-content-center mt-n3">
                                <input id="Retreat_Day" name="date" class="form-control flatpickr d-none" type="text" placeholder="eg .@Local["Ngày"]" onchange="Retreat_LoadMonth()" />
                            </div>
                            <div class="d-flex justify-content-center my-3">
                                <input id="Retreat_Time" name="date" class="form-control flatpickr d-none" type="text" placeholder="eg .@Local["Ngày"]" />
                            </div>
                        </div>
                        <div class=" p-3 d-flex justify-content-center w-100">
                            <div>
                                <div id="Retreat_MonthArea" class="d-none field col-12 px-1 mt-2">
                                    <label>@Local["Tháng"]</label>
                                    <div class="ui fluid search selection dropdown form-control" id="Retreat_Nummonth" onchange="Retreat_Render()">
                                        <input id="inputdoctor1" type="hidden" />
                                        <div class="default text">eg .@Local["Tháng"]</div>
                                        <div id="ccbRetreat_Nummonth" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>

                                <div id="Retreat_TimeLineMonth" class="row row-cols-sm-2 row-cols-md-3 fw-normal">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 col-lg-6 px-1 mt-2">
                            <label>@Local["Bác sĩ"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Retreat_Doctor">
                                <input id="inputdoctor1" type="hidden" />
                                <div class="default text">eg .@Local["Bác sĩ"]</div>
                                <div id="ccbRetreat_Doctor" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-lg-6 px-1 mt-2">
                            <label>@Local["Loại chi tiết"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Retreat_ScheduleType">
                                <input id="inputshedulte1" type="hidden" />
                                <div class="default text">eg .@Local["Loại chi tiết"]</div>
                                <div id="ccbRetreat_ScheduleType" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row px-1">
                        <div class="field col-12 px-1 mt-2">
                            <label>@Local["Nội dung"]</label>
                            <textarea id="Retreat_Content" placeholder="eg .@Local["Nội dung"]" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer fixed-botombutton pe-0">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" onclick="CloseModal()">@Local["Đóng"]</button>
                        <button id="Retreat_CreateNewBtn" type="button"
                                class="btn bg-gradient-primary mt-2 me-2" onclick="Retreat_View()" style="display:none;">
                            @Local["Xem lịch tái khám"]
                        </button>
                        <button id="Retreat_SaveBtn" type="button"
                                class="btn bg-gradient-primary mt-2 me-2" onclick="Retreat_SaveData()">
                            @Local["Lưu"]
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const monthNames = [Outlang["Jan"], Outlang["Feb"], Outlang["Mar"], Outlang["Apr"]
            , Outlang["May"], Outlang["Jun"], Outlang["Jul"], Outlang["Aug"], Outlang["Sep"]
            , Outlang["Oct"], Outlang["Nov"], Outlang["Dec"]];
        const retreatyear = 20;
        var retreat_Type = 0;
        var ser_CustomerID = (@Model._CustomerID);
        var ser_EmployeeID = (@Model._EmployeeID);
        var data_obj_retreat = {};
        $(document).ready(function () {
            Retreat_Checking(_success = function () {
                Retreat_LoadIni();
                $("#Retreat_NotNew").hide();
                $("#Retreat_CreateNewBtn").hide();
                $("#Retreat_Area").show();
                $("#Retreat_SaveBtn").show();
            }, _fail = function () {
                    $("#Retreat_NotNew").show();
                    $("#Retreat_CreateNewBtn").show();
                    $("#Retreat_Area").hide();
                    $("#Retreat_SaveBtn").hide();
                });
            $("#Retreat_Day").flatpickr({
                dateFormat: "d",
                enableTime: false,
                noCalendar: false,
                inline: true,
                defaultDate: new Date('1900', 0, 1),
                minDate: new Date('1900', 0, 1),
                maxDate: new Date('1900', 0, 31),
            });
            value = new Date();
            let min = value.getMinutes();
            value.setMinutes(Math.floor(min / 10) * 10 + 10);
            $("#Retreat_Time").flatpickr({
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",
                minTime: "06:00",
                inline: true,
                defaultDate: GetDateTime_String_HHMM(value),
                maxTime: "22:30"
            });
            Retreat_Event();
        });
         //#region // Check and ini
        function Retreat_Checking (_success, _fail) {
            AjaxLoad(url = "/Appointment/AppointmentReTreat/?handler=CheckAppReTreat"
                , data = {'CustomerID': ser_CustomerID}
                , async = true
                , error = function () {notiError_SW();}
                , success = function (r) {
                    if (r == '0' || r == '[]') _success();
                    else _fail();
                }
                , sender = null
            );

        }
        function Retreat_LoadIni() {
            AjaxLoad(url = "/Appointment/AppointmentReTreat/?handler=LoadataReTreatInfo"
                , data = { 'CustomerID': ser_CustomerID }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    let data = JSON.parse(result);
                    let dtContent = data.ReTreatContent;
                    let dtDoctor = data.Doctor;
                    let dtScheType = data.ScheduleType;
                    Retreat_ContentRender(dtContent, 'Retreat_Content');
                    Load_Combo(dtDoctor, "ccbRetreat_Doctor", false);
                    $("#Retreat_Doctor ").dropdown("refresh");
                    $("#Retreat_Doctor ").dropdown("set selected", ser_EmployeeID);

                    Load_Combo(dtScheType, "ccbRetreat_ScheduleType", false);
                    $("#Retreat_ScheduleType ").dropdown("refresh");
                    $("#Retreat_ScheduleType ").dropdown("set selected", dtScheType[0]?.ID ?? "0");

                    let _month = [];
                    for (let i = 0; i < monthNames.length; i++) {
                        let e = {};
                        e.ID = (i + 1);
                        e.Name = monthNames[i];
                        _month.push(e);
                    }
                    let date_Now = new Date();
                    Load_Combo(_month, "ccbRetreat_Nummonth", true);
                    $("#Retreat_Nummonth ").dropdown("refresh");
                    $("#Retreat_Nummonth ").dropdown("set selected", date_Now.getMonth() + 1);
 
                    Retreat_Render();
                }
                , sender = null,
                before = function (e) {
                    $("#Retreat_wait").show();
                },
                complete = function (e) {
                    $("#Retreat_wait").hide();
                }
            );
        }
    
        //#endregion

        function Retreat_LoadMonth() {
            var day = Number($('#Retreat_Day').val());
            for ([key, value] of Object.entries(data_obj_retreat)) {
                value.date = ConvertDateTimeUTC_YMD((Retreat_CheckValidDay(new Date(value.date), day)));
            }
        }
        
        //#region // Render
        function Retreat_Render () {
            data_obj_retreat = {};
            if (retreat_Type == 0) {
                var day = Number($('#Retreat_Day').val());
                let date_Now = new Date();
                let NumMonth = 12;
                for (let i = 1; i <= NumMonth; i++) {
                    let date = Retreat_CheckValidDay(new Date(date_Now.getFullYear(), (date_Now.getMonth() + i), 1), day);
                    let monthNum = date.getMonth();
                    let monthName = monthNames[monthNum];
                    let yearName = date.getFullYear();
                    data_obj_retreat[i] = {
                        "ID": i,
                        "monthName": monthName,
                        "yearName": yearName,
                        "date": ConvertDateTimeUTC_YMD(date),
                        "isCheck": 0
                    }
                }
                Retreat_MonthRender(Object.values(data_obj_retreat).sort((a, b) => a.ID - b.ID), 'Retreat_TimeLineMonth');
            }
            else {
 
                var day = Number($('#Retreat_Day').val());
                let date_Now = new Date();
                let year= date_Now.getFullYear()
                let month = Number($('#Retreat_Nummonth').dropdown('get value')) ? Number($('#Retreat_Nummonth').dropdown('get value')) : 0;
       
                for (let i = 1; i <= retreatyear; i++) {
                    let date = Retreat_CheckValidDay(new Date(year, (month - 1), 1), day);
                    if (date >= date_Now) {
                        let monthNum = date.getMonth();
                        let monthName = monthNames[monthNum];
                        let yearName = date.getFullYear();
                        data_obj_retreat[i] = {
                        "ID": i,
                        "monthName": monthName,
                        "yearName": yearName,
                        "date": ConvertDateTimeUTC_YMD(date),
                        "isCheck": 0
                        }
                    }
                    year = year + 1;
                }
 
                Retreat_MonthRender(Object.values(data_obj_retreat).sort((a, b) => a.ID - b.ID), 'Retreat_TimeLineMonth');
            }
        }
        function Retreat_ContentRender(data, id) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                let stringContent = '';
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        let tr = (item.DoctorName != "" ? (item.DoctorName + ' : ') : "") + item.ServiceName + '| ' + item.Content;
                        stringContent += tr + ' \n';
                    }
                }
                $('#' + id).val(stringContent);
            }
        }
        function Retreat_MonthRender(data, id) {
            let textContent = '';
            for (let i = 0; i < data.length; i++) {
                let item = data[i];
                let result = '<div class="col">'
                    + '<p class="text-sm">'
                    + '<div class="form-check">'
                    + '<input class="ckeck_month form-check-input pr-2" type="checkbox" id="ckeck_month_' + i + '" data-id="' + item.ID + '">'
                    + '<span class="text-primary fw-bold text-sm pe-1">' + item.monthName + '</span>/'
                    + '<span class="text-dark fw-bold text-sm ps-1">' + item.yearName + '</span>'
                    + '</div>'
                    + '</p>'
                    + '</div>';
                textContent += result;

            }
            $('#' + id).html(textContent);
        }
         //#endregion
        //#region // Main Event
        function Retreat_SaveData() {
            let content = $('#Retreat_Content').val();
            let Time_From = $('#Retreat_Time').val();
            let timeSpan = ConvertDateTimeToTimeSpan(new Date());
            let DoctorID = Number($('#Retreat_Doctor').dropdown('get value')) ? Number($('#Retreat_Doctor').dropdown('get value')) : 0;
            let ScheduleTypeID = Number($('#Retreat_ScheduleType').dropdown('get value')) ? Number($('#Retreat_ScheduleType').dropdown('get value')) : 0;
            let data = [];
            for ([key, value] of Object.entries(data_obj_retreat)) {
                if (value.isCheck == 1)
                    data.push({
                        "ID": value.ID,
                        "date_from": value.date + ' ' + (Time_From != "" ? Time_From : GetDateTime_Now_HHMM()),
                        "timeSpan": timeSpan

                    })

            }
            
            if (data.length > 0) {
                AjaxLoad(url = "/Appointment/AppointmentReTreat/?handler=ExcuteData"
                    , data = {
                        'CustomerID': ser_CustomerID,
                        'data': JSON.stringify(data),
                        '_Content': content,
                        'DoctorID': DoctorID,
                        'ScheduleTypeID': ScheduleTypeID
                    }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        if (result != '0') {
                            let codes = result.split(",");
                            if (codes != undefined && codes.length != 0) {
                                for (let cc = 0; cc < codes.length; cc++) {
                                    if (codes[cc] != undefined && codes[cc] != '')
                                        syslog_cutapp('i', codes[cc], ser_CustomerID, '')
                                }
                            }

                            notiSuccess();
                            LoadScheduleAjax();
                            CloseModal();
                        } else {
                            $("#textShowMessage").html('@Local["Trùng lịch hẹn"]');
                        }
                    }
                    , sender = null
                );

            } else {
                $("#textShowMessage").html('@Local["Kiểm tra dữ liệu"]');
            }
        }
        function Retreat_View () {
            CloseModal();
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Appointment/AppointmentReTreatUpdate" + "?CustomerID=" + ser_SchedulerCustomerID + "&DateFrom=" + '' + "&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
        }
        function Retreat_Event () {
            $(".Retreattype .type").unbind("click").bind('click', function (event) {
                $(".Retreattype .type").removeClass('active');
                $(this).addClass('active');
                let value = $(this).attr('data-value');
                if (value == 'month') {
                    $('#Retreat_MonthArea').addClass('d-none');
                    retreat_Type = 0;
                    Retreat_Render();
                }
                else {
                    $('#Retreat_MonthArea').removeClass('d-none');
                    retreat_Type = 1;
                    Retreat_Render();
                }
            });
            $('#Retreat_TimeLineMonth').on('click', '.ckeck_month', function () {
                let ID = $(this).attr('data-id');
                if ($(this).is(':checked')) {
                    data_obj_retreat[ID].isCheck = 1;
                }
                else {
                    data_obj_retreat[ID].isCheck = 0;
                }
            });

        }
        function Retreat_CheckValidDay (date, day) {
            let date_ = new Date(date.getFullYear(), date.getMonth(), day);
            date_.setDate(day);
            if (date.getFullYear() == date_.getFullYear() && date.getMonth() == date_.getMonth()) {
                return date_;
            }
            return Retreat_CheckValidDay(date, Number(day - 1));
        }
        //#endregion
    </script>
    <script>js_require('/js/comon/initialize_setting.js')</script>
    <script>js_require('/js/main.js')</script>


    <style type="text/css">
        #Retreat_Area .flatpickr-calendar {
            box-shadow: none;
            border: none;
        }

        #Retreat_Area .flatpickr-month {
            display: none;
        }

        #Retreat_Area .flatpickr-weekday {
            display: none;
        }

        #Retreat_Area .flatpickr-disabled {
            display: none;
        }
    </style>
</body>
</html>