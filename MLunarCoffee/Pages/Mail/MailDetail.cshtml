@page
@model MLunarCoffee.Pages.Mail.MailDetailModel
@{
    Layout = null;
}

<script>js_require_notasync('/assets/js/plugins/quill.min.js');</script>
<script>js_require_notasync('/assets/js/plugins/choices.min.js');</script>
<script>js_require_notasync('/js/Email.js');</script>

<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<div id="MailDetailLoader" class="waitingdiv text-center position-absolute top-50 start-50 translate-middle" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<div id="MailDetailContainer" class="container-fluid px-0 h-100">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3 card-plain">
                <div class="card-header position-sticky top-0 border-radius-xl z-index-sticky p-3 shadow">

                    <div class="row px-2">
                        <div class="col-12 col-sm-6 col-md-4 col-xl-4 p-1">
                            <label>@Local["Loại email"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="MD_OptionID" onchange="event.preventDefault(); return MailDetail_ChangeType();">
                                <input type="hidden" name="branch" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg. @Local["Loại email"]</div>
                                <div id="cbbMD_OptionID" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-md-4 col-xl-4 p-1">
                            <label>@Local["Chi nhánh gửi"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="MD_BranchID" onchange="event.preventDefault(); return MailDetail_ChangeBranch();">
                                <input type="hidden" name="branch" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg. @Local["Chi nhánh gửi"]</div>
                                <div id="cbbMD_BranchID" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-4 col-xl-4 p-1">
                            <label >@Local["Khách hàng nhận"]</label>
                            <input id="MD_ToCustomer" type="text" class="form-control disabled" disabled="disabled" placeholder="eg .@Local["Khách hàng nhận"]" autocomplete="off" />
                        </div>

                    </div>
                </div>

                <div class="card-body p-3 pt-3">
                    <div class="d-lg-flex">
                        <div class="col-w-100 text-center my-lg-0 my-3 px-4 mx-auto">
                            <div class="mt-1 d-flex align-items-center justify-content-center">
                                <img id="MD_BranchImage" src="#" class="avatar  avatar-lg" alt="image" onerror="Master_OnLoad_Error_Image(this)">
                            </div>
                            <hr class="horizontal dark my-3">
                            <div class="d-flex align-items-center justify-content-center ">
                                <ul id="MD_ChooseLanguage" class="nav nav-pills nav-fill bg-transparent d-inline-flex" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <a class="MD_ChooseLanguageItem px-2 py-1 pb-2 nav-link cursor-pointer active" data-type="Vn" data-bs-toggle="pill" role="tab" aria-selected="true" onclick="event.preventDefault(); return MailDetail_ChangeType();">
                                            <img class="" src="/assests/img/ButtonImg/flag-vn.png">
                                        </a>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <a class="MD_ChooseLanguageItem px-2 py-1 pb-2  nav-link cursor-pointer" data-type="En" data-bs-toggle="pill" role="tab" aria-selected="false" onclick="event.preventDefault(); return MailDetail_ChangeType();">
                                            <img class="" src="/assests/img/ButtonImg/flag-en.png">
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="flex-grow-1">
                            <div id="MD_Mail_InfoSend" class="mb-1 form3">
                                <div class="row mx-n1">
                                    <div class="field col-12 col-sm-12 col-md-6 col-xl-6 px-1">
                                        <div class="input-group my-1">
                                            <span class="input-group-text">@Local["Email gửi"]</span>
                                            <input id="MD_EmailFrom" type="text" class="ps-3 form-control disabled" disabled="disabled" placeholder="eg .@Local["Email gửi"]" autocomplete="off" />
                                        </div>
                                    </div>
                                    <div class="field col-12 col-sm-12 col-md-6 col-xl-6 px-1">
                                        <div class="input-group my-1">
                                            <span class="input-group-text">@Local["Tên hiển thị"]</span>
                                            <input id="MD_MailName" type="text" class="ps-3 form-control disabled" disabled="disabled" placeholder="eg .@Local["Tên hiển thị"]" autocomplete="off" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="field col-12 ">
                                        <div class="input-group flex-nowrap my-1">
                                            <span class="input-group-text">@Local["Email nhận"]</span>
                                            <input id="MD_EmailTo" type="text" name="" class="form-control" placeholder="eg .@Local["Email nhận"]" autocomplete="off" />
                                            <div class="input-group-text cursor-pointer MD_FocusToggle" data-toggle="MD_BoxCC">
                                                @Local["CC"]
                                            </div>
                                            <div class="input-group-text border-end rounded-end-2 cursor-pointer MD_FocusToggle" data-toggle="MD_BoxBCC">
                                                @Local["BCC"]
                                            </div>
                                        </div>
                                    </div>
                                    <div id="MD_BoxCC" class="field col-12" style="display:none;">
                                        <div class="input-group my-1">
                                            <span class="input-group-text">@Local["Email CC"]</span>
                                            <input id="MD_EmailCC" type="text" name="email" class="ps-3 form-control" placeholder="eg .@Local["Email CC"]" />
                                        </div>
                                    </div>
                                    <div id="MD_BoxBCC" class="field col-12" style="display:none;">
                                        <div class="input-group my-1">
                                            <span class="input-group-text">@Local["Email BCC"]</span>
                                            <input id="MD_EmailBCC" type="text" name="email1" class="ps-3 form-control" placeholder="eg .@Local["Email BCC"]" />
                                        </div>

                                    </div>

                                </div>
                            </div>
                            <div class="field">
                                <div class="input-group my-1">
                                    <span class="input-group-text">@Local["Chủ đề"]</span>
                                    <input id="MD_Subject" type="text" class="ps-3 form-control" placeholder="eg .@Local["Chủ đề"]" autocomplete="off" />
                                </div>
                            </div>
                            <div class="field my-1">
                                <a class="position-relative text-sm fw-bold cursor-pointer">
                                    <span>
                                        <i class="fw-bold text-info fas fa-paperclip pe-2">
                                        </i>
                                        <span>@Local["Đính kèm file"]</span>
                                        <span class="text-secondary font-italic ms-2">file,image (@Local["Giới hạn 2M"]) </span>

                                    </span>
                                    <input class="position-absolute start-0 w-100 opacity-0" id="emailfile_vn" type="file" name="files[]" multiple="">
                                </a>
                                <ul class="d-flex mb-0 p-0" id="MailAttach_Content"></ul>
                            </div>
                            <div id="MD_Mail_BodyContent" style="height: calc(100vh - 420px);">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton px-3 mt-2">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessageMail"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();MailDetail_Close()">@Local["Đóng"]</button>
                        <button form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return MailDetail_ConfirmExecute()">@Local["Gửi và đóng"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    //#region // DECLARE & INIT

    let MD_CustomerID = '@Model._CustomerID';
    let MD_TypeSend = '@Model._Type';
    let MD_CustomerCardID = '@Model._CustomerCardID';
    let MD_AppID = '@Model._AppID', MD_PaymentID = '@Model._PaymentID', MD_Link = '@Model._Link';
    let MD_DataOption = {}, MD_DataBranch = {};
    let MD_DataFill = {};
    let MD_FlagLoad = 0;
    let MD_Uploadfile = [];
    var Maxbyteattach = 2098152;
    let MD_Email_Input;
    let MD_Email_To;
    let MD_toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'],
        [{ 'header': 1 }, { 'header': 2 }],
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],
        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
        [{ 'direction': 'rtl' }],                         // text direction
        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
        [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
        [{ 'align': [] }],
        ['link', 'image'],
        ['clean']                                         // remove formatting button
    ];

    $(document).ready(function () {
        MailDetail_Event();
        MailDetail_Init();
        $("#emailfile_vn").change(function (e) {
            let files = this.files;
            if (files != undefined && files.length >= 0) {
                if (files.length <= 3) {
                    for (var i = 0; i < files.length; i++) {
                        if (MD_Uploadfile.length < 3) {
                            MD_Uploadfile.push(files[i]);
                        }
                        else {
                            notiWarning('@Local["Đính kèm tối đa 3 file"]');
                            break;
                        }
                    }
                    MailDetail_RenderAttach(MD_Uploadfile, "MailAttach_Content");
                }
                else notiWarning('@Local["Đính kèm tối đa 3 file"]')
            }

        });


    })

    function MailDetail_Init() {
        AjaxLoad(url = "/Mail/MailDetail/?handler=Initialize"
            , data = {
                CustomerID: MD_CustomerID
            }
            , async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let dataBranch = data.Branch;
                    let dataCustomer = data.Customer;
                    let dataOption = data.Option;

                    if (dataOption && dataOption.length != 0) {
                        MD_DataOption = dataOption.reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                        Load_Combo(dataOption, "cbbMD_OptionID", true);
                        let defaultID = dataOption[0].ID;
                        if(MD_TypeSend != ''){
                            let type = dataOption.find((item) => item.Type == MD_TypeSend);
                            if(type != undefined && type.ID != undefined){ 
                                defaultID = type.ID
                            }
                        }
                        $("#MD_OptionID").dropdown("refresh");
                        $("#MD_OptionID").dropdown("set selected", defaultID);
                    }
                    else notiWarning("@Local["Rỗng"]");

                    if (dataCustomer && dataCustomer.length != 0) {
                        let itemCust = dataCustomer[0];
                        $("#MD_ToCustomer").val(itemCust.Name);
                        if (itemCust.Email != '' && (itemCust.Email).match(/^$|^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$/g)) {
                            MD_Email_To.setValue([itemCust.Email]);
                            $(".choices__input").css({ width: '1ch' });
                        }
                        if (itemCust.NationalID != 4) $('#MD_ChooseLanguage .MD_ChooseLanguageItem[data-type="En"]').tab('show')
                    }
                    MD_FlagLoad = 1;
                    if (dataBranch && dataBranch.length != 0) {
                        MD_DataBranch = dataBranch.reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                        Load_Combo(dataBranch, "cbbMD_BranchID", true);
                        $("#MD_BranchID").dropdown("refresh");
                        $("#MD_BranchID").dropdown("set selected", dataBranch[0].ID);
                    }
                    else notiWarning("@Local["Chi nhánh chưa sử dụng mail"]");

                }
            }
            , sender = null
            , before = function (e) {
                $("#MailDetailLoader").show();
                $("#MailDetailContainer").hide();
            }
            , complete = function (e) {
                $("#MailDetailLoader").hide();
                $("#MailDetailContainer").fadeIn(100);
            }
        );
    }

    //#endregion


    //#region // EXECUTE

    function MailDetail_ConfirmExecute() {
        const promise = notiConfirm();
        promise.then(function () { MailDetail_ExcuteData(); }, function () { });
    }

    async function MailDetail_ExcuteData() {
        try {
            $('#MD_Mail_InfoSend').form('validate form');
            if ($('#MD_Mail_InfoSend').form('is valid')) {
                let branchID = Number($('#MD_BranchID').dropdown('get value')) ? Number($('#MD_BranchID').dropdown('get value')) : 0;
                if (branchID && branchID != 0 && MD_DataBranch[branchID]) {
                    let item = MD_DataBranch[branchID];
                    let obj = {};
                    let textMail = ((MD_Email_Input.root.innerText).trim()).replace(/(?:\r\n|\r|\n)/g, '');
                    obj.branchID = branchID;
                    obj.emailFrom = item.Mail;
                    obj.emailTo = $('#MD_EmailTo').val() ? ($('#MD_EmailTo').val()).trim() : '';
                    obj.emailCC = $("#MD_EmailCC").val() ? ($("#MD_EmailCC").val()).trim() : '';
                    obj.emailBCC = $("#MD_EmailBCC").val() ? ($("#MD_EmailBCC").val()).trim() : '';
                    obj.subject = $("#MD_Subject").val() ? ($("#MD_Subject").val()).trim() : '';
                    obj.content = (MD_Email_Input.root.innerHTML).trim();
                    if (obj.emailFrom != '' && obj.emailTo != '' && textMail.length != 0) {
                        MailDetail_ExcuteData_Send(obj)
                    }
                    else if (obj.emailFrom == '') notiWarning('@Local["Chưa cấu hình mail gửi"]')
                    else if (obj.emailTo == '') notiWarning('@Local["Không có mail nhận"]');
                    else if (textMail.length != 0) notiWarning('@Local["Chưa Có Nội Dung"]');
                }
                else notiWarning("@Local["Chi nhánh chưa sử dụng mail"]");
            }
        }
        catch (ex) {
            notiError_SW();
        }
    }

    async function MailDetail_ExcuteData_Send({ emailFrom, emailTo, emailCC, emailBCC, subject, content, branchID }) {
        try {

            let result = Email_SendNormal(emailFrom, emailTo, emailCC, emailBCC, subject, content, MD_Uploadfile);
            if (result == 1) MailDetail_ExcuteData_Insert(emailFrom, emailTo, emailCC, emailBCC, subject, branchID);
            else notiWarning('@Local["Đính kèm tối đa 3 file"] . @Local["Tối đa 2m / file.( image, document )"]')
        }
        catch (ex) {
            notiError();
        }
    }

    async function MailDetail_ExcuteData_Insert(emailFrom, emailTo, emailCC, emailBCC, subject, branchID) {
        return new Promise((resolve) => {
            setTimeout(() => {
                let obj = new Object();
                obj.CustomerID = MD_CustomerID;
                obj.BranchID = branchID;
                obj.EmailFrom = emailFrom;
                obj.EmailTo = emailTo;
                obj.EmailCC = emailCC;
                obj.EmailBCC = emailBCC;
                obj.Subject = subject;
                obj.Type = Number($('#MD_OptionID').dropdown('get value')) ? Number($('#MD_OptionID').dropdown('get value')) : 0;

                AjaxLoad(url = "/Mail/MailDetail/?handler=ExecuteData"
                    , data = { data: JSON.stringify(obj) }
                    , async = true
                    , error = function () {
                        notiError_SW();
                    }
                    , success = function (result) {
                        notiSuccess();
                        MailDetail_Close();
                    }
                );
            }, 10)
        })
    }
    //#endregion


    //#region // EVENT CHANGE

    function MailDetail_Event() {

        MD_Email_Input = new Quill('#MD_Mail_BodyContent', {
            theme: 'snow',
            placeholder: 'Waiting for your precious content',
            modules: {
                toolbar: MD_toolbarOptions
            }
        });

        MD_Email_To = new Choices("#MD_EmailTo", {
            delimiter: ',',
            editItems: false,
            maxItemCount: 1, // Tùy chỉnh số lượng item mail nhận
            removeItemButton: true,
            addItems: true,
            duplicateItemsAllowed: false,
            allowHTML: false,
            addItemText: (value) => {
                return `@Local["Nhấn enter để thêm"] <b>"${value}"</b>`;
            },
            addItemFilter: (value) => {
                return value.match(/^$|^[\w-\.]+@@([\w-]+\.)+[\w-]{2,4}$/g);
            }
        });

        $(".MD_FocusToggle").on('click', function () {
            let dataToggle = $(this).attr('data-toggle');
            let itemBox = $("#" + dataToggle);
            if (itemBox && itemBox.length != 0) {
                itemBox.slideToggle(100);
                itemBox.children('input').val('');
            }
        })
    }

    function MailDetail_ChangeBranch() {
        if (MD_FlagLoad == 1) {
            let branchID = Number($('#MD_BranchID').dropdown('get value')) ? Number($('#MD_BranchID').dropdown('get value')) : 0;
            AjaxLoad(url = "/Mail/MailDetail/?handler=LoadData"
                , data = {
                    CustomerID: MD_CustomerID,
                    CustomerCardID: MD_CustomerCardID,
                    AppID: MD_AppID,
                    PaymentID: MD_PaymentID,
                    BranchID: branchID
                }
                , async = true
                , error = function () {
                    notiError_SW();
                }
                , success = function (result) {
                    if (result != '0') {
                        let data = JSON.parse(result);
                        MD_DataFill = {};
                        if (data && data.length == 1) MD_DataFill = data[0];
                        if (branchID && branchID != 0 && MD_DataBranch[branchID]) {
                            let item = MD_DataBranch[branchID];
                            $("#MD_BranchImage").attr('src', item.Image);
                            $("#MD_MailName").val(item.DisplayName);
                            $("#MD_EmailFrom").val(item.Mail);
                            ToolPopper();
                        }
                        MailDetail_ChangeType();
                    }
                }
            )
        }
    }

    function MailDetail_ChangeType() {
        if (MD_FlagLoad == 1) {
            let optionID = Number($('#MD_OptionID').dropdown('get value')) ? Number($('#MD_OptionID').dropdown('get value')) : 0;
            if (optionID && optionID != 0 && MD_DataOption[optionID]) {
                let item = MD_DataOption[optionID];
                MailDetail_Fill(item);
            }
        }
    }

    //#endregion


    //#region // Fill Data Template

    function MailDetail_Fill(data) {
        let charLanguage = $("#MD_ChooseLanguage .MD_ChooseLanguageItem.active").attr('data-type');
        if (data && charLanguage && charLanguage != '') {

            let idxSub = 'MailSubject' + charLanguage;
            let idxValue = 'Value' + charLanguage;
            let idxTemplate = 'Link' + charLanguage;
            let link = data[idxTemplate] != undefined ? data[idxTemplate] : "";
            $("#MD_Subject").val(data[idxSub] != undefined ? data[idxSub] : "");
            let stringNote = data[idxValue] != undefined ? data[idxValue] : "";
            if (link != '') {
                AjaxJWT(url = "/api/File/GetTemplate"
                    , data = JSON.stringify({
                        'Link': link,
                        'Type': 'html'
                    })
                    , async = true
                    , success = function (result) {
                        if (result != "0") {
                            MailDetail_MailAllContent(content = stringNote, template=result);
                        }
                        else MailDetail_MailAllContent(content = stringNote, template = "");
                    }
                );
            }
            else MailDetail_MailAllContent(content = stringNote, template = "");
        }
    }

    async function MailDetail_MailAllContent (content,template) {
        return new Promise((resolve) => {
            setTimeout(() => {
                if (Object.entries(MD_DataFill).length != 0) {
                    for ([key, value] of Object.entries(MD_DataFill)) {
                        let keyReplace = '#' + key + '#';
                        content = content.replaceAll(keyReplace, value);
                        template = template.replaceAll(keyReplace, value);
                    }
                }
                let maincontent = '';
                if (content != "" && template != "") maincontent = content + '<br>' + template;
                else if (content != "") maincontent = content;
                else maincontent = template;
                if (MD_Link != '') maincontent += '<a href="' + MD_Link + '" >' + MD_Link + '</a>';
                let initialContent = MD_Email_Input.clipboard.convert(String(maincontent));
                MD_Email_Input.setContents(initialContent, 'silent');
            }, 100)
        })
    }
    async function MailDetail_RenderAttach (data, id) {
        return new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    myNode.innerHTML = '';
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (var i = 0; i < data.length && i<3 ; i++) {
                            item = data[i];
                            let size = item.size;
                            let ext = item.name.split('.').pop().toLowerCase();
                            let tr = `<li class="border-0 my-2 d-flex justify-content-between ps-0">
                                    <div class="d-flex align-items-center">
                                        <div class="d-flex flex-column">
                                            <h6 class="mb-0 text-dark text-sm">${item.name}</h6>
                                        </div>
                                    </div>
                                    <div class="d-flex">
                                        <button data-index="${i}" class="attachmail btn btn-link btn-icon-only btn-rounded btn-sm text-dark icon-move-right my-auto">
                                        <i class="text-sm text-danger fas fa-times" aria-hidden="true"></i>
                                        </button>
                                    </div>
                                </li>`  ;


                            stringContent = stringContent + tr;

                        }
                    }
                    document.getElementById(id).innerHTML = stringContent;
                }
                MailDetail_Attach_Event();
            }, 100)
        })
    }

    //#endregion


    //#region // OTHER
    function MailDetail_Attach_Event () {
        $('#MailAttach_Content .attachmail').unbind().click(function () {
            let index = $(this).attr('data-index');
            if (MD_Uploadfile != undefined && MD_Uploadfile.length != 0) {
                MD_Uploadfile.splice(index, 1);
                MailDetail_RenderAttach(MD_Uploadfile, "MailAttach_Content");
            }
        });


    }
    function MailDetail_Close() {
        $("#MainSendMail").removeClass('active');
        $("#MainSendMail_Content").empty();
    }

    //#endregion


</script>

<style>

    .title-w-input {
        width: 55px;
    }

    .choices {
        flex: 1 1 auto;
        margin-bottom: 0 !important;
    }

    .choices__inner {
        padding: 0px 7px;
        border-radius: 0;
    }

    .choices__item, .choices__input {
        margin-bottom: 0 !important;
    }

    .choices__list--multiple .choices__item[data-deletable] {
        font-size: 15px;
        padding: 2px 7px;
    }
    .ql-editor p {
        color: #000000;
    }
</style>