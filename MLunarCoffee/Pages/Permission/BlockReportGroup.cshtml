@page
@model MLunarCoffee.Pages.Permission.BlockReportGroupModel
@{ Layout = null;
}
<div class="row my-3">
    <div class="col-lg-3">
        <div class="position-sticky top-1 z-index-3 mb-2">
            <ul class="nav nav-pills nav-menus nav-menus-vertical flex-column bg-white border-radius-lg" id="PermisBRG_Group">
            </ul>
        </div>
    </div>
    <div class="col-lg-9 mt-lg-0 mt-0">
        <div class="pt-0">
            <div class="d-flex mb-2">
                <div class="col-auto my-auto py-1">
                    <span id="PermisBRG_HeaderName" class="badge badge-md bg-gradient-warning"></span>
                    <span id="Permis_Hiddenpass" class="d-none">@Model._Password</span>
                </div>
                <div class="ms-auto my-auto py-1">
                    <button id="btnPermisBRG_Edit" class="btn bg-gradient-dark btn-sm d-none Permission_btnEdit badge badge-md m-0" onclick="PermisBRG_EditBegin()">
                        @Local["Chỉnh sửa"]
                    </button>
                    <div id="PermisBRG_EditArea" class="d-none">
                        <button class="btn bg-gradient-dark btn-sm m-0 badge badge-md" onclick="PermisBRG_Cancel()">@Local["Hủy"]</button>
                        <button id="btnPermisBRG_Save" class="btn bg-gradient-primary btn-sm m-0 badge badge-md" onclick="PermisBRG_SaveExecute()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
            <div id="loaderList" class="waitingdiv text-center w-100 mt-2" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div id="PermisBRG_Detail" class="border-dashed border-radius-md  border-1 border-secondary px-2 py-4">

            </div>
        </div>
    </div>
</div>


<script>js_require('/js/comon/initialize_setting.js');</script>
<script type="text/javascript">
    var PermisCurrentGroup = 0;
    var PermisData;
    var AllowGroupReport = "@Model._AllowGroup";
    var Permis_Systempass = '';
    var Permis_SystemSavepass = '';
    $(document).ready(function () {
        PermisBRG_LoadGroup();
        Permis_Systempass = $('#Permis_Hiddenpass').html();
        let obj = author_get('syspass');
        if (obj != undefined && obj != '') {
            Permis_SystemSavepass = obj;
        }
    });

    function PermisBRG_LoadGroup() {
        AjaxLoad(url = "/Permission/BlockReportGroup/?handler=LoadData"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    PermisData = JSON.parse(result);
                    PermisBRG_GroupRender(PermisData, 'PermisBRG_Group');
                    PermisBRG_GroupEvent();
                    $('#PermisBRG_Group a:first').tab('show');
                }
            });
        return false;
    }

    function PermisBRG_GroupRender(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    stringContent = stringContent + '<li class="nav-item">'
                        + '<a data-id="' + item.ID + '" class="permission_group item-menu nav-link text-dark text-sm p-2" data-bs-toggle="tab">'
                        + '<span class="text-sm">' + item.Name + '</span>'
                        + '</a>'
                        + '</li>'
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }

    function PermisBRG_GroupEvent() {
        $(".permission_group").on('shown.bs.tab', function (e) {
            $('.permission_group').removeClass('active');
            $(this).addClass('active');
            let ID = $(this).attr("data-id");
            let x = PermisData.filter(word => word["ID"] == ID)[0];
            if (x != undefined) {
                let Name = x.Name;
                PermisBRG_DetailEdit(ID, Name);
            }
        });
    }

    function PermisBRG_DetailEdit(GroupID, Name) {
        event.preventDefault();
        PermisCurrentGroup = GroupID;
        $('#PermisBRG_HeaderName').html(Name)
        if (!$('#PermisBRG_EditArea').hasClass('d-none')) $('#PermisBRG_EditArea').addClass('d-none');
        if ($('#btnPermisBRG_Edit').hasClass('d-none')) $('#btnPermisBRG_Edit').removeClass('d-none');
        PermisBRG_DetailLoad(PermisCurrentGroup);
    }

    function PermisBRG_DetailLoad(GroupID) {
        AjaxLoad(url = "/Permission/BlockReportGroup/?handler=LoadDataDetail"
            , data = {
                GroupID: GroupID
            }
            , async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = PermisBRG_AllowGroup(JSON.parse(result));
                    PermisBRG_DetailRender(data, "PermisBRG_Detail");
                }
            }
            , sender = null
            , before = function (e) {
                $("#PermisBRG_Detail").hide();
                $("#loaderList").show();
            }
            , complete = function (e) {
                $("#PermisBRG_Detail").show();
                $("#loaderList").hide();
            });
        return false;
    }

    function PermisBRG_AllowGroup(data) {
        try {
            var dataGroup = [];
            AllowGroupReport = AllowGroupReport.trim();
            if (AllowGroupReport != '') {
                let dataGroupByID = AllowGroupReport.split(',');
                if (dataGroupByID && dataGroupByID.length != 0) {
                    dataGroup = data.reduce((pre, arr) => {
                        if (arr.GroupID) {
                            let dtFilter = dataGroupByID.filter((item) => { return Number(item) === Number(arr.GroupID) });
                            if (dtFilter && dtFilter.length != 0) pre.push(arr);
                        }
                        return pre;
                    }, [])
                }
            }
            else dataGroup = data;
            return dataGroup;
        }
        catch (ex) {
            return [];
        }
    }

    function PermisBRG_EditBegin() {
        event.preventDefault();
        if (!$('#btnPermisBRG_Edit').hasClass('d-none')) $('#btnPermisBRG_Edit').addClass('d-none');
        if ($('#PermisBRG_EditArea').hasClass('d-none')) $('#PermisBRG_EditArea').removeClass('d-none');
        $("#PermisBRG_Detail :input").attr("disabled", false);
    }

    function PermisBRG_SaveExecute() {
        var x = document.getElementsByName("chkPermissDetail");
        if (x != null && x != undefined) {
            var data = [];
            for (let i = 0; i < x.length; i++) {
                let element = {};
                element.ID = x[i].value;
                element.Status = (x[i].checked) ? 1 : 0;
                data.push(element);
            }
            AjaxLoad(url = "/Permission/BlockReportGroup/?handler=ExecuteData"
                , data = {
                    data: JSON.stringify(data),
                    CurrentID: PermisCurrentGroup
                }, async = true, error = null
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        setTimeout(() => {
                            PermisBRG_DetailLoad(PermisCurrentGroup);
                        }, 100)
                    }
                    else notiError();
                });
        }
        if (!$('#PermisBRG_EditArea').hasClass('d-none')) $('#PermisBRG_EditArea').addClass('d-none');
        if ($('#btnPermisBRG_Edit').hasClass('d-none')) $('#btnPermisBRG_Edit').removeClass('d-none');
        $("#PermisBRG_Detail :input").attr("disabled", true);
        return false;
    }

    function PermisBRG_Cancel() {
        if (!$('#PermisBRG_EditArea').hasClass('d-none')) $('#PermisBRG_EditArea').addClass('d-none');
        if ($('#btnPermisBRG_Edit').hasClass('d-none')) $('#btnPermisBRG_Edit').removeClass('d-none');
        $("#PermisBRG_Detail :input").attr("disabled", true);
        setTimeout(() => {
            PermisBRG_DetailLoad(PermisCurrentGroup);
        }, 100)
        return false;
    }

    function PermisBRG_DetailRender(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                let idGroup = 0;
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let reportName = Outlang[item.LangKey] != undefined ? Outlang[item.LangKey] : item.ReportName;
                    if (item.GroupID != idGroup) {
                        let textGroup = Outlang[item.LangKeyGroup] != undefined ? Outlang[item.LangKeyGroup]  : item.GroupName;
                        idGroup = item.GroupID;
                        stringContent = stringContent
                            + '<h6 class="fw-bold text-md m-2 text-gradient text-primary">' + textGroup + '</h6>'
                            + '<div class="row row-cols-1 row-cols-sm-1 row-cols-md-2 row-cols-lg-3 flex-grow-1 mb-4">';
                    }
                    let checked = '';
                    let islock = 0;
                    if (item.IsLock == 1) {
                        if (Permis_SystemSavepass != Permis_Systempass) islock = 1;
                    }
                    if (islock == 1) checked = `<i class="lock cursor-pointer form-check-input ps-1 pr-2 fas text-danger fa-lock"></i>`;
                    else {
                        if (item.isBlock == 1) {
                            checked = `<input class="form-check-input pr-2" type="checkbox" value=${item.ID} name="chkPermissDetail" disabled>`;
                        }
                        else {
                            checked = `<input class="form-check-input pr-2" type="checkbox" value=${item.ID} name="chkPermissDetail" checked disabled>`;
                        }
                    }
             
                    stringContent = stringContent
                        + '<div class="col">'
                        + '<div class="form-check form-check m-2">'
                        + checked
                        + '<label class="ps-1 text-sm font-weight-normal" >' + reportName + '</label>'
                        + '</div>'
                        + '</div>'
                    if ((i === data.length - 1) || idGroup !== data[i + 1].GroupID) {
                        stringContent = stringContent + '</div><hr class="horizontal dark mt-2 mb-5">';
                    }
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        PermisBRG_DetailEvent()
    }
    function PermisBRG_DetailEvent () {
        $("#PermisBRG_Detail .lock").click(function (event) {
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Lock/Lockfunction" + "?ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
        });
    }
</script>
<script>js_require('/js/main.js');</script>



