@page
@model MLunarCoffee.Pages.Marketing.TicketSourceListModel
@{
    Layout = null;
}

<div class="container-fluid py-0 px-0">
    <div class="row m-0">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0 px-2">
                    <div class="left">
                        <h6 class="mb-0">@Local["Nguồn khách hàng"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách"]</p>
                    </div>
                    <div class="right">
                        <button class="btn bg-gradient-primary btn-sm mt-1 setting_projectclosure" onclick="return AddNewGroupType()">@Local["Thêm nhóm"]</button>
                        <button class="btn bg-gradient-primary btn-sm mt-1 setting_projectclosure" onclick="event.preventDefault();return AddNewTicketSource()">@Local["Thêm nguồn"]</button>
                    </div>                    
                </div>
                <div class="card-body pt-0  px-2">
                    <div class="d-lg-flex">
                        <div class="col-w-250 mx-auto">
                            <div class="p-0">
                                @*<ul class="list-group p-2" id="dtGroupType">
                                </ul>*@
                                <table class="table vt-table mb-0" id="dtGroupType">
                                    <thead>
                                        <tr>
                                            <th colspan="2">@Local["Loại"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="dtGroupTypeBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="flex-grow-1 ">
                            <div class="ms-2">
                                <div class="m-0 table-responsive">
                                    <table class="table vt-table mb-0" id="dtContentType">
                                        <thead>
                                            <tr>
                                                <th class="d-none">ID</th>
                                                <th style="width:40px">#</th>
                                                <th>@Local["Tên trạng thái"]</th>
                                                <th>@Local["Người sửa"]</th>
                                                <th class="no-sort setting_projectclosure" style="width:40px">@Local["Xóa"]</th>
                                            </tr>
                                        </thead>
                                        <tbody id="dtContentTypeBody">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>js_require('/js/comon/initialize_setting.js');</script>

<script type="text/javascript">
    var data_group_type;
    var data_type;
    var CurrentGroupTypeID = 0;
    let DataUser;
    $(document).ready(function () {
        LoadTicketSourceAjax();
        $('#dtGroupTypeBody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].getAttribute('data-id'));
            EditGroupType(ID);
            CurrentGroupTypeID = ID;
        });
        $('#dtGroupTypeBody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].getAttribute('data-id'));
            DeleteSourceCat(ID)
        });

        $('#dtContentType tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            EditTicketSource(ID);
        });
        $('#dtContentType tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteTicketSource(ID)
        });


    });
    // load datalist
    function LoadTicketSourceAjax() {

        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                AjaxLoad(url = "/Marketing/TicketSourceList/?handler=LoadData"
                    , data = { }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        if (result != "") {
                            data_group_type = JSON.parse(result)["Table"];
                            data_type = JSON.parse(result)["Table1"];
                            Render_Table_Group_Type(data_group_type, 'dtGroupTypeBody');
                            TriggerClick_GroupType();
                        }
                    }
                );

            });
    }

    //render statusParent
    function Render_Table_Group_Type(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let total = 0;
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];                    
                    stringContent +=
                    `<tr class="rowMaster" data-id="${item.ID}">
                        <td class="d-none">
                            ${item.ID}
                        </td>
                        <td>
                            <div class="d-flex ms-2">
                                <div class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center rounded-2 text-center" title="Quantity">
                                    <h6 class="text-white mt-2">
                                        ${Number(item.TotalChildren)}
                                    </h6>
                                </div>
                                <div class="d-flex flex-column">
                                    <h6 class="text-dark text-sm mb-0 text-decoration-underline buttonEditClass">
                                        ${item.Name}
                                    </h6>
                                </div>
                            </div>
                        </td>
                            <td class="col-3">
                            <div class="d-flex justify-content-center setting_projectclosure">
                                ${item.DeleteButton == 1 ? `<button class="btn btn-link btn-icon-only text-dark my-auto buttonDeleteClass"><i title="Remove" class="remove icon" aria-hidden="true"></i></button>` : ""}
                            </div>
                        </td>
                    </tr>
                    `
                    total = total + Number(item.TotalChildren);                    
                }

            }
            stringContent =
                `<tr class="rowMaster" data-id="0">
                    <td class="d-none">
                        0
                    </td>
                    <td colspan="2">
                        <div class="d-flex ms-2">
                            <div class="icon icon-shape icon-sm me-3 bg-gradient-dark rounded-2 text-center" title="Quantity">
                                <h6 class="mt-2 text-white">
                                    ${Number(total)}
                                </h6>
                            </div>
                            <div class="d-flex flex-column">
                                <h6 class="text-dark text-sm mb-0">
                                    @Local["Tổng"]
                                </h6>
                            </div>
                        </div>
                    </td>                    
                </tr>
                `
                + stringContent;

            document.getElementById(id).innerHTML = stringContent;
        }
        Event_Row_Group_Type();
    }

    function TriggerClick_GroupType() {
        if ($('.rowMaster[data-id="' + CurrentGroupTypeID + '"]').get(0) != undefined)
            $('.rowMaster[data-id="' + CurrentGroupTypeID + '"]').get(0).click();
    }
    function Event_Row_Group_Type() {
        $(".rowMaster").on('click', function (event) {
            let id = Number($(this).attr("data-id"));
            CurrentGroupTypeID = id;

            if (id == 0) ViewDetail(id, 1);
            else {
                ViewDetail(id, 0);
            }
            $(this).addClass("active").siblings().removeClass("active");
        });

    }

    function ViewDetail(idDetail, all) {
        var data = data_type;
        if (all == 0) {
            data = data_type.filter(word => word["TypeCat_ID"] == idDetail);
        }
        Render_Table_Type(data, 'dtContentTypeBody');
    }

    // render statuslistchildren
    function Render_Table_Type(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];

                    let obj = Fun_GetObject_ByID(DataUser, item.PerEditor);
                    let name = (obj != null) ? obj.Name : 'unknown';
                    let img = (obj != null) ? obj.Avatar : Master_Default_Pic;

                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="text-center">' + (i + 1) + '</td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass">' + item.Name + '</a></td>'

                        + '<td><div class="d-inline">'
                        + '<img title="' + name + '" class="avatar avatar-xs me-2" src="' + img + '" alt="label-image">'
                        + '<span>' + GetDateTime_String_DMYHM(item.DayEditor) + '</span>'
                        + '</div></td>'

                        + ((item.DeleteButton === 1)
                            ? ('<td class="text-center setting_projectclosure"><button class="buttonGrid _tab_control_" data-tab="delete_tab_customer_delete_reason" value="'
                                + item.ID
                                + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button></td>')
                            : '<td class="setting_projectclosure"></td>');

                    stringContent = stringContent + '<tr>' + tr + '</tr>';
                }
            }

            document.getElementById(id).innerHTML = stringContent;
        }
        //hover title
        $("#dtContentTypeBody img,#dtContentTypeBody span").popup({
            transition: "scale up",
            position: "top right"
        });
        Checking_TabControl_Permission();
    }

    function DeleteTicketSource(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteTicketSource(id); }, function () { });
    }
    function ExecuteDeleteTicketSource(id) {
        AjaxLoad(url = "/Marketing/TicketSourceList/?handler=DeleteItem"
            , data = { 'id': id }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    LoadTicketSourceAjax();
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function DeleteSourceCat(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteSourceCat(id); }, function () { });
    }
    function ExecuteDeleteSourceCat(id) {
        AjaxLoad(url = "/Marketing/TicketSourceList/?handler=DeleteGroupItem"
            , data = { 'id': id }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    LoadTicketSourceAjax();
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function AddNewTicketSource() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketSourceDetail" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function EditTicketSource(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketSourceDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function AddNewGroupType() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketSourceCatDetail?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function EditGroupType(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketSourceCatDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>

<script>js_require('/js/main.js');</script>
