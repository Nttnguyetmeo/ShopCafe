@page
@model MLunarCoffee.Pages.Marketing.Store.TicketWebsiteModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()

<div class="container-fluid py-3 px-0">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header pb-0">
                    <h6 class="mb-0">Ticket Website</h6>
                    <p class="text-sm mb-0">@Local["Chuyển dữ liệu khách liên hệ từ website thành ticket cho nhân viên tele chăm sóc"]</p>
                </div>

                <div class="card-body pt-0">
                    <div class="row m-0">
                        <div class="col-md-6 px-1">
                            <div class="card mb-2">
                                <div class="card-header pb-0 px-3">
                                    <h6 class="mb-0" data-fontchanged="true">@Local["Dữ liệu khách liên hệ từ website"]</h6>
                                </div>
                                <div class="card-body pt-2">
                                    <div class="m-0 my-3 mobile-responsive" style=" max-height: 700px;">
                                        <table class="table vt-table mb-0">
                                            <thead>
                                                <tr>
                                                    <th class="d-none">ID</th>
                                                    <th class="p-2">@Local["#"]</th>
                                                    <th class="text-center px-2 text-lg">
                                                        <div class="form-check d-inline-block p-1">
                                                            <input class="form-check-input m-0" type="checkbox" id="checkAll" onchange="onChangeAll()" />
                                                        </div>
                                                    </th>
                                                    <th>Ticket</th>
                                                    <th>@Local["Nội dung"]</th>
                                                    <th>@Local["Xóa"]</th>
                                                </tr>
                                            </thead>
                                            <tbody id="dtContentTicketBody">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mt-md-0 px-1 ">
                            <div class="card">
                                <div class="card-header pb-0">
                                    <h6 class="mb-0">Telesale</h6>
                                    <p class="text-sm mb-0">Some text of detail sub</p>
                                </div>
                                <div class="card-body pt-2 form3" id="form3">
                                    <div class="field col-12 p-1">
                                        <div class="ui fluid search selection dropdown form-control" id="TeleSale" onchange="event.preventDefault();return CheckTicketChoose();">
                                            <i class="remove icon"></i>
                                            <input type="hidden" name="name" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg. tele</div>
                                            <div id="cbbTele" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 p-1">
                                        <div class="text-sm" id="info_choose" style="display:none;">
                                            <div>@Local["Ticket đã chọn"] <span id="ticket_choose" class="fw-bold ps-2">0</span></div>
                                            <div>Tele <span id="tele_choose" class="fw-bold ps-2">...</span></div>
                                        </div>
                                        <div class="action_Save">
                                            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage1"></div>
                                            <div class="action_Save-Content">
                                                <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();CheckTicketChoose()">@Local["Kiểm tra"]</button>
                                                <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();ChooseTele()">@Local["Thêm mới"]</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mt-2">
                                <div class="card-header pb-0">
                                    <h6 class="mb-0" data-fontchanged="true">@Local["Dữ liệu được chia"]</h6>
                                </div>
                                <div class="card-body pt-2 ">
                                    <div class="m-0 my-3 mobile-responsive" style="max-height: 700px;">
                                        <table class="table vt-table mb-0" id="dtContentChoose">
                                            <thead>
                                                <tr>
                                                    <th class="d-none"></th>
                                                    <th class="p-2">#</th>
                                                    <th>Tele</th>
                                                    <th>Ticket</th>
                                                    <th style="width: 25px;">@Local["Hủy chọn"]</th>
                                                </tr>
                                            </thead>
                                            <tbody id="dtContentChooseBody">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer fixed-botombutton">
                    <div class="action_Save">
                        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                        <div class="action_Save-Content">
                            <button type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault(); return AssignTicket()">@Local["Lưu"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var DataTeleSale;
    var DataTicketWebsite;
    var DataChoose = [];
    var DataServiceCare;

    let DataEmployee;

    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_ServiceCare, _Session_Employee]
            , function (data) {
                DataServiceCare = data[0];
                DataEmployee = data[1];
                LoadInitializeData();
            })

        $('#dtContentTelesale tbody').on('click', '.buttonChooseClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let Name = $(this).closest('tr')[0].childNodes[2].innerHTML;
            if (CheckTicketChoose()) {
                ActionChoose(ID, Name);
            }
        });

        $('#dtContentChoose tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            if (DataTicketWebsite != undefined && DataTicketWebsite != null) {
                for (i = 0; i < DataTicketWebsite.length; i++) {
                    if (DataTicketWebsite[i].ID == ID) {
                        DataTicketWebsite[i].status = 0;
                    }
                }
                for (i = 0; i < DataChoose.length; i++) {
                    if (DataChoose[i].ID == ID) {
                        DataChoose.splice(i, 1);
                    }
                }
                RenderTicketChoosing(DataChoose, "dtContentChooseBody");
                let data = DataTicketWebsite.filter(word => word["status"] == "0");
                RenderTicket(data, "dtContentTicketBody");
            }

        });
        $('#dtContentTicket tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteTicketWebsite(ID)
        });

    });

    function DeleteTicketWebsite(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteTicketWebsite(id); }, function () { });
    }

    function ExecuteDeleteTicketWebsite(id) {
        var idTicketDelete = id;
        AjaxLoad(url = "/Marketing/Store/TicketWebsite/?handler=DeleteTicket"
            , data = { 'id': id }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    for (var i = 0; i < DataTicketWebsite.length; i++) {
                        if (DataTicketWebsite[i].ID == idTicketDelete) {
                            DataTicketWebsite[i].status = 1;
                            break;
                        }
                    }
                    let data = DataTicketWebsite.filter(word => word["status"] == "0");
                    RenderTicket(data, "dtContentTicketBody");
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function onChangeAll() {
        let y = document.getElementsByClassName("checkTicket");
        for (let i = 0; i < y.length; i++) {
            y[i].checked = document.getElementById("checkAll").checked;
        }
    }

    function RefreshAfterExecute() {
        LoadInitializeData();
        RenderTicket(DataTicketWebsite, "dtContentTicketBody");
        DataChoose = [];
        RenderTicketChoosing(DataChoose, "dtContentChooseBody");
        onChangeAll();
    }

    function LoadInitializeData() {
        AjaxLoad(url = "/Marketing/Store/TicketWebsite/?handler=LoadInitializeData"
            , data = {}
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                let data = JSON.parse(result);
                DataTicketWebsite = data.dataList;
                DataTeleSale = data.dataTele;
                Load_Combo(DataTeleSale, "cbbTele", true);
                //RenderTeleSale(DataTeleSale, "dtContentTelesaleBody");
                RenderTicket(DataTicketWebsite, "dtContentTicketBody");
            }
        );
    }

    function AssignTicket() {
        if (DataChoose != undefined && DataChoose != null && DataChoose.length != 0) {
            AjaxLoad(url = "/Marketing/Store/TicketWebsite/?handler=Execute"
                , data = { 'data': JSON.stringify(DataChoose) }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        RefreshAfterExecute();
                    } else {
                        notiError_SW();
                    }
                }
            );
        }
        else {
            $("#textShowMessage").html("@Local["Chưa chọn dữ liệu cho telesale"]");
        }
    }

    function ActionChoose(ID, Name) {
        if (DataTicketWebsite != undefined && DataTicketWebsite != null && DataTicketWebsite.length != 0) {
            var y = document.getElementsByClassName("checkTicket");
            for (let i = 0; i < y.length; i++) {
                if (y[i].checked) {
                    let idTicket = Number(y[i].title);
                    for (j = 0; j < DataTicketWebsite.length; j++) {
                        if (Number(DataTicketWebsite[j].ID) == idTicket) {
                            DataTicketWebsite[j].status = 1;
                            let element = {};
                            element.ID = DataTicketWebsite[j].ID;
                            element.Name = DataTicketWebsite[j].Name;
                            element.Phone = DataTicketWebsite[j].Phone;
                            element.Created = DataTicketWebsite[j].Created;
                            element.Tele = ID;
                            element.TeleName = Name;
                            DataChoose.push(element);
                        }
                    }
                }
            }
            RenderTicketChoosing(DataChoose, "dtContentChooseBody");
            let data = DataTicketWebsite.filter(word => word["status"] == "0");
            RenderTicket(data, "dtContentTicketBody");
            $("#textShowMessage").html("");
        }

    }

    function compareValues(key, order = 'asc') {
        return function (a, b) {
            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {
                // không tồn tại tính chất trên cả hai object
                return 0;
            }

            const varA = (typeof a[key] === 'string') ?
                a[key].toUpperCase() : a[key];
            const varB = (typeof b[key] === 'string') ?
                b[key].toUpperCase() : b[key];

            let comparison = 0;
            if (varA > varB) {
                comparison = 1;
            } else if (varA < varB) {
                comparison = -1;
            }
            return (
                (order == 'desc') ? (comparison * -1) : comparison
            );
        };
    }

    function CheckTicketChoose() {
        let total = 0;
        var y = document.getElementsByClassName("checkTicket");
        for (let i = 0; i < y.length; i++) {
            if (y[i].checked) {
                total = total + 1;
            }
        }
        $("#ticket_choose").html(total);
        let ID = Number($('#TeleSale').dropdown('get value')) ? Number($('#TeleSale').dropdown('get value')) : 0;
        let Name = '';
        let Telesale = DataTeleSale.filter(word => word["ID"] == ID);
        if (Telesale.length > 0) {
            Name = Telesale[0].Name;
            $("#tele_choose").html(Name);
        }
        if (total == 0) {
            $("#textShowMessage1").html("@Local["Chưa chọn ticket"]");
            $("#info_choose").hide();
            return false;
        }
        else {
            $("#textShowMessage1").html("");
            $("#info_choose").show();
            return true;
        }
    }

    function ChooseTele() {
        let ID = Number($('#TeleSale').dropdown('get value')) ? Number($('#TeleSale').dropdown('get value')) : 0;
        let Name = '';
        let Telesale = DataTeleSale.filter(word => word["ID"] == ID);
        if (Telesale.length > 0) {
            Name = Telesale[0].Name;
        }
        $('#form3').form('validate form');
        if (CheckTicketChoose() && Name != '' && $('#form3').form('is valid')) {
            ActionChoose(ID, Name);
        }
    }

    function RenderTicketChoosing(data, id) {
        if (data != undefined && data != null) data = data.sort(compareValues('TeleName', 'desc'));
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td>' + item.TeleName + '</td>'
                        + '<td>'
                        + '<span>' + item.Name + '</span>'
                        + '</br>' + item.Phone
                        + '</td>'
                        + '<td>'
                        + '<button class="buttonGrid"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'
                        + '</td>';
                    stringContent = stringContent + '<tr class="vt-number">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
        }
    }

    function RenderTeleSale(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td>' + item.Name + '</td>'
                        + '<td>'
                        + '<button class="buttonGrid"><i class="buttonChooseClass vtt-icon vttech-icon-check"></i></button>'
                        + '</td>'
                    stringContent = stringContent + '<tr class="vt-number">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
        }
    }

    function RenderTicket(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td class="text-center">'
                        + '<div class="form-check text-lg p-2" data-children-count="1">'
                        + '<input type="checkbox" title=' + item.ID + ' data-id="' + item.ID + '" class="form-check-input checkTicket m-0"><label class="form-check-label text-sm font-weight-bold"></label>'
                        + '</div>'
                        + '</td>'

                        + '<td>'
                        + '<span>' + item.Name + '</span>'
                        + '<br>' + item.Phone
                        + '</td>'

                        + '<td><span class="content_line_clamp">'
                        + '<span>' + item.Content + '</span>'
                        + '<br><span>' + Fun_GetString_ByToken(DataServiceCare, item.ServiceCare_ID) + '</span>'
                        + '</br>' + GetDateTime_String_DMYHM(item.Created)
                        + '</span></td>'

                        + '<td>'
                        + '<button class="buttonGrid"><i class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'
                        + '</td>';
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
        }
    }
</script>
<script>js_require('/js/customjs/custom-validation.js');</script>