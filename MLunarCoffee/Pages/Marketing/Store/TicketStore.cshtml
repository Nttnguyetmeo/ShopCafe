@page
@model MLunarCoffee.Pages.Marketing.Store.TicketStoreModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()

<div class="container-fluid pb-3 px-0">
    <div class="row">
        <div class="col-12 px-0">

            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0">
                    <div class="left">
                        <h6 class="mb-0">Ticket store</h6>
                        <p class="text-sm mb-0">@Local["Danh sách các ticket chưa có telesale"]</p>
                    </div>
                    <div class="right">

                        <button class="btn bg-gradient-primary btn-sm" onclick="event.preventDefault(); return Tag_MoveTicket();">@Local["Chia"]</button>
                        <button class="btn bg-gradient-primary btn-sm" onclick="event.preventDefault(); return CreateTicket();">@Local["Thêm mới"]</button>
                    </div>
                </div>
                <div class="card-body pt-0">
                    <div class="vtcondition">
                        <a class="sign" data-open="@Local[" Hiển thị"]" data-close="@Local[" Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                        <div class="fulllap collapse collapsesticky show">
                            <div class="row">
                                <div class="d-lg-flex">
                                    <div class="w-100">
                                        <div class="row m-0 form3">
                                            <div class="field col-12 col-md-12 col-xl-4 px-0 py-1 pe-sm-1">
                                                <div class="input-group flex-nowrap" id="TS_AreaSearch">
                                                    <div class="input-group-text input-group-text px-2">
                                                        <i class="fas fa-search"></i>
                                                        <div class="spinner-border spinner-border-sm d-none"></div>
                                                    </div>
                                                    <input id="TS_SearchInput" type="text" class="form-control" placeholder="eg .@Local["Tên"], @Local["Mã khách hàng"]">
                                                    <div class="input-group-text">
                                                        <i class="btn_clear fas fa-minus-circle opacity-1"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-6 col-xl-4 px-0 py-1 pe-sm-1">
                                                <div class="ui fluid search selection dropdown form-control" id="TS_SourceToken">
                                                    <input type="hidden" />
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">@Local["Nguồn"]</div>
                                                    <div id="cbbTicketSource" class="menu" tabindex="-1">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-6 col-xl-4 px-0 py-1 pe-sm-1">
                                                <div class="ui fluid search selection dropdown form-control" id="TKGroupToken">
                                                    <input type="hidden" />
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">@Local["Nhóm khách hàng"]</div>
                                                    <div id="cbbCustomerGroup" class="menu" tabindex="-1">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-6 col-xl-4 px-0 py-1 pe-sm-1">
                                                <div class="ui fluid search selection dropdown form-control" id="TS_TkBranch">
                                                    <input type="hidden" />
                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">@Local["Chi nhánh"]</div>
                                                    <div id="TS_CbbTkBranch" class="menu" tabindex="-1">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-12 col-md-6 col-xl-4 px-0 py-1 pe-sm-1">
                                                <input id="TS_DateCreate" class="flatpickr form-control" type="text" placeholder="@Local[" Chọn ngày"]" />
                                            </div>
                                            <div class="col-12 col-md-6 col-xl-4 px-0 py-1 pe-sm-1">
                                                <button class="btn bg-gradient-primary text-md mb-0" onclick="event.preventDefault();return TS_LoadListData();"><i class="fas fa-search"></i></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-0 my-3 mobile-responsive vt-header-sticky position-relative">
                        <div id="ts_loading" class="waitingdiv text-center position-absolute end-50 top-0 z-index-3" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table class="table vt-table mb-0" id="dtContentTicket">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th class="p-0" style=" padding: 2px !important;">@Local["#"]</th>
                                    <th class="text-center px-2 text-lg" style=" padding-bottom: 0px !important; padding-left: 3px !important; padding-right: 3px !important;">
                                        <div class="form-check d-inline-block p-1">
                                            <input class="form-check-input m-0" type="checkbox" id="TSCheckAll" onchange="TS_CheckAll()" />
                                        </div>
                                    </th>
                                    <th>@Local["Mã ticket"]</th>
                                    <th>@Local["Mã khách hàng"]</th>
                                    <th>@Local["Tên"]</th>
                                    <th>@Local["Dịch vụ quan tâm"]</th>
                                    <th>@Local["Ghi chú"]</th>
                                    <th>@Local["Chi nhánh"]</th>
                                    <th>@Local["Nguồn"]</th>
                                    <th>@Local["Nhóm khách hàng"]</th>
                                    <th style=" min-width: 140px;">@Local["Thông tin tạo"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentTicketBody">
                            </tbody>
                        </table>                        
                    </div>
                    <button id="btnLoadMove" class="btn btnsysmore btn-secondary p-1 mb-0 w-100" onclick="TS_LoadMore(1,0)">@Local["Xem thêm"]</button>                    
                </div>
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">

    var dataTicketStore;
    let beginId = 0;
    let sys_Limit_LoadList = 500;
    let DataEmployee, DataServiceCare, TS_DataBranch = [];
    let ST_Timeout;
    $(document).ready(function () {
        $("#TS_DateCreate").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false
        });
        let lastDay = new Date();
        let firstDay = new Date();
        firstDay.setDate(firstDay.getDate() - 7);
        $("#TS_DateCreate").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));

        Master_IndexDB_Reads(_Session_Data, [_Session_Employee, _Session_ServiceCare, _Session_Branch]
            , function (data) {
                DataEmployee = data[0];
                DataServiceCare = data[1];
                TS_DataBranch = data[2];
                TS_LoadComboMain();
            });
        ST_Event();
    });

    //#region // EVENT
    function ST_Event() {
        $("#TS_SearchInput").on("keyup", function () {
            $("#TS_AreaSearch .fa-search").addClass("d-none");
            $("#TS_AreaSearch .spinner-border").removeClass("d-none");
            clearTimeout(ST_Timeout);
            ST_Timeout = setTimeout(() => {
                ST_FilterData();
            }, 500)
        })
        $("#TS_AreaSearch .btn_clear").on("click", function () {
            $("#TS_SearchInput").val("");
            ST_FilterData();
        })
    }
    //#endregion

    function TS_LoadComboMain() {
        AjaxLoad(url = "/Marketing/Store/TicketStore/?handler=LoadComboMain"
            , data = {  }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                let data = JSON.parse(result);
                let DTCustGroup = data.Group;
                let DTTicketSource = data.TicketSource;
                let DTBranch = data.Branch;

                Load_Combo(DTCustGroup, "cbbCustomerGroup", true, '@Local["Tất cả nhóm"]');
                $("#TKGroupToken ").dropdown("refresh");
                $("#TKGroupToken ").dropdown("set selected", "0");

                Load_Combo(DTTicketSource, "cbbTicketSource", true, '@Local["Tất cả nguồn"]');
                $("#TS_SourceToken").dropdown("refresh");
                $("#TS_SourceToken").dropdown("set selected", "0");

                Load_Combo(DTBranch, "TS_CbbTkBranch", true, '@Local["Tất cả chi nhánh"]');
                $("#TS_TkBranch").dropdown("refresh");
                $("#TS_TkBranch").dropdown("set selected", "0");
                TS_LoadListData();
            }
        );
    }

    function TS_LoadMore() {
        TS_LoadListData(1);
    }
    async function TS_LoadListData(isLoadMore = 0) {
        return new Promise(resolve => {
            let TS_dateFrom, TS_dateTo;
            let TS_BranchID = 0;

            let TS_GetCusGroup = $('#TKGroupToken').dropdown('get value').toString() ? $('#TKGroupToken').dropdown('get value').toString() : "0";
            let TS_GetCusSource = $('#TS_SourceToken').dropdown('get value').toString() ? $('#TS_SourceToken').dropdown('get value').toString() : "0";

            let TS_GetDate = $('#TS_DateCreate').val() ? $('#TS_DateCreate').val() : '';
            if (TS_GetDate != '' && TS_GetDate.includes(" to ")) {
                TS_GetDate = TS_GetDate.replace(" to ", "#");
                TS_dateFrom = TS_GetDate.split('#')[0];
                TS_dateTo = TS_GetDate.split('#')[1];
            }
            else {
                TS_dateFrom = TS_GetDate;
                TS_dateTo = TS_GetDate;
            }

            TS_BranchID = $("#TS_TkBranch").dropdown("get value") ? $("#TS_TkBranch").dropdown("get value") : 0;

            if (isLoadMore == 0) {
                dataTicketStore = [];
                beginId = 0;
                $("#dtContentTicketBody").empty();
            }

            AjaxLoad(url = "/Marketing/Store/TicketStore/?handler=TicketStoreLoad"
                    , data = {
                        "beginId": beginId
                        , "source": TS_GetCusSource
                        , "group": TS_GetCusGroup
                        , "limit": sys_Limit_LoadList
                        , "DateFrom": TS_dateFrom
                        , "DateTo": TS_dateTo
                        , "branchID": TS_BranchID
                    }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        let data = JSON.parse(result);
                        if (data.length > 0) {
                            dataTicketStore = dataTicketStore.concat(data);
                            beginId = dataTicketStore[dataTicketStore.length - 1].TicketID;
                            $("#btnLoadMove").show();
                        } else {
                            $("#btnLoadMove").hide();
                        }
                        TS_BeforeRender(data);
                        resolve();
                    }
                    , sender = null
                    , before = function (e) {
                        $("#ts_loading").show();
                    }
                    , complete = function (e) {
                        $("#ts_loading").hide();
                    }
                );

        });

    }
    function TS_BeforeRender (_Dt) {
        fnRenderBlock(_Dt, "dtContentTicketBody"
            , blocknum = 200
            , fnrender = TS_Render
            , fnsuccess = function () {

            }
        );
    }
    async function TS_Render(data, id) {
        new Promise(resolve => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = TS_RenderItem(item);
                            stringContent = '<tr class="vt-number">' + tr + '</tr>';
                            myNode.insertAdjacentHTML("beforeend", stringContent);
                        }
                    }
                }
                Checking_TabControl_Permission();
            }, 10);
        });
    }
    function TS_RenderItem(item) {
        let result = '';
        let checkbox = `
                <div class="form-check text-lg d-inline-flex p-2" data-children-count="1">
                    <input class="form-check-input TS_CheckItem m-0" type="checkbox" id="TS_Item_${item.TicketID}" data-id="${item.TicketID}">
                </div>`;
        let ticketCode = `<a target="_blank" class="fw-bold border-bottom border-primary" href="/Marketing/TicketAction?CustomerID=${0}&TicketID=${item.TicketID}&Type=${7}&MasterID=${0}">${TS_RenderItem_GeneralCode(item.TicketID)}</a>`
        let custCode = `<a target="_blank" class="fw-bold border-bottom border-primary" href="/Customer/MainCustomer?CustomerID=${item.CustomerID}&ver=${versionofWebApplication}">${item.CustCode}</a>`
        let serviceCare = Fun_GetString_ByToken(DataServiceCare, item.ServiceCare);
        let infoCreated = (item.EmpID != 0)
            ? `<h6 class="mb-0 text-sm">${TS_RenderItem_GetEmp(item.EmpID)}</h6>
                <p class="text-sm mb-0">${GetDateTime_String_DMYHM(item.Created)}</p>`
            : ``;
        result =
            `
                <td class="vt-number-order"></td>
                <td class="d-none">${item.TicketID}</td>
                <td class="text-center chb_move">${checkbox}</td>
                <td class="text-center chb_move">${ticketCode}</td>
                <td class="text-center chb_move">${custCode}</td>
                <td>${item.TicketName}</td>
                <td><span class="content_line_clamp">${item.Content}</span></td>
                <td>${serviceCare}</td>
                <td>${TS_DataBranch[item.BranchID] != undefined ? TS_DataBranch[item.BranchID].Name : ''}</td>
                <td>${item.SourceName}</td>
                <td>${item.CustomerGroup}</td>
                <td>${infoCreated}</td>
            `
        return result;
    }
    function TS_RenderItem_GetEmp(id) {
        let result = ``;
        if (id != 0) {
            let obj = Fun_GetObject_ByID(DataEmployee, id);
            let name = (obj != null) ? obj.Name : 'unknown';
            let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
            result = `
                    <div class="d-inline"><img class="avatar avatar-xs me-2" src="${img}" alt="label-image" /><span>${name}</span></div>
                `
        }
        return result;
    }
    function TS_RenderItem_GeneralCode(id) {
        try {
            let result = '';
            let stringTemm = '00000000';
            stringTemm = stringTemm + id.toString();
            let lengthTemp = stringTemm.length;
            result = stringTemm.slice(lengthTemp - 8, lengthTemp)
            return result;
        }
        catch (ex) {
            return '';
        }
    }
    function TS_CheckAll() {
        let isCheck = $("#TSCheckAll").is(":checked");
        if (isCheck) {
            $(".TS_CheckItem").prop("checked", true);
        }
        else {
            $(".TS_CheckItem").prop("checked", false);
        }
    }

    function CreateTicket() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketDetail?ver=" + versionofWebApplication + '&TeleNo=1');
        $('#DetailModal').modal('show');
        return false;
    }

    //#region // Handle
    function Tag_MoveTicket() {
        let objTicket = [];
        $(".TS_CheckItem").each(function () {
            let isChecked = $(this).is(":checked");
            let id = Number($(this).attr("data-id"));
            if (isChecked) {
                let e = {};
                e.TicketID = id;
                objTicket.push(e);
            }
        });
        if (objTicket && objTicket.length != 0) {
            localStorage.setItem('TicketStoreDivide', JSON.stringify(objTicket));
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Marketing/Store/TicketStoreDivideDetail" + "?&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
            return false;
        }
        else {
            notiWarning("@Local["Chưa chọn ticket"]");
        }
    }

    function ST_FilterData () {
        if (dataTicketStore && dataTicketStore.length > 0) {
            let TextSearch = $("#TS_SearchInput").val() ? xoa_dau($("#TS_SearchInput").val()).toLowerCase().trim() : "";
            let _Dt = dataTicketStore;

            if (TextSearch != "" && TextSearch.length > 3)
            _Dt = _Dt.filter((item) => {
                return (xoa_dau(item["TicketName"]).toLowerCase().trim().includes(TextSearch)
                    || xoa_dau(item["CustCode"]).toLowerCase().trim().includes(TextSearch)
                )
            })
            if (TextSearch == "" || TextSearch.length > 3) {
                $("#dtContentTicketBody").empty();
                TS_BeforeRender(_Dt);
            }
            $("#TS_AreaSearch .fa-search").removeClass("d-none");
            $("#TS_AreaSearch .spinner-border").addClass("d-none");
        }
    }
    //#endregion
</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<style>
    .loadmore {
        height: 20px;
        width: 100%;
        border-style: none;
        font-size: 13px;
        color: #db2828;
        background: #ffffff00;
        margin-bottom: 2px;
        border-top: 1px solid #e9ecef;
    }

    .vt-table tr td {
        border-left: 1px solid var(--color--table--border) !important;
        white-space: normal !important;
    }

    .vt-table tr th {
        border-left: 1px solid var(--color--table--border) !important;
        white-space: normal !important;
    }
</style>