@page
@model MLunarCoffee.Pages.Marketing.FilterTicketMoveMultiModel
@{
    Layout = null;
}
<div id="FTMM_LoaderDiv" class="bg-gray-900 opacity-5 position-fixed w-100 z-index-3" style="display: none;">
    <div id="FTMM_Loader" class="waitingdiv text-center position-absolute top-50 start-50 translate-middle z-index-3">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
</div>
<div class="container-fluid px-0 ">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="h-100">
                            <h6 class="font-weight-bolder mb-0">@Local["Chuyển ticket"]</h6>
                            <p class="text-sm mb-0 text-danger">@Local["Kiểm tra dữ liệu trước khi thao tác"]. @Local["Sau khi chuyển, dữ liệu sẽ không thể hoàn tác"]!</p>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="row px-2">
                        <div class="field col-12 p-1">
                            <div class="row px-2">
                                <div class="field col-12 col-sm-12 p-1">
                                    <label>@Local["Nhóm"]</label>
                                    <div class="ui fluid search selection dropdown form-control" id="FTMM_TeleGroup" onchange="event.preventDefault(); return FTMM_TeleGroup_Change();">
                                        <input type="hidden" name="" />
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg .@Local["Nhóm"]</div>
                                        <div id="cbbFTMM_TeleGroup" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 px-1">
                            <div class="d-lg-flex">
                                <div class="w-70 col-auto my-auto">
                                    <label>@Local["Danh sách nhân viên"]</label>
                                </div>
                                <div class="ms-auto">
                                    <div class="d-flex">
                                        <label class="form-check-label mb-0">
                                            <small>@Local["Tự động"]</small>
                                        </label>
                                        <div class="form-check form-switch ms-2">
                                            <input id="FTMM_Tele_DevideAuto" class="form-check-input" type="checkbox" checked="checked" onchange="event.preventDefault(); FTMM_Tele_AutoDevided();">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="FTMM_Tele_WattingDiv" class="waitingdiv text-center d-none " style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <div id="FTMM_WattingSaveDiv" class="waitingdiv text-center" style="display: none;">
                                <div>
                                    <div class="spinner-border spinner-border-sm"></div>
                                    <span class="text-sm ps-1">Lưu...</span>
                                </div>
                            </div>

                            <div class="ps-0">
                                <div class="m-0 mobile-responsive" style="max-height: 60vh">
                                    <table id="FTMM_Tele_dtTable" class="table mb-0 ">
                                        <thead>
                                            <tr>
                                                <th class="ps-2 px-1 text-center" style="width: 50px;">
                                                    <div class="form-check">
                                                        <input id="FTMM_Tele_ckbCheckAll" class="form-check-input mt-2" checked name="teleAll" type="checkbox" onchange="event.preventDefault();return FTMM_Tele_CheckAll();" style="">
                                                    </div>
                                                </th>
                                                <th class="ps-2">
                                                    <p class="mb-0 text-sm text-dark fw-bold">@Local["Nhân viên"]</p>
                                                </th>
                                                <th class="ps-2">
                                                    <div class="mb-0 text-sm text-dark fw-bold">@Local["Cấp bậc"]</div>
                                                </th>
                                                <th class="ps-2">
                                                    <div class="mb-0 text-sm text-dark fw-bold">@Local["Nhóm"]</div>
                                                </th>
                                                <th class="ps-2">
                                                    <span class="mb-0 text-sm text-dark fw-bold">@Local["Số lượng chia"]</span>
                                                    (<span class="mb-0 text-sm text-primary fw-bold" id="FTMM_Ticket_Quantity">
                                                        <span id="FTMM_Ticket_Current">0</span>
                                                        /
                                                        <span id="FTMM_Ticket_Total">0</span>

                                                    </span>)
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="FTMM_Tele_dtTableContent">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save m-3">
                    <div class="action_Save-Content">
                        <div class="text-danger text-gradient text-sm font-weight-bold mt-2 pt-1" id="textShowMessage"></div>
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault(); CloseModal()">@Local["Đóng"]</button>
                        <button id="FTMM_btnSave" form="formConfigOption" type="button" class="btn bg-gradient-primary mt-2 me-2 _tab_control_" data-tab="edit_tab_customer" onclick="event.preventDefault(); FTMM_SaveData()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    //#region // DECLARE && INITIALIZE
    var FTMM_whenAvailable;
    let FTMM_dataTele = {};
    let FTMM_dataTicket = [];
    let FTMM_cbLoadData;
    let FTMM_Tele_xhrLoad;
    let FTMM_totalTicket = 0, FTMM_devidedTicket = 0, FTMM_tokenTeleDevided = ''
    $(document).ready(function () {
        FTMM_Init();
    })

    function FTMM_Init() {
        FTMM_whenAvailable = FTMM_LoaddataTeleGroup();
    }
    //#endregion
    //#region //LOAD COMBO
    async function FTMM_LoaddataTeleGroup() {
        return new Promise((resolve) => {
            AjaxLoad(url = "/Marketing/FilterTicketMoveMulti?handler=Initialize"
                , data = {}
                , async = true
                , error = function () { notiError_SW() }
                , success = function (result) {
                    let data = JSON.parse(result);
                    if (data && data.length != 0 && data[0]?.RESULT == undefined) {
                        if (data[0].IsManager == 1) {
                            data.unshift({ ID: "0", Name: "@Local["Tất cả nhóm"]", IsManager: 1 })
                        }
                        Load_Combo(data, "cbbFTMM_TeleGroup", true);
                        $("#FTMM_TeleGroup").dropdown("refresh");
                        $("#FTMM_TeleGroup").dropdown("set selected", data[0].ID);
                    }
                    resolve();
                }
                , sender = null
                , before = function () {
                    $("#FTMM_Loader").show();
                }
                , complete = function (e) {
                    $("#FTMM_Loader").hide();
                }
            );
        });
    }
    //#endregion
    //#region //FUNC RECEIPT DATA TICKET
    async function FTMM_GetDataTicket(data, cbLoadData) {
        return new Promise((resolve) => {
            FTMM_whenAvailable
                .then(() => {
                    FTMM_cbLoadData = cbLoadData;
                    FTMM_dataTicket = data;
                    FTMM_totalTicket = data?.length ?? 0;
                    FTMM_devidedTicket = data?.length ?? 0;
                    $("#FTMM_Ticket_Total").html(FTMM_totalTicket);
                    $("#FTMM_Ticket_Current").html(FTMM_devidedTicket);
                    FTMM_Tele_LoadData();
                })
                .catch(e => console.warn("Error"));
        })
    }
    //#endregion

    //#region //EVENT
    function FTMM_Tele_Event() {
        $('#FTMM_Tele_dtTableContent').on('click', '.FTMM_Tele_ckbCheckItem', function () {
            let ID = Number($(this).closest('tr').find('.FTMM_Tele_ID')[0].innerHTML);
            if ($(this).is(":checked")) {
                FTMM_dataTele[ID].isCheck = 1;
                FTMM_Tele_AutoDevided()
            }
            else {
                FTMM_dataTele[ID].isCheck = 0;
                if (FTMM_Tele_AutoDevided()) return
                FTMM_devidedTicket -= FTMM_dataTele[ID].quantity;
                FTMM_dataTele[ID].quantity = 0;
                $(`#FTMM_Tele_Quantity_${ID}`).val(0);
                $("#FTMM_Ticket_Current").html(FTMM_devidedTicket);

                FTMM_Tele_CheckValidTicket();
            }
        });
        $('#FTMM_Tele_dtTableContent').on('change', '.FTMM_Tele_txtQuantity', function () {
            let ID = Number($(this).closest('tr').find('.FTMM_Tele_ID')[0].innerHTML);
            let val = $(this).val() != '' ? Number($(this).val()) : 0;
            FTMM_devidedTicket = FTMM_devidedTicket - FTMM_dataTele[ID].quantity + val;
            FTMM_dataTele[ID].quantity = val;
            $("#FTMM_Ticket_Current").html(FTMM_devidedTicket);
            FTMM_Tele_CheckValidTicket();
        });
    }

    function FTMM_TeleGroup_Change() {
        FTMM_dataTele = {};
        $('#FTMM_Tele_ckbCheckAll').prop('checked', true);
        FTMM_Tele_LoadData();
    }

    function FTMM_Tele_AutoDevided() {
        if ($('#FTMM_Tele_DevideAuto').is(":checked")) {
            let data = Object.values(FTMM_dataTele).filter(item => { item.quantity = 0; return item.isCheck == 1 });
            $('.FTMM_Tele_txtQuantity').val(0);
            for (let i = 0; i < data.length; i++) {
                let item = data[i];
                let quantity = Math.floor(FTMM_totalTicket / data.length);
                quantity = (i < data.length - 1) ? quantity : quantity + FTMM_totalTicket % data.length;
                $(`#FTMM_Tele_Quantity_${item.ID}`).val(quantity);
                FTMM_dataTele[item.ID].quantity = quantity;
            }

            $('.FTMM_Tele_txtQuantity').attr('disabled', true)
            FTMM_devidedTicket = Object.values(FTMM_dataTele).reduce((pre,arr) => {return (arr.isCheck == 1) ? pre + arr.quantity : pre}, 0)
            $("#FTMM_Ticket_Current").html(FTMM_devidedTicket);
            FTMM_Tele_CheckValidTicket();
            return true;
        }
        else {
            $('.FTMM_Tele_txtQuantity').removeAttr('disabled')
            return false;
        }
    }

    function FTMM_Tele_CheckAll() {
        if ($('#FTMM_Tele_ckbCheckAll').is(":checked")) {
            FTMM_Tele_UpdateMulti(value = 1, field = 'isCheck');
            $('.FTMM_Tele_ckbCheckItem').prop('checked', true);
        }
        else {
            FTMM_Tele_UpdateMulti(value = 0, field = 'isCheck');
            FTMM_Tele_UpdateMulti(value = 0, field = 'quantity');
            $('.FTMM_Tele_ckbCheckItem').prop('checked', false);
            $('.FTMM_Tele_txtQuantity').val(0);
            FTMM_devidedTicket = 0;
            $("#FTMM_Ticket_Current").html(FTMM_devidedTicket);
            FTMM_Tele_CheckValidTicket()
        }
        FTMM_Tele_AutoDevided();
    }

    function FTMM_Tele_UpdateMulti(value, field = '') {
        let data = Object.values(FTMM_dataTele);
        for (let i = 0; i < data.length; i++) {
            let item = data[i];
            if (item[field] != undefined) item[field] = value;
        }
    }

    function FTMM_Tele_CheckValidTicket() {
        if (FTMM_devidedTicket > 0 && FTMM_devidedTicket < FTMM_totalTicket) {
            $('#FTMM_Ticket_Quantity').removeClass('text-primary text-danger').addClass('text-warning');
            return 0;
        }
        else if (FTMM_devidedTicket == 0 || FTMM_devidedTicket > FTMM_totalTicket) {
            $('#FTMM_Ticket_Quantity').removeClass('text-primary text-warning').addClass('text-danger');
            return -1
        }
        else {
            $('#FTMM_Ticket_Quantity').removeClass('text-danger text-warning').addClass('text-primary');
            return 1;
        }
    }
    //#endregion

    //#region //LOADDATA TELE
    function FTMM_Tele_LoadData() {
        let groupID = (Number($('#FTMM_TeleGroup').dropdown('get value')) ? Number($('#FTMM_TeleGroup').dropdown('get value')) : 0);
        $("#FTMM_Tele_dtTableContent").empty();
        if (FTMM_Tele_xhrLoad && FTMM_Tele_xhrLoad.readyState != 4) FTMM_Tele_xhrLoad.abort();
        FTMM_Tele_xhrLoad = AjaxLoad(url = "/Marketing/FilterTicketMoveMulti/?handler=LoadData"
            , data = {
                'groupID': groupID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    if (data[0]?.RESULT == undefined) {
                        FTMM_dataTele = (JSON.parse(result)).reduce((pre, arr) => { if (arr.ID) pre[arr.ID] = arr; return pre; }, {});
                        $("#FTMM_Tele_dtTableContent").empty();
                        FTMM_Tele_RenderData(data, 'FTMM_Tele_dtTableContent');
                    }
                    else {
                        $("#FTMM_Ticket_Current").html('0')
                        notiWarning('@Local["Không có dữ liệu"]!');
                    }
                }
                else if (result == "[]") {
                    $("#FTMM_Ticket_Current").html('0')
                    notiWarning('@Local["Không có dữ liệu"]!');
                }
                else {
                    notiError_SW();
                }
            }
            , sender = null
            , before = function (e) {
                $("#FTMM_Tele_WattingDiv").show();
            }
            , complete = function (e) {
                $("#FTMM_Tele_WattingDiv").hide();
            }
        );
    }

    async function FTMM_Tele_RenderData(data, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length != 0) {
                        let tr = '';
                        let dtLength = data.length;
                        for (let i = 0; i < dtLength; i++) {
                            let item = data[i];
                            let quantity = Math.floor(FTMM_totalTicket / dtLength);
                            quantity = (i < dtLength - 1) ? quantity : quantity + FTMM_totalTicket % dtLength;

                            FTMM_dataTele[item.ID].quantity = quantity;
                            FTMM_dataTele[item.ID].isCheck = 1;

                            let tr = `<tr class="vt-number" role="row" id="FTMM_Tele_Item_${item.ID}">
                                                  <td class="d-none FTMM_Tele_ID"> ${item.ID} </td>
                                                  <td class="text-center text-dark">
                                                      <div class="form-check mt-1">
                                                               <input id="FTMM_Tele_ckbCheckItem_${item.ID}" checked class="form-check-input FTMM_Tele_ckbCheckItem" name="ticketItem" type="checkbox">
                                                      </div>
                                                  </td>
                                                  <td class="pt-3 text-dark text-sm">
                                                      ${item.EmpName}
                                                  </td>
                                                  <td class="pt-3 text-dark text-sm">
                                                      ${item.LevelName}
                                                  </td>
                                                  <td class="pt-3 text-dark text-sm">
                                                      ${item.GroupID != 0 ? item.GroupName : "@Local["Tất cả nhóm"]"}
                                                  </td>
                                                  <td class="text-dark text-sm">
                                                          <input id="FTMM_Tele_Quantity_${item.ID}" disabled type="number" class="d-block form-control FTMM_Tele_txtQuantity" placeholder="eg. @Local["Số lượng"]" value="${quantity}">
                                                  </td>
                                                  </tr>`
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        FTMM_Tele_Event();
                    }
                }
                resolve();
            }, 10)
        })
    }
    //#endregion

    //#region //EXCUTE
    function FTMM_SaveData() {
        //0: nho hon tong ticket; 1: bang tong ticket; -1: lon hon tong ticket
        let validFlag = FTMM_Tele_CheckValidTicket();
        if (validFlag == 1) {
            FTMM_Confirm("@Local["Bạn có chắc muốn chuyển ticket"]?");
        }
        else if (validFlag == 0) {
            FTMM_Confirm("@Local["Số lượng ticket được chuyển nhỏ hơn số ticket đã lọc. Bạn có chắc muốn chuyển ticket"]?");
        }
        else {
            if(FTMM_devidedTicket == 0) {
                $('#textShowMessage').html('@Local["Số lượng phải lớn hơn 0"]!');
            }
            else{
                $('#textShowMessage').html('@Local["Vượt quá số lượng ticket"]!');
            }
        }
    }
    function FTMM_MatchingDataTele() {
        let dataTicket = sliceIntoChunks(JSON.parse(JSON.stringify(FTMM_dataTicket)), 500);
        let IndexDataTicket = 0;
        let dataResult = [];
        let dataTeleDevided = {};
        while (dataTicket[IndexDataTicket] != undefined) {
            let data = dataTicket[IndexDataTicket];
            let dataTele = Object.values(FTMM_dataTele);
            for (let i = 0; i < data.length; i++) {
                let item = data[i];

                for(let j = 0; j < dataTele.length; j++) {
                    if (dataTele[j].quantity > 0) {
                        let userTo = dataTele[j]?.ID;
                        let e = {
                            TicketID: item.ID,
                            UserTo: userTo
                        }
                        dataResult.push(e);
                        dataTeleDevided[userTo] = dataTeleDevided[userTo] != undefined ? dataTeleDevided[userTo] + 1 : 0;
                        dataTele[j].quantity--;
                        break;
                    }
                    else {
                        continue;
                    }
                }
            }
            IndexDataTicket++;
        }
        FTMM_tokenTeleDevided = dataTeleDevided;
        return dataResult;
    }
    function FTMM_Confirm(noti) {
        const promise = notiConfirm(noti);
        promise.then(function () { FTMM_SaveDataDB(); }, function () { });
    }
    function FTMM_SaveDataDB() {
        let data = FTMM_MatchingDataTele();
        if (data && data.length) {
            AjaxLoad(url = "/Marketing/FilterTicketMoveMulti/?handler=Execute"
                , data = {
                    'dtticket': JSON.stringify(data)
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        if(typeof FTMM_cbLoadData == 'function') FTMM_cbLoadData(0);
                        CloseModal();
                        let dataUser = Object.keys(FTMM_tokenTeleDevided);
                        for (let i = 0; i < dataUser.length; i++) {
                            let key = dataUser[i];
                            let quantity = FTMM_tokenTeleDevided[key];
                            fcm_senduser(Number(key), Master_circleAvatar, sys_employeeName_Main, 'Receipt Data (' + quantity + ' records)');
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        }
        else {
            $('#textShowMessage').html("@Local["Số lượng phải lớn hơn 0"]");
        }
        return false;
    }
    //#endregion
</script>