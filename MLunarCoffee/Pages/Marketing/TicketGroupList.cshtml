@page
@model MLunarCoffee.Pages.Marketing.TicketGroupListModel
@{
    Layout = null;
}

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12 px-0">
            <div class="card card-plain">
                <div class="vtcardheader card-header pb-0">
                    <div class="left">
                        <h6 class="mb-0">@Local["Danh sách telesale thuộc nhóm tele"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách"]</p>
                    </div>
                    <div class="right">
                        <button id="btnAddNewTicketExtension" class="btn bg-gradient-primary btn-sm mt-1 _tab_control_" data-tab="add_tab_ticket_group" onclick="return AddNewTicketGroup()">@Local["Thêm mới"]</button>
                    </div>
                </div>
                <div class="card-body pt-2">
                    <div class="vtcondition">
                        <a class="sign" data-open="@Local[" Hiển thị"]" data-close="@Local[" Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                        <div class="fulllap collapse collapsesticky show">
                            <div class="row px-2">
                                <div class="col-12 p-1">
                                    <div class="ui fluid search selection dropdown form-control" id="TeleSaleGroup" onchange="event.preventDefault();return OnchangeEventTeleGroup();">
                                        <input type="hidden" name="telegroup" />
                                        <input class="search" autocomplete="off" tabindex="0" />
                                        <div class="default text">eg. @Local["Nhóm tele"]</div>
                                        <div id="cbbTeleGroup" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-0 my-3 mobile-responsive">
                        <div id="waiting_TeleByGroup" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table class="table vt-table mb-0" id="dtContentTicketTeleGroup">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th>@Local["#"]</th>
                                    <th>@Local["Tên tài khoản"]</th>
                                    <th>@Local["Tên nhân viên"]</th>
                                    <th>@Local["Cấp bậc"]</th>
                                    <th>@Local["Tên nhóm"]</th>
                                    <th>Extension</th>
                                    <th>@Local["Người sửa"]</th>
                                    <th>@Local["Xóa"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentTicketTeleGroupBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


<script>js_require('/js/comon/initialize_setting.js');</script>

<script type="text/javascript">
    let DataUser;

    $(document).ready(function () {
        TicketGroup_Initialize();
        $('#dtContentTicketTeleGroup tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            EditTicketGroup(ID);
        });
        $('#dtContentTicketTeleGroup tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteTicketGroup(ID);
        });
    });

    function LoadTicketGroupAjax() {
        let typeid = Number($('#TeleSaleGroup').dropdown('get value'));
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                AjaxLoad(url = "/Marketing/TicketGroupList/?handler=LoadData"
                    , data = { 'typeid': typeid }
                    , async = true
                    , error = function () { notiError_SW(); }
                    , success = function (result) {
                        if (result != "0") {
                            let data = JSON.parse(result)
                            RenderTableTicketTeleGroup(data, 'dtContentTicketTeleGroupBody');

                        }
                    }, sender = null
                    , before = function (e) {
                        $("#waiting_TeleByGroup").show();
                    }
                    , complete = function (e) {
                        $("#waiting_TeleByGroup").hide();
                    }
                );
            });
    }
    function OnchangeEventTeleGroup() {
        LoadTicketGroupAjax();
        return false;
    }
    function RenderTableTicketTeleGroup(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let obj = Fun_GetObject_ByID(DataUser, item.PerEditor);
                    let name = (obj != null && obj.EmployeeName != undefined) ? obj.EmployeeName : 'unknown';
                    let img = (obj != null) ? obj.Avatar : Master_Default_Pic;

                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td>' + (i + 1) + '</td>'
                        + '<td><a class="text-decoration-underline fw-bold buttonEditClass">' + item.UserName  + '</a></td>'
                        + '<td>' + item.EmpName + '</td>'
                        + '<td>' + item.Levelname + '</td>'
                        + '<td>' + item.GroupName + '</td>'
                        + '<td>' + item.Extension + '</td>'

                        + '<td><div class="d-inline">'
                        + '<img title="' + name + '" class="avatar avatar-xs me-2" src="' + img + '" alt="label-image">'
                        + '<span>' + GetDateTime_String_DMYHM(item.DayEditor) + '</span>'
                        + '</div></td>'

                        + ((item.DeleteButton === 1)
                            ? ('<td><button class="buttonGrid _tab_control_" data-tab="delete_tab_ticket_group" value="'
                                + item.ID
                                + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button></td>')
                            : '<td></td>')

                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
        Hover_Edit(id);
        Checking_TabControl_Permission();
    }

    function DeleteTicketGroup(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteTicketGroup(id); }, function () { });
    }
    function ExecuteDeleteTicketGroup(id) {
        AjaxLoad(url = "/Marketing/TicketGroupList/?handler=DeleteItem"
            , data = { 'id': id }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    LoadTicketGroupAjax();
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function TicketGroup_Initialize() {
        AjaxLoad(url = "/Marketing/TicketGroupList/?handler=Initialize"
            , data = {  }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                let TeleSaleGroup = JSON.parse(result);
                Load_Combo(TeleSaleGroup, "cbbTeleGroup", true);
                $("#TeleSaleGroup").dropdown("refresh");
                $("#TeleSaleGroup").dropdown("set selected", Number(TeleSaleGroup[TeleSaleGroup.length - 1].ID));
            }
        );
    }

    function AddNewTicketGroup() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketGroupDetail" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function EditTicketGroup(CurrentID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Marketing/TicketGroupDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
</script>
<script>js_require('/js/main.js');</script>

