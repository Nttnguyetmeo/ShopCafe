@page
@model MLunarCoffee.Pages.Marketing.TicketFile.TicketFile_File_MoveModel
@{
    Layout = null;
}

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <h6 class="mb-0">@Local["Chuyển tệp dữ liệu"]</h6>
                    <p class="text-sm mb-0">@Local["Phải chuyển hết dữ liệu trong một lần. Dữ liệu đã chuyển không thể hoàn tác"].</p>
                </div>
                <div class="card-body p-3 pt-2">
                    <div class="row px-2 form3" id="form3">
                        <div class="field col-12 col-xl-4 p-1">
                            <label>@Local["Ticket đã chuyển"]</label>
                            <input id="txtTotalRecordUsedMove" class="form-control" name="content" disabled="disabled" />
                        </div>
                        <div class="field col-12 col-xl-4 col-md-6 p-1">
                            <label>@Local["Nhóm"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Group_ID" onchange="event.preventDefault();return Load_List_User_Move();">
                                <input type="hidden" name="grouptele" />
                                <div class="default text"></div>
                                <div id="cbbGroup" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-xl-4 col-md-6 p-1">
                            <label>@Local["Cấp bậc"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Level_ID" onchange="event.preventDefault();return Load_List_User_Move();">
                                <input type="hidden" name="namelevel" />
                                <div class="default text"></div>
                                <div id="cbbLevel" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-0 my-3 mobile-responsive">
                        <table class="table vt-table mb-0" id="dtTableTicketMove">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width: 30px">@Local["#"]</th>
                                    <th>@Local["Tên"]</th>
                                    <th>@Local["Nhóm"]</th>
                                    <th style="width: 200px">@Local["Số lượng chuyển"]</th>
                                    <th style="width: 50px">@Local["Chia"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtTableTicketMoveBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault(); return TFM_CloseDetail();">@Local["Đóng"]</button>
                        <button form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault(); return TicketMove_CheckData();">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    var ser_ImportID = '@Model._ImportID';
    var ser_UserID = '@Model._UserID';
    var data_user_ticket_move = {}
    var TicketMove_TotalTicket;
    var TicketMove_TotalTicketMoved;

    $(document).ready(function () {
        Load_Initialize_Ticket_Move();
    });

    function Load_Initialize_Ticket_Move() {
        AjaxLoad(url = "/Marketing/TicketFile/TicketFile_File_Move/?handler=LoadDataInitialize"
            , data = { 'UserID': ser_UserID, 'ImportID': ser_ImportID }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    Load_Combo(data.dataGroup, "cbbGroup", true);
                    Load_Combo(data.dataLevel, "cbbLevel", true);
                    Load_Combo((data.dataExtension ? data.dataExtension : []), "cbbExtension", false);
                    TicketMove_TotalTicket = data.dataTicket[0].TotalTicket;
                    TicketMove_TotalTicketMoved = data.dataTicket[0].TotalMoved;
                    $("#txtTotalRecordUsedMove").val(TicketMove_TotalTicketMoved + '/' + TicketMove_TotalTicket);
                }
            }
        );
    }

    function Load_List_User_Move() {
        $('#textShowMessage').html("");
        document.getElementById('dtTableTicketMoveBody').innerHTML = '';
        let Group_ID = Number($('#Group_ID').dropdown('get value')) ? Number($('#Group_ID').dropdown('get value')) : 0;
        let Level_ID = Number($('#Level_ID').dropdown('get value')) ? Number($('#Level_ID').dropdown('get value')) : 0;
        if (Level_ID != 0 && Group_ID != 0) {
            if (Level_ID == -1) Level_ID = 0;
            if (Group_ID == -1) Group_ID = 0;
            AjaxLoad(url = "/Marketing/TicketFile/TicketFile_File_Move/?handler=LoadDataUser"
                , data = { 'GroupID': Group_ID, 'LevelID': Level_ID, 'UserID': ser_UserID }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result!= "") {
                        let data = JSON.parse(result);
                        let dataUserMove = data.dataUser;
                        data_user_ticket_move = {};
                        for (var i = 0; i < dataUserMove.length; i++) {
                            var item = dataUserMove[i];
                            let element = {};
                            element.ID = item.ID;
                            element.Number = item.Number;
                            element.IsMove = item.IsMove;
                            element.Name = '';
                            data_user_ticket_move[item.ID] = element;
                        }
                        RenderTable_User_Move_Ticket(data.dataUser, "dtTableTicketMoveBody");
                    }
                }
            );
        }
    }

    function RenderTable_User_Move_Ticket(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];

                    let tr = '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td>' + item.Name + '</td>'
                        + '<td>' + item.GroupName + '</td>'
                        + '<td>' + AddCell_NumberMove(item.ID, item.Number) + '</td>'
                        + '<td class="text-center">' + AddCell_CheckMove(item.ID, item.IsMove) + '</td>'

                    stringContent = stringContent + '<tr class="vt-number">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
        }
        Event_Element_Ticket_Move();
    }

    function AddCell_NumberMove(randomNumber, value) {
        let resulf = '<input name="numberFloat" class="numberMove form-control" id="numberMove_' + randomNumber + '" min="0" type="number" value="' + value + '" disabled/>';
        return resulf;
    }

    function AddCell_NameFileMove(randomNumber) {
        let resulf = '<input class="nameFile form-control" id="nameFile_' + randomNumber + '"type="text" />';
        return resulf;
    }

    function AddCell_CheckMove(randomNumber, value) {
        let result = '<div class="form-check form-switch ps-0">'
            + '<input class="form-check-input ms-auto checkedMove d-flex" type="checkbox"  value="' + randomNumber + '" id="checkedMove_' + randomNumber + '" ' + ((value == 1) ? ('checked') : ('')) + ' >'
            + '   <label class="form-check-label text-body ms-3 text-truncate w-80 mb-0" for="checkedMove_' + randomNumber + '"></label>'
            + '</div>'
        return result;
    }

    function Event_Element_Ticket_Move() {
        $(".numberMove").change(function () {
            let id = this.id.replace("numberMove_", "")
            data_user_ticket_move[id].Number = (this.value) == "" ? "0" : this.value;
        });
        $(".nameFile").change(function () {
            let id = this.id.replace("nameFile_", "")
            data_user_ticket_move[id].Name = this.value;
        });
        $(".checkedMove").change(function () {
            let id = this.id.replace("checkedMove_", "")
            if ($("#checkedMove_" + id)[0].checked == true) {
                data_user_ticket_move[id].IsMove = 1;
                $('#numberMove_' + id).prop('disabled', false);
            }
            else {
                data_user_ticket_move[id].IsMove = 0;
                $('#numberMove_' + id).prop('disabled', true);
                data_user_ticket_move[id].Number = 0;
                $('#numberMove_' + id).val(0);
            }
        });
    }

    function Execute_Move_File_Ticket() {
        let ListMove = [];
        let stringuser = '';
        for ([key, value] of Object.entries(data_user_ticket_move)) {
            if (Number(value.IsMove) == 1 && Number(value.Number) > 0) {
                ListMove.push(value);
                stringuser = stringuser + value.ID + ",";
            }
        }
        AjaxLoad(url = "/Marketing/TicketFile/TicketFile_File_Move/?handler=ExcuteData"
            , data = { 'data': JSON.stringify(ListMove), 'ImportID': ser_ImportID }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    if (typeof TFM_CloseDetail === 'function') TFM_CloseDetail();
                    if (typeof TF_IM_Load === 'function') TF_IM_Load();
                    fcm_sendmultiuser(stringuser, Master_circleAvatar, sys_employeeName_Main, '@Local["Nhận dữ liệu"]');
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function TicketMove_CheckData() {
        Checking_Validate_Ticket_Move();
        if ($('#textShowMessage').html() == "") {
            const promise = notiConfirm("@Local["Xác nhận để chuyển"]!");
            promise.then(function () { Execute_Move_File_Ticket(); }, function () { });
        }
        return false;
    }

    function Checking_Validate_Ticket_Move() {
        $('#textShowMessage').html("");
        let totalTicketMove = 0;
        for ([key, value] of Object.entries(data_user_ticket_move)) {
            if (Number(value.IsMove) == 1) {
                totalTicketMove = totalTicketMove + Number(value.Number);
            }
        }
        if ((TicketMove_TotalTicket - TicketMove_TotalTicketMoved) <= 0) {
            $('#textShowMessage').html('@Local["Không có dữ liệu để chuyển"].');
        }
        else if (totalTicketMove > (TicketMove_TotalTicket - TicketMove_TotalTicketMoved)) {
            $('#textShowMessage').html('@Local["Số lượng chuyển đã vượt quá"].');
        }
        else if (totalTicketMove < (TicketMove_TotalTicket - TicketMove_TotalTicketMoved)) {
            $('#textShowMessage').html('@Local["Phải chuyển hết dữ liệu trong một lần"].');
        }

    }
</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<style type="text/css">
    .ui.form :disabled {
        background: #e6e6e64d !important;
        opacity: 1 !important;
    }
</style>