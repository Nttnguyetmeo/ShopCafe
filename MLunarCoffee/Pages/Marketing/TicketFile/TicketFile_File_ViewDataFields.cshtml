@page
@model MLunarCoffee.Pages.Marketing.TicketFile.TicketFile_File_ViewDataFieldsModel
@{
    Layout = null;
}
<div id="TF_ViewDF_Main">
    <div class="card">
        <div class="vtcardheader card-header pb-0">
            <div class="left">
                <h6 class="mb-0">@Local["Trường dữ liệu file import"]</h6>
                <p class="text-sm mb-0">
                    @Local["Chi tiết"]
                </p>
            </div>
            <div class="right">
                <ul id="TF_ViewDF_InfoArea" class="nav nav-pills p-1 bg-transparent" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a class="nav-link cursor-pointer active" data-bs-toggle="pill" data-bs-target="#TF_ViewDF_DefaultArea" role="tab" aria-selected="true">@Local["Mặc định"]</a>
                    </li>
                    <li class="nav-item" role="presentation" data-checkper="1">
                        <a class="nav-link cursor-pointer" data-bs-toggle="pill" data-bs-target="#TF_ViewDF_OptionArea" role="tab">@Local["Tùy chọn"]</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="card-body pt-2">
            <div class="tab-content">
                <div class="tab-pane fade active show max-height-vh-60 overflow-y" id="TF_ViewDF_DefaultArea" role="tabpanel">
                    <ul class="list-group list-group-flush" data-toggle="checklist" id="TF_ViewDF_ListItemDefault">
                    </ul>
                </div>
                <div class="tab-pane fade max-height-vh-60 overflow-y" id="TF_ViewDF_OptionArea" role="tabpanel">
                    <ul class="list-group list-group-flush" data-toggle="checklist" id="TF_ViewDF_ListItemOption">
                    </ul>
                </div>
            </div> 
        </div>
    </div>
    <div class="fixed-botombutton mt-2">
        <div class="action_Save">
            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
            <div class="action_Save-Content">
                <button class="btn btn-secondary" form="TF_ViewDF_FormAccountEntry" onclick="event.preventDefault();CloseModal()">@Local["Huỷ"]</button>
            </div>
        </div>
    </div>
</div>

<script>
    let DataDefault = [{ "ID": 1, "Name": "Created", "Description": "@Local["Ngày tạo"]", "IsRequired": 1, "ValidationName": "regExp", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "1900-01-01", "ImportTo": "@Local["Ngày tạo"]","TypeData":"YYYY-MM-DD","ExampleValue":"2020-01-01" }
        , { "ID": 2, "Name": "Name", "Description": "@Local["Không chứa ký tự đặt biệt"]", "IsRequired": 1, "ValidationName": "Không có ký tự đặc biệt", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "", "ImportTo": "@Local["Tên"]", "TypeData": "Text", "ExampleValue": "Nguyen van A" }
        , { "ID": 3, "Name": "Phone", "Description": "@Local["SĐT"]", "IsRequired": 1, "ValidationName": "Chỉ chứa ký tự số và không được trùng", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "0000000000", "ImportTo": "@Local["SĐT"]", "TypeData": "Only Number", "ExampleValue": "090000000000" }
        , { "ID": 4, "Name": "Birthday", "Description": "@Local["Ngày sinh"]", "IsRequired": 1, "ValidationName": "Kiểu năm tháng ngày", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "1900-01-01", "ImportTo": "@Local["Ngày sinh"]", "TypeData": "YYYY-MM-DD", "ExampleValue": "2020-01-01" }
        , { "ID": 5, "Name": "Gender", "Description": "m: @Local["Nam"],f: @Local["Nữ"],", "IsRequired": 1, "ValidationName": "chỉ có ký tự m và f", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "m", "ImportTo": "@Local["Giới tính"]", "ExampleValue": "m","TypeData":"text" }
        , { "ID": 6, "Name": "ServiceCare", "Description": "@Local["Dịch vụ quan tâm"]", "IsRequired": 0, "ValidationName": "", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "", "ImportTo": "@Local["Dịch vụ quan tâm"],@Local["Ghi chú"]", "TypeData": "text", "ExampleValue": "Implant,Tẩy trắng răng,..." }
        , { "ID": 7, "Name": "Note", "Description": "@Local["Ghi chú"]", "IsRequired": 0, "ValidationName": "", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "", "ImportTo": "@Local["Dịch vụ quan tâm"],@Local["Ghi chú"]","TypeData":"Text" ,"ExampleValue": "Khách hàng thân thiện,..." }
        , { "ID": 8, "Name": "FaceBook", "Description": "Facebook", "IsRequired": 0, "ValidationName": "", "ValidationValue": "", "ReplaceCol": "Value", "ReplaceValue": "", "ImportTo": "Facebook", "TypeData": "Text", "ExampleValue": "https://www.facebook.com/example" }
    ]
    $(document).ready(function () {
        TF_ViewDF_RenderList(DataDefault, 'TF_ViewDF_ListItemDefault');
        TF_ViewDF_LoadData();

    })
    function TF_ViewDF_LoadData() {
        AjaxLoad(url = "/Marketing/TicketFile/TicketFile_File_ViewDataFields/?handler=LoadData"
            , data = {
                type: 'Ticket_Import'
            }, async = true, error = null
            , success = function (result) {
                if (result != "[]" && result != "0") {
                    let data = JSON.parse(result);
                    TF_ViewDF_RenderList(data, 'TF_ViewDF_ListItemOption');
                }
                else if (result == "[]") {
                    notiWarning("@Local["Không có dữ liệu"]")
                }
                else {
                    notiError_SW();
                }
            });
    }
    async function TF_ViewDF_RenderList(data, id) {
        let myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    stringContent += `<li class="list-group-item border-0 flex-column align-items-start ps-0 pt-2 mb-3">
                        <div class="checklist-item ${item.IsRequired == 1 ? 'checklist-item-warning' : 'checklist-item-secondary'}  ps-2 ms-3">
                            <div class="mb-1"> 
                                <h6 class="mb-0 font-weight-bold text-sm text-primary">${item.Name}</h6>
                                <p class="text-xs font-weight-bolder mt-0 mb-0 text-secondary">${item.Description}</p>
                            </div>
                            <div class="row">
                                <div class="col-12 col-sm-6 col-md-3">
                                    <p class="text-xs mb-0 mt-2 text-dark font-weight-bold">@Local["Giá trị mẫu"]</p>
                                        <p class="text-xs font-weight-bolder mt-0 mb-0 text-secondary">${item.ExampleValue}</p>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <p class="text-xs mb-0 mt-2 text-dark font-weight-bold">@Local["Định dạng"]</p>
                                    <p class="text-xs font-weight-bolder mt-0 mb-0 text-secondary">${item.TypeData}</p>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <p class="text-xs mb-0 mt-2 text-dark font-weight-bold">@Local["Thay thế giá trị rỗng"]</p>
                                    <p class="text-xs font-weight-bolder mt-0 mb-0 text-secondary">${item.ReplaceValue}</p>
                                </div>
                                <div class="col-12 col-sm-6 col-md-3">
                                    <p class="text-xs mb-0 mt-2 text-dark font-weight-bold">@Local["Import vào trường dữ liệu"]</p>
                                    <p class="text-xs font-weight-bolder mt-0 mb-0 text-secondary">${item.ImportTo}</p>
                                </div> 
                            </div>                            
                        </div>
                            <hr class="horizontal dark mb-0">
                    </li>
                    `;
                }
                myNode.innerHTML = stringContent;
            }
            document.getElementById(id).innerHTML = stringContent; 
        }
    }
</script>