@page
@model MLunarCoffee.Pages.Marketing.TicketFile.TicketFile_Folder_DevideModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <h6 class="mb-0">@Local["Chia mới"]</h6>
                    <p class="text-sm mb-0">@Local["Dữ liệu đã chia thì không thể hoàn tác"].</p>
                </div>
                <div class="card-body p-3 pt-2 form3">
                    <div class="row px-2 ">
                        <div class="field col-12 col-xl-4 p-1">
                            <label>@Local["Ticket chưa chia"]</label>
                            <input id="txtTotalRecordNotDevide" class="form-control" name="content" type="number" disabled />
                        </div>
                        <div class="field col-12 col-xl-4 col-md-6 p-1">
                            <label>@Local["Nhóm"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="GroupTele" onchange="event.preventDefault();return TFDF_FilterTele();">
                                <input type="hidden" name="devideType" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text"></div>
                                <div id="cbbGroupTele" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-xl-4 col-md-6 p-1">
                            <label>@Local["Cấp bậc"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="Level" onchange="event.preventDefault();return TFDF_FilterTele();">
                                <input type="hidden" name="devideType" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text"></div>
                                <div id="cbbLevel" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-0 my-3 mobile-responsive" id="TableTicketDevide">
                        <table class="table vt-table mb-0" id="dtTableTicketDevide">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width:20px">@Local["#"]</th>
                                    <th>@Local["Nhân viên"]</th>
                                    <th>@Local["Nhóm"]</th>
                                    <th style="width: 200px">@Local["Số lượng chia"]</th>
                                    <th style="text-align: center; width: 50px;">@Local["Chia"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtTableTicketDevideBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="message_ticket_folder_devide"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="TFM_CloseDetail()">@Local["Đóng"]</button>
                        <button id="btnExcuteDevide" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return TFDF_ExcuteData()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    let TFDF_FileID = Number(@Model._FileID);
    let TFDF_BlockIndex = Number(@Model._BlockIndex);
    let TFDF_InfoImport = {};
    let data_selected_devide = {};
    let changingflag = 0;

    $(document).ready(function () {
        TFDF_InitializeCombo();
    })

    function TFDF_InitializeCombo() {
        AjaxLoad(url = "/Marketing/TicketFile/TicketFile_Folder_Devide/?handler=LoadDataInitialize"
            , data = {
                'FileID': TFDF_FileID
            }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    let dataGroupTele = data.dataGroup;
                    let dataLevel = data.dataLevel;
                    TFDF_InfoImport = data.dataTicket[0];
                    $('#txtTotalRecordNotDevide').val(TFDF_InfoImport.NumLeft);
                    if (dataGroupTele != null && dataGroupTele.length != 0) {
                        Load_Combo(dataGroupTele, "cbbGroupTele", true);
                        $("#GroupTele").dropdown("refresh");
                        $("#GroupTele").dropdown("set selected", Number(dataGroupTele[0].ID));
                    }
                    if (dataLevel != null && dataLevel.length != 0) {
                        Load_Combo(dataLevel, "cbbLevel", true);
                        $("#Level").dropdown("refresh");
                        $("#Level").dropdown("set selected", Number(dataLevel[0].ID));
                    }
                }
            }
        );
    }

    //#region // Excute Data

    function TFDF_ExcuteData() {
        TFDF_CheckDataDevide();
        var data = Object.values(data_selected_devide);
        let stringuser = '';

        if (data != undefined) {
            for (let i = 0; i < data.length; i++) {
                if (data[i].isDevide == "1") {
                    stringuser = stringuser + data[i].ID + ",";
                }
            }
        }
        if ($("#message_ticket_folder_devide").html() == "") {
            AjaxLoad(url = "/Marketing/TicketFile/TicketFile_Folder_Devide/?handler=ExcuteData"
                , data = {
                    'data': JSON.stringify(data),
                    'FileID': TFDF_FileID
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        if (typeof TFM_CloseDetail === 'function') TFM_CloseDetail();
                        if (typeof TF_IM_Load === 'function') TF_IM_Load();
                        fcm_sendmultiuser(stringuser, Master_circleAvatar, sys_employeeName_Main, '@Local["Nhận dữ liệu"]');
                    } else {
                        notiError_SW();
                    }
                }
            );

        }
        return false;
    }

    //#endregion

    function TFDF_CheckDataDevide() {
        var total = 0;
        for ([key, value] of Object.entries(data_selected_devide)) {
            total = total + Number(value.Amount);
        }
        if (total > TFDF_InfoImport.NumLeft) {
            $("#message_ticket_folder_devide").html("@Local["Số lượng chia đã vượt quá"]");
        } else if (total != TFDF_InfoImport.NumLeft) {
            $("#message_ticket_folder_devide").html("@Local["Phải chia hết dữ liệu trong một lần"].");
        }
        else if (total == TFDF_InfoImport.NumLeft) {
            $("#message_ticket_folder_devide").html("");
        }

    }

    function TFDF_FilterTele() {
        $('#message_ticket_folder_devide').html("");
        document.getElementById('dtTableTicketDevideBody').innerHTML = '';
        let Group_ID = Number($('#GroupTele').dropdown('get value')) ? Number($('#GroupTele').dropdown('get value')) : 0;
        let Level_ID = Number($('#Level').dropdown('get value')) ? Number($('#Level').dropdown('get value')) : 0;
        if (Level_ID != 0 && Group_ID != 0) {
            if (Level_ID == -1) Level_ID = 0;
            if (Group_ID == -1) Group_ID = 0;
            AjaxLoad(url = "/Marketing/TicketFile/TicketFile_Folder_Devide/?handler=LoadDataUser"
                , data = { 'GroupID': Group_ID, 'LevelID': Level_ID }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    if (result != "") {
                        let data = JSON.parse(result);
                        let dataUserDevide = data.dataUser;
                        data_selected_devide = {};
                        if (dataUserDevide.length != 0) {
                            for (let i = 0; i < dataUserDevide.length; i++) {
                                data_selected_devide[dataUserDevide[i].ID] = dataUserDevide[i];
                                RenderDevide_Add(dataUserDevide[i].ID, dataUserDevide[i], 'dtTableTicketDevideBody');
                            }
                        }
                    }
                }
            );
        }
    }

    //#region // Render Data Devide & Event Element Devide

    function RenderDevide_Add(key, value, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let tr =
                '<td class="vt-number-order"></td>'
                + '<td>' + AddCell_TeleSaleName(key, value.Name) + '</td>'
                + '<td>' + AddCell_TeleSaleGroup(key, value.GroupName) + '</td>'
                + '<td>' + AddCell_NumberDevide(key, value.Amount, (value.isDevide == 1 ? '' : 'disabled')) + '</td>'
                + '<td style="width: 50px;">' + AddCell_isDevide(key, value.isDevide) + '</td>'
            tr = '<tr class="vt-number rowDevide" data-id="' + key + '" id="rowDevide_' + key + '">' + tr + '</tr>';
            $('#' + id).append(tr)
        }
        Event_Element_Devide(key);
    }

    function AddCell_isDevide(key, value) {
        let result = '<div class="form-check form-switch my-auto">'
            + '  <input class="form-check-input d-flex" checked="" type="checkbox" id="isDevide_' + key + '" ' + (value == '1' ? 'checked' : '') + '>'
            + '  </div>'
        return result;
    }

    function AddCell_TeleSaleName(key, value) {
        let resulf = '<span class="TeleSaleName" id="TeleSaleName_' + key + '">' + value + '</span>';
        return resulf;
    }

    function AddCell_TeleSaleGroup(key, value) {
        let resulf = '<span class="TeleSaleGroup" id="TeleSaleGroup_' + key + '">' + value + '</span>';
        return resulf;
    }

    function AddCell_NumberDevide(key, value, disabled) {
        let resulf = '<input class="form-control NumberDevide" id="NumberDevide_' + key + '" value="' + value + '" type="number" ' + disabled + '/>';
        return resulf;
    }

    function Event_Element_Devide(key) {
        $('#isDevide_' + key).change(function () {
            let id = this.id.replace("isDevide_", "");
            if ($(this).is(':checked') == false) {
                data_selected_devide[id].isDevide = 0;
                data_selected_devide[id].Amount = 0;
                $('#NumberDevide_' + key).val(0);
                $('#NumberDevide_' + key).prop('disabled', true);
                $('#NumberDevide_' + key).addClass('disabled');
            } else {
                $('#NumberDevide_' + key).prop('disabled', false);
                $('#NumberDevide_' + key).removeClass('disabled', false);
                data_selected_devide[id].isDevide = 1;
            }
        });
        $('#NumberDevide_' + key).change(function () {
            changingflag = 0;
            let id = this.id.replace("NumberDevide_", "");
            data_selected_devide[id].Amount = this.value;
            changingflag = 1;
        });
    }

    //#endregion

</script>