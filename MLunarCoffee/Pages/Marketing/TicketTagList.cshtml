@page
@model MLunarCoffee.Pages.Marketing.TicketTagListModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()

<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/main.js');</script>

<div class="container-fluid py-3 px-0 position-relative">
    <div id="waitingTicketTag" class="waitingdiv text-center z-index-sticky position-absolute start-50 top-5" style=" display: none;">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card card-plain">
                <div class="card-header p-0">
                    <div class="d-lg-flex align-items-center">
                        <div style="min-width: 115px ">
                            <ul class="nav nav-pills p-1 bg-transparent mt-n2" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <a id="sf_infocolpe" class="nav-link cursor-pointer active" data-bs-toggle="collapse" href="#tt_infoarea">
                                        <i class="text-gradient text-primary fas fa-filter"></i>
                                    </a>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <a class="nav-link cursor-pointer  " data-bs-toggle="collapse" href="#tt_infodes">
                                        <i class="text-gradient  text-lg text-primary fas fa-info-circle"></i>
                                    </a>
                                </li>
                            </ul>

                        </div>
                        <div class="pb-0 flex-grow-1 my-lg-0 my-3" style="min-width: calc(100% - 115px)">
                            <div class="d-flex px-2 mt-n3">
                                <div style="height: 80px; padding: 30px 0 0px; width: 80px;">
                                    <div data-id="-1" id="tickettaggroupall" class="tickettaggroup_item active align-items-center d-flex text-sm justify-content-center" style="border: 1px solid #093f6b; margin: 0px; background-color: #093f6b; text-align: center;" data-color="#093f6b">
                                        <div class="tickettaggroup_item-index px-2 text-dark"  >
                                            <span class="fw-bold  " id="tickettaggroup_-1">0</span>
                                            <span class="text-secondary">/ </span>
                                            <span class="fw-bold" id="totaltickettaggroup_-1"></span>
                                        </div>
                                        <div class="tickettaggroup_item-title text-white">@Local["Tất cả"]</div>
                                    </div>
                                </div>
                                <div class="TicketTag_Arrow">
                                    <div id="TicketTag_Left_Arrow" class="TicketTag_Arrow_Outline">
                                        <i class="fas fa-angle-left"></i>
                                    </div>
                                </div>
                                <div id="TicketTagGroup">
                                </div>
                                <div class="TicketTag_Arrow">
                                    <div id="TicketTag_Right_Arrow" class="TicketTag_Arrow_Outline" style="margin-left: 10px;">
                                        <i class="fas fa-angle-right"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="tt_infodes" class="border-dashed border-1 border-secondary border-radius-md p-3 text-sm text-dark ms-1 mb-4 mt-2 multi-collapse collapse">
                        <h6 class="mb-0">@Local["Danh sách ticket tag"]</h6>
                        <p class="text-sm mb-0">@Local["Danh sách ticket xử lý theo ngày, những ticket nào đã là khách hàng không thể xóa"]</p>
                    </div>

                </div>
                <div class="card-body p-0">
                    <div class="collapsesticky z-index-sticky collapse mt-n4 me-n3 w-100"  id="tt_infoarea">
                        <div class="card-body py-0 pe-3 ps-1">
                            <div class="row px-2 form3 mt-3" id="">
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="input-group mb-0 flex-nowrap">
                                        <div class="ui fluid search selection dropdown max-width-100" id="TypeDate" onchange="Tag_ResetSearch();">
                                            <input type="hidden" name="branch" readonly="readonly">
                                            <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                            <i class="dropdown icon"></i>
                                            <div class="default text"></div>
                                            <div class="menu" tabindex="-1">
                                                <div class="item active selected" data-value="0">@Local["Ngày"]</div>
                                                <div class="item" data-value="1">@Local["Ngày chia"]</div>
                                                <div class="item" data-value="2">@Local["Ngày xử lý"]</div>
                                                <div class="item" data-value="3">@Local["Ngày tạo"]</div>
                                                <div class="item" data-value="4">@Local["Ngày gọi lại"]</div>
                                            </div>
                                        </div>
                                        <input id="dateCreated" class="flatpickr form-control ps-2" type="text" placeholder="eg .@Local["Ngày"]" onchange="event.preventDefault(); return Tag_ResetSearch()" />
                                        @*
                                            <div class="input-group-text" style="border-right: 1px solid #e6e6e6 !important;">
                                                <span onclick="event.preventDefault(); return Tag_RemoveDateSearch();" class="me-0 cursor-pointer text-danger" aria-hidden="true">
                                                    <i class="fas fa-times"></i>
                                                </span>
                                            </div>
                                        *@
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagServiceCareID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagServiceCare" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown me-2" id="tagGroupTeleID" onchange="event.preventDefault(); return Tag_FilterTeleByGroup()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagGroupTele" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown mt-2 mt-sm-0" id="tagTeleID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagTele" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown me-2" id="tagStatusCallID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagStatusCall" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>

                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagStatusCallDetail" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagStatusCallDetail" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
 
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagStatusID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagStatus" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagSourceID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagSource" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagCustGroupID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagCustGroup" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>


                                <div id="ttl_percreated" class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagCreateID" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagCreate" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>
                                <div id="ttl_typeticket" class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="ui fluid search selection dropdown" id="tagIsCustomer" onchange="event.preventDefault(); return Tag_ResetSearch()">
                                        <input type="hidden" readonly="readonly">
                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                        <i class="dropdown icon"></i>
                                        <div class="default text"></div>
                                        <div id="cbbTagIsCustomer" class="menu" tabindex="-1">
                                        </div>
                                    </div>
                                </div>


                                <div id="ttl_exerange" class="col-12 col-sm-6 col-xl-2 p-1 flex-grow-1">
                                    <div class="d-sm-flex">
                                        <div class="input-group">
                                            <span class="input-group-text" data-bs-toggle="tooltip" data-bs-placement="top">@Local["Từ"]:</span>
                                            <input id="TagFromExec" class="form-control ps-2" autocomplete="off">
                                            <span class="input-group-text" data-bs-toggle="tooltip" data-bs-placement="top">@Local["Đến"]:</span>
                                            <input id="TagToExec" class="form-control ps-2" autocomplete="off">
                                        </div>
                                    </div>
                                </div>
      
                            </div>
                            <div class="d-flex px-2 pb-2">
                                <div class="ms-auto my-auto mt-1">
                                    <button class="btn btn-success btn-sm mt-1 m-0 me-1" onclick="event.preventDefault();return Tag_LoadDataMaster();">@Local["Ok"]</button>
                                    <div class="position-relative d-inline">
                                        <button class="btn btn-dark btn-sm mt-1  mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                            @Local["Xem thêm"]
                                        </button>
                                        <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                            <ul class="card card-body text-dark text-capitalize opacity-10">
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="ticketcode" type="checkbox" checked>
                                                    </div>
                                                    <p class="text-sm">@Local["Mã ticket"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="contentlast" type="checkbox" checked>
                                                    </div>
                                                    <p class="text-sm">@Local["Nội dung xử lý gần nhất"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="source" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="custgroup" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Nhóm khách hàng"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="tag" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Tag"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="followOld" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Người phụ trách trước"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="tele_execute" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Người xử lý"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="staff" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Người phụ trách"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="servicecare" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Dịch vụ quan tâm"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="datedevided" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Ngày chia ticket"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="payment" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Thanh toán"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="schedule" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Lịch hẹn đầu tiên"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="execute" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Số ngày sau xử lý"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="marketingName" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Nhân viên marketing"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="iscustnew" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Khách hàng mới"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="gender" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Giới tính"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="city" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Thành phố"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="district" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Quận huyện"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <div class="form-check form-switch">
                                                        <input class="shtoogle form-check-input" data-name="Created" type="checkbox">
                                                    </div>
                                                    <p class="text-sm">@Local["Ngày tạo"]</p>
                                                </li>
                                                <li class="d-flex">
                                                    <button class="btn btn-dark w-100 btn-sm mt-1 m-0 me-1" onclick="event.preventDefault();return Tag_ExportExcel();">@Local["Xuất"]</button>
                                                    <button class="btn bg-gradient-primary w-100 btn-sm mt-1 mb-0 me-1" onclick="event.preventDefault(); return Tag_MoveTicket();">@Local["Chuyển"]</button>

                                                    
                                                </li>


                                                
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="m-0 mobile-responsive px-1 mt-2 stickytable" style="max-height: calc(100vh - 195px);">
                        <table class="table vt-table mb-0 " id="dtContentTicketTagList">
                            <thead class="z-index-1">
                                <tr>
                                    <th class="d-none">TicketID</th>
                                    <th class="chb_move" style="padding: 10px !important;">
                                        <div class="form-check">
                                            <input id="TicketTagCheckAll" class="form-check-input" name="ticketAll" type="checkbox" onchange="event.preventDefault();return Tag_CheckAll();" />
                                        </div>
                                    </th>
                                    <th style="min-width: 50px;">#</th>
                                    <th data-name="ticketcode" style="min-width: 120px">@Local["Mã ticket"]</th>
                                    <th style="min-width: 200px">@Local["Khách hàng"]</th>
                                    <th style="min-width: 130px">@Local["Số điện thoại"]</th>
                                    <th style="min-width: 240px">@Local["Nội dung"]</th>
                                    <th style="min-width: 200px;">@Local["Ngày xử lý gần nhất"]</th>
                                    <th style="min-width: 230px;" data-name="contentlast">@Local["Nội dung xử lý gần nhất"]</th>
                                    <th style="min-width: 200px;" data-name="source">@Local["Nguồn khách hàng"]</th>
                                    <th style="min-width: 200px;" data-name="custgroup">@Local["Nhóm khách hàng"]</th>
                                    <th data-name="tag" style="min-width: 150px">@Local["Tag"]</th>
                                    <th style="min-width: 200px">@Local["Trạng thái gọi lại"]</th>
                                    <th style="min-width: 200px;">@Local["Trạng thái xử lý"]</th>
                                    <th data-name="followOld" style="min-width: 200px;">@Local["Ngày phụ trách trước"]</th>
                                    <th data-name="tele_execute" style="min-width: 150px;">@Local["Người xử lý"]</th>
                                    <th data-name="staff" class=" full" style="min-width: 180px;">@Local["Người phụ trách"]</th>
                                    <th style="min-width: 150px;" data-name="payment">@Local["Thanh toán"]</th>
                                    <th style="min-width: 170px;">@Local["SL xử lý"]</th>
                                    <th style="min-width: 180px;" data-name="schedule">@Local["Lịch hẹn đầu tiên"]</th>
                                    <th data-name="servicecare" style="min-width: 180px;">@Local["Dịch vụ quan tâm"]</th>
                                    <th data-name="datedevided" style="min-width: 180px;">@Local["Ngày chia ticket"]</th>
                                    <th style="min-width: 200px;" data-name="marketingName">@Local["Nhân viên marketing"]</th>
                                    <th style="min-width: 150px;" data-name="iscustnew">@Local["Khách hàng mới"]</th>
                                    <th style="min-width: 150px;" data-name="gender">@Local["Giới tính"]</th>
                                    <th style="min-width: 150px;" data-name="city">@Local["Thành phố"]</th>
                                    <th style="min-width: 150px;" data-name="district">@Local["Quận huyện"]</th>
                                    <th style="min-width: 100px;" data-name="Created">@Local["Ngày tạo"]</th>
                                    <th data-name="execute" style="min-width: 220px;">@Local["Số ngày sau xử lý"]</th>
                                    <th style="width: 30px"></th>
                                </tr>
                            </thead>
                            <tbody id="dtContentTicketTagListBody">
                            </tbody>
                        </table>
                    </div>
                    <div class="mx-4">
                        <button id="tt_btnLoadMore" class="btnsysmore btn btn-secondary p-1 mb-0 w-100" onclick="Tag_LoadDataList(1)">@Local["Xem thêm"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
    let flagLoad = 0;
    let beginid = 0;
    let sys_Limit_LoadList = 500;
    var dataTicketTag;
    var dataTicketTag_Source, dataTicketTag_ServiceCare, dataTicketTag_Status, dataTicketTag_StatusCall, dataTicketTag_Group;
    let dataTicketTag_GroupKeyPair;
    let dataTicketTag_CustGroup = {};
    let dataTicketTag_ServiceCareObj = {};
    let dataTicketTag_Tele, dataTicketTag_TeleGroup;
    let dataUser, dataServiceCare;
    let shtable;
    let xhrTagList, xhrTagTotal;
    let perLevel = 0, perGroup = 0;
    let dateflatpickr;
    let dataTicketTag_IsCust = [
        {
            ID: 0, Name: "@Local["Loại ticket"]"
        },
        {
            ID: 1, Name: "@Local["Là ticket"]"
        },
        {
            ID: 2, Name: "@Local["là khách hàng"]"
        },
    ]

    $(document).ready(function () {
        shtable = $("#dtContentTicketTagList").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });

        dateflatpickr = $("#dateCreated").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false
        });

        var date = new Date();
        let firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        $("#dateCreated").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));

        ToolPopper();
        let UserID = '@Model._UserTeleID';
        Master_IndexDB_Reads(_Session_Data, [_Session_User, _Session_ServiceCare,_Session_User]
            , function (data) {
                dataUser = data[2];
                dataServiceCare = data[1];
                Tag_InitializeTicketList(UserID);
            });
        Tag_Ticket_Event();
        CheckPermissionControlInPage(sys_PerControlMH, '@Model.CurrentPath');
    });



    function Tag_InitializeTicketList(userID) {
        AjaxLoad(url = "/Marketing/TicketTagList/?handler=LoadComboMain"
            , data = { 'userID': userID }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    let Dt_Status = [];
                    let Dt_StatusDetail = [];
                    dataTicketTag_Tele = data.Tele;
                    dataTicketTag_TeleGroup = data.GroupTele;
                    dataTicketTag_Source = data.Source;
                    dataTicketTag_ServiceCare = data.ServiceCare;
                    dataTicketTag_Status = data.Status;
                    dataTicketTag_StatusCall = data.StatusFollow;
                    dataTicketTag_Group = data.Tag;
                    dataTicketTag_GroupKeyPair = data.Tag.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                    dataTicketTag_CustGroup = data.CustGroup.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                    dataTicketTag_ServiceCareObj = data.ServiceCare.reduce((pre, arr) => {if (arr.ID) pre[arr.ID] = arr; return pre;}, {});
                    let dataPer = data.PerTele;
                    if (dataPer && dataPer.length != 0) {
                        perLevel = dataPer[0].LEVEL
                        perGroup = dataPer[0].GROUPID
                    }


                    dataTicketTag_TeleGroup = Tag_FilterGroupByTele(dataTicketTag_TeleGroup, dataTicketTag_Tele);

                    Load_Combo(dataTicketTag_TeleGroup, "cbbTagGroupTele", true, '@Local["Tất cả nhóm tele"]')
                    Load_Combo(dataTicketTag_Tele, "cbbTagTele", true, '@Local["Tất cả telesale"]')
                    Load_Combo(dataTicketTag_Source, "cbbTagSource", true, '@Local["Tất cả nguồn"]')
                    Load_Combo(data.CustGroup, "cbbTagCustGroup", true, '@Local["Nhóm khách hàng"]')
                    Load_Combo(dataTicketTag_Status, "cbbTagStatus", true, '@Local["Tất cả trạng thái"]')

                    Dt_Status = dataTicketTag_StatusCall.filter(item => {return item["ParentID"] == 0});
                    Dt_StatusDetail = dataTicketTag_StatusCall.filter(item => {return item["ParentID"] != 0});
                    Load_Combo(Dt_Status, "cbbTagStatusCall", true, '@Local["Trạng thái"]');
                    Load_Combo(Dt_StatusDetail, "cbbTagStatusCallDetail", true, '@Local["Chi tiết trạng thái"]');

                    Load_Combo(dataTicketTag_ServiceCare, "cbbTagServiceCare", true, '@Local["Tất cả dịch vụ quan tâm"]');
                    Load_Combo(data.UserTele, "cbbTagCreate", true, '@Local["Tất cả người tạo"]');
                    Load_Combo(dataTicketTag_IsCust, "cbbTagIsCustomer", true, '@Local["Tất cả người tạo"]');


                    dataTicketTag_Group.unshift({ ID: 0, Name: decodeHtml('@Local["Chưa có tag"]'), Color: '#888' });
                    Tag_RenderData_Group(dataTicketTag_Group, "TicketTagGroup");

                    $("#TypeDate").dropdown("refresh");
                    $("#TypeDate").dropdown("set selected", "0");
                    $("#tagSourceID").dropdown("refresh");
                    $("#tagSourceID").dropdown("set selected", "0");
                    $("#tagCustGroupID").dropdown("refresh");
                    $("#tagCustGroupID").dropdown("set selected", "0");
                    $("#tagStatusID").dropdown("refresh");
                    $("#tagStatusID").dropdown("set selected", "0");
                    $("#tagStatusCallID").dropdown("refresh");
                    $("#tagStatusCallID").dropdown("set selected", "0");
                    $("#tagStatusCallDetail").dropdown("refresh");
                    $("#tagStatusCallDetail").dropdown("set selected", "0");
                    $("#tagServiceCareID").dropdown("refresh");
                    $("#tagServiceCareID").dropdown("set selected", "0");
                    $("#tagCreateID").dropdown("refresh");
                    $("#tagCreateID").dropdown("set selected", "0");
                    $("#tagIsCustomer").dropdown("refresh");
                    $("#tagIsCustomer").dropdown("set selected", "0");
                    $("#tagGroupTeleID").dropdown("refresh");
                    let groupteleid = perLevel == 2 || perLevel == 3 ? "0" : (dataTicketTag_TeleGroup.length != 0 ? (dataTicketTag_TeleGroup[0].ID).toString() : '0');
                    $("#tagGroupTeleID").dropdown("set selected", groupteleid.toString());
                    flagLoad = 1;
                    Tag_LoadDataMaster();
                }
            }
        );
    }

    function Tag_FilterGroupByTele(dataGroup, dataTele) {
        let dataGroupNew = [];
        if (dataTele && dataTele.length != 0 && dataGroup && dataGroup.length != 0) {
            dataGroupNew = dataGroup.reduce((pre, acc) => {
                let isTele = dataTele.filter((tele) => { return tele.GroupID == acc.ID });
                if (isTele.length != 0) {
                    pre.push(acc);
                }
                return pre;
            }, [])
        }
        //if (dataGroup.length == dataGroupNew.length) {
        //    dataGroupNew.unshift({ ID: 0, Name: 'Tất Cả Nhóm Tele' });
        //}
        return dataGroupNew;
    }

    function Tag_LoadDataMaster() {
        if (flagLoad == 1) {
            var promises = [];
            promises.push(Tag_LoadDataTotal());
            promises.push(Tag_LoadDataList());
            Promise.all(promises).then((value) => {

            })
        }
    }

    function Tag_ResetSearch() {
        $("#tt_btnLoadMore").hide();
    }


    function Tag_GetValueSearch() {
        try {
            var objValue = new Object();
            let date = $('#dateCreated').val() != '' ? $('#dateCreated').val() : '1900-01-01';
            let dateFrom;
            let dateTo;
            if (date.includes(" to ")) {
                date = date.replace(" to ", "#");
                dateFrom = date.split('#')[0];
                dateTo = date.split('#')[1];
            }
            else {
                dateFrom = date;
                dateTo = date;
            }
            let tagID = -1;
            if (!$('#tickettaggroupall').hasClass('active')) {
                let rowTagActive = $("#TicketTagGroup .tickettaggroup_item.active");
                if (rowTagActive && rowTagActive.length == 1) {
                    tagID = Number(rowTagActive.attr('data-id'));
                }
            }
            objValue.GroupID = Number($('#tagGroupTeleID').dropdown('get value')) ? Number($('#tagGroupTeleID').dropdown('get value')) : 0;
            objValue.StaffID = Number($('#tagTeleID').dropdown('get value')) ? Number($('#tagTeleID').dropdown('get value')) : 0;
            objValue.TagID = tagID;
            objValue.DateFrom = dateFrom;
            objValue.DateTo = dateTo;
            objValue.StatusID = Number($('#tagStatusID').dropdown('get value')) ? Number($('#tagStatusID').dropdown('get value')) : 0;
            objValue.StatusCallID = Number($('#tagStatusCallID').dropdown('get value')) ? Number($('#tagStatusCallID').dropdown('get value')) : 0;
            objValue.StatusCallDetail = $('#tagStatusCallDetail').dropdown('get value') ? Number($('#tagStatusCallDetail').dropdown('get value')) : 0;
            objValue.SourceID = Number($('#tagSourceID').dropdown('get value')) ? Number($('#tagSourceID').dropdown('get value')) : 0;
            objValue.CustGroupID = Number($('#tagCustGroupID').dropdown('get value')) ? Number($('#tagCustGroupID').dropdown('get value')) : 0;
            objValue.ServiceCare = $('#tagServiceCareID').dropdown('get value') ? $('#tagServiceCareID').dropdown('get value') : 0;
            objValue.CreateBy = Number($('#tagCreateID').dropdown('get value')) ? Number($('#tagCreateID').dropdown('get value')) : 0;
            objValue.IsCustomer = Number($('#tagIsCustomer').dropdown('get value')) ? Number($('#tagIsCustomer').dropdown('get value')) : 0;
            objValue.Level = perLevel;
            objValue.GroupUser = perGroup;
            objValue.TypeDate = $('#dateCreated').val() != '' ? (Number($('#TypeDate').dropdown('get value')) ? Number($('#TypeDate').dropdown('get value')) : 0) : 0;
            objValue.TimeExecFrom = !isNaN(Number($('#TagFromExec').val())) ? Number($('#TagFromExec').val()) : 0;
            objValue.TimeExecTo = !isNaN(Number($('#TagToExec').val())) ? Number($('#TagToExec').val()) : 0;
            return objValue;
        }
        catch (ex) {
            return {};
        }
    }

    async function Tag_LoadDataTotal() {
        return new Promise((resolve, reject) => {
            if (xhrTagTotal && xhrTagTotal.readyState != 4) xhrTagTotal.abort();
            let dataObj = new Object();
            dataObj = Tag_GetValueSearch();
            xhrTagTotal = AjaxLoad(url = "/Marketing/TicketTagList/?handler=LoadTotal"
                , data = {
                    'data': JSON.stringify(dataObj)
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    let data = JSON.parse(result);
                    Tag_SetTotalSearchGroup(data);
                    resolve();
                }
            );
        })
    }

    async function Tag_LoadDataList(isLoadMore = 0, CurrentID = 0) {
        return new Promise((resolve, reject) => {
            if (xhrTagList && xhrTagList.readyState != 4) xhrTagList.abort();
            let dataObj = new Object();
            dataObj = Tag_GetValueSearch();
            if (isLoadMore == 0 && CurrentID == 0) {
                dataTicketTag = [];
                beginid = 0;
                $("#dtContentTicketTagListBody").empty();
            }
            xhrTagList = AjaxLoad(url = "/Marketing/TicketTagList/?handler=LoadData"
                , data = {
                    'data': JSON.stringify(dataObj)
                    , 'BeginID': beginid
                    , 'Limit': sys_Limit_LoadList
                    , 'CurrentID': CurrentID
                }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    let data = JSON.parse(result);
                    if (data && data.length != 0) {
                        if (Number(CurrentID) == 0) {
                            dataTicketTag = dataTicketTag.concat(data);
                            beginid = dataTicketTag[dataTicketTag.length - 1].TicketID;
                            $("#tt_btnLoadMore").show();

                            fnRenderBlock(data, "dtContentTicketTagListBody"
                                , blocknum = 100
                                , fnrender = Tag_RenderData
                                , fnsuccess = function () {
                                    //$("#dtContentTicketTagList").tablesort();
                                }
                            );
                            Tag_SetTotalSearchGroup_Index(dataTicketTag);
                        }
                        else {
                            if (data != undefined && data.length == 1) {
                                let newitem = Tag_RenderItem(data[0]);
                                newitem = '<tr class="vt-number" id="Tag_Row' + data[0].TicketID + '">' + newitem + '</tr>';
                                if ($('#Tag_Row' + CurrentID).length) {
                                    $('#Tag_Row' + CurrentID).replaceWith(newitem);
                                }
                                shtable.Refresh();

                                for(let i = 0; i < dataTicketTag.length; i++){
                                    let item = dataTicketTag[i];
                                    if (item.TicketID == data[0].TicketID) {
                                        dataTicketTag[i] = data[0];
                                    }
                                }
                                Tag_SetTotalSearchGroup_Index(dataTicketTag);
                                Tag_Event();
                            }
                        }
                    }
                    else {
                        $("#tt_btnLoadMore").hide();
                    }
                    resolve();
                }
                , sender = null
                , before = function (e) {
                    $("#waitingTicketTag").show();
                }
                , complete = function (e) {
                    $("#waitingTicketTag").hide();
                }
            );
        })
    }

    //#region // RENDER DATA

    async function Tag_SetTotalSearchGroup(data) {
        new Promise((resolve, reject) => {
            for (var j = 0; j < dataTicketTag_Group.length; j++) {
                let item = dataTicketTag_Group[j];
                let Number = 0
                let dataFill = data.filter((word) => { return word.GroupID == item.ID });
                if (dataFill && dataFill.length != 0) {
                    Number = dataFill[0].Number;
                }
                let id = "totaltickettaggroup_" + item.ID;
                if ($("#" + id).length != 0) {
                    Count_Up(id, Number);
                }
            }
            let idAll = "totaltickettaggroup_-1";
            let countAll = data.reduce((pre, acc) => { return pre + acc.Number }, 0);
            if ($("#" + idAll).length != 0) {
                Count_Up(idAll, countAll);
            }
            resolve();
        });
    }

    async function Tag_SetTotalSearchGroup_Index(data) {
        new Promise((resolve, reject) => {
            for (let j = 0; j < dataTicketTag_Group.length; j++) {
                let item = dataTicketTag_Group[j];
                id = "tickettaggroup_" + item.ID;
                if ($("#" + id).length != 0) {
                    Count_Up(id, (data.filter((word) => word.TagID == item.ID)).length);
                }
            }
            let idAll = "tickettaggroup_-1";
            if ($("#" + idAll).length != 0) {
                Count_Up(idAll, data.length);
            }
            resolve();
        });
    }

    function Tag_TicketList_GroupIndex() {
        if (DataComboTicketTagGroup && DataComboTicketTagGroup.length != 0) {
            for (let i = 0; i < DataComboTicketTagGroup.length; i++) {
                let item = DataComboTicketTagGroup[i];
                let count = 0;
                let id = "tickettaggroup_" + item.ID;
                if (item.ID == -1) {
                    count = dataTicketTag.length;
                }
                else count = (dataTicketTag.filter((word) => { return word["GroupID"] == item.ID })).length;
                if ($("#" + id).length) $("#" + id).html(formatNumber(count));
            }
        }
    }

    async function Tag_RenderData(data, id) {
        new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let stringContent = '';
                    if (data && data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = Tag_RenderItem(item);
                            let currentExcuted = Tag_Tag_RenderItem_GetDateExecute(item.ExecutedDate, item.DevidedDate);
                            let maxExcuted = dataTicketTag_GroupKeyPair[item.TagID]?.MaxExcute ?? 0;
                            let hasLine = ((maxExcuted != 0) && currentExcuted >= maxExcuted) ? ` border-danger` : '';
                            stringContent = '<tr class="vt-number border-3 border-5 border-bottom-0 border-end-0 border-top-0'+ hasLine +'" id="Tag_Row' + item.TicketID + '">' + tr + '</tr>';
                            myNode.insertAdjacentHTML("beforeend", stringContent);
                        }

                    }
                }
                Tag_Event();
                Checking_TabControl_Permission();
                shtable.Refresh();
                ToolPopper();
            }
                , 10);
        });
    }

    function Tag_RenderItem(item) {
        let result = '';
        let checkbox = `
                <div class="form-check d-inline-block me-0">
                    <input class="form-check-input TicketTagItem" type="checkbox" id="TicketTagItem_${item.TicketID}" data-id="${item.TicketID}">
                </div>`
        let customerCode = item.CustID != 0
            ? `<a target="_blank" class="border-1 border-bottom border-primary" href="/Customer/MainCustomer?CustomerID=${item.CustID}&ver=${versionofWebApplication}">${item.CustCode}</a>`
            : ``;
        let ticketcode = `<a target="_blank" class="fw-bold border-bottom border-primary" href="/Marketing/TicketAction?CustomerID=${0}&TicketID=${item.TicketID}&Type=${7}&MasterID=${0}">${Tag_RenderItem_GeneralCode(item.TicketID)}</a>`
        let phoneticket = `
                <a href="#" data-ticid="${item.TicketID}" data-custid="${item.CustID}" data-info="${encrypt_phone(item.Phone)}" class="TagCustomerPhone" >
                    <i class="text-sm text-gradient text-success vtt-icon vttech-icon-call-action"></i >
                    <span class="_tab_control_" data-tab="phone_customer">${item.Phone}</span>
                </a>`
        let isFirstPaid = !(ConvertYMDInt_ToDate(item.FirstPaid)).includes('01-01-1900')
            ? `<i class="fas fa-check text-success"></i>`
            : ``;
        let schedule = item.IsBook != 0
            ? `<p class="mb-0 text-sm">${item.FirstAppBranch}</p>
                   <span class="text-sm">${GetDateTime_String_DMYHM(item.FrsitAppDateFrom)}</span>`
            : ``

        let servicecare = Fun_GetStringButStringID_ByToken(dataTicketTag_ServiceCareObj, item.ServiceCareToken, item.ServiceCare);
        let servicecareID = Fun_GetName_ByID(dataTicketTag_ServiceCareObj, item.ServiceCare);

        let datedevided = !(item.DevidedDate).includes('1900-01-01')
            ? `${GetDateTime_String_DMYHM(item.DevidedDate)}`
            : ``;
        let execute = (item.ExecutedUser != 0)
            ? `${Tag_RenderItem_GetUser(item.ExecutedUser, item.ExecutedDate)}`
            : ``;
        let dateexcute = (item.ExecutedUser != 0)
            ? `<span class="text-sm mb-0">${GetDateTime_String_DMYHM(item.ExecutedDate)}</span>`
            : ``;
        let statusCall = Tag_RenderItem_FilterName(dataTicketTag_StatusCall, item.StatusCall);
        let statusCallDetail = Tag_RenderItem_FilterName(dataTicketTag_StatusCall, item.StatusCallDetail);
        result = `
                <td class="d-none">${item.TicketID}</td>
                <td class="text-center chb_move">${checkbox}</td>
                <td class="vt-number-order"></td>
                <td data-sortvalue="${item.TicketID}" data-name="ticketcode" class="text-center">${ticketcode}</td>
                <td data-sortvalue="${item.Name}">${customerCode}<p class="mb-0 text-sm">${item.Name}</p></td>
                <td class="text-center">${phoneticket}</td>
                <td><span class="content_line_clamp">${item.Content}</span></td>
                <td >${execute}</td>
                <td data-name="contentlast"><span class="content_line_clamp">${item.ContentLast}</span></td>
                <td data-name="source">${Tag_RenderItem_FilterName(dataTicketTag_Source, item.SourceID)}</td>
                <td data-name="custgroup">${Fun_GetName_ByID(dataTicketTag_CustGroup, item.CustGroupID)}</td>
                <td data-name="tag">${Tag_RenderItem_FilterName(dataTicketTag_Group, item.TagID)}</td>
                <td ><span>${Tag_RenderItem_FilterName(dataTicketTag_Status, item.StatusID)}</span>
                    ${(item.StatusID == 88) ? `<div>${GetDateTime_String_DMYHM(item.TimeRepeat)}</div>` : ''}
                </td>
                <td >${((statusCall != '') ? `${statusCall} - ${statusCallDetail}` : ``)}</td>
                <td data-name="followOld">${Tag_RenderItem_GetUser(item.StaffIDOld, item.executedOld)}</td>
                <td data-name="tele_execute">${Tag_RenderItem_GetUser(item.ExecutedUser)}</td>
                <td data-name="staff">${Tag_RenderItem_GetUser(item.StaffID)}</td>
                <td data-name="payment" class="text-center">${isFirstPaid} <span class="d-none">${isFirstPaid!='' ? "x" : ""}</span></td>
                <td class="text-center">${formatNumber(item.TotalExecuted)}</td>
                <td data-name="schedule">${schedule}</td>
                <td data-name="servicecare"><span class="border-bottom border-primary" data-bs-toggle="tooltip" title="@Local["Dịch vụ quan tâm đại diện"]">${servicecareID != `` ? (servicecareID + `, `) : ``}</span>${servicecare}</td>
                <td data-name="datedevided">${datedevided}</td>
                <td data-name="marketingName">${item.MarName}</td>
                <td data-name="iscustnew" class="text-center">${ item.IsCustNew == 1 ? `<i class="fas fa-check text-success"></i>` : '' }</td>
                <td data-name="gender">${item.GenderID == 60 ? "@Local["Nam"]" : "@Local["Nữ"]"}</td>
                <td data-name="city">${item.CityName}</td>
                <td data-name="district">${item.DistrictName}</td>
                <td data-name="Created">${ConvertDateTimeToString_D_M_Y(item.Created)}</td>
                <td class="text-center" data-name="execute">${Tag_Tag_RenderItem_GetDateExecute(item.ExecutedDate, item.DevidedDate)}</td>
                <td>
                    <button class="buttonGrid"><i data-cus="${item.CustID}" data-id="${item.TicketID}" class="text-lg buttonActionClass text-gradient text-primary imgGrid vtt-icon vttech-icon-action"></i></button>
                    <div class="text-nowrap">
                        ${Tag_RenderButton(item.CustID, item.TicketID)}
                    </div>
                </td>
            `
        return result;
    }

    function Tag_RenderButton (CustomerID, TicketID) {
        let buttons = [];
        buttons.push('<button class="buttonGrid"><i data-cus="' + CustomerID + '" data-id="' + TicketID + '" class="buttonViewClass text-lg fas fa-angle-right"></i></button>');
        if (Number(CustomerID) == 0) {
            buttons.push('<button class="buttonGrid"><i data-id="' + TicketID + '" class="buttonDeleteClass text-lg fas fa-times"></i></button>');
        }
        return Render_Button_Grid(buttons)
    }

    function Tag_RenderItem_GeneralCode(id) {
        try {
            let result = '';
            let stringTemm = '00000000';
            stringTemm = stringTemm + id.toString();
            let lengthTemp = stringTemm.length;
            result = stringTemm.slice(lengthTemp - 8, lengthTemp)
            return result;
        }
        catch (ex) {
            return '';
        }
    }

    function Tag_Tag_RenderItem_GetDateExecute(dateExecute, dateDevide) {
        let result = 0;
        let DateExecute = ConvertDT_To_StringYMD(new Date(dateExecute));
        let DateDevide = ConvertDT_To_StringYMD(new Date(dateDevide));
        if (DateDevide != "1900-01-01" || DateExecute != "1900-01-01") {
            let date = DateExecute != "1900-01-01" ? ConverDateTime_Only_Date_From_DateTime(new Date(dateExecute)) : ConverDateTime_Only_Date_From_DateTime(new Date(dateDevide));
            var Difference_In_Time = ConverDateTime_Only_Date_From_DateTime(new Date()).getTime() - date.getTime();
            var Difference_In_Days = Math.floor(Difference_In_Time / (1000 * 3600 * 24));
            result = Difference_In_Days;
        }
        return result;
    }

    function Tag_RenderItem_GetUser(id, date) {
        let result = ``;
        if (id != 0) {
            let obj = Fun_GetObject_ByID(dataUser,  id);
            let name = (obj != null && obj.EmployeeName != undefined) ? obj.EmployeeName : 'unknown';
            let img = (obj != null) ? obj.Avatar : Master_Default_Pic;
            let stringdate = '';
            if (date != undefined && !date.includes('1900-01-01'))
                stringdate = `<span class="text-sm">${GetDateTime_String_DMYHM(date)}</span>`
            result = `
                <div class="d-flex">
                    <div class="d-flex flex-column">
                        <p class="text-sm mb-0">${name}</p>
                            ${stringdate}
                    </div>
                </div>
            `
        }
        return result;
    }

    function Tag_RenderItem_FilterName(data, id) {
        let result = ''
        if (id != 0) {
            let dataFilter = data.filter((word) => { return word.ID == id });
            if (dataFilter && dataFilter.length != 0) {
                result = dataFilter[0].Name;
            }
        }
        return result;
    }

    async function Tag_RenderData_Group(data, id)  {
        return new Promise((resolve, reject) => {
            //let dataColor = ['#1abc9c', '#27ae60', '#e74c3c', '#e67e22', '#f1c40f', '#9b59b6', '#3498db'];
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                //let colorIdx = 0;
                //let colorLength = dataColor.length;
                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        let item = data[i];
                        if (item.ID != "-1") {
                            //colorIdx = colorIdx > colorLength - 1 ? 0 : colorIdx;
                            let color = item.Color; //dataColor[colorIdx];
                            let tr = `<div data-id="${item.ID}" class="tickettaggroup_item text-dark  align-items-center d-flex text-sm tickettaggroup_item"
                                        title="${'@Local[" Số ngày xử lý tối đa"]' } ${item?.MaxExcute ?? '@Local["Không giới hạn ngày"]'}"
                                        style="background-color:${color}69;border:2px solid ${color};" data-color="${color}">
                                        <div class="tickettaggroup_item-index text-dark">
                                            <span class="fw-bold" id="tickettaggroup_${item.ID}">0</span>
                                                 <span class="text-secondary"> / </span>
                                                <span class="fw-bold" id="totaltickettaggroup_${item.ID}">0</span>
                                        </div>
                                        <div class="tickettaggroup_item-title text-capitalize" style="min-width: 90px; width: max-content"> ${item.Name}</div>
                                    </div>`
                            //colorIdx++;
                            stringContent = stringContent + tr;
                        }
                    }
                }
                document.getElementById(id).innerHTML = stringContent;
                ToolPopper();
                Tag_TicketList_GroupEvent();
            }
            resolve();
        })
    }

    //#endregion

    //#region //Delete

    function Tag_DeleteRow (id) {
        if ($('#Tag_Row' + id)) {
            $('#Tag_Row' + id).remove();
        }
    }

    //#endregion


    //#region // EVENT

    function Tag_FilterTeleByGroup() {
        let groupID = Number($('#tagGroupTeleID').dropdown('get value')) ? Number($('#tagGroupTeleID').dropdown('get value')) : 0;
        if (groupID == 0) {
            Load_Combo(dataTicketTag_Tele, "cbbTagTele", true, "@Local["Tất cả telesale"]");
            $("#tagTeleID").dropdown("clear");
            $("#tagTeleID").dropdown("refresh");
            $("#tagTeleID").dropdown("set selected", "0");
        }
        else {
            let dataFilter = dataTicketTag_Tele.filter((word) => { return word.GroupID == groupID });
            if (perLevel == 3 || perLevel == 2) {
                Load_Combo(dataFilter, "cbbTagTele", true, "@Local["Tất cả telesale"]");
                $("#tagTeleID").dropdown("refresh");
                $("#tagTeleID").dropdown("set selected", "0");
            }
            else {
                Load_Combo(dataFilter, "cbbTagTele", true);
                $("#tagTeleID").dropdown("clear");
                $("#tagTeleID").dropdown("refresh");
                $("#tagTeleID").dropdown("set selected", dataFilter[0] ? (dataFilter[0].ID).toString() : 0);
            }
        }
        Tag_ResetSearch();
    }

    function Tag_CheckAll() {
        let isCheck = $("#TicketTagCheckAll").is(":checked");
        if (isCheck) {
            $(".TicketTagItem").prop("checked", true);
        }
        else {
            $(".TicketTagItem").prop("checked", false);
        }
    }

    function Tag_MoveTicket() {
        let objTicket = [];
        $(".TicketTagItem").each(function () {
            let isChecked = $(this).is(":checked");
            let id = Number($(this).attr("data-id"));
            if (isChecked) {
                let e = {};
                e.TicketID = id;
                objTicket.push(e);
            }
        });
        if (objTicket && objTicket.length != 0) {
            localStorage.setItem('TicketMove', JSON.stringify(objTicket));
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Marketing/TicketMoveMultipleDetail" + "?&ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
            return false;
        }
        else {
            notiWarning("@Local["Chưa chọn ticket"]");
        }
    }

    function Tag_TicketList_GroupEvent() {
        var SetTimeoutLoadTag;
        $(".tickettaggroup_item").on("click", function () {
            clearTimeout(SetTimeoutLoadTag);

            let id = $(this).attr("id");
            if (id == "tickettaggroupall") {
                $(".tickettaggroup_item").not(this).removeClass("active");
                $(this).addClass("active");
            }
            else {
                $('.tickettaggroup_item[data-id="-1"]').removeClass("active");
                $(this).addClass("active").siblings(".tickettaggroup_item").removeClass("active");
            }
            //$(".tickettaggroup_item").each(function () {
            //    let hasActive = $(this).hasClass("active");
            //    let color = $(this).attr("data-color");
            //    if (hasActive) $(this).css("background", color);
            //    else $(this).css("background", "transparent");
            //});

            SetTimeoutLoadTag = setTimeout(() => {
                //Tag_LoadDataMaster();
                Tag_LoadDataList();
            }, 500)
        })
    }

    function Tag_Ticket_Event() {
        $('#dtContentTicketTagList tbody').on('click', '.TicketTagItem', function () {
            let count = 0;
            $(".TicketTagItem").each(function () {
                let isChecked = $(this).is("checked");
                if (!isChecked) count = 1;
            })
            if (count == 1) $("#TicketTagCheckAll").prop("checked", false);
            else $("#TicketTagCheckAll").prop("checked", true);
        });
        $("#TicketTag_Left_Arrow").click(function () {
            var leftPos = $('#TicketTagGroup').scrollLeft();
            $('#TicketTagGroup').animate({ scrollLeft: leftPos - 300 }, 300);
        });

        $("#TicketTag_Right_Arrow").click(function () {
            var leftPos = $('#TicketTagGroup').scrollLeft();
            $('#TicketTagGroup').animate({ scrollLeft: leftPos + 300 }, 300);
        });
        $("#dtContentTicketTagList tbody").on('click', '.TagCustomerPhone', function () {
            let phone = $(this).attr("data-info");
            let cus = $(this).attr("data-custid");
            let tic = $(this).attr("data-ticid");
            Tag_CallTakeCareCalling(phone, cus, tic);
        });

    }

    function Tag_CallTakeCareCalling(phone, customer, ticket) {
        if (typeof CCF_OutcomCall !== 'undefined' && $.isFunction(CCF_OutcomCall)) {
            CCF_OutcomCall(phone, customer, ticket, 0);
        }
    }



    async function Tag_ExportExcel() {
        $(".chb_move").hide();
        await exportToExcel("dtContentTicketTagList", Outlang['Danh_sach_taglist']);
        $(".chb_move").show();
    }

    function Tag_Event () {
        $("#dtContentTicketTagListBody .buttonActionClass").unbind("click").click(function () {
            let ticketid = $(this).attr("data-id");
            let custid = $(this).attr("data-cus");
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Marketing/CallDetailInput?"
                + "MasterID=" + 0
                + "&CustomerID=" + custid
                + "&TicketID=" + ticketid
                + "&Type=" + 7
                + "&AppID=" + 0
                + "&TreatID=" + 0
                + "&TreatmentDate=" + null);
            $('#DetailModal').modal('show');
        })

        $("#dtContentTicketTagListBody .buttonViewClass").unbind("click").click(function () {
            let id = $(this).attr("data-id");
            window.open("/Marketing/TicketAction?CustomerID=" + 0 + "&TicketID=" + id + "&Type=" + 7 + "&MasterID=" + 0);
        })

        $("#dtContentTicketTagListBody .buttonDeleteClass").unbind("click").click(function () {
            let id = $(this).attr("data-id");
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/Marketing/TicketDelete?TicketID=" + id);
            $('#DetailModal').modal('show');
        })
    };
        //#endregion

</script>
<style>

    .phone_ticket {
        color: #002038;
        border-top: #b9b9be;
        border-top-width: 1px;
        border-top-style: solid;
    }

    .name_ticket {
        color: #970606;
        font-size: 14px;
        border-top: #b9b9be;
        /*border-top-width: 1px;
                border-top-style: solid;*/
    }

    .link_ticket {
    }

    .content_ticket {
        color: #3d3d3d;
        font-size: 13px;
        display: inline;
    }

    .content_last_ticket {
        color: #3d3d3d;
        font-size: 13px;
        display: block;
        padding-left: 2px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 4;
        -webkit-box-orient: vertical;
    }

    .source_ticket {
        background: #2185d021;
        padding: 0 4px;
        color: #2185d0;
    }

    .service_care_text {
        display: block;
        color: #21ba45;
        font-size: 13px;
    }



    .ticket_time {
        display: block;
        color: #5c017a;
        font-size: 13px;
    }

    .ticket_text {
        background: #29b87e47;
        padding: 0 4px;
        color: #005d58;
    }

    .scheduler_sus_div {
        background: #f2711c;
        padding: 0 6px 1px 0px;
        display: inherit;
        margin: 2px 0px;
        margin-left: 5px;
        color: white;
    }

    .scheduler_sus {
        background: #f2711c !important;
        color: white;
        padding: 1px 4px;
    }

    .not_callback {
        background: #d4d4d5 !important;
        color: rgb(0 0 0 / 95%);
        padding: 1px 4px;
    }

    .time_call_back {
        background: #2185d0;
        padding: 1px 4px;
        color: #ffffff;
    }

    .inday_ticket {
        color: #db2828;
        margin: 0 2px;
        background: #ffd7d7;
        padding: 0 5px;
    }

    .loadmore {
        height: 20px;
        border-style: none;
        border-radius: 20px;
        font-size: 13px;
        color: #db2828;
        background: #ffffff;
        font-weight: 500;
        margin-bottom: -2px;
        width: 100%;
    }

    i.customer_care {
        margin-left: 10px;
    }

    .ticket_list_nocontent {
        padding-left: 10px;
        color: #d4d4d5;
    }

    .ticketlist_avatar {
        border-radius: 50px;
        width: 15px;
        height: 15px;
        margin-bottom: -3px;
    }
    /*#region // Box time*/
    .box_date_time {
        width: 100%;
        padding: 5px;
    }

        .box_date_time .box_date_time_title {
            text-align: center;
            color: #767676;
            font-size: 12px;
            text-transform: uppercase;
        }

        .box_date_time .box_date_time_step {
            display: flex;
            padding: 5px 0;
            align-items: center;
            padding-top: 14px;
        }

        .box_date_time .box_date_time_content {
            flex-grow: 1;
            text-align: center;
            font-size: 0.975rem;
            font-weight: 600;
            color: #0a3c62;
            text-transform: uppercase;
        }

        .box_date_time .box_date_time_icon {
            font-size: 16px;
            color: #bdbcbc;
            padding: 0;
            cursor: pointer;
        }

        .box_date_time .box_date_time_reset {
            text-align: center;
            font-size: 12px;
            color: #138fee;
            margin-top: 4px;
        }

    /*#endregion */
    #btnMoreTicketList {
        font-size: 14px;
        color: #ca2121;
        margin: 0 10px;
        padding: 0 2px;
        border-bottom: 1px solid #001423;
    }

    #lbTotalTicket {
        font-size: 14px;
        color: #ca2121;
        margin: 0 2px;
        padding: 0 2px;
    }

    #divTicketList_DetailAction {
        width: 100%;
        display: none;
        margin: 0 0 0 10px;
        padding: 0;
        /*max-height: calc(100vh - 300px);
            overflow-x: auto;
            overflow-y: auto;*/
    }

    #section_table_left {
        max-height: calc(100vh - 380px);
        overflow-x: auto;
        overflow-y: auto;
        width: 100%;
    }

        #section_table_left.collapse_table {
            min-width: 350px;
            max-width: 350px;
        }

    .ui.table:not(.unstackable) tr > td.full.hide_column,
    th.full.hide_column,
    .action_detail {
        display: none !important;
    }

        .action_detail.active {
            display: table-cell !important;
        }

    #divTicketList_DetailAction_Empty {
        width: 100%;
        height: 62px;
        display: flex;
        justify-content: center;
    }

    .executed_ticket {
        background: #2185d01f;
    }

    .main_ticket_container {
        display: flex;
    }

    .status_ticket {
        border: 1px solid #e6e6e6;
        display: inline-flex;
        background: #b8dbf6;
    }


    #section_table_left.collapse_table table tr.selected {
        background: rgb(190, 227, 255) !important;
    }

    @@media only screen and (max-width:992px) {
        .main_ticket_container {
            flex-wrap: wrap;
        }

        #divTicketList_DetailAction {
            margin: 0;
            max-height: unset;
        }

        #section_table_left {
            min-width: 100% !important;
            margin-bottom: 1em;
        }
    }

    @@media only screen and (max-width:767px) {
        .fix_div {
            width: 100%;
        }

        .field_action_filter {
            flex-wrap: wrap;
        }
    }
</style>
<style>
    #TicketTagGroup {
        height: 80px;
        max-height: 80px;
        position: relative;
        display: flex;
        overflow-x: scroll;
        overflow-y: hidden;
        width: 100%;
        padding: 30px 0px 0px;
        flex-wrap: nowrap;
        scroll-snap-type: x mandatory;
    }

    .tickettaggroup_item {
        height: 30PX;
        background-color: transparent;
        margin-left: 2px;
        border-radius: 10px;
        position: relative;
        padding: 3px 6px;
        cursor: pointer;
    }

    #TicketTagGroup .tickettaggroup_item:first-child {
        margin-left: 0;
    }

    .tickettaggroup_item.active {
        background: rgb(var(--bs-primary)) !important;
        color: white !important;
    }

    .tickettaggroup_item-index {
        position: absolute;
        top: -22px;
        left: -6px;
        padding: 0px 6px;
        font-size: 12px;
        white-space: nowrap;
    }

    .tickettaggroup_item-title {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-inline-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        transition: 0.3s all;
        position: unset !important;
        vertical-align: bottom;
    }

    .Session_TicketTag_Group {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .TicketTag_Arrow {
        background: white;
        height: 80px;
        width: 40px;
        display: flex;
        align-items: center;
        font-size: 19px;
        color: #2c3e50;
        margin-left: 10px;
    }

    .TicketTag_Arrow_Outline {
        width: 100%;
        font-size: 20px;
        padding: 10px 0;
        text-align: center;
        margin-right: 10px;
        cursor: pointer;
        opacity: 0.3;
    }

    #btndateCreated {
        z-index: 11;
        pointer-events: auto;
        opacity: 1;
        cursor: pointer;
    }

    .Session_TicketTag_Group:hover .TicketTag_Arrow_Outline {
        opacity: 1;
    }

    #dtContentTicketTagList.form-check .form-check-input {
        width: 1.3rem !important;
        height: 1.3rem !important;
    }
    #tt_infoarea {
        max-width: unset !important;
        min-width: unset !important;
        width:100% !important;
    }
 
</style>
