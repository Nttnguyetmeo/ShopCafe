@page
@model MLunarCoffee.Pages.Monitor.RoomStatusModel
@{
    Layout = null;
}
<div class="monitorrom m-0 p-0 position-relative" style="overflow: hidden;">
    <img class="position-absolute end-0" style="z-index: 2; width: 44%;" src="/image/monitor/decor.png" onerror="Master_OnLoad_Error_Image(this)" />
    <img class="position-absolute start-0 top-0" style=" height: 10em; width: 100%; " src="/image/monitor/background.png" onerror="Master_OnLoad_Error_Image(this)" />
    <div class="d-flex w-100 z-index-3 p-2 px-3 align-items-center position-absolute start-0 top-0 justify-content-center" style="height: 140px;">
        <img class="ms-3" style=" max-height: 100px;" id="rs_branchlogo" src="/default.png" onerror="Master_OnLoad_Error_Image(this)">
        <div class="row p-3 ms-auto">
            <div class="d-flex justify-content-end align-items-center">
                <div class="ps-2 mt-1 text-dark">
                    <div class="ps-1 text-sm text-end fs-5">
                        <h3 id="rs_comname" class="text-nowrap text-dark fw-bolder text-uppercase mb-0"></h3>
                        <div class="d-flex my-1 align-items-center justify-content-end">
                            <h5 class="fw-bold text-nowrap mb-0">@Local["Liên hệ"]</h5>
                            <span class="px-2">:</span>
                            <h5 class="text-nowrap mb-0 " id="rs_phone"></h5>
                            <span class="px-2">-</span>
                            <h5 class="text-nowrap mb-0" id="rs_comwebsite"></h5>
                        </div>
                        <div class="d-flex my-1 align-items-center justify-content-end">
                            <h5 class="fw-bold text-nowrap mb-0">@Local["Địa chỉ"]</h5>
                            <span class="px-2">:</span>
                            <h5 class="text-nowrap mb-0" id="rs_address"></h5>
                        </div>
               
                    </div>
                </div>
                <div class="my-0 position-relative ms-3">
                    <div class="expired bg-white rounded-3 position-absolute top-50 z-index-2 start-50 translate-middle">
                        <img id="rs_qrimg" class="p-1 avatar avatar-xs " src="/Image/dinosaur.png" />
                    </div>
                    <div id="rs_qrcode" class="cursor-pointer p-2 border rounded-3"></div>
                </div>
            </div>


            <div class="text-end">
               
            </div>
        </div>
    </div>
    
   
    <div class="row">

        <div class="d-flex" style="margin-top: 10em; z-index: 3;">
            <div class="rs_left">
                <div class="position-relative" style="height: 12em; background: #ffdccd; border-radius: 22px; ">
                    <img class="position-absolute  " style="height: 5rem; width: 5rem; top: -22px; right: -20px; " src="/image/monitor/asset3.png" onerror="Master_OnLoad_Error_Image(this)" />
                    <img class="position-absolute" style=" height: 12em; width: 80%; opacity: 0.6;" src="/image/monitor/patternbackground.png" onerror="Master_OnLoad_Error_Image(this)" />
                    <div class="position-absolute top-0 mt-5 ms-5">
                        <span class="fs-4 text-dark fw-bolder">@Local["Khách hàng đang phục vụ"]</span>
                        <div class="mt-0 d-flex">
                            <div style="font-size: 55px !important; min-width: 93px; height: 100px; overflow: hidden; " class="fs-1 text-danger fw-bolder pe-1" id="RS_CurrentIndex"></div>
                            <div style="font-size: 55px !important; height: 100px;" class="ellipsis_one_line fs-1  text-dark fw-bolder text-uppercase" id="RS_CurrentName"></div>
                        </div>
                    </div>
                </div>
                <div class="mt-3">
                    <table class="table bg-white vt-table mb-0">
                        <thead id="RS_Waitingh">
                            <tr>
                                <th>@Local["STT"]</th>
                                <th>@Local["Khách hàng đợi"]</th>
                                <th style="min-width:110px;max-width:110px;">@Local["Giới tính"]</th>
                            </tr>
                        </thead>
                        <tbody id="RS_Waiting">
                        </tbody>
                    </table>
                </div>
               
            </div>
            <div class="rs_right">
                <div class="mt-1">
                    <a id="RS_roomname" class="nav-link fs-2 text-center text-white text-primary fw-bold p-0 px-1 "></a>
                </div>
                <table class="table bg-white vt-table mb-0">
                    <thead id="RS_Waitingfarh">
                        <tr>
                            <th>@Local["STT"]</th>
                            <th>@Local["Khách hàng đợi"]</th>
                        </tr>
                    </thead>
                    <tbody id="RS_Waitingfar">
                    </tbody>
                </table>
            </div>
        </div>



    </div>
</div>

<script>

    let ser_CurrentFloor = @Model._CurrentFloor;
    let ser_CurrentRoom = @Model._CurrentRoom;
    let ser_BranchID =@Model._BranchID;



    var RS_keyroom = "Userroom";
    var RS_roomcurrent = 0;
    $(document).ready(function () {

        RS_LoadOutside();

    })
    function RS_LoadOutside () {
        RS_LoadInit(ser_CurrentRoom);
        RS_LoadApps(ser_CurrentRoom);
        RS_RoomEvent();
    }
    function RS_Reload () {
        RS_LoadInit(ser_CurrentRoom);
        RS_LoadApps(ser_CurrentRoom);
    }
    async function RS_LoadInit (roomid) {
        new Promise((reolve) => {
            setTimeout(() => {
                try {
                    AjaxLoad(url = "/Monitor/RoomStatus/?handler=Init"
                        , data = {
                            "RoomID": roomid
                        }
                        , async = true
                        , error = function () {notiError_SW();}
                        , success = function (result) {
                            if (result != "0") {
                                let datas = JSON.parse(result);
                                let dataRoom = datas.Room;
                                let dataBranch = datas.Branch;
                                RS_FillData(dataBranch, dataRoom);
                            }
                        }
                    );
                }
                catch (ex) { }
            }, 10)
        })
    }
    async function RS_FillData (dabranch,daroom) {
        new Promise((reolve) => {
            setTimeout(() => {
                try {
                    if (daroom && daroom.length == 1) {
                        let item = daroom[0];
                        $("#RS_roomname").html(item.RoomName);
                    }
                    else $("#RS_roomname").html('@Local["Chọn phòng"]');

                    if (dabranch && dabranch.length == 1) {
                        let item = dabranch[0];
                        $('#rs_branchlogo').attr('src', item.ComImg);
                        $('#rs_qrimg').attr('src', item.ComIcon);

                        $('#rs_address').html(item.Address);
                        $('#rs_phone').html(item.Tel);
                        $('#rs_comwebsite').html(item.Website);
                        $('#rs_comname').html(item.ComName);
                        $('#rs_qrcode').html('');
                        var QRRS_Website = new QRCode("rs_qrcode", {
                            width: 100,
                            height: 100,
                            colorDark: "#000000",
                            colorLight: "#ffffff",
                            correctLevel: QRCode.CorrectLevel.H,
                        });
                        QRRS_Website.makeCode(item.Website);
                    }
                }
                catch (ex) { }
            }, 10)
        })
    }
    async function RS_LoadApps (roomid) {
        new Promise((reolve) => {
            setTimeout(() => {
                try {
                    AjaxLoad(url = "/Monitor/RoomStatus/?handler=LoadApps"
                        , data = {
                            "RoomID": roomid
                        }
                        , async = true
                        , error = function () {notiError_SW();}
                        , success = function (result) {
                            if (result != "0") {
                                let datas = JSON.parse(result);
                                let data = datas.CustWaiting;
                                var _current = data.filter(v => v.IsReceipt == 1);
                                if (_current != undefined && _current.length > 0) {
                                    $('#RS_CurrentIndex').html(data[0].IndexRom+' . ');
                                    $('#RS_CurrentName').html(data[0].CustName);

                                    //RS_RenderSchedule(data, 'RS_Current', 0, 1);
                                    RS_RenderSchedule(data, 'RS_Waiting', 1, 6)
                                    RS_RenderSchedule(data, 'RS_Waitingfar', 6, 30)
                                }
                                else {
                                    //RS_RenderSchedule([], 'RS_Current', 0, 0);
                                    $('#RS_CurrentIndex').html("");
                                    $('#RS_CurrentName').html("");
                                    RS_RenderSchedule(data, 'RS_Waiting', 0, 5)
                                    RS_RenderSchedule(data, 'RS_Waitingfar', 5, 30)
                                }
                            }
                        }
                    );
                }
                catch (ex) {}
            }, 10)
        })
    }

    async function RS_RenderSchedule (data, id,_f,_t) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (let i = _f; (i < data.length && i < _t); i++) {
                    let item = data[i];
                    let _year = (item.BirthYear != "" && item.BirthYear != "0") ? item.BirthYear : "";
                    let info =
                        `<div class="info ellipsis_one_line d-flex">
                            <div><span class="pe-2">@Local["MSKH"] :</span><span>${item.CustCode}</span></div>
                            ${_year != "" ? `<div class="ms-4 me-2"><span>@Local["NS"]:</span><span>${_year}</span></div>` :``}
                        </div>`;

                    let tr =
                        `<tr class="wrow" role="row">
                        <td class="index">${item.IndexRom}</td>
                        <td ><div class="custName"><div class="ellipsis_one_line">${item.CustName}</div> ${info}</div></td>
                        <td class="gender text-center">${item.Gender}</td>

                    </tr>`

                    stringContent = stringContent + tr;
                }
            }
            myNode.innerHTML = stringContent;
        }
    }

    //#region

    function RS_RoomEvent (){
        $('#RS_roomname').unbind('click').on('click', function () {
            $("#DetailModal_Content").html('');
            $("#DetailModal_Content").load("/ChangeBranch/ChangeBranch?ver=" + versionofWebApplication);
            $('#DetailModal').modal('show');
            return false;
        });

    }
    //#endregion
    //#regrion monitor hub
    async function MonitorRoom_Hub (json) {
        new Promise((reolve) => {
            setTimeout(() => {
                try {
                    
                    let obj = JSON.parse(json);
                    if (obj != undefined) {
                        if (obj.type == 'receipt' && obj.roomid == ser_CurrentRoom) {
                            RS_LoadApps(ser_CurrentRoom);
                        }
                        if (obj.branch_id == ser_BranchID) {
                            if (obj.oldroom_id != undefined && obj.newroom_id != undefined) {
                                if (obj.oldroom_id == ser_CurrentRoom || obj.newroom_id == ser_CurrentRoom) {
                                    RS_LoadApps(ser_CurrentRoom);
                                }
                            }
                        }
                       
                    }
                }
                catch (ex) { }
            }, 10)
        })
    }

    //#endregion
</script>
<style>
    #MainAppointmentDetail .text-dark {
        color: #00072c !important;
    }
    .monitorrom table {
        border: 1px solid #dee2e6;
    }
    #RS_Waitingh tr th, #RS_Waitingfarh tr th {
        background: #242232;
        color: white !important;
        font-size: 28px;
        text-transform: uppercase !important;
        letter-spacing: 0.04rem !important;
        padding: 15px 2px !important;
    }
    #RS_Waiting .index, #RS_Waitingfar .index {
        text-align: center;
        font-weight: 900;
    }
    #RS_Waiting td .custName, #RS_Waitingfar td .custName {
        margin-left: 15px;
        text-transform: uppercase;
    }
    #RS_Waiting td.index {
        font-size: 40px !important;
        font-weight: 900;
    }
    #RS_Waiting td .custName {
        font-size: 35px !important;
        font-weight: 900;
    }
        #RS_Waiting td .custName .info {
            font-size: 23px !important;
            font-weight: 500 !important;
            letter-spacing: 0.15rem;
            height:32px;
        }
    #RS_Waiting td, #RS_Waitingfar td {
        font-size: 30px;
        font-weight: 500;
        padding: 16px 10px !important;
    } 
 
    #RS_Waitingfar .gender {
        display: none;
    }

    #RS_Waitingfar .info {
        display: none !important;
    }

    #RS_roomname {
        background: #242232;
        border-radius: 12px;
        margin: 0 0 1em 0;
        padding: 0.1em 0em !important;
    }
    .vt-table td, .vt-table th {
        border-right-width: 0px;
      
    }
    .rs_left {
        width: 60%;
        padding: 0em 2em;
    }

    .rs_right {
        width: 40%;
        padding: 0em 2em;
    }
</style>
