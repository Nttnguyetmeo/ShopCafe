@page
@model MLunarCoffee.Pages.Facebook.Settings.FacebookPage.FacebookRegis
@{
    Layout = null;
}
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12" id="fbpage_Detail_InfoArea">
            <div class="card mb-3 ">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Đăng ký"]</h6>
                                <p class="text-sm mb-0">Webhook</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="fbr_action" class="card-body p-3 pt-2 position-relative">
                    <div id="fbr_wait" class="waitingdiv text-center z-index-3 position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <div class="px-1 form3 d-flex justify-content-center" id="fbd_form">
                        <div class="row  col-lg-10 col-md-12">
                            <div class="my-3">
                                <input id="fbr_keyinput" placeholder="@Local["Key"]" class="form-control" type="text" />
                            </div>
                            <div class="d-flex align-items-center">
                                <a class="text-dark text-sm border-primary border-bottom border-1 fw-bold cursor-pointer me-2" onclick="return fbr_Sub()">@Local["Đăng ký"]</a>
                                <a class="text-dark text-sm border-primary border-bottom border-1 fw-bold cursor-pointer me-2" onclick="return fbr_Unsub()"> @Local["Hủy"] @Local["Đăng ký"]</a>
                                <a class="text-dark text-sm border-primary border-bottom border-1 fw-bold cursor-pointer me-2" onclick="return fbr_Getapp()">@Local["Kiểm tra"]</a>
                                <a class="text-dark text-sm border-primary border-bottom border-1 fw-bold cursor-pointer me-2" onclick="return fbr_DownloadConver()">@Local["Tải file"]</a>
                                <a class="text-dark text-sm border-primary border-bottom border-1 fw-bold cursor-pointer me-2" onclick="return fbr_RedownConver()">@Local["Làm mới"]</a>
                            </div>
                            <div class="card card-plain my-1">
                                <div id="fbr_result" class="text-wrap text-dark fw-bold text-sm mt-3"></div>
                                <ul id="fbr_content" class="list-group">
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="p-5">
                    <div id="fbr_downarea" class="d-none  card-body  pt-2 position-relative">
                        <div id="fbr_downwait" class="d-none">
                            <div class="text-wrap fw-bold text-sm my-3 text-primary d-flex align-items-center">
                                <div class="waitingdiv text-center z-index-3  pe-2">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                                Đang xử lý, Xin vui lòng không tắt trang.
                            </div>

                        </div>
                        <span id="fbr_timefail" class="text-sm font-weight-bold"></span>
                        <div class="progress-wrapper">
                            <div class="progress-info">
                                <div class="progress-percentage">
                                    <span id="fbr_protext" class="text-sm font-weight-bold">0%</span>
                                </div>
                            </div>
                            <div class="progress">
                                <div id="fbr_provalue" class="progress-bar bg-primary" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
                            </div>
                        </div>
                    </div>
                    <div id="fbr_dowresult" class="text-wrap text-dark fw-bold text-sm mt-3"></div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save px-3 mx-1">
                    <div class="action_Save-Content">
                        <button id="fbd_btncancel()" class="btn btn-secondary" form="fbd_form" onclick="event.preventDefault();CloseModal()">@Local["Đóng"]</button>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    //var fbr_datacon = [];
    var fbr_maxblock = 1;
    var fbr_indexblock = 0;
    var fbr_timefail = 0;
    var fbr_isgetavatar = 1;
    var fbr_pagekey ='@Model._fbpageID';
    $(document).ready(function () {
        if (fbr_pagekey != "0") $('#fbr_keyinput').val(fbr_pagekey);
    });
    function fbr_Unsub () {
        const promise = notiConfirm();
        promise.then(function () {
            $('#fbr_result').html('');
            let keypage = $('#fbr_keyinput').val().trim();
            if (keypage.length < 5) $('#fbr_result').html('@Local["Thực hiện nhập dữ liệu"]');
            else {
                AjaxLoad(url = "/Facebook/Settings/FacebookPage/FacebookRegis/?handler=RemoveSub"
                    , data = {
                        "pageid": keypage
                    }
                    , async = true, error = null
                    , success = function (result) {
                        if (result != "0") {
                            let _r = JSON.parse(result);
                            if (_r != undefined && _r.success == true) {
                                $('#fbr_result').html(`<i class="fas fa-check pe-2 text-success"></i>${'@Local["Thành công"]'}`);
                                fbr_UpdateRegis(keypage, 0);
                            }
                            else {
                                $('#fbr_result').html(_r.error.message);
                            }
                        }
                        else $('#fbr_result').html('@Local["Có lỗi xảy ra"]');

                    },sender = null,
                    before = function (e) {
                        $("#fbr_wait").show();
                    },
                    complete = function (e) {
                        $("#fbr_wait").hide();
                    }
                );
            }
        }, function () { });
    }
    function fbr_Sub () {
        const promise = notiConfirm();
        promise.then(function () {
            $('#fbr_result').html('');
            let keypage = $('#fbr_keyinput').val().trim();
            let token = fbr_GetPageToken();
            if (keypage.length < 5) $('#fbr_result').html('@Local["Thực hiện nhập dữ liệu"]');
            else {
                $.ajax({
                    url: fl_unsub.replace('{pageid}', keypage) + "&access_token=" + token,
                    dataType: "json",
                    type: "POST",
                    data: JSON.stringify({}),
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        $('#fbr_result').html('@Local["Có lỗi xảy ra"]');
                    },
                    success: function (_r) {
                        if (_r != undefined && _r.success == true) {

                            fbr_GetLongKey(keypage, function (_keypage,_token,_longtoken) {
                                fbr_UpdateRegis(_keypage, 1);
                                fbt_UpdateLongkey(_keypage, _token, _longtoken);
                            });
                        }
                        else {
                            $('#fbr_result').html(_r.error.message);
                        }
                    },
                    beforeSend: function () {
                        $("#fbr_wait").show();
                    },
                    complete: function () {
                        $("#fbr_wait").hide();
                    }
                })
            }
        }, function () { });


    }
    function fbt_UpdateLongkey (_key, _token, _long) {
        $.ajax({
            url: fl_page.replace('{pageid}', _key) + "&access_token=" + _token,
            dataType: "json",
            type: "GET",
            data: JSON.stringify({}),
            contentType: 'application/json; charset=utf-8',
            async: true,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
            },
            success: function (result) {
                if (result.id != undefined) {
                    let obj = {};
                    obj.Keypage = _key;
                    obj.UserID = sys_userID_Main;
                    obj.LongAccess = _long;
                    obj.PageName = result.name;
                    obj.PageLink = result.link;
                    obj.Token = _token;
                    
                    AjaxJWT(url = "/Api/FacebookBridge/SubcribeFanpage"
                        , data = JSON.stringify(obj)
                        , async = true
                        , success = function (result) {
                              $('#fbr_result').html(`<i class="fas fa-check pe-2 text-success"></i>${'@Local["Thành công"]'}`);
                        }
                    );
                }
            }
        })



    }
    function fbr_GetLongKey (keypage,callback) {
        let _token = fbr_GetPageToken();
        AjaxLoad(url = "/Facebook/Settings/FacebookPage/FacebookRegis/?handler=GetLongkey"
            , data = {
                "token": _token
            }
            , async = true, error = null
            , success = function (result) {

                if (result != "0") {
                    let _d = JSON.parse(result);
                    if (_d.access_token != null) {
                        callback(keypage, _token, _d.access_token);
                    }


                }
            }
        );
    }
    function fbr_UpdateRegis (_pageid,_status) {
        AjaxLoad(url = "/Facebook/Settings/FacebookPage/FacebookRegis/?handler=UpdateRegis"
            , data = {
                "pageid": _pageid,
                "status": _status
            }
            , async = true, error = null
            , success = function (result) {
                fbpage_Load();
            }
        );
    }
    function fbr_Getapp () {
         
        $('#fbr_result').html('');
        let keypage = $('#fbr_keyinput').val().trim();
        let token = fbr_GetPageToken();
        if (keypage.length < 5) $('#fbr_result').html('@Local["Thực hiện nhập dữ liệu"]');
        else {
            $.ajax({
                url: fl_getapp.replace('{pageid}', keypage) + "&access_token=" + token,
                dataType: "json",
                type: "GET",
                data: JSON.stringify({}),
                contentType: 'application/json; charset=utf-8',
                async: true,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $('#fbr_result').html('@Local["Có lỗi xảy ra"]');
                },
                success: function (result) {
                    if (result.data != undefined && result.data.length != 0) {
                        fbr_Renderpage(result.data,"fbr_content");
                    }
                    else {
                        $('#fbr_result').html('@Local["Chưa đăng ký"]');
                    }
                },
                beforeSend: function () {
                    $("#fbr_wait").show();
                },
                complete: function () {
                    $("#fbr_wait").hide();
                }
            })
        }
    }
    function fbr_GetPageToken () {
        try {
    
            let keypage = $('#fbr_keyinput').val().trim();
            var _objli = author_get("fbs_list");
            if (_objli != undefined && _objli != "") {
                let ptoken = JSON.parse(_objli);
                for (let i = 0; i < ptoken.length; i++) {
                    if (ptoken[i].id.toString() == keypage.toString()) {
                        return ptoken[i].access_token;
                    }
                }
            }
        }
        catch (ex) {
            return "";
        }

    }
    function fbr_Renderpage (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            var stringContent = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    var item = data[i];

                     stringContent +=
                        `<li class="list-group-item border-0 d-flex align-items-center px-0 mb-2">
                            <div class="avatar me-3">
                            <img src="${item.photo_url}" class="border-radius-lg shadow">
                            </div>
                            <div class="d-flex align-items-start flex-column justify-content-center">
                                <div>
                                    <span class="fw-bold text-sm text-primary">${item.name}</span>
                                    <span class="ps-2 text-sm text-dark fst-italic">${item.link}</span>

                                </div>
                               <div class="text-wrap text-dark fw-bolder text-sm">${item.subscribed_fields}</div>
                            </div>

                        </li>

                        `
                }
            }
            document.getElementById(id).innerHTML = stringContent;

        }
    }
    //#region // Download conver
    function fbr_DownloadCheck (callback) {
        let keypage = $('#fbr_keyinput').val().trim();
        AjaxLoad(url = "/Facebook/Settings/FacebookPage/FacebookRegis/?handler=CheckDownload"
            , data = {
                "pageid": keypage
            }
            , async = true, error = null
            , success = function (result) {

                if (result != "0") {
                    let _d = JSON.parse(result);
                    if (_d != undefined && _d.length == 1) {
                        if (_d[0].IsLoadSuccess == 1) callback(_d[0]);
                        else callback("");
                    }
                    else {
                        callback("");
                    }
                }
            }
        );
    }
    function fbr_RedownConver () {
        fbr_maxblock = 1;
        fbr_isgetavatar = 1;
        fbr_DownloadExe()
    }
    function fbr_DownloadConver () {
        fbr_maxblock = 100;
        fbr_isgetavatar = 0;
        fbr_DownloadExe();
    }
    function fbr_DownloadExe () {
        fbr_DownloadCheck(function (ie) {
            let messnoti = '';
            if (ie != "") {
                messnoti = `${'@Local["Dữ liệu"]'} (${GetDateTime_String_DMY(ie.LoadDate)}) @Local["Sẽ bị xóa"] .` + Outlang["Ban_co_muon_tiep_tuc"] +' ?';
            }
            else messnoti=undefined
            var promise = notiConfirm(messnoti);
            promise.then(function () {
                $('#fbr_result').html('');
                let keypage = $('#fbr_keyinput').val().trim();
                let token = fbr_GetPageToken();
                if (keypage.length < 5) $('#fbr_result').html('@Local["Thực hiện nhập dữ liệu"]');
                else {
                    fbr_indexblock = 0;
                    fbr_datacon = [];
                    $('#fbr_action').addClass('d-none');
                    $('#fbd_btncancel').addClass('d-none');
                    $('#fbr_downarea').removeClass('d-none');
                    $('#fbr_downwait').removeClass('d-none');
                    $('#fbr_timefail').html('');
                    fbr_timefail = 0;

                    fbr_DownApi(keypage, token, urlnext = "");
                }
            }, function () { });
        });
    }
    function fbr_DownApi (keypage, token,urlnext) {
        $.ajax({
            url: urlnext != "" ? urlnext : (fl_conver.replace('{pageid}', keypage) + "&access_token=" + token),
            dataType: "json",
            type: "GET",
            data: JSON.stringify({}),
            contentType: 'application/json; charset=utf-8',
            async: true,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                fbr_DownApiOut(keypage,isfalse = true, XMLHttpRequest);
            },
            success: function (_r) {
                if (_r.data != undefined && _r.data.length > 0) {
                    fbr_Upload(_r.data, token);
                    if (_r.paging != undefined && _r.paging.next != undefined) {
                        if (fbr_indexblock < fbr_maxblock) {
                            fbr_DownApi("", "", _r.paging.next);
                        } else fbr_DownApiOut(keypage, isfalse = false);
                    }
                    else fbr_DownApiOut(keypage, isfalse = false);
                }
                else fbr_DownApiOut(keypage, isfalse = false);
            },
            beforeSend: function () {
                fbr_indexblock = fbr_indexblock + 1;
                $('#fbr_downwait').removeClass('d-none');
            }
        })
    }
    async function fbr_Upload (_data,_token) {
        return new Promise((resolve) => {
            setTimeout(() => {
                var keypage = $('#fbr_keyinput').val().trim();
                var dtmain = {};
                var fl_avatar = flr_avatar + "&access_token=" + _token;
                var promises = [];
                for (let i = 0; i < _data.length; i++) {
                    let e = {};
                    e.lastsender = _data[i].messages.data[0].from.id;
                    e.converid = _data[i].id;
                    e.keypage = _data[i].senders.data[1].id;
                    e.fromid = _data[i].senders.data[0].id;
                    e.fromname = _data[i].senders.data[0].name;
                    e.fromavatar = "";
                    e.snippet = _data[i].snippet;
                    e.unread_count = _data[i].unread_count;
                    e.updated_time = new Date(_data[i].updated_time);
                    dtmain[e.fromid] = e;
     
                    if (fbr_isgetavatar == 1) promises.push(fbr_GetAvatar(e,fl_avatar.replace('{psid}', e.fromid)));
                }
                Promise.all(promises).then((values) => {
                    if (values != []) {
                        AjaxJWT(url = "/api/FacebookBridge/Conver"
                            , data = JSON.stringify({
                                'items': values
                                , 'KeyPage': keypage
                            })
                            , async = true
                            , success = function (result) {
                                if (result == "1") {
                                    $('#fbr_protext').html(fbr_indexblock.toString() + ' %');
                                    $("#fbr_provalue").css("width", fbr_indexblock.toString() + '%');
                                }
                                else {
                                    fbr_timefail = fbr_timefail + 1;
                                    $('#fbr_timefail').html(fbr_timefail+' fails');
                                }
                            }
                        );
                    }
                });


            }, 10);
        })
    }
    function fbr_GetAvatar (_obj,_url) {
        return new Promise(resolve => {
            $.ajax({
                url: _url,
                dataType: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                async: true,
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    resolve(_obj);
                },
                success: function (_r) {
                    if (_r.data != undefined && _r.data.url != undefined) {
                        _obj.fromavatar = _r.data.url;
                        resolve(_obj);
                    }
                    else resolve(_obj);
                }
            })
        });





    }
    async function fbr_DownApiOut (keypage, isfalse,ex) {
        return new Promise((resolve) => {
            setTimeout(() => {
                $('#fbd_btncancel').removeClass('d-none');
                $('#fbr_downarea').addClass('d-none');

                if (!isfalse) {
                    $('#fbr_dowresult').html('@Local["Thành công"]');
                    fbr_UpdateDown(keypage, 1);
                }
                else {
                    $('#fbr_dowresult').html('@Local["Thất bại"] ' + ex);
                    fbr_UpdateDown(keypage, 0);
                }
            }, 10);
        })
    }
    function fbr_UpdateDown (_pageid, _status) {
        AjaxLoad(url = "/Facebook/Settings/FacebookPage/FacebookRegis/?handler=UpdateDown"
            , data = {
                "pageid": _pageid,
                "status": _status
            }
            , async = true, error = null
            , success = function (result) {
                fbpage_Load();
            }
        );
    }
    //#endregion
</script>

<script>js_require('/js/customjs/custom-validation.js');</script>
<script>js_require('/js/main.js');</script>
