@page
@model Fanpage.Pages.Facebook.Setting.MessengerStoreModel
@{
    Layout = null;
}

<div class="row" style="background-color: white">
    <div class="ui segments">
        <div class="ui segment headerSegmentReport">
            <div class="headerReport">
                <span class="header_form_main">Messenger Store</span>
                <a style="float: right; cursor: pointer" onclick="event.preventDefault();LoadInitializeData()"><i class="refresh icon" title="refresh" style="font-size: 13px"></i></a>
            </div>
        </div>
        <div class="ui form segment form3">

            <div data-languagestatic="mes_com_non_tele_header" class="descriptionHeader header_form_child">Danh Sách Các Messenger Và Comment Chưa Có Nhân Viên</div>
            <div class="sixteen wide tablet sixteen wide computer column">
                <div id="loaderList" style="border: none; display: none; height: -webkit-fill-available;">
                    <div class="ui active inverted dimmer">
                        <div class="ui large text loader">Loading</div>
                    </div>
                </div>
                <div class="three fields">
                    <div class="field">
                        <label>FanPage</label>
                        <div class="ui fluid search selection dropdown" id="FanPage" onchange="RefreshAfterExecute()">
                            <input type="hidden" name="page" />
                            <i class="dropdown icon"></i>
                            <input class="search" autocomplete="off" tabindex="0" />
                            <div class="default text">FanPage</div>
                            <div id="cbbFanPage" class="menu" tabindex="-1">
                            </div>
                        </div>
                    </div>
                    <div class="field">
                        <label data-languagestatic="receipt_mess_date">Ngày Nhận Tin</label>
                        <input style="font-size: 13px" id="dateFilter" class="flatpickr" type="text" placeholder="Date.." onchange="RefreshAfterExecute()" />
                    </div>
                    <div id="btnAssignMessenger" class="field" style="padding-top: 23px;">
                        <button data-languagestatic="button_devide" class="ui teal button" data-value="fade up" onclick="event.preventDefault();return AssignMessenger()" style="float: right;">Thực Hiện Chia</button>
                    </div>
                </div>
                <div class="ui grid" style="float: right;">
                    <div data-languagedyn="textShowMessage" style="font-size: 12px; color: red" id="textShowMessage"></div>
                </div>
                <div class="ui grid" id="dataDetail" style="margin-left: 5px; margin-right: 5px;">
                    <div class="stretched row">
                        <div class="sixteen wide tablet six wide computer column">
                            <div class="ui segments" style="border: none;">
                                <div class="ui bottom attached inverted lightyellowli message" style="margin: unset; background-color: #32936f !important; color: white !important;">
                                    <i class="icon star"></i>
                                    <span data-languagestatic="mess_none_staff"> Messenger Chưa Có Nhân Viên</span>
                                </div>
                                <div style="overflow-y: auto; height: 700px;">
                                    <table id="dtContentMessenger" style="margin-top: 0px;" class="ui selectable celled table">
                                        <thead class="hiddenCollapse">
                                            <tr role="row">
                                                <th style="display: none">ID</th>
                                                <th style="width: 25px;">#</th>
                                                <th>FanPage</th>
                                                <th data-languagestatic="general_info">Thông Tin</th>
                                                <th style="width: 25px;">
                                                    <div class="ui checkbox" style="float: right;">
                                                        <input id="checkMessAll" type="checkbox" onchange="onChangeAllMess()">
                                                        <label>All</label>
                                                    </div>
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="dtContentMessengerBody">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="sixteen wide tablet four wide computer column">
                            <div class="ui segments" style="border: none;">
                                <div class="ui bottom attached inverted lightyellowli message" style="margin: unset; background-color: #f2711c !important; color: white !important;">
                                    <i class="icon star"></i>
                                    <span data-languagestatic="staff">Nhân Viên</span>
                                </div>
                                <div style="overflow-y: auto; height: 700px;">
                                    <table id="dtContentTelesale" style="margin-top: 0px;" class="ui selectable celled table">
                                        <thead class="hiddenCollapse">
                                            <tr role="row">
                                                <th style="display: none">ID</th>
                                                <th style="width: 25px;">#</th>
                                                <th data-languagestatic="name">Tên</th>
                                                <th data-languagestatic="select" style="width: 25px;">Chọn</th>
                                            </tr>
                                        </thead>
                                        <tbody id="dtContentTelesaleBody">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="sixteen wide tablet six wide computer column">
                            <div class="ui segments" style="border: none;">
                                <div class="ui bottom attached inverted lightyellowli message" style="margin: unset; background-color: #6435c9 !important; color: white !important;">
                                    <i class="icon star"></i>
                                    <span data-languagestatic="data_devived">Dữ Liệu Được Chia</span>
                                </div>
                                <div style="overflow-y: auto; height: 700px;">
                                    <table id="dtContentChoose" style="margin-top: 0px;" class="ui celled structured table">
                                        <thead class="hiddenCollapse">
                                            <tr role="row">
                                                <th data-languagestatic="staff">Nhân Viên</th>
                                                <th>Fanpage</th>
                                                <th>Messenger</th>
                                                <th data-languagestatic="cancel" style="width: 25px;">Hủy</th>
                                            </tr>
                                        </thead>
                                        <tbody data-languagedyn="grid" id="dtContentChooseBody">
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<script>js_require('/js/comon/initialize_setting.js');</script>

<script type="text/javascript">
    var DataEmployeePage;
    var DataMessengerNoTele;

    var DataChoose = [];

    $(document).ready(function () {
        $("#dateFilter").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false,
        });
        var date = new Date();
        var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
        var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        $("#dateFilter").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));
        //Load cbb
        InitializeCombo()

        $('#dtContentTelesale tbody').on('click', '.buttonChooseClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let Name = $(this).closest('tr')[0].childNodes[2].innerHTML;
            if (CheckMessengerChoose()) {
                ActionChoose(ID, Name);
            }
        });
        $('#dtContentChoose tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            if (DataMessengerNoTele != undefined && DataMessengerNoTele != null) {
                for (i = 0; i < DataMessengerNoTele.length; i++) {
                    if (DataMessengerNoTele[i].fromid == ID) {
                        DataMessengerNoTele[i].State = 1;
                    }
                }
                for (i = 0; i < DataChoose.length; i++) {
                    if (DataChoose[i].fromid == ID) {
                        DataChoose.splice(i, 1);
                    }
                }

                RenderMessengerChoosing(DataChoose, "dtContentChooseBody");
                let data = DataMessengerNoTele.filter(word => word["State"] == "1");
                RenderMessenger(data, "dtContentMessengerBody");
            }

        });

    });

    function InitializeCombo() {
        AjaxLoad(url = "/Facebook/Setting/MessengerStore/?handler=InitializeCombo"
            , data = { }, async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result); 
                    DataPageCbb = data.Fanpage;

                    Load_Combo(DataPageCbb, "cbbFanPage", true);
                    $("#FanPage ").dropdown("refresh");
                    if (DataPageCbb.length > 0)
                        $("#FanPage ").dropdown("set selected", DataPageCbb[0].ID);

                    DataEmployeePage = data.dtEmployee;

                    //FilterEmployee(DataEmployeePage, "dtContentTelesaleBody");
                    LoadInitializeData();
                   
                }
            }
        );
         
    }
    
    function onChangeAllMess() {
        var y = document.getElementsByClassName("checkMessenger");
        for (let i = 0; i < y.length; i++) {
            y[i].checked = document.getElementById("checkMessAll").checked;
        }
    }
    function RefreshAfterExecute() {
        DataChoose = [];
        LoadInitializeData();
        onChangeAllMess();
    }
    function LoadInitializeData() {
        let date = $('#dateFilter').val() ? $('#dateFilter').val() : new Date();
        let pageID = Number($('#FanPage').dropdown('get value')) ? Number($('#FanPage').dropdown('get value')) : 0;

        AjaxLoad(url = "/Facebook/Setting/MessengerStore/?handler=LoadInitializeData"
            , data = { 'PageID': pageID, 'Date': date }, async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                if (result != "0") {                    
                    DataMessengerNoTele = JSON.parse(result);
                    RenderMessenger(DataMessengerNoTele, "dtContentMessengerBody");
                    RenderMessengerChoosing(DataChoose, "dtContentChooseBody");
                    FilterEmployee(DataEmployeePage, 'dtContentTelesaleBody');
                }
            }
        );
       
    }
    function AssignMessenger() {
        if (DataChoose != undefined && DataChoose != null && DataChoose.length != 0) {

            AjaxLoad(url = "/Facebook/Setting/MessengerStore/?handler=Execute"
                , data = { 'data': JSON.stringify(DataChoose) }, async = true
                , error = function () {
                    notiError_SW();
                }
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        RefreshAfterExecute();
                    } else {
                        notiError_SW();
                    }
                }
            );
             
        }
        else {
            $("#textShowMessage").html("Chưa Chọn Dữ Liệu Cho Telesale");
        }
    }

    function ActionChoose(ID, Name) {
        if (DataMessengerNoTele != undefined && DataMessengerNoTele != null && DataMessengerNoTele.length != 0) {
            var y = document.getElementsByClassName("checkMessenger");
            for (let i = 0; i < y.length; i++) {
                if (y[i].checked) {
                    let idMessenger = Number(y[i].title);
                    for (j = 0; j < DataMessengerNoTele.length; j++) {
                        if (Number(DataMessengerNoTele[j].fromid) == idMessenger) {
                            DataMessengerNoTele[j].State = 0;
                            let element = {};
                            element.pageid = DataMessengerNoTele[j].pageid;
                            element.PageName = DataMessengerNoTele[j].PageName;
                            element.fromid = DataMessengerNoTele[j].fromid;
                            element.Smallest = DataMessengerNoTele[j].Smallest;
                            element.Biggest = DataMessengerNoTele[j].Biggest;
                            element.isIC = DataMessengerNoTele[j].isIC;
                            element.Tele = ID;
                            element.TeleName = Name;
                            DataChoose.push(element);
                        }
                    }
                }
            }
            RenderMessengerChoosing(DataChoose, "dtContentChooseBody");
            let data = DataMessengerNoTele.filter(word => word["State"] == "1");
            RenderMessenger(data, "dtContentMessengerBody");
            $("#textShowMessage").html("");
        }

    }
    function compareValues(key, order = 'asc') {

        return function (a, b) {
            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {
                // không tồn tại tính chất trên cả hai object
                return 0;
            }

            const varA = (typeof a[key] === 'string') ?
                a[key].toUpperCase() : a[key];
            const varB = (typeof b[key] === 'string') ?
                b[key].toUpperCase() : b[key];

            let comparison = 0;
            if (varA > varB) {
                comparison = 1;
            } else if (varA < varB) {
                comparison = -1;
            }
            return (
                (order == 'desc') ? (comparison * -1) : comparison
            );
        };
    }
    function CheckMessengerChoose() {
        let total = 0;
        var y = document.getElementsByClassName("checkMessenger");
        for (let i = 0; i < y.length; i++) {
            if (y[i].checked) {
                total = total + 1;
            }
        }
        if (total == 0) {
            $("#textShowMessage").html("Chọn Messenger");
            return false;
        }
        else {
            return true;
        }
    }
    function RenderMessengerChoosing(data, id) {
        if (data != undefined && data != null) data = data.sort(compareValues('TeleName', 'desc'));
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important">' + item.fromid + '</td>'
                        + '<td style="display:none !important">' + item.pageid + '</td>'
                        + '<td style="text-align:center;">'
                        + '<span style="color:#00b5ad">' + item.TeleName + '</span>'
                        + '</td>'
                        + '<td style="text-align:center;">'
                        + '<span style="color:#00b5ad">' + item.PageName + '</span>'
                        + '</td>'
                        + '<td>'
                        + '<div style="display: flex;">'
                        //+ ((item.isIC != 3) ? ('<div style="width:100%;text-align:center;"><img class="imgMessCom" title="Comment" src="/assests/img/Face/comment_.png" alt="label-image"></div>') : (''))
                        + ((item.isIC != 2) ? ('<div style="width:100%;text-align:center;"><img class="imgMessCom" title="Inbox" src="/assests/img/Face/mess_.png" alt="label-image"></div>') : (''))
                        + '</div>'
                        + '<div style="text-align:center;">'
                        + '<span style="color:#00b5ad;width=50%;">Bắt Đầu ' + item.Smallest + ' </span>  -  '
                        + '<span style="color:#00b5ad;width=50%;">Gần Nhất ' + item.Biggest + ' </span>'
                        + '</div>'
                        + '</td>'
                        + '<td>'
                        + '<button class="buttonGrid"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'
                        + '</td>'
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function FilterEmployee(data, id) {
        let dataRen;
        let pageID = Number($('#FanPage').dropdown('get value')) ? Number($('#FanPage').dropdown('get value')) : 0;
        if (pageID != 0 && data != null) {
            dataRen = data.filter(el => {
                let strs = el.Pages.split(',');
                if (strs.indexOf(pageID.toString()) != -1) {
                    return true;
                }
                return false;

            })
        } else {
            dataRen = data;
        }
        RenderEmployeePage(dataRen, id);
    }
    function RenderEmployeePage(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important">' + item.ID + '</td>'
                        + '<td>' + (i + 1) + '</td>'
                        + '<td>' + item.Name + '</td>'
                        + '<td>'
                        + '<button class="buttonGrid"><i class="buttonChooseClass vtt-icon vttech-icon-check"></i></button>'
                        + '</td>'
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }


    function RenderMessenger(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important">' + item.fromid + '</td>'
                        + '<td style="display:none !important">' + item.pageid + '</td>'
                        + '<td>' + item.STT + '</td>'
                        + '<td>'
                        + '<span style="color:#00b5ad">' + item.PageName + '</span>'
                        + '</td>'
                        + '<td>'
                        + '<div style="display: flex;">'
                        //+ ((item.isIC != 3) ? ('<div style="width:50%;text-align:center;"><img class="imgMessCom" title="Comment" src="/assests/img/Face/comment_.png" alt="label-image"></div>') : (''))
                        + ((item.isIC != 2) ? ('<div style="width:100%;text-align:center;"><img class="imgMessCom" title="Inbox" src="/assests/img/Face/mess_.png" alt="label-image"></div>') : (''))
                        + '</div>'
                        + '<div style="text-align:center;">'
                        + '<span style="color:#00b5ad;width=50%;">Bắt Đầu ' + item.Smallest + ' </span>  -  '
                        + '<span style="color:#00b5ad;width=50%;">Gần Nhất ' + item.Biggest + ' </span>'
                        + '</div>'
                        + '</td>'
                        + '<td>'
                        + '<div class="ui checkbox" style="margin: 5px;transform: scale(1.23);">'
                        + '<input type="checkbox" title=' + item.fromid + ' class="checkMessenger" />'
                        + '<label class="coloring red"></label>'
                        + '</td>'
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }



</script>