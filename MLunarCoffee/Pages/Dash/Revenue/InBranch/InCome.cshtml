@page
@model MLunarCoffee.Pages.Dash.Revenue.InBranch.InComeModel
@{
    Layout = null;
}
<div class="card h-100">
    <div class="card-header pb-0 p-3">
        <div class="card-header d-flex pb-0 p-3">
            <div class="w-50 col-auto my-auto">
                <div class="h-100">
                    <h6 class="mb-0 d-inline">@Local["Thu chi"]</h6>
                    <h6 id="InCome_ib_Header" class="text-dark d-inline"></h6>
                    <p class="text-sm mb-0" id="InCome_ib_sub"></p>
                </div>
            </div>
            <div class="nav-wrapper position-relative ms-auto w-50">
                <ul class="InComeib_sub nav nav-pills nav-fill p-1 flex-row" role="tablist">
                    <li class="nav-item">
                        <a data-filter="1" class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" role="tab">
                            @Local["Hôm nay"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a data-filter="2" class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" role="tab">
                            7 @Local["Ngày"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a data-filter="3" class="nav-link mb-0 px-0 py-1" data-bs-toggle="tab" role="tab">
                            30 @Local["Ngày"]
                        </a>
                    </li>

                </ul>
            </div>

        </div>
    </div>
    <div class="card-body pb-4 p-3 mt-1">
        <div class="row" style="min-height: 200px;">
            <div class="col-3 text-start">
                <div class="text-center">
                    <div class="chart">
                        <canvas id="InComeib_Input" class="chart-canvas" height="179" width="135" style="display: block; box-sizing: border-box; height: 200px; width: 150.2px;"></canvas>


                    </div>
                    <h4 class="font-weight-bold mt-n8">
                        <span id="InComeib_InputTotal"></span>
                        <span class="d-block text-body text-sm">@Local["Tiền thu"]</span>
                    </h4>
                </div>
            </div>
            <div class="col-3 text-start">
                <div class="text-center">
                    <div class="chart">
                        <canvas id="InComeib_Output" class="chart-canvas" height="179" width="135" style="display: block; box-sizing: border-box; height: 200px; width: 150.2px;"></canvas>


                    </div>
                    <h4 class="font-weight-bold mt-n8">
                        <span id="InComeib_OutputTotal"></span>
                        <span class="d-block text-body text-sm">@Local["Tiền chi"]</span>
                    </h4>
                </div>
            </div>
            <div class="col-3 text-start">
                <div class="card-body">

                  
                    <div>
                        <h1 class="text-gradient text-primary">
                            <span id="InComeib_Total">200</span>

                        </h1>
                    </div>
                    <p class="mt-4 mb-0 font-weight-bold">@Local["Tiền còn lại"]</p>
                    <span class="text-sm">@Local["Tiền mặt còn lại"] : </span>
                    <span class="text-sm" id="InComeib_TotalCash"></span>
                </div>
            </div>
            <div class="col-3 my-auto" id="InComeib_List">


            </div>
        </div>
    </div>
 
</div>



<script type="text/javascript">

    $(document).ready(function () {
        IncomeIb_Event();
        $('.InComeib_sub a[data-filter=3]').addClass('active');
        $('.InComeib_sub a[data-filter=3]').trigger('click');
        $('#InCome_ib_Header').html(' - '+Master_branchNameCurrent);
    });
    function IncomeIb_Event() {
        $(".InComeib_sub a").on("click", function () {

            let data_filter = Number($(this).attr("data-filter"));
            let date_now = new Date();
            let date_from;
            let date_to;
            let date_past;
            switch (data_filter) {
                case 1:
                    date_from = GETDATE_NOW_DMYHM();
                    date_to = GETDATE_NOW_DMYHM();
                    break;
                case 2:
                    date_past = date_now.getDate() - 6;
                    date_from = formatDateClient(new Date(date_now.setDate(date_past)));
                    date_to = GETDATE_NOW_DMYHM();
                    break;
                case 3:
                    date_past = date_now.getDate() - 29;
                    date_from = formatDateClient(new Date(date_now.setDate(date_past)));
                    date_to = GETDATE_NOW_DMYHM();
                    break;
                default:
                    date_from = GETDATE_NOW_DMYHM();
                    date_to = GETDATE_NOW_DMYHM();
                    break;
            }
            $('#InComeib_InputTotal').html('0');
            $('#InComeib_OutputTotal').html('0');
            $('#InComeib_Total').html('0');
            $('#InComeib_TotalCash').html('');
            $('#InCome_ib_sub').html((date_from == date_to) ? date_to : (date_from + ' to ' + date_to))
            IncomeIb_Load(date_from, date_to);

        })
    }
    function IncomeIb_Load(_dateFrom, _dateTo) {

        AjaxLoad(url = "/Dash/Revenue/InBranch/InCome/?handler=Loadata"
            , data = { 'branchID': Master_branchID, 'dateFrom': _dateFrom, 'dateTo': _dateTo }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "") {
                    let dataMaster = JSON.parse(result)["Table"];
                    let dataDetail = JSON.parse(result)["Table1"];

                    rp_doughnut("InComeib_Input", dataDetail, 'Name', 'Receipts_IN');
                    rp_doughnut("InComeib_Output", dataDetail, 'Name', 'Receipts_OUT');
                    IncomeIb_Render(dataDetail, 'InComeib_List');
                    $('#InComeib_InputTotal').html(formatNumber(dataMaster[0].Total_IN / 1000000));
                    $('#InComeib_OutputTotal').html(formatNumber(dataMaster[0].Total_OUT / 1000000));
                    $('#InComeib_Total').html(formatNumber(dataMaster[0].Total_Amount / 1000000));
                    if (dataDetail != undefined && dataDetail.length > 0) {
                        $('#InComeib_TotalCash').html(formatNumber(dataDetail[0].Receipts_IN - dataDetail[0].Receipts_OUT ));
                    }
                    
                    
                }
            }

        );

    }


    function IncomeIb_Render(data, id) {


        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';

            if (data && data.length > 0) {

                for (let j = 0; j < data.length; j++) {
                    let item = data[j];
                    let _color = colorChart[j % colorChart.length];
                    let tr = '<span class="badge badge-md badge-dot me-4 d-block text-start">'
                        + '<i class="bg" style="background-color:' + _color + '"></i>'
                        + '<span class="text-dark text-md">' + item.Name + '</span>'
                        + '</span>'
                    stringContent = stringContent + tr;
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }



</script>

