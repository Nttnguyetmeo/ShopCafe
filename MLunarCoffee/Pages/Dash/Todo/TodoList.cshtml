@page
@model MLunarCoffee.Pages.Dash.Todo.TodoListModel
@{
    Layout = null;
}
<div class="card min-height-300">
    <div class="card-header p-3 pb-0">
        <div class="row">
            <div class="col-8 d-flex">
                <div>
                    <img id="todo_avatar" class="avatar avatar-sm me-2" alt="avatar image">
                </div>
                <div class="d-flex flex-column justify-content-center">
                    <h6 class="mb-0 text-sm">@Local["Danh sách todo"]</h6>
                    <p class="text-xs">@Local["Danh sách việc cần làm và được giao"]</p>
                </div>
            </div>
            <div class="col-4">
                <span onclick="OpenDivPopupToDo(this)" class="badge bg-gradient-info ms-auto float-end">
                    @Local["Thêm mới"] 
                </span>
            </div>
        </div>
    </div>
    <div class="card-body p-3 pt-1">
        <div class="timeline timeline-one-side overflow-auto max-height-400" id="Area_Progress_Todo_List" data-timeline-axis-style="dotted">
        </div>
    </div>
    <div class="card-footer p-3 pt-1 mb-2 position-relative">
        <span id="btnLoadMoreTodoList" onclick="Dashboard_Todo_List_Load(0,1)" class="btnsysmore text-sm text-gradient text-danger position-absolute top-50 start-50 translate-middle">
            @Local["Xem thêm"] 
        </span>

    </div>
</div>

<script type="text/javascript">
    var Todo_Ticket_ID = 0;
    var Todo_CurrentID = 0;
    var Todo_Createdbegin = 0;
    var Todo_Data_List = [];
    var DataEmployee;
    $(document).ready(function () {
        $('#todo_avatar').attr('src', Master_circleAvatar);
        Master_IndexDB_Reads(_Session_Data, [_Session_Employee]
            , function (data) {
                DataEmployee = data[0];
                Dashboard_Todo_Event_Click();
                Dashboard_Todo_List_Load();
            })

    });

    //#region // Load Data

    function Dashboard_Todo_List_Load(currentid, isLoadmore) {
        let TodoCurrentID = 0;
        if (currentid != undefined && currentid != 0) {
            TodoCurrentID = Number(currentid);
        }
        if (Number(isLoadmore) != 1 && TodoCurrentID == 0) {
            Todo_Createdbegin = 0;
            Todo_Data_List = [];
            $("#Area_Progress_Todo_List").empty();
        }

        AjaxLoad(url = "/Dash/Todo/TodoList/?handler=Loadata"
            , data = { 'Createdbegin': Todo_Createdbegin, 'limit': 5, 'CurrentID': TodoCurrentID }
            , async = true
            , error = function () { notiError_SW() }
            , success = function (result) {
                if (result != "") {
                    let dataList = JSON.parse(result)["Table"];
                    if (dataList != undefined && dataList.length != 0) {
                        if (TodoCurrentID == 0) {
                            Todo_Data_List = Todo_Data_List.concat(dataList);
                            if (Todo_Data_List != undefined && Todo_Data_List.length != 0) {
                                Todo_Createdbegin = Todo_Data_List[Todo_Data_List.length - 1].TimeCreated;
                                Todo_Data_List = TodoList_ArrayUnique(Todo_Data_List)
                                RenderData_TodoList(Todo_Data_List, 'Area_Progress_Todo_List');
                            }
                        }
                        else {
                            let _row_todo = $("#row_todoitem_" + TodoCurrentID);
                            if (_row_todo.length != 0) {
                                Dashboard_Todo_List_UpdateItem(TodoCurrentID, dataList[0])
                            }
                            else {
                                Dashboard_Todo_List_AddItem(TodoCurrentID, dataList[0])
                            }
                        }
                    }
                    else {
                        if (isLoadmore == 1) {
                            $("#btnLoadMoreTodoList").hide();
                        }
                    }
                }
                else {

                }
            }
        );


    }

    function TodoList_ArrayUnique(array) {
        var a = array.concat();
        for (var i = 0; i < a.length; ++i) {
            for (var j = i + 1; j < a.length; ++j) {
                if (a[i].ID === a[j].ID)
                    a.splice(j--, 1);
            }
        }
        return a;
    }

    //#endregion


    function Dashboard_Todo_List_RemoveItem(id) {
        let _row_todo = $("#row_todoitem_" + id);
        if (_row_todo.length != 0) {
            _row_todo.remove();
            for (let i = 0; i < Todo_Data_List.length; i++) {
                let TodoID = Todo_Data_List[i].ID
                if (TodoID == TodoCurrentID) {
                    Todo_Data_List.splice(i, 1);
                    break;
                }
            }
            if (Todo_Data_List.length != 0) {
                Todo_Createdbegin = Todo_Data_List[Todo_Data_List.length - 1].TimeCreated;
            }
        }
    }

    function Dashboard_Todo_List_AddItem(id, data) {
        let _row_todo = $("#row_todoitem_" + id);
        if (!_row_todo.length) {
            let string = RenderData_TodoList_Each(data);
            $("#Area_Progress_Todo_List").prepend(string);
            Todo_Data_List.unshift(data);
            $(".item_box_status,.box_avatar").popup({
                transition: "scale up",
                position: "top left"
            });
        }
    }

    function Dashboard_Todo_List_UpdateItem(id, data) {
        let _row_todo = $("#row_todoitem_" + id);
        let string = RenderData_TodoList_Each(data);
        if (_row_todo.length) {
            let obj = createElementFromHTML(string);
            let currentnode = document.getElementById('row_todoitem_' + id);
            currentnode.parentNode.replaceChild(obj, currentnode);
            $(".item_box_status,.box_avatar").popup({
                transition: "scale up",
                position: "top left"
            });
        }
    }


    //#region // Render Data

    function RenderData_TodoList(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var j = 0; j < data.length; j++) {
                    let item = data[j];
                    stringContent = stringContent + RenderData_TodoList_Each(item);
                }
            }
            document.getElementById(id).innerHTML = stringContent;

            $(".item_box_status,.box_avatar").popup({
                transition: "scale up",
                position: "top left"
            });
        }
    }

    function RenderData_TodoList_Each(item) {
        let dateTimeRemind = new Date(item.TimeRemind);
        let day = (dateTimeRemind.getDate() < 10) ? ("0" + dateTimeRemind.getDate()) : dateTimeRemind.getDate();
        let _status = '', _sender = '';

        _status = '<span class="item_box_status badge me-3 bg-dark">' + item.StatusName + '</span>';
        if (item.IsAssign != 1) _status = '<span class="item_box_status badge-sm badge" style="background-image: linear-gradient( 310deg, ' + item.StatusColor + ' 0 , ' + item.StatusColor + '90);"  data-id="' + item.ID
            + '" data-assign="' + item.IsAssign
            + '" data-isclose="' + item.IsClose + '">' + item.StatusName + '</span>';
        else _status = '<span class="item_box_status badge-sm badge  bg-dark">' + item.StatusName + '</span>';

        if (item.IsAssign == 1)
            _sender = 'from <span class="font-weight-bold">' + Fun_GetName_ByID(DataEmployee, item.EmpAssignMe) + '</span>';
        else if (item.UserTo != 0) _sender = 'to ' + '<span class="font-weight-bold">' + Fun_GetName_ByID(DataEmployee, item.EmpAssignTo) + '</span>'
        else _sender = 'Remind';



        let result1 = '<div class="timeline-block mb-3 todoitem" id="row_todoitem_' + item.ID + '" data-id="' + item.ID + '">'
            + '<span class="timeline-step">'
            + '<i class="ni ni-bell-55 text-success text-gradient"></i>'
            + '</span>'
            + '<div class="timeline-content" style="max-width: 100%;">'
            + '<p class="text-dark text-sm mb-0">' + _sender + '</p>'
            + '<p class="text-xs mt-1 mb-0">' + ConvertDateTimeUTC_DMYHM(item.Created) + '</p>'
            + '<p class="text-sm text-dark mt-3 mb-2 todocontent">'
            + item.Content
            + '</p>'
            + _status
            + '</div>'
            + '</div>'
         
        return result1;
    }

    //#endregion


    //#region // Todo Event Click Change Status

    function Dashboard_Todo_Event_Click() {
        $("#Area_Progress_Todo_List").on('click', '.item_box_status', function (event) {
            Todo_CurrentID = $(this).attr("data-id");
            let IsAssign = Number($(this).attr("data-assign"));
            if (IsAssign != 1) {
                let TicketID = Todo_Ticket_ID;
                let CustID = 0;
                Master_Todo_Open_Popup_ChangeStatus(this, Todo_CurrentID, CustID, TicketID);
            }
        });

    }

    //#endregion

    function OpenDivPopupToDo(e) {
        let currentid = 0;
        let custid = 0;
        let ticketid = 0;
        Master_Todo_Open_Popup_Detail(e, currentid, custid, ticketid);
    }


</script>

<style type="text/css">
    .todocontent {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }
 
</style>

