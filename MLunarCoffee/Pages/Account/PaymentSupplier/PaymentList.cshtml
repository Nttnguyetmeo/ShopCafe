@page
@model MLunarCoffee.Pages.Account.PaymentSupplier.PaymentList
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()
<div class="row">
    <div class="col-12 px-0">
        <div class="card card-plain" id="ASP_SuppListContainer">
            <div class="vtcardheader card-header pb-0">
                <div class="left">
                    <h6 class="mb-0">@Local["Nhà cung cấp"]</h6>
                    <p class="text-sm mb-0">@Local["Chi tiết nhà cung cấp"]</p>
                </div>
                <div class="right">
                    <div class="wrap">                       
                        <div class="wrapblock">
                            <div class="btn-group _tab_control_" data-tab="export_excel">
                                <button class="btn btn-dark btn-sm px-3 m-0 pe-none">
                                    <i class="ni vtt-icon  vttech-icon-export-ex text-white text-xs"></i>
                                </button>
                                <button class="btn btn-dark border-start border-light px-3 m-0" onclick="event.preventDefault();return ASP_Export(0);">Tất cả</button>
                                <button class="btn btn-dark border-start border-light btn-sm m-0" onclick="event.preventDefault();return ASP_Export(1);">Tùy chọn</button>
                            </div>                            
                            <button class="btn btn-dark btn-md position-relative dropdown-toggle px-3 m-0" data-bs-toggle="collapse" data-bs-target="#colLists">
                                @Local["Xem thêm"]
                            </button>
                        </div>
                    </div>
                </div>
                <div class="toggle">
                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                        <ul class="card card-body text-dark text-capitalize opacity-10">
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="person" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Người đại diện"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="email" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Email"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="website" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Website"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Ghi chú"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="bank" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Ngân hàng"]</p>
                            </li>
                            <li class="d-flex">
                                <div class="form-check form-switch">
                                    <input class="shtoogle form-check-input" data-name="banknumber" type="checkbox">
                                </div>
                                <p class="text-sm">@Local["Số tài khoản"]</p>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>        
            <div class="card-body pt-md-2 pt-0">
                <div class="vtcondition">
                    <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                    <div class="fulllap collapse collapsesticky show">
                        <div class="row w-lg-50 w-100 m-0">
                            <div class="col-12 col-sm-8 col-lg-7 py-1 px-0 pe-sm-2">
                                <div class="input-group flex-nowrap" id="ASP_SearchDiv">
                                    <div class="input-group-text input-group-text px-2">
                                        <i class="fas fa-search" aria-hidden="true"></i>
                                        <div class="spinner-border spinner-border-sm d-none"></div>
                                    </div>
                                    <input id="ASP_IpSearch" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm theo tên, số điện thoại hoặc mã số"]">
                                    <div class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></div>
                                </div>
                            </div>
                            <div class="col-12 col-sm-4 col-lg-5  py-1 px-0">
                                <div class="ui fluid search selection dropdown form-control" id="ASP_WareID" onchange="ASP_LoadData()">
                                    <input type="hidden" name="branch" />
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Kho"]</div>
                                    <div id="ASP_cbbWare" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-lg-flex pt-3">
                    <div class="flex-grow-1">
                        <div class="p-0">
                            <div id="ASP_WaitingDiv" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x d-none">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>                           
                            <div class="m-0  mobile-responsive vt-header-sticky" style="max-height: calc(100vh - 200px);">
                                <table data-name="ASP_dtContent" id="ASP_dtContent" class="table vt-table mb-0">
                                    <thead class="hiddenCollapse">
                                        <tr role="row">
                                            <th class="fixed-side d-none">ID</th>
                                            <th style="width: 50px;">#</th>
                                            <th>@Local["Mã nhà cung cấp"]</th>
                                            <th>@Local["Nhà cung cấp"]</th>
                                            <th>@Local["Điện thoại"]</th>
                                            <th data-name="person">@Local["Người đại diện"]</th>
                                            <th data-name="email">@Local["Email"]</th>
                                            <th data-name="website">@Local["Trang web"]</th>
                                            <th data-name="note">@Local["Ghi chú"]</th>
                                            <th data-name="bank">@Local["Ngân hàng"]</th>
                                            <th data-name="banknumber">@Local["Số tài khoản"]</th>
                                            <th>@Local["Ký quỹ"]</th>
                                            <th>@Local["Phát sinh"]</th>
                                            <th>@Local["Thanh toán"]</th>
                                            <th>@Local["Công nợ"]</th>
                                        </tr>
                                    </thead>
                                    <tbody id="ASP_dtContentBody">
                                    </tbody>
                                </table>
                            </div>
                            <button id="ASP_btnLoadMore" class="btn btnsysmore btn-secondary w-100 p-1 mt-1 mb-0 position-relative" onclick="event.preventDefault(); return ASP_LoadData(0, 1);">
                                @Local["Xem thêm"]
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="ASP_SuppDetail" style="display: none">
        </div>
    </div>
</div>
<script type="text/javascript">
    //#region //DECLARE - INIT
    let ASP_dataWare;
    let ASP_IsIniLoaded = 0;
    let ASP_DataMain = [];
    let ASP_BeginID = 0;
    let ASP_isLoadedMore = false;
    let shtable;
    let ASP_xhrLoad;
    let ASP_LimitLoad = 100;
    let ASP_SearchTimer;    
    $(document).ready(function () {
        shtable = $("#ASP_dtContent").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        ASP_LoadInit();
    })

    function ASP_LoadInit() {
        AjaxLoad(url = "/Account/PaymentSupplier/PaymentList/?handler=LoadIni"
            , data = {}, async = true, error = null
            , success = function (result) {
                let datas = JSON.parse(result);
                ASP_dataWare = datas.Warehouse;
                Load_Combo(ASP_dataWare, "ASP_cbbWare", true, '@Local["Tất cả"]');
                $("#ASP_WareID").dropdown("refresh");
                $("#ASP_WareID").dropdown("set selected", '0');
                ASP_IsIniLoaded = 1;
                ASP_LoadData();
                ASP_EventIni();
            }
        );
    }
    //#endregion

    //#region //LOADDATA
    function ASP_LoadData(id = 0, isLoadMore = 0) {
        if (id == 0 && isLoadMore == 0) {
            ASP_DataMain = [];
            ASP_BeginID = 0;
            ASP_isLoadedMore = false;
            $('#ASP_dtContentBody').html('');
        }
        let wareID = $('#ASP_WareID').dropdown('get value') ? $('#ASP_WareID').dropdown('get value') : "0";
        let wareToken = wareID == 0 ? Object.values(ASP_dataWare).map(e => e.ID).join(',') : '';
        if (ASP_xhrLoad && ASP_xhrLoad.stateReady != 4) ASP_xhrLoad.abort();
        ASP_xhrLoad = AjaxLoad(url = "/Account/PaymentSupplier/PaymentList/?handler=LoadData"
            , data =
            {
                "supID": id,
                "wareID": wareID,
                "wareToken": wareToken,
                "limit": ASP_LimitLoad,
                "beginID": ASP_BeginID
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    if (id == 0) {
                        ASP_DataMain = ASP_DataMain.concat(data);
                        ASP_BeginID = data[data.length - 1].ID;
                        fnRenderBlock(data, "ASP_dtContentBody"
                            , blocknum = 50
                            , fnrender = ASP_RenderData
                            , fnsuccess = function (e) { }
                            , fnbegin = function (e) { }
                        );
                    }
                    else {
                        if (data && data.length != 0) {
                            if ($('#ASP_SupRow_' + id).length) {
                                ASP_DataMain = ASP_DataMain.reduce((pre, arr) => {
                                    if (arr.ID == data[0].ID) arr = data[0];
                                    pre.push(arr);
                                    return pre;
                                }, []);
                                $('#ASP_SupRow_' + id).replaceWith(ASP_RenderDataEach(data[0]));
                                ASP_Event();
                            }
                            else {
                                if (ASP_isLoadedMore) {
                                    ASP_DataMain.push(data[0]);
                                    $('#ASP_dtContentBody').append(ASP_RenderDataEach(data[0]));
                                    ASP_Event();
                                }
                                else {
                                    ASP_LoadData(0, 0);
                                }
                            }
                        }
                        else {
                            ASP_DataMain = ASP_DataMain.filter(word => {
                                return word.ID != id
                            })
                        }
                    }
                }
                else if (result == "[]") {
                    if (isLoadMore == 1) {
                        $("#ASP_btnLoadMore").hide();
                        ASP_isLoadedMore = true;
                    }
                    else {
                        notiWarning('@Local["Không có dữ liệu"]!');
                    }
                }
                else {
                    notiError_SW();
                }
                shtable.Refresh();
            }
            , sender = null
            , before = (e) => {
                $('#ASP_WaitingDiv').removeClass("d-none")
            }
            , complete = function (e) {
                $('#ASP_WaitingDiv').addClass("d-none")
            });
    }
    //#endregion

    //#region //RENDER DATA
    async function ASP_RenderData(data, id) {
        return new Promise(resolve => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (let ii = 0; ii < data.length; ii++) {
                            let item = data[ii];
                            let tr = ASP_RenderDataEach(item);
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                        ASP_Event();
                        shtable.Refresh();                        
                        Checking_TabControl_Permission();
                    }
                }
                resolve();
            }, 30)
        })
    }

    function ASP_RenderDataEach(item) {
        try {
            let result = '';
            if (item && Object.keys(item).length > 0) {
                let debt = item.AmountRaise - item.AmountPaid;
                result = `<tr class="vt-number">
                                <td class="d-none" >${item.ID}</td>
                                 <td class="vt-number-order text-center"></td>
                                 <td>
                                 <a class="text-primary border-bottom border-primary ASP_btnDetail">${item.Code}</a>
                                 </td>
                                 <td>${item.Name}</td>
                                 <td>${item.Phone}</td>
                                 <td data-name="person">${item.Person}</td>
                                 <td data-name="email">${item.Email}</td>
                                 <td data-name="website">${item.Website}</td>
                                 <td data-name="note">${item.Note}</td>
                                 <td data-name="bank">${item.BankCode}</td>
                                 <td data-name="banknumber">${item.BankNumber}</td>
                                 <td>${formatNumber(item.Deposit)}</td>
                                 <td>${formatNumber(item.AmountRaise)}</td>
                                 <td>${formatNumber(item.AmountPaid)}</td>
                                 <td>${formatNumber(debt)}</td>
                                </tr>`
            }
            return result;
        }
        catch (e) {
            return '';
        }
    }
    //#endregion

    //#region //EVENT
    function ASP_Event() {
        $('.ASP_btnDetail').unbind('click').click(function () {
            let ID = Number($(this).closest('tr')[0].childNodes[1].innerHTML);
            $("#ASP_SuppListContainer").hide();
            $("#ASP_SuppDetail").html('');
            $("#ASP_SuppDetail").load("/Account/PaymentSupplier/SupplierDetail?SuppID=" + ID + "&ver=" + versionofWebApplication);
            $("#ASP_SuppDetail").show();
        });
    }

    function ASP_EventIni() {
        $('#ASP_IpSearch').keyup(function () {
            if ($(this).val().length > 0) $("#ASP_SearchDiv .btn_clear").removeClass('opacity-1');
            else $("#ASP_SearchDiv .btn_clear").addClass('opacity-1');
            $("#ASP_SearchDiv .fa-search").hide();
            $("#ASP_SearchDiv .spinner-border").removeClass('d-none');
            clearTimeout(ASP_SearchTimer);
            ASP_SearchTimer = setTimeout(function (e) {
                ASP_FilterData("ASP_dtContentBody");
            }, 500);
        });
        $("#ASP_SearchDiv").on('click', '.btn_clear', function (e) {
            $('#ASP_IpSearch').val('');
            $("#ASP_SearchDiv .btn_clear").addClass('opacity-1');
            ASP_FilterData("ASP_dtContentBody");

        });
    }

    async function ASP_FilterData(id) {
        await new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    let textsearch = $('#ASP_IpSearch').val().trim();
                    $('#ASP_dtContentBody').empty();
                    if (textsearch == "") {
                        ASP_RenderData(ASP_DataMain, id);
                    }
                    else {
                        let search = xoa_dau(textsearch.toLowerCase());
                        if (search == "") {
                            ASP_RenderData(ASP_DataMain, id);
                        }
                        else {
                            let data = ASP_DataMain.filter(word => {
                                return (xoa_dau(word["Name"].toLowerCase()).includes(search)
                                    || xoa_dau(word["Code"].toLowerCase()).includes(search)
                                    || word["Phone"].includes(search));
                            });
                            ASP_RenderData(data, id);
                        }
                    }
                    $("#ASP_SearchDiv .fa-search").show();
                    $("#ASP_SearchDiv .spinner-border").addClass('d-none');
                    resolve()
                }
            )
        })
    }

    function ASP_Export(isOption){
         try {
            if (ASP_DataMain && ASP_DataMain.length != 0) {
                let isAll = (isOption == 0);
                let eleContainer = $('#ASP_SuppListContainer');
                var dataHeader = {
                    "STT": ["@Local["STT"]", (value, { }, index) => { return index + 1; }],
                    "Code": ["@Local["Mã nhà cung cấp"]"],
                    "Name": ["@Local["Nhà cung cấp"]"],
                    "Phone": ["@Local["Điện thoại"]"],
                    "Person": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='person']`)).is(":checked"),
                        data: ["@Local["Người đại diện"]"]
                    },
                    "Email": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='email']`)).is(":checked"),
                        data: ["@Local["Email"]"]
                    },
                    "Website": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='website']`)).is(":checked"),
                        data: ["@Local["Trang web"]"]
                    },
                    "Note": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='note']`)).is(":checked"),
                        data: ["@Local["Ghi chú"]"]
                    },
                    "BankCode": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='bank']`)).is(":checked"),
                        data: ["@Local["Ngân hàng"]"]
                    },
                    "BankNumber": {
                        isShow: isAll || (eleContainer.find(`.shtoogle[data-name='banknumber']`)).is(":checked"),
                        data: ["@Local["Số tài khoản"]"]
                    },
                    "Deposit": ["@Local["Ký quỹ"]"],                    
                    "AmountPaid": ["@Local["Phát sinh"]"],
                    "AmountRaise": ["@Local["Thanh toán"]"],
                    "Dept": ["@Local["Công nợ"]", (value, { AmountPaid, AmountRaise }) => {
                        return AmountRaise - AmountPaid;
                    }]
                }                
                dataHeader = Checking_TabControl_System_RebuildHeader(dataHeader, tableBodyId = 'ASP_dtContentBody', PermissionTable_TabControl);
                let nameExcel = `${Outlang["Sys_thanh_toan_nha_cung_cap"] ?? '@Local["Thanh toán nhà cung cấp"]'}`;
                exportJsonToExcel(nameExcel, ASP_DataMain, dataHeader);
                syslog_ExpExcel('e', nameExcel);
            }
            else {
                notiWarning('@Local["Không có dữ liệu để xuất"]!');
            }
        }
        catch (ex) {
            notiWarning('@Local["Không xuất được file"]!');
        }
    }





                //#endregion
</script>