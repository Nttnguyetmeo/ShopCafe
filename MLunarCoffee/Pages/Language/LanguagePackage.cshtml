@page
@model MLunarCoffee.Pages.Language.LanguagePackageModel
@{
}

<div class="row">
    <div class="card p-3  ">
        <div class="d-lg-flex">
            <div class="w-50 col-auto my-auto">
                <p class="text-md text-dark font-weight-bold mb-1">
                    Language Package
                </p>
                <p class="text-sm mb-0">Some text of detail sub</p>
            </div>
            <div class="ms-auto my-auto mt-1">
                <ul class="nav nav-pills nav-fill p-1 bg-transparent languagepack" role="tablist">
                    <li class="nav-item" role="presentation">
                        <a data-type="en-dyn" class="fi_pack nav-link cursor-pointer" data-bs-toggle="pill" role="tab">en-dyn</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a data-type="en-sta" class="fi_pack nav-link cursor-pointer" data-bs-toggle="pill" role="tab">en-sta</a>
                    </li>
                    <li class="nav-item" role="presentation">
                        <a data-type="vn-sta" class="fi_pack nav-link cursor-pointer" data-bs-toggle="pill" role="tab">vn-sta</a>
                    </li>
                </ul>



            </div>
        </div>
        <div class="d-flex mt-4">
            <div class="col-w-150 text-center mt-n1 mx-auto">
                <button class="packageadd btn bg-gradient-primary mt-1">
                    Thêm Mới
                </button>
            </div>
            <div class="flex-grow-1 ">
                <div class="row px-1">
                    <div class="col-12 col-md-6 col-xl-6">
                        <div class="input-group" id="Language_Sort">
                            <span class="input-group-text input-group-text px-2">
                                <i class="fas fa-search" aria-hidden="true"></i>
                                <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                            </span>
                            <input id="filterPackage" type="text" class="form-control" placeholder="eg .search">
                            <span class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></span>
                        </div>
                    </div>
                    <div class="col-12 col-md-6 col-xl-6 mt-lg-0 mt-2">
                        <div class="border-dashed border-1 border-secondary border-radius-md d-inline-flex px-2 align-items-center h-100 w-100">
                            <h6 class="text-primary text-gradient mb-0 timer_counter">Tổng</h6>
                            <h6 id="totalLanguage" class="text-lg text-dark mt-2 ps-2">0</h6>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row px-1 ">
            <div class="col-12 col-md-4 col-xl-4 px-1 mt-2 ">

                <div class="px-1 me-2 my-3 mobile-responsive max-height-600 overflow-auto">
                    <ul class="nav nav-pills flex-column bg-white border-radius-lg p-3" id="Package_List">
                    </ul>
                </div>


            </div>
            <div class="field col-12 col-md-8 col-xl-8 px-1 mt-2" id="PackageDetail" style="display:none;">

                <div class="card-body">
                    <div class="border-dashed border-1 border-secondary border-radius-md p-2 me-n1 align-items-center h-100 0">
                        <div id="Package_Waiting" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>

                        </div>

                        <div class="d-lg-flex p-2">
                            <div class="col-auto my-auto">
                                <span id="PackageDetail_Type" class="badge badge-md bg-gradient-warning"></span>
                            </div>
                            <div class="ms-auto my-auto mt-1">
                                <span id="PackageDetail_Header" class="badge badge-md bg-gradient-primary"></span>
                            </div>
                        </div>
                        <div class="row p-4 pt-2 pe-0">
                            <div class="row px-1" id="pack_dyn">
                                <div class="col-12 col-md-6 col-xl-4 px-1 mt-2">
                                    <label>Key</label>
                                    <input id="PackageDetail_Key" type="text" class="form-control" placeholder="eg .key" disabled />
                                </div>
                                <div class="col-12 col-md-6 col-xl-4 px-1 mt-2">
                                    <label>Name</label>
                                    <input id="PackageDetail_Name" class="form-control" placeholder="eg .name" type="text" />
                                </div>
                                <div class="col-12 col-xl-4 px-1 mt-2">
                                    <label>Note</label>
                                    <input id="PackageDetail_Note" class="form-control" placeholder="eg .note" type="text" />
                                </div>
                            </div>
                            <div class="row px-1" id="pack_static">
                                <div class="col-12 col-md-12 col-xl-12 px-1 mt-2">
                                    <label>Key</label>
                                    <input id="PackageDetailM_Key" type="text" class="form-control" placeholder="eg .key" disabled />
                                </div>
                                <div class="col-12 col-md-12 col-xl-12 px-1 mt-2">
                                    <label>Name</label>
                                    <input id="PackageDetailM_Name" class="form-control" placeholder="eg .name" type="text" />
                                </div>
                                <div class="col-12 col-md-12 col-xl-12 px-1 mt-2">
                                    <label>Note</label>
                                    <input id="PackageDetailM_Note" class="form-control" placeholder="eg .note" type="text" />
                                </div>
                            </div>
                            <div class="row px-2 mt-4">
                                <table class="table vt-table mb-0" id="dtPackageDetail">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th style="width: 50%;">vn</th>
                                            <th style="width: 50%;">en</th>
                                            <th style="width: 70px;">#</th>
                                        </tr>
                                    </thead>
                                    <tbody id="dtPackageDetailBody">
                                    </tbody>
                                </table>
                                <button id="btnDetail_New" class="btn btn-secondary button_chose p-3" onclick="Package_DetailNewRow()"></button>

                            </div>
                        </div>

                    </div>
                </div>

                <div class="fixed-botombutton pe-3">
                    <div class="action_Save">
                        <div class="action_Save-Content">
                            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                            <button id="btnPackageDelete" type="button" class="btn bg-gradient-danger mt-2 me-2" onclick="Package_DetailDelete()">Delete</button>
                            <button type="button" class="btn bg-gradient-dark mt-2 me-2" onclick="Package_DetailClose()">Cancel</button>
                            <button type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="Package_DetailSave()">Save</button>
                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>

<script type="text/javascript">

    let dataPackage = {};
    let dataPackage_Detail;
    let currentPackage;
    let currenttype;
    let data_TimerOnchange;
    $(document).ready(function () {
        $(".languagepack .fi_pack").click(function (event) {
            currenttype = $(this).attr("data-type");
            Package_ListIni(currenttype);

        });
        $('.languagepack .fi_pack:first').trigger('click');
        $('.languagepack .fi_pack:first').addClass('active');
    });
    function Package_ListIni (type) {
        let _type = type != undefined ? type : "";
        AjaxLoad(url = "/Language/LanguagePackage/?handler=Loadata"
            , data = {
                type: _type
            }, async = true, error = null
            , success = function (result) {
                let dataMain = JSON.parse(result);
                dataPackage = {};
                $('#Package_List').html('');
                for (const [key, value] of Object.entries(dataMain)) {
                    dataPackage[value.type] = value.node[0]["root"];
                }
                Package_ListRender(dataPackage, "Package_List");
                Package_ListEvent();
                $('.packageitem')[0].click();
            })
    }
    //#region // Load and render list
    function Package_ListRender (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let total = 0;
            for (const [kk, vv] of Object.entries(data)) {
                for (const [key, value] of Object.entries(vv)) {
                    let name = '', text = '';
                    let lenght = 0;
                    if (value['@@name'] != undefined) {
                        name = value['@@name'];
                    }
                    if (value['#text'] != undefined) {
                        text = value['#text'];
                    }
                    else text = value;

                    lenght = (value.value != undefined && value.value.length != undefined) ? value.value.length : 1;
                    total = total + lenght;
                    let tr = '<li class="nav-item"><a class="packageitem setting_render nav-link d-flex align-items-center p-2" data-type="' + kk
                        + '" data-id="' + key
                        + '" data-note="' + ((name != "") ? name : text)
                        + '">'
                        + '<div class="icon icon-shape icon-sm me-3 bg-gradient-dark shadow text-center">'
                        + '<h6 class="mt-2 text-white">' + lenght + '</h6>'
                        + '</div>'
                        + '<div class="d-flex flex-column"><h6 class="text-dark text-md mb-0">'
                        + key
                        + '</h6><span class="text-xs text-secondary mt-1">'
                        + ((name != "") ? name : text)
                        + '</span></div>'
                        + '</a></li>'

                    stringContent = stringContent + tr;
                }
                Count_Up('totalLanguage', total);
                document.getElementById(id).innerHTML = document.getElementById(id).innerHTML + stringContent;
            }

        }
        if ($('#filterPackage').val().trim() != "") {
            Package_DetailSearch($('#filterPackage').val());
        }

    }
    function Package_ListEvent () {

        $(".packageitem").unbind('click').click(function (event) {
            let id = $(this).attr("data-id");
            let type = $(this).attr("data-type");
            currentPackage = id;
            currenttype = type;
            Package_DetaiReset();
            $('#PackageDetail').show();
            $('#btnPackageDelete').show();
            if (currenttype == "en-dyn") {
                $('#btnDetail_New').show();
                $('#dtPackageDetail').show();
                $('#pack_dyn').show();
                $('#pack_static').hide();
            }
            else {
                $('#btnDetail_New').hide();
                $('#dtPackageDetail').hide();
                $('#pack_dyn').hide();
                $('#pack_static').show();
            };
            Package_DetailLoad(id, type, dataPackage[type][id]);

            $('.packageitem ').removeClass('active')
            $(this).addClass('active');
        });
        $(".packageadd").unbind('click').click(function (event) {
            currentPackage = "";
            Package_DetaiReset();
            $('#PackageDetail').show();
            $('#btnPackageDelete').hide();
            if (currenttype == "en-dyn") {
                $('#btnDetail_New').show();
                $('#dtPackageDetail').show();
                $('#pack_dyn').show();
                $('#pack_static').hide();
            }
            else {
                $('#btnDetail_New').hide();
                $('#dtPackageDetail').hide();
                $('#pack_dyn').hide();
                $('#pack_static').show();
            };
            $('#PackageDetail_Key').prop("disabled", false);
            $('#PackageDetailM_Key').prop("disabled", false);

            $('#PackageDetail_Header').html("New Item");
            $('#PackageDetail_Type').html(currentPackage);

        });
        $('#filterPackage').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#Language_Sort .fa-search").hide();
            $("#Language_Sort .spinner-border").show();
            clearTimeout(data_TimerOnchange);
            data_TimerOnchange = setTimeout(function (e) {
                Package_DetailSearch($('#filterPackage').val());

            }, 500);
        });
        $("#Language_Sort").on('click', '.btn_clear', function (e) {
            $('#filterPackage').val('');
            $(".btn_clear").addClass('opacity-1');
            Package_DetailSearch('');
        });

    }
    function Package_DetailSearch (textsearch) {

        textsearch = xoa_dau(textsearch.toLowerCase()).trim()
        $('.packageitem').removeClass('d-none');

        let obj = document.getElementsByClassName('packageitem');
        for (let i = 0; i < obj.length; i++) {
            let _note = xoa_dau(obj[i].dataset.note.toLowerCase().trim());
            let _id = obj[i].dataset.id.toLowerCase().trim();
            if (!_id.includes(textsearch) && !_note.includes(textsearch)) {
                obj[i].className = obj[i].className + ' d-none'
            }
        }
        $("#Language_Sort .fa-search").show();
        $("#Language_Sort .spinner-border").hide();

        ColorSearchFilterText(textsearch, "setting_render");
    }
    //#endregion
    //#region // Load and render detail
    function Package_DetailLoad (key, type, item) {
        $('#PackageDetail_Header').html(key);
        $('#PackageDetail_Key').val(key);
        $('#PackageDetailM_Key').val(key);

        $('#PackageDetail_Type').html(type);
        $('#PackageDetail_Key').prop("disabled", true);
        $('#PackageDetailM_Key').prop("disabled", true);
        if (item.value != undefined) {
            let name = item['@@name'] != undefined ? item['@@name'] : '';
            let note = item['@@note'] != undefined ? item['@@note'] : '';
            $('#PackageDetailM_Name').val(name);
            $('#PackageDetail_Name').val(name);
            $('#PackageDetail_Note').val(note);
            $('#PackageDetailM_Note').val(note);

            if (item.value.length != undefined) {
                for (const [k, v] of Object.entries(item.value)) {
                    dataPackage_Detail[k] = v;
                }
            }
            else {
                dataPackage_Detail[0] = item.value;
            }
            for (const [k, v] of Object.entries(dataPackage_Detail)) {
                Package_DetailRender_Add(k, v, 'dtPackageDetailBody');
            }
        }
        else {
            let name = item['#text'] != undefined ? item['#text'] : item;
            let note = item['@@note'] != undefined ? item['@@note'] : '';
            $('#PackageDetail_Name').val(name);
            $('#PackageDetailM_Name').val(name);
            $('#PackageDetail_Note').val(note);
            $('#PackageDetailM_Note').val(note);
        }

    }
    function Package_DetaiReset () {
        $('#PackageDetail_Header').html("");
        $('#PackageDetail_Type').html("");
        $('#PackageDetail_Key').val("");
        $('#PackageDetailM_Key').val("");
        $('#PackageDetailM_Name').val("");
        $('#PackageDetail_Name').val("");
        $('#PackageDetail_Note').val("");
        $('#PackageDetailM_Note').val("");
        dataPackage_Detail = {};
        $('#dtPackageDetailBody').html('');
    }
    function Package_DetailNewRow () {
        let element = {};
        let id = (new Date()).getTime();
        element['@@vn'] = '';
        element['#text'] = '';
        dataPackage_Detail[id] = element;
        Package_DetailRender_Add(id, element, 'dtPackageDetailBody');
    }
    function Package_DetailRender_Add (key, value, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let tr =
                '<td class="vt-number-order"></td>'
                + '<td>' + AddCell_Note(key, value['@@vn'], "vn") + '</td>'
                + '<td>' + AddCell_Note(key, value['#text'], "text") + '</td>'
                + '<td style="width: 50px;">'
                + '<button class="buttonGrid"><i data-id="' + key + '" class="detailremove vtt-icon vttech-icon-delete"></i></button>'
                + '</td>'
            tr = '<tr id="row_' + key + '" class="vt-number detailrow">' + tr + '</tr>';
            document.getElementById(id).innerHTML = document.getElementById(id).innerHTML + tr;
        }
        Package_DetailFillData(dataPackage_Detail);
        Package_DetailEvent();
    }
    function Package_DetailFillData (data) {
        for ([key, value] of Object.entries(data)) {
            $('#detail_vn_' + key).val(value['@@vn']);
            $('#detail_text_' + key).val(value['#text']);
        }
    }
    function AddCell_Note (key, value, type) {
        let prefixname = 'detail_' + type;
        let prefixid = 'detail_' + type + '_' + key;
        let resulf = '<input id="' + prefixid + '" class="form-control ' + prefixname + '" value="' + value + '" type="text"/>';
        resulf = resulf;
        return resulf;
    }
    function Package_DetailEvent () {
        $(".detail_vn").change(function () {
            let id = this.id.replace("detail_vn_", "");
            dataPackage_Detail[id]['@@vn'] = this.value;
        });
        $(".detail_text").change(function () {
            let id = this.id.replace("detail_text_", "")
            dataPackage_Detail[id]['#text'] = this.value;
        });
        $(".detailremove").unbind('click').click(function () {
            let id = $(this).attr("data-id");
            delete dataPackage_Detail[id];
            $('#row_' + id).remove();
            event.stopPropagation();
        });
    }
    //#endregion

    //#region // Event main detail
    function Package_DetailClose () {
        $('#PackageDetail').hide();
        currentPackage = "";
        Package_DetaiReset();
    }
    function Package_DetailSave () {
        let name, note, key;
        if (currenttype == "en-dyn") {
            name = $('#PackageDetail_Name').val() != undefined ? $('#PackageDetail_Name').val() : '';
            note = $('#PackageDetail_Note').val() != undefined ? $('#PackageDetail_Note').val() : '';
            key = $('#PackageDetail_Key').val() != undefined ? $('#PackageDetail_Key').val() : '';
        }
        else {
            name = $('#PackageDetailM_Name').val() != undefined ? $('#PackageDetailM_Name').val() : '';
            note = $('#PackageDetailM_Note').val() != undefined ? $('#PackageDetailM_Note').val() : '';
            key = $('#PackageDetailM_Key').val() != undefined ? $('#PackageDetailM_Key').val() : '';
        }

        name = name.trim(); note = note.trim().toLowerCase(); key = key.trim().toLowerCase();
        Package_DetailValidate(key, name, dataPackage_Detail);
        let data = Object.values(dataPackage_Detail);
        let message = $('#textShowMessage').html();
        if (message == "") {
            AjaxLoad(url = "/Language/LanguagePackage/?handler=ExcuteData"
                , data = {
                    data: JSON.stringify(data)
                    , key: key
                    , name: name
                    , note: note
                    , currentkey: currentPackage
                    , currenttype: currenttype
                }, async = true, error = null
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        let e = {};
                        if (currenttype == "en-dyn") {
                            e["@@name"] = name;
                            e["@@note"] = note;
                            e["value"] = Object.values(dataPackage_Detail);

                        }
                        else {
                            e["#text"] = name;
                            e["@@note"] = note;
                        }
                        dataPackage[currenttype][key] = e

                        Package_DetailClose();
                        Package_ListRender(dataPackage, "Package_List");

                        Package_ListEvent();
                        $(".packageitem[data-id='" + key + "']").click();


                    }
                    else $('#textShowMessage').html(result);
                });
        }
    }
    function Package_DetailValidate (key, name, data) {
        $('#textShowMessage').html("");
        if (key == "" || name == "") {$('#textShowMessage').html("enter key, name"); return;}
        if (key != xoa_dau(key)) {$('#textShowMessage').html("key is no sign"); return;}
        let iserrorValue = 0;
        if (currenttype == "en-dyn") {
            if (data == undefined || Object.keys(data).length == 0) {$('#textShowMessage').html("value has not empty"); return;}
            for ([k, value] of Object.entries(data)) {
                if (value["@@vn"] == "" || value["#text"] == "" || value["#text"] == value["@@vn"]) {
                    iserrorValue = 1;
                }
            }
            let array = Object.values(data);

            for (let j = 0; j < array.length; j++) {
                let _vn = array[j]["@@vn"];
                for (let k = j + 1; k < array.length; k++) {
                    if (array[k]["@@vn"] == _vn) {
                        iserrorValue = 1;
                        break;
                    }
                }
            }
        }
        for ([k, value] of Object.entries(dataPackage[currenttype])) {
            if (k == key && k != currentPackage)
                iserrorValue = 1;
        }
        if (iserrorValue == 1) $('#textShowMessage').html("Data has not empty,and can not be same");
        return;
    }
    function Package_DetailDelete () {
        if (currentPackage != "") {
            const promise = notiConfirm();
            promise.then(function () {Package_DetailDeleteExe(currentPackage);}, function () { });
        }
    }
    function Package_DetailDeleteExe (key) {
        AjaxLoad(url = "/Language/LanguagePackage/?handler=Delete"
            , data = {key: key, currenttype: currenttype}, async = true, error = null
            , success = function (result) {
                if (result == "1") {
                    notiSuccess();
                    delete dataPackage[currenttype][key];
                    Package_DetailClose();
                    Package_ListRender(dataPackage, "Package_List");
                    Package_ListEvent();
                } else $('#textShowMessage').html(result);
            }
        );
    }
            //#endregion




</script>


