@page
@model MLunarCoffee.Pages.WareHouse.Lock.LockEdit
@{
    Layout=null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="row">
    <div class="col-12">
        <div class="card" id="WareLock_MainList">
            <div class="card-header pb-0">
                <div class="d-lg-flex">
                    <div class="w-50 col-auto my-auto">
                        <div class="h-100">
                            <h6 id="LockWareName" class="fw-bold text-md text-dark mb-0"></h6>
                            <div>
                                <span id="LockWareCode" class=" d-inline-flex badge bg-gradient-success"></span>
                                <span id="Date_To" class=" text-md text-dark"></span>
                            </div>
                        </div>
                    </div>
                    <div class="ms-auto my-auto mt-1">
                        <button class="btn btn-dark btn-sm mt-1" onclick="event.preventDefault();return LockWare_Excel()">@Local["Xuất"]</button>
                        <button class="btn btn-dark btn-sm mt-1" onclick="event.preventDefault();return LockWare_Print()">@Local["In"]</button>
                    </div>
                </div>
            </div>
            <div class="card-body pt-2 ">
                <div class="m-0 my-3 mobile-responsive">
                    <div id="loaderList" class="waitingdiv text-center" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                    <table class="table vt-table mb-0" id="dtContent_WHLock">
                        <thead class="hiddenCollapse">
                            <tr>
                                <th colspan="4" class="fixed-side">
                                    <div class="input-group flex-nowrap" id="divSearchLockWare">
                                        <div class="input-group-text input-group-text px-2">
                                            <i class="fas fa-search" aria-hidden="true"></i>
                                            <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                        </div>
                                        <input id="txtlockWare_Filter" type="text" class="form-control" placeholder="eg .@Local["Lọc dữ liệu"]">
                                        <div class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></div>
                                    </div>
                                </th>
                                <th rowspan="2" style="width: 120px;">@Local["Đầu kỳ"]</th>
                                <th colspan="2">@Local["Số lượng nhập"]</th>
                                <th colspan="4">@Local["Số lượng xuất"]</th>
                                <th colspan="4">@Local["Tồn kho"]</th>
                            </tr>
                            <tr role="row">
                                <th style="min-width: 15px;" class="fixed-side">@Local["#"]</th>
                                <th style="width: 100px;" class="fixed-side">@Local["Mã sản phẩm"]</th>
                                <th style="min-width: 200px; max-width: 200px" class="fixed-side">@Local["Tên sản phẩm"]</th>
                                <th style="max-width: 150px" class="fixed-side">@Local["Đơn vị"]</th>
                                <th>@Local["Nhập"]</th>
                                <th>@Local["Chuyển"]</th>
                                <th>@Local["Xuất"]</th>
                                <th>@Local["Chuyển"]</th>
                                <th>@Local["Điều trị"]</th>
                                <th>@Local["Bán"]</th>
                                <th>@Local["Số lượng dự tính"]</th>
                                <th>@Local["Số lượng chênh lệch"]</th>
                                <th style="min-width: 110px; max-width: 200px">@Local["Số lượng tồn"]</th>
                                <th>@Local["Đơn giá"]</th>
                                <th class="checked_warelock" style="text-align: center;">
                                    <div class="form-check">
                                        <input id="checkedCompleteall" class="form-check-input pr-2 " type="checkbox">
                                        <label class="mt-1 custom-control-label">@Local["Kiểm tra"]</label>
                                    </div>
                                </th>
                            </tr>
                        </thead>
                        <tbody id="dtContent_WHLockBody">
                        </tbody>
                    </table>
                </div>

            </div>

            <div class="card-footer fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="messageErrorLock"></div>
                    <div class="action_Save-Content">
                        <button style="display: none;" id="btnWareLock_Delete" type="button" class="btn bg-gradient-danger mt-2 me-2" onclick="event.preventDefault();return WareLock_Delete()">@Local["Xóa"]</button>
                        <button class="btn btn-secondary" onclick="event.preventDefault();return LockWare_Cancel()">@Local["Đóng"]</button>
                        <button style="display: none;" id="btnWareLock_Save" type="button" class="btn bg-gradient-primary mt-2 me-2"  onclick="event.preventDefault();return WareLock_Save()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col-12">
                <div class="card" id="WareFormLock_Card" style="display:none;">
                    <div id="WareFormLock_CardContent">

                    </div>
                    <div class="card-footer fixed-botombutton">
                        <div class="action_Save">
                            <div class="action_Save-Content">
                                <button id="btnWareHouse_Cancel" class="btn btn-secondary" onclick="WareLock_CloseCard()">@Local["Đóng"]</button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>




<script type="text/javascript">
    let ser_ViewOnly = "@Model._ViewOnly";
    let ser_LockID = "@Model._LockID";
    let data_lock = {};
    var data_TimerOnchange;
    let wareCode = '';
    $(document).ready(function () {
       WareHouse_Lock_LoadInitialize(ser_LockID);
       WareGeneralM_Event();
    });
    function WareGeneralM_Event () {

        $('#txtlockWare_Filter').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#divSearchLockWare .fa-search").hide();
            $("#divSearchLockWare .spinner-border").show();
            clearTimeout(data_TimerOnchange);
            data_TimerOnchange = setTimeout(function (e) {
                OnLockWare_Filter();
            }, 500);
        });
        $("#divSearchLockWare").on('click', '.btn_clear', function (e) {
            $('#txtlockWare_Filter').val('');
            $(".btn_clear").addClass('opacity-1');
            $('#dtContent_WHLock .productrow').show();
            ColorSearchFilterText('', "seachRow");
        });

    }


    //#region // Load And Render
    function WareHouse_Lock_LoadInitialize(id) {
        AjaxLoad(url = "/WareHouse/Lock/LockEdit/?handler=Initialize"
            , data = { 'LockID': id }, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data != undefined && data.length == 1) {
                        let item = data[0];
                        $("#LockWareName").html(item.WareName);
                        $("#LockWareCode").html(item.Code);
                        wareCode = item.Code;
                        $("#Date_To").html(GetDateTime_String_DMYHM(item.DateLock));
                        WareHouseLock_LoadData(item.NextID);
                    }
                    else {
                        $('#btnWareLock_Delete').remove();
                        $('#btnWareLock_Save').remove();
                        WareHouse_Lock_Diabled()
                    }
                }
            }
        );
    }

    function WareHouseLock_LoadData (NextID) {
        AjaxLoad(url = "/WareHouse/Lock/LockEdit/?handler=LoadData"
            , data = {'LockID': ser_LockID}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    data_lock = {};
                    if (data != undefined && data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            data_lock[item.ProductID] = item;
                        }
                        fnRenderBlock(data_lock, "dtContent_WHLockBody"
                            , blocknum = 100
                            , fnrender = WareHouseLock_Render
                            , fnsuccess = function () {}
                        );
                        $('#btnWareLock_Save').prop("disabled", false);
                        if (NextID != 0) {
                            $('#btnWareLock_Delete').remove();
                            $('#btnWareLock_Save').remove();
                            WareHouse_Lock_Diabled()
                        }
                        if (Number(ser_ViewOnly) == 0) {
                            $('#btnWareLock_Delete').show();
                            $('#btnWareLock_Save').show();
                        } else {
                            WareHouse_Lock_Diabled()
                        }
                    }
                }
            },
            before = function () {
                $("#dtContent_WHLock").hide();
                $("#loaderList").show();
            },
            complete = function (e) {
                $("#dtContent_WHLock").show();
                $("#loaderList").hide();
            }
        );
    }

    function WareHouse_Lock_Diabled () {
        $("#checkedCompleteall").prop('disabled', true);
        $('.checkedComplete').each(function () {
            $(this).prop('disabled', true);
        });
        $('.numberLeft').prop("readonly", true);
    }

    async function WareHouseLock_Render(data, id) {
        return new Promise((resolve) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                if (data && data.length > 0) {
                    for ([key, value] of Object.entries(data)) {
                        let item = value;
                        let tr =
                            '<td class="vt-number-order"></td>'
                            + '<td><a data-name="' + item.ProductName + '" data-id="' + item.ProductID + '"class="buttonDetailClass fw-bold cursor-pointer">' + item.ProductCode + '</a></td>'
                            + '<td>' + item.ProductName + '</td>'
                            + '<td>' + item.UnitName + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Norm * 100) / 100)  + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Import * 100) / 100)  + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Import_Transfer * 100) / 100)   + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Export * 100) / 100)   + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Export_Transfer * 100) / 100) + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Export_Treat * 100) / 100) + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Export_Sale * 100) / 100) + '</td>'
                            + '<td class="fixwidth">' + formatNumber(Math.round(item.Num_LeftTemp * 100) / 100)   + '</td>'
                            + '<td>' + AddCell_NumDifference(item.ProductID, item.Num_Left - item.Num_LeftTemp) + '</td>'
                            + '<td>' + AddCell_NumberLeft(item.ProductID, Math.round(item.Num_Left * 100) / 100) + '</td>'
                            + '<td>' + formatNumber(Math.round(item.Amount * 100) / 100) + '</td>'
                            + '<td>'
                            + '<div class="d-flex justify-content-center align-items-center checked_warelock">'
                            + AddCell_CheckComplete(item.ProductID, item.IsComplete)
                            + '</div>'
                            + '</td>'
                        tr = '<tr id="product_' + item.ProductID + '" class="vt-number productrow">' + tr + '</tr>';
                        myNode.insertAdjacentHTML('beforeend', tr)
                    }
                }
            }
            WareHouseLock_Fill(data_lock)
            WareHouseLock_EventItem();
        })
    }
    function AddCell_NumDifference(randomNumber, value) {
        let resulf = '<input name="numberFloat" class="form-control numberDiff" id="numberDiff_' + randomNumber + '" type="number" value="' + value + '" />'
            + '<span id="numDiffExportExcel_' + randomNumber + '" style="display:none !important;" class="show_excel"></span>';
        return resulf;
    }
    function AddCell_NumberLeft(randomNumber, value) {
        let resulf = '<input name="numberFloat" class="form-control numberLeft" id="numberLeft_' + randomNumber + '" min="0" type="number" value="' + value + '" />'
            + '<span id="numExportExcel_' + randomNumber + '" style="display:none !important;" class="show_excel"></span>';
        return resulf;
    }
    function AddCell_CheckComplete (randomNumber, value) {
        let resulf = '<div class="form-check">'
            + '<input class="form-check-input pr-2 checkedComplete " ' + ((value == 1) ? ('checked') : ('')) + ' id="checkedComplete_' + randomNumber + '" type="checkbox" value="' + randomNumber + '">'
            + '<label class="custom-control-label"></label>'
            + '</div>'
            + '<span id="isCompleteExportExcel_' + randomNumber + '" style="display:none !important;"  class="show_excel"></span>'
            ;
        return resulf;
    }
    function WareHouseLock_Fill(data) {
        for ([key, value] of Object.entries(data)) {
            if ($("#numberLeft_" + key).length != 0) {
                $('#numberLeft_' + key).val(value.Num_Left);
                $('#numExportExcel_' + key).html(value.Num_Left);
            }
            if ($("#numberDiff_" + key).length != 0) {
                $('#numberDiff_' + key).val(value.Num_Left - value.Num_LeftTemp);
                $('#numDiffExportExcel_' + key).html(value.Num_Left - value.Num_LeftTemp);
            }
            if ($("#checkedComplete_" + key).length != 0) {
                $('#checkedComplete_' + key)[0].checked = (value.IsComplete == 1) ? true : false;
                $('#isCompleteExportExcel_' + key).html((value.IsComplete == 1) ? "X" : "");
            }

        }
    }
    function WareHouseLock_EventItem() {
        $(".numberLeft").unbind().change(function () {
            let id = this.id.replace("numberLeft_", "")
            let numLeft = (this.value) == "" ? "0" : this.value;
            data_lock[id].Num_Left = numLeft;
            data_lock[id].Num_Diff = parseInt(numLeft) - parseInt(data_lock[id].Num_LeftTemp);
            $('#numExportExcel_' + id).html(data_lock[id].Num_Left);
            $('#numDiffExportExcel_' + id).html(data_lock[id].Num_Diff);
            $('#numberLeft_' + id).val(data_lock[id].Num_Left);
            $('#numberDiff_' + id).val(data_lock[id].Num_Diff);
        });
        $(".numberDiff").unbind().change(function () {
            let id = this.id.replace("numberDiff_", "")
            let numDifference = (this.value) == "" ? 0 : parseInt(this.value);
            data_lock[id].Num_Left = data_lock[id].Num_LeftTemp + numDifference;
            data_lock[id].Num_Diff = numDifference;
            $('#numDiffExportExcel_' + id).html(data_lock[id].Num_Diff);
            $('#numExportExcel_' + id).html(data_lock[id].Num_Left);
            $('#numberLeft_' + id).val(data_lock[id].Num_Left);
            $('#numberDiff_' + id).val(data_lock[id].Num_Diff);
        });
        $("#checkedCompleteall").unbind().change(function () {
            if ($("#checkedCompleteall")[0].checked == true) {
                $(".checkedComplete").prop('checked', true);
                for ([key, value] of Object.entries(data_lock)) {
                    value.IsComplete = 1;
                }
            }
            else {
                $(".checkedComplete").prop('checked', false);
                for ([key, value] of Object.entries(data_lock)) {
                    value.IsComplete = 0;
                }
            }
        });

        $(".checkedComplete").unbind().change(function () {
            let id = this.id.replace("checkedComplete_", "")
            if ($("#checkedComplete_" + id)[0].checked == true) {
                data_lock[id].IsComplete = 1;
                $('#isCompleteExportExcel_' + id).html("X");

            }
            else {
                data_lock[id].IsComplete = 0;
                $('#isCompleteExportExcel_' + id).html("");
            }
        });
        $("#dtContent_WHLock .buttonDetailClass").unbind().click(function () {
            $("#WareFormLock_Card").show();
            $("#WareLock_MainList").hide();
            let ProductID = Number($(this).attr('data-id'));
            let Productname = $(this).attr('data-name');
            if (typeof WareStep_CardView !== 'undefined') WareStep_CardView(Productname);
            $("#WareFormLock_CardContent").load("/WareHouse/Ticket/Ticket?ver=" + Date.now() , function (responseTxt, statusTxt, xhr) {
                if (statusTxt == "success") {
                    WareLock_CardViewLoadEdit(Productname,ProductID, ser_LockID);
                }
            });
        });
    }
    //#endregion
    //#region // Main Event
    function WareLock_Save() {
        $('#messageErrorLock').html('');
        WareHouseLock_Validate();
        if ($('#messageErrorLock').html() == "") {
            let product = [];
            for ([key, value] of Object.entries(data_lock)) {
                product.push(value);
            }
            AjaxLoad(url = "/WareHouse/Lock/LockEdit/?handler=ExcuteData"
                , data = { 'data': JSON.stringify(product) , 'LockID': ser_LockID  }, async = true, error = null
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        if (typeof LockWare_Cancel === 'function') LockWare_Cancel();
                        if (typeof LockWare_Load === 'function') LockWare_Load(ser_LockID);
                        syslog_whr('u',result)
                    }
                    else {
                        notiError("@Local["Lần chốt kho này đã khóa"]");
                    }
                }
            );

        }
        return false;
    }
    function WareHouseLock_Validate() {
        let isError_ = 0;
        for ([key, value] of Object.entries(data_lock)) {
            if (isNaN(value.Num_Left) || value.Num_Left < 0) {
                $('#numberLeft_' + key).css('background-color', 'rgb(255 216 216)'); isError_ = 1;
            }
            else $('#numberLeft_' + key).css('background-color', 'white');

        }
        if (isError_ == 1) $('#messageErrorLock').html('@Local["Kiểm tra dữ liệu"]');
    }

    function WareLock_Delete() {
        const promise = notiConfirm();
        promise.then(function () { WareLock_Delete_Execute(ser_LockID); }, function () { });
    }

    function WareLock_Delete_Execute(id) {
        AjaxLoad(url = "/WareHouse/Lock/LockEdit/?handler=DeleteItem"
            , data = { 'id': id }, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    if (typeof LockWare_Cancel === 'function') LockWare_Cancel();
                    if (typeof LockWare_Load === 'function') LockWare_Load();
                    syslog_whr('d', result)
                }
                else {
                    notiError("@Local["Lần chốt kho này đã khóa"]");
                }
            }
        );

    }

    async function OnLockWare_Filter() {
        await OnLockWare_FilterAsync();
        return false;
    }

    function OnLockWare_FilterAsync() {
        return new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    let search = xoa_dau($('#txtlockWare_Filter').val().toLowerCase()).trim();
                    for ([key, value] of Object.entries(data_lock)) {
                        if (xoa_dau(value.ProductCode).toLowerCase().includes(search)
                            || xoa_dau(value.ProductName).toLowerCase().includes(search)) {
                            $('#product_' + key).show();
                        }
                        else {
                            $('#product_' + key).hide();
                        }
                    }
                    ColorSearchFilterText(search, "seachRow");
                    $("#divSearchLockWare .fa-search").show();
                    $("#divSearchLockWare .spinner-border").hide();
                    resolve()
                }
            )
        })
    }
    async function LockWare_Excel() {
        $("#Title_WHLock,.show_excel").show();
        $("#divSearchLockWare").hide();
        await exportToExcel("dtContent_WHLock", Outlang['So_luong_ton_kho']);
        syslog_whr('e', wareCode);
        $("#Title_WHLock,.show_excel").hide();
        $("#divSearchLockWare").show();
    }

    function LockWare_Print() {
        let elePrint = $("#dtContent_WHLock");
        if (elePrint && elePrint.length != 0) {
            $(elePrint).printThis({
                canvas: true,
                importCSS: true,
                importStyle: true,
                beforePrint: function () {
                    $(".numberLeft,.checked_warelock > .form-check").hide();
                    $("#Title_WHLock,.show_excel").show();
                    $("#divSearchLockWare").hide();
                    syslog_whr('p', wareCode);
                },
                afterPrint: function () {
                    $(".numberLeft,.checked_warelock > .form-check").show();
                    $("#Title_WHLock,.show_excel").hide();
                    $("#divSearchLockWare").show();
                }
            });
        }
    }

    //#endregion


    //#region // CardView

    function WareLock_CloseCard() {
        $("#WareLock_MainList").show();
        $("#WareFormLock_Card").hide();
    }

    //#endregion

</script>