@page
@model MLunarCoffee.Pages.WareHouse.Setting.WareHouseList
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="container-fluid py-0 px-0">
    <div class="row m-0  mt-sm-0 mt-2">
        <div class="col-12 px-0">
            <div class="card card-plain" id="setting_warehouse_list">
                <div class="vtcardheader card-header pb-0 pt-3">
                    <div class="left">
                        <h6 class="mb-0">@Local["Danh sách kho"]</h6>
                        <p class="text-sm mb-0">@Local["Kho không được trùng tên và chỉ xóa khi chưa có dữ liệu nào thuộc kho này"]</p>
                    </div>
                    <div class="right">
                        <button class="btn bg-gradient-primary btn-sm mt-1 _tab_control_" data-tab="add_tab_ware_house" onclick="return AddNewWareHouse();">@Local["Thêm mới"]</button>
                    </div>
                </div>
                <div class="card-body pt-2 ">
                    <div class="m-0 my-3 mobile-responsive">
                        <div id="waitingdiv_warehouse" class="waitingdiv text-center" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                        </div>
                        <table class="table vt-table mb-0" id="dtContentWareHouse">
                            <thead>
                                <tr>
                                    <th class="d-none">ID</th>
                                    <th style="width: 40px;min-width: 40px;">@Local["#"]</th>
                                    <th>@Local["Tên kho"]</th>
                                    <th>@Local["Mã lô hàng"]</th>
                                    <th>@Local["Phạm vi chi nhánh"]</th>
                                    <th>@Local["Xuất bán"]</th>
                                    <th>@Local["Xuất thuốc"]</th>
                                    <th>@Local["Xuất điều trị"]</th>
                                    <th style="width: 40px;min-width: 40px;">@Local["Xóa"]</th>
                                </tr>
                            </thead>
                            <tbody id="dtContentWareHouseBody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div id="setting_warehouse_detail" style="display:none;">
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    var data_branch_all = {};
    let DataUser;

    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User]
            , function (data) {
                DataUser = data[0];
                LoadWareHouseAjax();
            });

        $('#dtContentWareHouse tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            EditWareHouse(ID);
        });
        $('#dtContentWareHouse tbody').on('click', '.buttonDeleteClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DeleteWareHouseList(ID)
        });

    });

    function LoadWareHouseAjax() {
        AjaxLoad(url = "/WareHouse/Setting/WareHouseList/?handler=WareHouseLoadList"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    var data_WareHouse = data.Table1;
                    var data_branch = data.Table2;
                    data_branch_all = data_branch.reduce((pre, arr) =>{
                        if(arr.ID) pre[arr.ID] = arr;
                        return pre;
                    }, {});
                    RenderTableWareHouse(data_WareHouse, 'dtContentWareHouseBody');
                }
            }
            , sender = null
            , before = function () {
                $("#waitingdiv_warehouse").show();
            }
            , complete = function (e) {
                $("#waitingdiv_warehouse").hide();
            }
        );
    }

    function DeleteWareHouseList(id) {
        const promise = notiConfirm();
        promise.then(function () { ExecuteDeleteWarehouse(id); }, function () { });
    }

    function ExecuteDeleteWarehouse(id) {
        AjaxLoad(url = "/WareHouse/Setting/WareHouseList/?handler=DeleteItem"
            , data = { 'id': id }, async = false, error = null
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    LoadWareHouseAjax();
                    syslog_whr('d', result);
                } else {
                    notiError_SW();
                }
            }
        );
    }

    function AddNewWareHouse() {
        $("#setting_warehouse_detail").load("/WareHouse/Setting/WareHouseDetail?ver=" + versionofWebApplication);
        $('#setting_warehouse_detail').show();
        $("#setting_warehouse_list").hide();
        return false;
    }
    function EditWareHouse(CurrentID) {
        $("#setting_warehouse_detail").load("/WareHouse/Setting/WareHouseDetail?CurrentID=" + CurrentID + "&ver=" + versionofWebApplication);
        $('#setting_warehouse_detail').show();
        $("#setting_warehouse_list").hide();
        return false;
    }

    function CloseWareHouseDetail() {
        document.getElementById("setting_warehouse_detail").innerHTML = '';
        $("#setting_warehouse_list").show();
        $("#setting_warehouse_detail").hide();
    }

    function RenderTableWareHouse(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order"></td>'
                        + '<td>'
                        + '<a class="d-inline-block fw-bold buttonEditClass border-bottom border-primary">' + item.Code + '</a>'
                        + '<span class="d-block">' + item.Name + '</span>'
                        + '</td>'

                        + '<td class="text-center">'
                        + (Number(item.IsPackageNumber) == 1 ? '<i class="vtt-icon vttech-icon-check text-success"></i>' : "")
                        + '</td>'
                        + '<td>' + Render_Branch_Area(item.Branch_Area) + '</td>'
                        + '<td>' + Render_Branch_Sale_Treat(item.Branch_Sale) + '</td>'
                        + '<td>' + Render_Branch_Sale_Treat(item.Branch_Medicine) + '</td>'
                        + '<td>' + Render_Branch_Sale_Treat(item.Branch_Treat) + '</td>'
                        + '</td >'
                        + ((item.DeleteButton === 1)
                            ? ('<td class="text-center"><button class="buttonGrid _tab_control_" data-tab="delete_tab_ware_house" value="'
                                + item.ID
                                + '"><i  class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button></td>')
                            : '<td></td>')

                    tr = '<tr role="row" class="vt-number">' + tr + '</tr>';
                    myNode.insertAdjacentHTML('beforeend', tr);
                }
                ToolPopper();
            }
        }
        Checking_TabControl_Permission();
    }

    function Render_Branch_Sale_Treat(tokenBranch = '') {
        if(tokenBranch == undefined) return '';
        let result = '';
        let branchName = "";
        let arrBranch = tokenBranch.split(",")
        if (arrBranch != undefined && arrBranch.length != 0) {
            for (i = 0; i < arrBranch.length; i++) {
                if (arrBranch[i] != '') {
                    result = result + WareList_RenderFieldItem(arrBranch[i]);
                }

            }
        }
        return result;
    }
    function Render_Branch_Area(tokenBranch = '') {
        if(tokenBranch == undefined) return '';
        let result = '';
        if (tokenBranch == "," || tokenBranch == '') {
            result = '<div class="sale_auto mx-auto">'
                + '<span class="badge bg-success my-1 rounded-1">@Local["Tất cả chi nhánh"]</span>'
                + '</div>';
        }
        else {
            let arrBranch = tokenBranch.split(",")
            if (arrBranch != undefined && arrBranch.length != 0) {
                for (i = 0; i < arrBranch.length; i++) {
                    if (arrBranch[i] != '') {
                        result = result + WareList_RenderFieldItem(arrBranch[i])
                    }
                }
            }
        }
        return result;
    }

    function WareList_RenderFieldItem(branchid){
        try{
            let branchitem = data_branch_all[branchid]
            if (branchid == undefined || branchitem == undefined) return '';
            return `
                <div class="d-inline-block me-1" title="${branchitem.Code}" data-bs-toggle="tooltip" >
                        <span class="my-1 badge bg-dark rounded-1">${branchitem.Name}</span>
                </div>
            `
        }
        catch(ex){
            return '';
        }
    }


</script>
<script>js_require('/js/main.js');</script>