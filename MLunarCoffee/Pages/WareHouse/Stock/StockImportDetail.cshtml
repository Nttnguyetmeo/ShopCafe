@page
@model MLunarCoffee.Pages.WareHouse.Stock.StockImportDetailModel
@{
    Layout = null;
}
<script>js_require_notasync('/js/comon/initialize_setting.js', true);</script>
<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Nhập kho"]</h6>
                                <p class="text-sm mb-0">@Local["Nhập kho sử dụng tệp excel"]</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-body pt-2">
                    <div class="row">
                        <div class="col col-md-12 col-xl-5">
                            <div class="card card-plain border-1 border-dashed mt-3 rounded-2">
                                <div class="card-body d-flex flex-column justify-content-center text-center">
                                    <i class="fa fa-plus text-secondary mb-3" aria-hidden="true"></i>
                                    <h5 class=" text-secondary"> @Local["Tải tệp lên"] (.xlsx /.xls) </h5>
                                    <input type="file" placeholder="eg . @Local["Tải tệp lên"]" id="stockim_InputImport" onchange="event.preventDefault();return StockIm_HandleFile(event)" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" />
                                </div>
                            </div>
                            <div class="mt-2">
                                <p class="text-sm mb-0 text-danger fw-bold">@Local["Lưu ý"]: </p>
                                <p class="text-sm mb-0 text-secondary">@Local["Không chỉnh sửa mã nguyên vật liệu của tệp"].</p>
                                <p class="text-sm mb-0 text-secondary">@Local["Không chỉnh sửa tiêu đề cột của tệp"].</p>
                            </div>
                            <div class="d-flex mt-2">
                                <span class="text-sm text-dark pe-2">@Local["Lấy mẫu"]</span>
                                <i class="fas text-xs text-primary pt-1 pe-2 fa-download"></i>
                                <a href="#" onclick="event.preventDefault(); return StockIm_GetTemplate();" class="text-sm border-bottom m-0 me-3 border-primary">@Local["Mặc định"]</a>
                            </div>
                            <div class="bg-gray-100 card-header p-3 rounded-2 mt-3">
                                <div class="ps-0 pt-0 text-dark text-sm">
                                    <div class="field col-12 col-md-12 px-1 mt-0">
                                        <label>@Local["Kho"]</label>
                                        <div class="ui fluid search selection dropdown form-control" id="stockim_WareID" onchange="StockIm_UpdateLastLock()">
                                            <input type="hidden" name="ware" />
                                            <i class="dropdown icon"></i>
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .@Local["Kho"]</div>
                                            <div id="cbbstockim_WareID" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 col-md-12 px-1 mt-2">
                                        <label>@Local["Ngày chốt gần nhất"]</label>
                                        <input id="stockim_LockDate" readonly="readonly" disabled="disabled" class="form-control">
                                    </div>
                                    <div class="row px-2">
                                        <div class="field col-12 col-sm-12 col-md-6 mt-2 px-2">
                                            <label>@Local["Tổng tiền"]</label>
                                            <input id="stockim_TotalAmount" readonly="readonly" class="form-control" disabled="disabled">
                                        </div>
                                        <div class="field col-12 col-sm-12 col-md-6 mt-2 px-2">
                                            <label>@Local["Nhà cung cấp"]</label>
                                            <div class="ui fluid search selection dropdown form-control" id="stockim_SupplierID">
                                                <input type="hidden" name="ware" />
                                                <i class="dropdown icon"></i>
                                                <input class="search" autocomplete="off" tabindex="0" />
                                                <div class="default text">eg .@Local["Nhà cung cấp"]</div>
                                                <div id="cbbstockim_SupplierID" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="field col-12 col-md-12 px-1 mt-2 ">
                                        <label>@Local["Ngày thao tác"]</label>
                                        <input id="stockim_DateExecute" class="flatpickr detail form-control" type="text" placeholder="eg .@Local["Ngày thao tác"]" />
                                    </div>
                                    <div class="row px-2">
                                        <div class="field col-12 col-sm-12 col-md-6 mt-2 px-2">
                                            <label>@Local["Số hóa đơn"]</label>
                                            <input id="stockim_NumInvoice" class="form-control" autocomplete="off">
                                        </div>
                                        <div class="field col-12 col-md-6 mt-2  px-2">
                                            <label>@Local["Số hợp đồng"]</label>
                                            <input id="stockim_NumContract" class="form-control" autocomplete="off">
                                        </div>
                                    </div>
                                    <div class="field col-12 col-md-12 px-1 mt-2 ">
                                        <label>@Local["Ghi chú"]</label>
                                        <textarea id="stockim_Note" name="content" rows="3" type="text" class="form-control"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-12 col-xl-7">
                            <div class="mt-3">
                                <div class="px-1">
                                    <h6 class="mb-0">@Local["Danh sách hàng"]</h6>
                                    <p class="text-sm mb-0">@Local["Chỉ lấy nguyên vật liệu trong tệp đúng mã nguyên vật liệu và số lượng khác 0"]</p>
                                </div>
                                <ul class="list-group mt-3" id="stockim_ProductList"></ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessageMaster"></div>
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault(); return WareHouse_Close()">@Local["Đóng"]</button>
                        <button form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault(); return StockIm_Execute()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>


    //#region // DECLARE & INIT

    let stockim_wareid = "@Model._WareID";
    var stockim_dataware = {};
    var stockim_datapro = {};
    var stockim_ispack = 0;
    var stockim_datatemplate = [];
    var stockim_colstemplate = {
        Code: {Validation: {Name: "empty", Value: ""}, ReplaceNull: {isReplace: 0, ColName: "", Value: ""}},
        PackageNumber: {
            Validation: {Name: "empty", Value: ""}, ReplaceNull: { isReplace: 0, ColName: "", Value: ""}},
        DateExpiration: {
                Validation: { Name: "regExp", Value: /^([0]?[1-9]|[1|2][0-9]|[3][0|1])[-]([0]?[1-9]|[1][0-2])[-]([0-9]{4}|[0-9]{2})$/},
                ReplaceNull: { isReplace: 1, ColName: "", Value: "01-01-1900" }
        },
        CostPrice: { Validation: { Name: "regExp", Value: /^\d+$/ }, ReplaceNull: { isReplace: 1, ColName: "", Value: "0" } },
        Quantity: { Validation: { Name: "regExp", Value: /^\d+$/ }, ReplaceNull: { isReplace: 1, ColName: "", Value: "0" } },
        Discounted: { Validation: { Name: "regExp", Value: /^\d+$/ }, ReplaceNull: { isReplace: 1, ColName: "", Value: "0" } },
        Note: {Validation: {Name: "", Value: ""}, ReplaceNull: { isReplace: 0, ColName: "", Value: "" }}
    };
    var stockim_dataimport = {};
    var stockim_dataprounit = [];
    var stockim_flagchange = 0;

    $(document).ready(function(){
        StockIm_Init();
    })

    function StockIm_Init(){
        AjaxLoad(url = "/WareHouse/Stock/StockImportDetail/?handler=Initialize"
            , data = { }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    let data_product = data.Product;
                    let data_warehouse = (data.Warehouse);
                    let data_unit = data.Unit;
                    let data_supplier = data.Supplier;
                    stockim_dataprounit = data.UnitProduct;

                    Load_Combo(data_warehouse, "cbbstockim_WareID", true);
                    Load_Combo(data_supplier, "cbbstockim_SupplierID", true);
                    $("#stockim_WareID").dropdown("refresh");
                    $("#stockim_SupplierID").dropdown("refresh");
                    if(data_warehouse && data_warehouse.length != 0){
                        stockim_dataware = data_warehouse.reduce((pre, arr) => {
                            if(arr.ID) pre[arr.ID] = arr;
                            return pre;
                        }, {});
                        $("#stockim_WareID").dropdown("refresh");
                        $("#stockim_WareID").dropdown("set selected", stockim_wareid);
                    }

                    StockIm_GeneralDataImport(data_product);

                }
            }
        );

    }

    //#endregion

    //#region // GENERAL DATA IMPORT

    function StockIm_GeneralDataImport(datapro){
        if(datapro && datapro.length != 0){
            for(let i = 0; i < datapro.length ; i++){
                let item = datapro[i];
                let proitem = {};
                proitem.STT = i + 1;
                proitem.Code = item.Code;
                proitem.PackageNumber = '';
                proitem.DateExpiration = '1900-01-01';
                proitem.Name = item.Name;
                proitem.CostPrice = item.Cost_Price;
                proitem.Quantity = 0;
                proitem.Discounted = 0;
                proitem.Note = '';
                stockim_datatemplate.push(proitem);
                stockim_datapro[(item.Code).toLowerCase()] = item;
            }
        }
    }

    //#endregion

    //#region // FILE IMPORT

    function StockIm_HandleFile(e)  {
        $("#stockim_WareID").addClass('disabled');
        if (e.target.files.length > 0) {
            if(stockim_ispack == 1){
                stockim_colstemplate.PackageNumber.Validation.Name = 'empty';
            }
            else{
                stockim_colstemplate.PackageNumber.Validation.Name = '';
            }
            handleFileImport(e, stockim_colstemplate, fnfinish = StockIm_HandleFile_Finish, 5000);
        }
        e.target.files = null;
        StockIm_UpdateInfo();
    }

    function StockIm_HandleFile_Finish(data){
        stockim_dataimport = {};
        if (data.result == "success") {
            let datas = [];
            let _dataImport = data.data;
            if (_dataImport && Object.entries(_dataImport).length != 0) {
                for([key, value] of Object.entries(_dataImport)){
                    if(value.Quantity && value.Quantity > 0 && (stockim_ispack ==0 || (stockim_ispack == 1 && value.PackageNumber && value.PackageNumber != ''))){
                        if (value.PackageNumber == undefined) value.PackageNumber = "";
                        if (value.DateExpiration != undefined && value.DateExpiration != "") {
                            let dateExp = value.DateExpiration.split("/").reverse().join("-");
                            value.DateExpiration = dateExp != '' ? dateExp: '1900-01-01' ;
                        }
                        else{
                            value.DateExpiration = '1900-01-01'
                        }
                        value.DateExpiration = StockIm_IsValidDate(new Date(value.DateExpiration)) ? value.DateExpiration : '1900-01-01';
                        if(stockim_datapro[(value.Code).toLowerCase()] != undefined){
                            let itemPro = stockim_datapro[(value.Code).toLowerCase()];
                            value.Name = itemPro.Name;
                            value.ProductID = itemPro.ID;
                            value.UnitID = itemPro.UnitID;
                            value.UnitName = itemPro.UnitName;
                            value.Amount = StockIm_GetTotalAmount(value);
                        }
                        if(value.ProductID != undefined) stockim_dataimport[value.ProductID] = value;
                    }
                }
            }
            if(stockim_dataimport){
                StockIm_Render(stockim_dataimport, 'stockim_ProductList')
            }
            else{
                notiWarning("@Local["Không có mặt hàng nhập kho"]")
            }
        }
    }

    //#endregion 

    //#region // HANDLE CHANGE

    function StockIm_UpdateLastLock() {
        let lastestLock = '';
        let _wareid = Number($('#stockim_WareID').dropdown('get value'));

        let dataWare = stockim_dataware[_wareid];
        if (dataWare != undefined && dataWare.LastetLock != "01-01-1900 00:00"){
            lastestLock = dataWare.LastetLock;
        }
        
        if (dataWare != undefined && dataWare.IsPackageNumber == 1) stockim_ispack = 1;
        else stockim_ispack = 0;
        $("#stockim_LockDate").val(lastestLock);
        $("#stockim_DateExecute").flatpickr({
            dateFormat: 'd-m-Y H:i:s',
            enableTime: true,
            time_24hr: true,
            minDate: lastestLock,
            maxDate: new Date(),
            defaultDate: new Date()
        });

    }

    //#endregion

    //#region // EXPORT TEMPLATE

     function StockIm_GetTemplate () {
        if (stockim_datatemplate != undefined && stockim_datatemplate.length != 0) {
            let worksheet = XLSX.utils.json_to_sheet(stockim_datatemplate);
            var workbook = XLSX.utils.book_new()
            XLSX.utils.book_append_sheet(workbook, worksheet, 'sheet1')
            const max_width = stockim_datatemplate.map(e => { wch: e.length });
            worksheet["!cols"] = max_width;
            XLSX.writeFile(workbook, 'Template_Import_Product.xls');
        }
    }

    //#endregion 

    //#region // EXECUTE

    function StockIm_Execute(){
        let obj = new Object();
        obj.IsPackageNumber = stockim_ispack;
        obj.SupplierID = Number($('#stockim_SupplierID').dropdown('get value')) ? Number($('#stockim_SupplierID').dropdown('get value')) : 0;
        obj.DateExecute = $('#stockim_DateExecute').val() ? $('#stockim_DateExecute').val() : "";
        obj.NumberContract = $("#stockim_NumContract").val() ?  $("#stockim_NumContract").val() : "";
        obj.NumberInvoice = $("#stockim_NumInvoice").val() ? $("#stockim_NumInvoice").val() : "";
        obj.Note = $("#stockim_Note").val() ? $("#stockim_Note").val() : "";
        let wareid = Number($('#stockim_WareID').dropdown('get value')) ? Number($('#stockim_WareID').dropdown('get value')) : 0;
        $("#textShowMessageMaster").html('');
        let error = StockIm_CheckQuantity();
        if(!error) return;
        if(stockim_dataimport && Object.entries(stockim_dataimport).length == 0) {
            notiWarning("@Local["Không có mặt hàng nhập kho"]");
            return ;
        }
        if(wareid == 0) {
            $('#stockim_WareID').closest('.field').addClass('error');
            $("#textShowMessageMaster").html('@Local["Chưa chọn kho cần nhập"]');
            return
        }
        else {
            $('#stockim_WareID').closest('.field').removeClass('error');
        }
        
        if(obj.SupplierID == 0){
            $("#textShowMessageMaster").html('@Local["Chưa chọn nhà cung cấp"]');
            $("#stockim_SupplierID").closest('.field').addClass('error');
            return;
        }
        else $('#stockim_SupplierID').closest('.field').removeClass('error');

        AjaxLoad(url = "/WareHouse/Stock/StockImportDetail/?handler=ExcuteData"
            , data = {
                "data" : JSON.stringify(obj),
                "dataDetail" : JSON.stringify(Object.values(stockim_dataimport)) ,
                "wareid" : wareid
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data && data.length != 0) {
                        let IDComplete = Number(data[0].RESULT);
                        let Code = data[0].CODE;
                        if (IDComplete != 0) {
                            notiSuccess();
                            StockList_Load(0, 0, 0)
                            syslog_whr('i', Code);
                             if (typeof StockStatusMin_Load === 'function') StockStatusMin_Load();
                            WareHouse_Close();
                        }
                        else {
                            notiError("@Local["Ngày xử lý phải lớn hơn ngày chốt kho gần nhất"]");
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
                else {
                    notiError("@Local["Ngày xử lý phải lớn hơn ngày chốt kho gần nhất"]");
                }
            }
        );

    }

    //#endregion

    //#region // CHECK DATA PRODUCT
    
    function StockIm_CheckQuantity(){
        try{
            if(stockim_dataimport == undefined || Object.entries(stockim_dataimport).length == 0) return false;
            let isError = 0;

            for([key, value] of  Object.entries(stockim_dataimport)){

                if(value.Quantity == undefined || isNaN(value.Quantity) || Number(value.Quantity) <= 0 ){
                    isError = 1;
                    $("#textShowMessageMaster").html('@Local["Kiểm tra dữ liệu"]');
                    $("#stockim_pro_quantity_" + key).parent('.field').addClass("error");
                }
                else{
                    $("#stockim_pro_quantity_" + key).parent('.field').removeClass("error")
                }
            }

            return (isError == 0);
        }

        catch(ex){
            return false;
        }
       
    }

    //#endregion


    //#region // RENDER DATA


    function StockIm_Render(data, id){
        stockim_flagchange = 0;
        for([key, value] of Object.entries(data)){
            StockIm_RenderRow(key, value, id);
        }
        StockIm_UpdateInfo();
        stockim_flagchange = 1;
    }

    async function StockIm_RenderRow(key, value, id) {
        return new Promise((resolve, reject) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let tr =
                        '<li id=stockim_row_' + key + ' data-id="' + key + '" class=" row row-add border-dashed border-1 position-relative border-secondary border-radius-lg pb-3  border-0 d-flex justify-content-between ps-0 mb-1 border-radius-lg ">'
                        + (' <i data-id="' + key + '" class="opacity-2 position-absolute buttonDeleteClass cursor-pointer text-gradient text-danger vtt-icon vttech-icon-delete" style="width: 40px;right: 6px;top:0;"></i> ')
                        + '<div class="row col-12 w-100 mx-0">'
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Nguyên vật liệu"]</label>'
                        + StockIm_RenderRow_Product(key, value)
                        + '</div>'
                        + '<div class="col-12 col-md-4 px-1 mt-2 field">'
                        + '<label>@Local["Số lượng"]</label>'
                        + '<input id="stockim_pro_quantity_' + key + '" value="0" type="text" class="stockim_pro_quantity fw-bold form-control d-block">'
                        + '</div>'
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Đơn vị"]</label>'
                        + StockIm_RenderRow_Unit(key)
                        + '</div>'
                        + StockIm_RenderRow_Package(value)
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Đơn giá"]</label>'
                        + '<input id="stockim_pro_price_' + key + '" value="0" type="text" class="stockim_pro_price fw-bold form-control d-block">'
                        + '</div>'
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Giảm giá"]</label>'
                        + '<input id="stockim_pro_discounted_' + key + '" value="0" type="text" class="stockim_pro_discounted fw-bold form-control d-block">'
                        + '</div>' 
                        + '<div class="col-12 col-md-4 px-1 mt-2">'
                        + '<label>@Local["Thành tiền"]</label>'
                        + '<input id="stockim_pro_amount_' + key + '" value="0" type="text" disabled="disabled" class="disabled fw-bold form-control d-block">'
                        + '</div>'
                        + '</div>'
                        + '</li>';
                    myNode.insertAdjacentHTML("beforeend", tr);
                }
                StockIm_FillData(key, value);
                StockIm_EventRow(key);
                resolve();
            }, 30)
        });
    }

    function StockIm_RenderRow_Product(key, value) {
        let name = stockim_dataimport[key] != undefined ? stockim_dataimport[key].Name : "";
        let code = stockim_dataimport[key] != undefined ? stockim_dataimport[key].Code : "";
        return `
            <div class="form-control bg-gray-100">
                <div class="mb-0 text-sm ellipsis_one_line ">
                    <span class="fw-bold text-primary text-uppercase">${code}</span>
                    <span> - </span>
                    <span class="text-dark">${name}</span>
                </div>
            </div>
                
        `
    }
    function StockIm_RenderRow_Package(value){
        return `
            ${(stockim_ispack == 1
                ? `<div class="text-dark text-sm ps-1 fst-italic"><span class="text-secondary">@Local["Số lô"]:</span>
                                <span class="fw-bold pe-2">${value.PackageNumber}</span>
                                        ${value.DateExpiration != '' ? "@Local["Ngày hết hạn"]: " + `<span class="fw-bold pe-2">${value.DateExpiration}</span>` : ""
                }
                            </div>`
                : ``)
            }

        `
    }

    function StockIm_RenderRow_Unit(key) {
        let result = '<div class="ui fluid search selection dropdown stockim_pro_unit form-control" id="stockim_pro_unit_' + key
            + '"><input type="hidden"/><input class="search" autocomplete="off" tabindex="0" /><div class="default text">eg .@Local["Đơn vị"]</div>'
            + '<div id="cbbstockim_pro_unit_' + key + '" class="menu" tabindex="-1">';
        result = result + '</div></div>';
        return result;
    }

    async function StockIm_FillData(key, value) {
        return new Promise((resolve, reject) => {

            Load_Combo(StockIm_FillData_ProductUnit(value), "cbbstockim_pro_unit_" + key, true);
            $("#stockim_pro_unit_" + key).dropdown("refresh");
            $("#stockim_pro_unit_" + key).dropdown("set selected", value.UnitID);

            $("#stockim_pro_quantity_" + key).val(formatNumber(value.Quantity));
            $("#stockim_pro_price_" + key).val(formatNumber(value.CostPrice));
            $("#stockim_pro_discounted_" + key).val(formatNumber(value.Discounted));
            $("#stockim_pro_amount_" + key).val(formatNumber(value.Amount));

            resolve();
        });
    };

    function StockIm_FillData_ProductUnit(value) {
        let _data = [];
        _data.push({ "ID": value.UnitID, "Name": value.UnitName });
        try{
            let unit = stockim_dataprounit.filter(word => word["ProductID"] == value.ProductID);
            if (unit != undefined && unit.length > 0) {
                for (let i = 0; i < unit.length; i++) {
                    _data.push({
                        "ID": unit[i].UnitChange,
                        "Name": unit[i].UnitChangeName
                            + '<a class="btn-link mb-0 ms-2 p-0 px-1 pe-2">'
                            + ' x' + unit[i].Number + ' '
                            + value.UnitName
                            + '</a>'
                    });
                }
            }
        }
        catch(ex){

        }
        return _data;
    }

    function StockIm_EventRow(key) {

        $("#stockim_ProductList #stockim_pro_quantity_" + key).divide();
        $("#stockim_ProductList #stockim_pro_price_" + key).divide();
        $("#stockim_ProductList #stockim_pro_discounted_" + key).divide();
        $('#stockim_ProductList #stockim_pro_unit_' + key + '.ui.dropdown').dropdown({
            allowCategorySelection: true,
            forceSelection: false,
            transition: "fade up"
        });

        $('#stockim_ProductList #stockim_row_' + key + ' .stockim_pro_unit').unbind('change').change(function () {
            if (stockim_flagchange == 0) return;
            let idUnit = this.id
            let id = idUnit.replace("stockim_pro_unit_", "")
            stockim_dataimport[id].UnitID = Number($('#' + idUnit).dropdown('get value')) ? Number($('#' + idUnit).dropdown('get value')) : 0;
        });

        $('#stockim_ProductList #stockim_row_' + key + ' .stockim_pro_quantity').unbind('change').change(function () {
            if (stockim_flagchange == 0) return;
            stockim_flagchange = 0;
            let id = this.id.replace("stockim_pro_quantity_", "");
            let value = Number($(this).val());
            if (isNaN(value) || value < 0) {
                $(this).val(0);
                value = 0;
            }
            stockim_dataimport[id].Quantity = value;
            StockIm_UpdateTotalAmount(id);
            stockim_flagchange = 1;
        });

        $('#stockim_ProductList #stockim_row_' + key + ' .stockim_pro_price').unbind('change').change(function () {
            if (stockim_flagchange == 0) return;
            stockim_flagchange = 0;
            let id = this.id.replace("stockim_pro_price_", "");
            let value = Number($(this).val());
            if (isNaN(value) || value < 0) {
                $(this).val(0);
                value = 0;
            }
            stockim_dataimport[id].CostPrice = value;
            StockIm_UpdateTotalAmount(id);
            stockim_flagchange = 1;
        }); 

        $('#stockim_ProductList #stockim_row_' + key + ' .stockim_pro_discounted').unbind('change').change(function () {
            if (stockim_flagchange == 0) return;
            stockim_flagchange = 0;
            let id = this.id.replace("stockim_pro_discounted_", "");
            let value = Number($(this).val());
            if (isNaN(value) || value < 0) {
                $(this).val(0);
                value = 0;
            }
            stockim_dataimport[id].Discounted = value;
            StockIm_UpdateTotalAmount(id);
            stockim_flagchange = 1;
        });

        $('#stockim_ProductList #stockim_row_' + key + ' .buttonDeleteClass').on('click', function (event) {
            let id = $(this).attr("data-id");
            delete stockim_dataimport[id];
            $('#stockim_row_' + id).remove();
            event.stopPropagation();
        });

    }

    //#endregion 

    //#region // UPDATE INFO

    function StockIm_UpdateTotalAmount(key){
        let item = stockim_dataimport[key];
        if(item != undefined){
           item.Amount = StockIm_GetTotalAmount(item);
        }
        stockim_flagchange = 0;
        StockIm_FillData(key, item);
        stockim_flagchange = 1;
        StockIm_UpdateInfo();
    }

    function StockIm_GetTotalAmount(item){
        try{
            let totalamount = Number(item.CostPrice) * Number(item.Quantity);
            return totalamount > 0 ? totalamount - Number(item.Discounted) : 0;
        }
        catch(ex){
            return 0;
        }
    }

    function StockIm_UpdateInfo(){
        let totalAmount = 0;
        for([key, value] of Object.entries(stockim_dataimport)){
            totalAmount += Number(value.Amount);
        }
        $("#stockim_TotalAmount").val(formatNumber(totalAmount));
    }


    //#endregion

    function StockIm_IsValidDate(d) {
        return d instanceof Date && !isNaN(d);
    }

</script>
<script>js_require('/js/comon/Import.js');</script>
<style>

    #stockim_InputImport {
        height: 100%;
        position: absolute;
        width: 100%;
        left: 0;
        cursor: pointer;
        opacity: 0;
    }

    #stockim_ProductList .buttonDeleteClass:hover {
        opacity: 1 !important;
        cursor: pointer;
    }

</style>