@page
@model MLunarCoffee.Pages.WareHouse.Stock.StockOutDetailModel
@{
    Layout = null;
}
<script>js_require_notasync('/js/comon/initialize_setting.js', true);</script>

<div class="row">
    <div id="StockOutMain" class="col-12 opacity-0">
        <div id="DetailImport" class="card mb-4">
            <div class="card-header pb-0">
                <div class="d-lg-flex">
                    <div class="col-auto my-auto">
                        <div class="h-100 ">
                            <h6 class="mb-0">@Local["Chi tiết phiếu xuất"]</h6>
                            <p class="text-sm mb-0">@Local["Ngày giờ xuất không được nhỏ hơn ngày giờ chốt kho gần nhất hoặc lớn hơn ngày giờ hiện tại"].</p>
                            <p class="text-sm mb-0">@Local["Số lượng tồn thay đổi theo kho và ngày xuất của kho"].</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-2">
                <div class="row px-2 form-3">
                    <div id="ProductSearchBox" class="col-12 col-xl-4 col-md-12 p-1 position-relative">
                        <div class="d-flex">
                            <div class="input-group flex-nowrap" id="wareSearch">
                                <div class="input-group-text input-group-text px-2">
                                    <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                                    <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                                </div>
                                <input id="searchingProduct" type="text" class="form-control" placeholder="eg .@Local["Lọc dữ liệu"]" autocomplete="off">
                            </div>
                        </div>
                        <div id="TableProduct" class="m-0 my-3 mobile-responsive" style="height:500px;overflow-x:auto;">
                            <div id="WaitingProduct" class="waitingdiv text-center position-absolute translate-middle-x start-50" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <table class="table vt-table mb-0" id="dtContentProduct">
                                <thead>
                                    <tr>
                                        <th class="d-none">ID</th>
                                        <th style="width:40px;">@Local["#"]</th>
                                        <th style="min-width:120px;">@Local["Sản phẩm"]</th>
                                    </tr>
                                </thead>
                                <tbody id="dtContentProductBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="PackageNumBox" class="col-12 col-xl-4 col-md-12 p-1 position-relative" style="display:none">
                        <div class="input-group flex-nowrap" id="">
                            <div class="input-group-text input-group-text px-2">
                                <i class="fa fa-barcode" aria-hidden="true"></i>
                            </div>
                            <input id="searchingPackageNumber" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm lô hàng"]" autocomplete="off" />
                            <span class="input-group-text px-3 p-0 cursor-pointer" onclick="return ItemDetail_SearchPackageNumber();">
                                <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                                <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                            </span>
                        </div>
                        <div class="border-0 p-4 mb-2 bg-gray-100 border-radius-md text-center mt-2" id="PackNumber_Empty">
                            @Local["Không có lô hàng"]
                        </div>
                        <ul id="PackageNumberList" class="list-group mt-2 overflow-auto">

                        </ul>
                    </div>
                    <div class="col-12 col-xl-6 col-md-12 p-1 flex-grow-1">
                        <div id="ProductItem" class="card border-1 border-dashed shadow-none rounded-2">
                            <div class="card-body pt-2">
                                <div class="row">
                                    <div class="d-none field col-12 col-md-12 col-sm-12 col-lg-12 px-1 mt-2">
                                        <input type="text" class="form-control disabled" id="PackageNumber" disabled="disabled" />
                                    </div>
                                    <div class="field col-12 col-md-12 col-sm-12 col-lg-12 px-1 mt-2">
                                        <label>@Local["Sản phẩm"]</label>
                                        <input type="text" class="form-control disabled" id="productDetail" data-productid="0" data-packageid="0" disabled="disabled" />
                                    </div>
                                    <div class="field col-12 col-md-12 col-sm-12 col-lg-6 px-1 mt-2">
                                        <label>@Local["Số lượng tồn"]</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control disabled" id="StockQuantity" disabled="disabled" />
                                            <span id="StockNameUnit" class="input-group-text"></span>
                                        </div>

                                    </div>
                                    <div class="field col-12 col-md-12 col-sm-12 col-lg-6 px-1 mt-2">
                                        <label >@Local["Ngày hết hạn"]</label>
                                        <input type="text" class="form-control disabled" id="ExpiredDay" disabled="disabled" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 col-md-12 col-lg-6 col-sm-12 px-1 mt-2 ">
                                        <label>@Local["Số lượng"]</label>
                                        <input id="numberProduct" class="form-control" type="number" name="numberProduct" placeholder="eg .@Local["Số lượng"]" onchange="event.preventDefault();return ItemDetail_UpdateAmount();" />
                                    </div>
                                    <div class="field col-12 col-md-12 col-lg-6 col-sm-12 px-1 mt-2">
                                        <label>@Local["Đơn vị"]</label>
                                        <div class="ui fluid search selection dropdown form-control" id="productUnit">
                                            <input type="hidden" />
                                            <i class="dropdown icon"></i>
                                            <div class="default text">eg .@Local["Đơn vị"]</div>
                                            <div id="cbbproductUnit" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 px-1 mt-2 col-md-6 col-lg-3">
                                        <label>@Local["Đơn giá"]</label>
                                        <input id="Pro_ItemAmount" class="form-control" type="text" onchange="event.preventDefault();return ItemDetail_UpdateAmount();" placeholder="eg .@Local["Đơn giá"]" />
                                    </div>
                                    <div class="field col-12 px-1 mt-2 col-md-6 col-lg-3">
                                        <label>@Local["Tổng tiền"]</label>
                                        <input id="Pro_IniAmount" class="form-control" type="text" readonly="readonly" disabled="disabled" />
                                    </div>
                                    <div class="field col-12 px-1 mt-2 col-md-12 col-lg-3">
                                        <label>@Local["Giảm giá"]</label>
                                        <div class="position-relative">
                                            <input id="Pro_Discount" class="border-right-0 form-control" placeholder="eg .@Local["Giảm giá"]" type="number" onchange="event.preventDefault();ItemDetail_OnChangeDiscount();">
                                            <div class="ui fluid search selection dropdown form-control position-absolute end-0 top-0 w-auto ps-2 pe-4 dropdown-money" id="DiscountAmount" onchange="return ItemDetail_OnChangeDiscount();">
                                                <input type="hidden" name="name" value="2">
                                                <i class="dropdown icon opacity-0"></i>
                                                <input class="search" autocomplete="off" tabindex="0"><div class="text">VND</div>
                                                <div id="cbbDiscountAmountPer" class="menu transition hidden" tabindex="-1">
                                                    <div class="item" data-value="1">%</div>
                                                    <div class="item" data-value="2">VND</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 px-1 mt-2 col-md-12 col-lg-3 ">
                                        <label>@Local["Thành tiền"]</label>
                                        <input id="Pro_DiscountedAmount" type="text" readonly="readonly" disabled="disabled" class="form-control" placeholder="eg .@Local["Thành tiền"]" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 mt-2 px-1 ">
                                        <label>@Local["Ghi chú"]</label>
                                        <textarea id="noteProduct" name="note" type="text" class="form-control" rows="3" placeholder="eg. @Local["Ghi chú"]"></textarea>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 mt-2 px-1">
                                        <div class="d-flex">
                                            <div class="d-flex ms-auto align-items-center">
                                                <div class="mt-1 me-1 text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                                                <button type="button" class="btn btn-sm bg-gradient-primary mt-2 me-0 mb-0" onclick="event.preventDefault();return ItemDetail_Save();">@Local["Thêm mới"]</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="DetailInfo" class="row">
            <div class="col-12 col-xl-4 col-md-5 mb-4">
                <div id="StockInfo" class="card ">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="my-auto flex-grow-1">
                                <div class="h-100 ">
                                    <h6 class="h6 mb-0">@Local["Chi tiết phiếu"]</h6>
                                </div>
                                <div>
                                    <div class="d-none">
                                        <span class="pt-2 text-sm">@Local["Chứng từ kho xuất"]</span>
                                        <span id="txtDetailCodeExport" class="text-sm ps-2 text-primary"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-2">
                        <div class="row px-2">
                            <div class="field col-12 col-md-12 px-1 mt-2">
                                <label class="title title_collapse" data-tab=""><span>@Local["Kho"]</span></label>
                                <div class="ui fluid search selection dropdown form-control" id="DetailWareID" onchange="WareDetail_UpdateLastLock()">
                                    <input type="hidden" name="ware" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Kho"]</div>
                                    <div id="cbbDetailWareID" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-md-12 px-1 mt-2">
                                <label>@Local["Ngày chốt gần nhất"]</label>
                                <input id="lock_date_detail" readonly="readonly" disabled="disabled" class="form-control">
                            </div>
                             <div class="field col-12 col-md-12 px-1 mt-2 ">
                               <div id="import_amount" class="field">
                                    <label>@Local["Tổng tiền"]</label>
                                    <input id="txtWare_Amount" readonly="readonly" class="form-control" disabled="disabled">
                                </div>

                            </div>
                        </div>
                        <div class="row px-2 form3">
                            <div class="field col-12 col-md-12 px-1 mt-2" id="DetailWare_WareReceiptDiv">
                                <label class="title title_collapse" data-tab=""><span>@Local["Kho nhận"]</span></label>
                                <div class="ui fluid search selection dropdown form-control" id="DetailWareID_To" onchange="WareToDetail_UpdateLastLock()">
                                    <input type="hidden" name="ware" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Kho nhận"]</div>
                                    <div id="cbbDetailWareID_To" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-md-12 px-1 mt-2">
                                <label>@Local["Ngày chốt gần nhất (kho nhận)"]</label>
                                <input id="lock_date_detail_To" readonly="readonly" disabled="disabled" class="form-control">
                            </div>
                            <div class="field col-12 col-md-12 px-1 mt-2 ">
                                <label>@Local["Lý do"]</label>
                                <div class="ui fluid search selection dropdown form-control" id="ReasonExport">
                                    <input type="hidden" name="" />
                                    <i class="dropdown icon"></i>
                                    <input class="search" autocomplete="off" tabindex="0" />
                                    <div class="default text">eg .@Local["Lý do"]</div>
                                    <div id="cbbReasonExport" class="menu" tabindex="-1">
                                    </div>
                                </div>
                            </div>
                            <div class="field col-12 col-md-12 px-1 mt-2 ">
                                <label>@Local["Ngày thao tác"]</label>
                                <input id="Detail_Date" class="flatpickr detail form-control" type="text" placeholder="eg .@Local["Ngày thao tác"]" />
                            </div>
                        </div>
                        <div class="row px-2">
                            <div class="field col-12 col-md-12 px-1 mt-2 ">
                                <label>@Local["Ghi chú"]</label>
                                <textarea id="txtWare_Content" name="content" rows="3" type="text" class="form-control"></textarea>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div id="StockProductList" class="col-12 col-xl-8 col-md-7 mb-4">
                <div class="card">
                    <div class="card-header pb-0">
                        <div class="d-lg-flex">
                            <div class="w-50 col-auto my-auto">
                                <div class="h-100 ">
                                    <h6 class="mb-0">@Local["Danh sách hàng"]</h6>
                                    <p id="headerStockReceipt" class="d-none text-sm mb-0 text-danger fw-bold">@Local["Xoá phiếu xuất kho này sẽ xoá phiếu nhập kho"] <span id="stockCodeReceiptHeader"></span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="TableStockProduct" class="card-body pt-2 px-4">
                        <div class="m-0 my-0 mobile-responsive h-100 pt-3">
                            <div id="" class="waitingdiv text-center" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <table class="table vt-table mb-0" id="#####">
                                <thead>
                                    <tr>
                                        <th class="d-none">ID</th>
                                        <th class="d-none">CusID</th>
                                        <th style="width:40px;">@Local["#"]</th>
                                        <th>@Local["Số lô"]</th>
                                        <th>@Local["Sản phẩm"]</th>
                                        <th>@Local["Số lượng"]</th>
                                        <th>@Local["Đơn vị"]</th>
                                        <th>@Local["Thành tiền"]</th>
                                        <th style="width:50px;" id="thRemoveProduct"></th>
                                    </tr>
                                </thead>
                                <tbody id="StockProductBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="fixed-botombutton mt-2">
            <div class="action_Save">
                <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessageMaster"></div>
                <div class="action_Save-Content">
                    <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();WareHouse_Close()">@Local["Đóng"]</button>
                    <button id="btnSaveDetail" style="display:none;" form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return WareHouse_SaveDetail()">@Local["Lưu"]</button>
                    <button id="btnDeleteDetail" style="display:none;" form="form3" type="button" class="btn bg-gradient-danger mt-2 me-2" onclick="return WareHouse_DeleteDetail()">@Local["Xóa"]</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    //#region Declare & Initialize

    let ser_DetailID = "@Model._DetailCurrentID";
    let ser_WareID = "@Model._WareID";
    var product_selected = {};
    var data_TimerOnchange;
    var data_product;
    let data_unit;
    var data_productunit;
    var data_packageNum = {};
    let EditButton = 1;
    var DataComboWare;
    var DataComboWareTransfer;
    let Flag_Ware = 0;
    let IsPackageNumber = 0;
    let stockTimer;
    let stockCodeExport = '';
    let stockCodeReceipt = '';
    let stockReceiptID = 0;

    $(document).ready(function () {
        WareDetail_Setting(ser_DetailID);
        WareDetail_Initialize(ser_DetailID);
        WareDetail_Event();
    });

    function WareDetail_Setting(currentid) {

        $("#ExpiredDay").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false
        });

        $("#Detail_Date").flatpickr({
            dateFormat: 'd-m-Y H:i:s',
            enableTime: true,
            time_24hr: true,
            maxDate: new Date(),
            defaultDate: new Date()
        });
        $('#txtWare_Amount').divide();
        WareDetail_CalculatorView();
        let HeightProductItem = $("#ProductItem").outerHeight() - 55;
        $("#TableProduct").height(HeightProductItem);
        $("#PackageNumberList").height(HeightProductItem);

        if (Number(currentid) != 0) {
            $('#btnPrintDetail').show();
        }
        ItemDetail_Refresh();
    }

    function WareDetail_CalculatorView(){
        let HeightListProduct = $("#StockInfo").outerHeight() - $("#StockProductList").find('.card-header').outerHeight();
        $("#TableStockProduct").height(HeightListProduct - 32);
    }

    function WareDetail_Initialize(id) {
        AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=Initialize"
            , data = { 'currentid': id }, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    data_product = data.Product;
                    data_productunit = data.UnitProduct;
                    data_unit = data.Unit;
                    fnRenderBlock(data_product, "dtContentProductBody"
                        , blocknum = 100
                        , fnrender = ItemDetail_RenderProductList
                        , fnsuccess = function () {
                        }
                        , fnbegin = function () {
                            $("#dtContentProductBody").empty();
                        }
                    );
                    DataComboWare = data.Warehouse;
                    DataComboWareTransfer = data.WarehouseTransfer;
                    Load_Combo(DataComboWare, "cbbDetailWareID", true);
                    Load_Combo(DataComboWareTransfer, "cbbDetailWareID_To", false);
                    Load_Combo(data.Reason, "cbbReasonExport", false);

                    if (DataComboWare && DataComboWare.length > 0) {
                        let wareID = ser_WareID != "0" ? ser_WareID : DataComboWare[0].ID
                        $("#DetailWareID").dropdown("refresh");
                        $("#DetailWareID").dropdown("set selected", wareID.toString());
                        //WareDetail_UpdateLastLock();
                    }
                    if (Number(id) != 0) {
                        WareDetail_RenderData(data.Info, data.Items);
                    }
                    else {
                        $("#DetailImport").css("display", "flex");
                        $('#btnSaveDetail').show()
                        $('#detail_Item').show();
                    };
                    $("#StockOutMain").removeClass("opacity-0");
                    Flag_Ware = 1;
                }
            }
        );

    }

    function WareDetail_Event() {

        $('#StockProductBody').on('click', '.buttonDeleteClass', function (e) {
            let idProduct = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            ItemDetail_DeleteRow(idProduct)
            e.preventDefault();
        });

        $("#dtContentProductBody").on("click", '.itemProduct', function (e) {
            e.preventDefault();
            let id = $(this).attr("data-id");
            let name = $(this).attr("data-name");
            $("#productDetail").attr("data-productid", id);
            $("#productDetail").val(name);
            $("#PackageNumber").val('');
            $("#ExpiredDay").val('');
            $("#DetailWareID").addClass("disabled");
            ItemDetail_DetectProduct();
            WareDetail_FocusEditProduct();
        });

        $("#PackageNumberList").on("click", '.rowPackageNumber', function (e) {
            let id = Number($(this).attr("data-id"));
            $("#DetailWareID").addClass("disabled");
            ItemDetail_ChoosePackage(id);
        });

        $('.input-group .remove.icon').on('click', function (e) {
            $(this).parent().siblings().val("");
            e.stopPropagation();
        });

        $('#searchingProduct').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            $("#wareSearch .fa-search").hide();
            $("#wareSearch .spinner-border").show();
            clearTimeout(data_TimerOnchange);
            data_TimerOnchange = setTimeout(function (e) {
                WareDetail_Search(xoa_dau($('#searchingProduct').val().toLowerCase()).trim());
            }, 500);
        });

        $('#searchingPackageNumber').keypress(function (e) {
            if (e.which == 13) {
                ItemDetail_SearchPackageNumber();
                return false;
            }
        });
        $("#searchingPackageNumber").on("keyup", function (e) {
            $("#DetailWareID").addClass("disabled");
            let val = $(this).val();
            if (val.length < 3) return;
            $("#PackageNumBox .fa-search").hide();
            $("#PackageNumBox .spinner-border").show();
            clearTimeout(stockTimer);
            stockTimer = setTimeout(function (e) {
                ItemDetail_SearchPackageNumber();
            }, 500);
        });

        $("#searchingPackageNumber").on("paste", function (e) {
            catchPaste(e, this, function (clipData) {
                ItemDetail_SearchPackageNumber(clipData);
            })
        });
    }


    function catchPaste(evt, elem, callback) {
        if (evt.originalEvent && evt.originalEvent.clipboardData) {
            callback(evt.originalEvent.clipboardData.getData('text'));
        } else if (evt.clipboardData) {
            callback(evt.clipboardData.getData('text/plain'));
        } else if (window.clipboardData) {
            callback(window.clipboardData.getData('Text'));
        } else {
            setTimeout(function () {
                callback(elem.value)
            }, 100);
        }
    }
    //#endregion


    //#region // EXECUTE

    function WareHouse_SaveDetail() {
        WareHouse_SaveBefore();
        var DateExecute = $('#Detail_Date').val() ? $('#Detail_Date').val() : "";
        let ware = Number($('#DetailWareID').dropdown('get value')) ? Number($('#DetailWareID').dropdown('get value')) : 0;
        let wareto = Number($('#DetailWareID_To').dropdown('get value')) ? Number($('#DetailWareID_To').dropdown('get value')) : 0;
        let reason = Number($('#ReasonExport').dropdown('get value')) ? Number($('#ReasonExport').dropdown('get value')) : 0;
        let note = $('#txtWare_Content').val() ? $('#txtWare_Content').val() : '';

        let dataObj = Object.values(product_selected);
        document.getElementById("textShowMessageMaster").innerHTML = "";
        let error = 0;
        if (dataObj == undefined || dataObj == null || dataObj.length == 0) {
            error = 1; $("#textShowMessageMaster").html('@Local["Kiểm tra dữ liệu"]');
        };
        if (ware == wareto || ware == 0) {
            if (ware == wareto) {
                error = 1;
                $('#DetailWareID').closest('.field').addClass('error');
                $('#DetailWareID_To').closest('.field').addClass('error');
                $("#textShowMessageMaster").html('@Local["Kho xuất và kho nhận không trùng nhau"]');
            }
            if (ware == 0) {
                error = 1;
                $('#DetailWareID').closest('.field').addClass('error');
                $("#textShowMessageMaster").html('@Local["Chưa chọn kho xuất"]');
            }
        }
        else {
            $('#DetailWareID').closest('.field').removeClass('error');
            $('#DetailWareID_To').closest('.field').removeClass('error');
        }
        if (error == 0) {
            let dataProduct = [];
            for ([key, value] of Object.entries(product_selected)) {
                let _e = {};
                _e.packageNumber = value.packageNumber ;
                _e.idProduct = value.idProduct;
                _e.number = ItemDetail_CheckStockQuantity(value.idPackage, value.idProduct, value.UnitCountID, value.Number, 1);
                dataProduct.push(_e);
            }
            AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=CheckQuantityRealTime"
                , data = {
                    'data': JSON.stringify(dataProduct)
                    , 'ware': ware
                    , 'DateExecute': DateExecute
                    , 'CurrentID': ser_DetailID
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        let dataResult = JSON.parse(result);
                        let dataNext = dataResult.Table;
                        let dataProductExist = dataResult.Table1;
                        if (dataNext && dataNext.length != 0 && dataNext[0].RESULT != 1) {
                            $("#textShowMessageMaster").html('@Local["Ngày xử lý phải lớn hơn ngày chốt kho gần nhất"]');
                        }
                        else {
                            if (WareHouse_StockQuantityError(dataProductExist) == 1) {
                                WareHouse_SaveDetail_Next(ser_DetailID, ware, wareto, reason, note, DateExecute, dataObj);
                            }
                            else {
                                $("#textShowMessageMaster").html('@Local["Số lượng xuất kho không lớn hơn số lượng tồn kho"]');
                            }
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
                , sender = $("#btnSaveDetail")
            );
        }
        else WareHouse_SaveComplete();        
    }

    function WareHouse_SaveDetail_Next(id, ware, wareto, reason, note, date, data) {
        AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=ExcuteData"
            , data = {
                'data': JSON.stringify(data)
                , 'ware': ware
                , 'wareto': wareto
                , 'reason': reason
                , 'note': note
                , 'DateExecute': date
                , 'CurrentID': id
                , 'IsPackageNumber': IsPackageNumber
            }, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let data = JSON.parse(result);
                    if (data && data.length != 0) {
                        let IDComplete = data[0].RESULT;
                        let Code = data[0].CODE;
                        if (IDComplete != 0) {
                            notiSuccess();
                            WareHouse_Close();
                            if (Number(id) == 0) StockList_Load(0, 0, 0);
                            else StockList_Load(0, Number(IDComplete), 0);
                            if (typeof StockStatusMin_Load !== 'undefined') StockStatusMin_Load();
                            syslog_whr((id != '0' ? 'u' : 'i'), Code);
                        }
                        else {
                            notiError('@Local["12412412"]Ngày xử lý phải lớn hơn ngày chốt kho gần nhất');
                        }
                    }

                }
                else {
                    notiError_SW();
                }
            }
            , sender = $("#btnSaveDetail")            
        );
    }
    function WareHouse_SaveBefore () {
        $("#btnSaveDetail").prop("disabled", true);
    }
    function WareHouse_SaveComplete () {
        $("#btnSaveDetail").prop("disabled", false);
    }
    //#endregion


    //#region // Master

    function WareDetail_FocusEditProduct() {
        $('#BodyMain').scrollTo($("#ProductItem").offset().top - 50);
        $("#ProductItem").addClass("border-active");
        setTimeout(function () {
            $("#ProductItem").removeClass("border-active");
        }, 2000)
    }

    function ItemDetail_SearchPackageNumber(text) {
        let packageNumber = "";
        if (text && text != "") {
            packageNumber = xoa_dau(text).trim();
        }
        else {
            packageNumber = $("#searchingPackageNumber").val() ? xoa_dau($("#searchingPackageNumber").val()).trim() : "";
        }
        let wareID = Number($('#DetailWareID').dropdown('get value')) ? Number($('#DetailWareID').dropdown('get value')) : 0;
        if (packageNumber != '') {
            AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=SearchPackNum"
                , data = {
                    'PackageNumber': packageNumber,
                    'WareID': wareID
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        $("#PackageNumberList").html('');
                        if (data.length != 0) {
                            $("#PackNumber_Empty").hide();
                            for (let i = 0; i < data.length; i++) {
                                let item = data[i];
                                item.QUANTITY = 0;
                                data_packageNum[item.PackageID] = item;
                            }
                            ItemDetail_RenderPackage(data, 'PackageNumberList');
                            if (data.length == 1) {
                                ItemDetail_ChoosePackage(data[0].PackageID);
                            }
                        }
                        else {
                            $("#PackNumber_Empty").show();
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
                ,sender = null
                ,before = function (e) {
                },
                complete = function (e) {
                    $("#PackageNumBox .fa-search").show();
                    $("#PackageNumBox .spinner-border").hide();
                }
            );
        }
    }

    function ItemDetail_ChoosePackage(PackageID) {
        if (PackageID && PackageID != 0 && data_packageNum[PackageID] != undefined) {
            let item = data_packageNum[PackageID];
            let productID = item.ProductID;
            let expiredDay = item.ExpiredDay;
            let packageNumber = item.PackageNumber;
            let dateExecute = $("#Detail_Date").val();
            let wareID = Number($('#DetailWareID').dropdown('get value')) ? Number($('#DetailWareID').dropdown('get value')) : 0;
            if (packageNumber != "" && wareID != 0 && dateExecute != "") {
                AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=LoadStockPackNumQuantity"
                    , data = {
                        'masterID': ser_DetailID,
                        'packageNumber': packageNumber,
                        'packageID': PackageID,
                        'wareID': wareID,
                        'dateExecute': dateExecute
                    }
                    , async = true, error = null
                    , success = function (result) {
                        if (result != "0") {
                            let data = JSON.parse(result);
                            if (data.length != 0) {
                                item.QUANTITY = data[0].QUANTITY;
                            }
                            else {
                                item.QUANTITY = 0;
                            }

                            let quantity = item.QUANTITY;
                            let dtProduct = data_product.filter((word) => Number(word["ID"] == productID));
                            let nameProduct = dtProduct.length != 0 ? dtProduct[0].Name : "";
                            $("#rowPackageNumber_" + PackageID).addClass("border-primary").siblings().removeClass("border-primary");
                            $("#productDetail").attr("data-productid", productID);
                            $("#productDetail").attr("data-packageid", PackageID);
                            $("#productDetail").val(nameProduct);
                            $("#PackageNumber").val(packageNumber);
                            $("#ExpiredDay").val(formatDateClient(expiredDay) != "01-01-1900" ? formatDateClient(expiredDay) : "");
                            $("#StockQuantity").val(formatNumber(quantity));
                            $("#StockNameUnit").html(dtProduct[0].UnitName);
                            ItemDetail_DetectUnit();
                        }
                        else {
                            notiError_SW();
                        }
                    }
                );
            }



        }
    }

    function WareDetail_Search(text) {
        var data;
        if (text == "") {
            data = data_product;
        }
        else {
            data = data_product.filter((word) => xoa_dau(word["Name"].toLowerCase()).includes(text)
                || xoa_dau(word["Code"].toLowerCase()).includes(text)
            );
        }
        fnRenderBlock(data, "dtContentProductBody"
            , blocknum = 100
            , fnrender = ItemDetail_RenderProductList
            , fnsuccess = function () {
                ColorSearchFilterText(text, "itemProduct");
            }
            , fnbegin = function () {
                $("#dtContentProductBody").empty();
            }
        );
        $("#wareSearch .fa-search").show();
        $("#wareSearch .spinner-border").hide();
    }

    function WareDetail_UpdateLastLock() {
        let WareIDChoose = Number($('#DetailWareID').dropdown('get value'));
        let dateWare = DataComboWare.filter(word => word["ID"] == WareIDChoose);
        let lastestLock = '';
        if (dateWare && dateWare.length > 0 && "01-01-1900 00:00" != dateWare[0].LastetLock) {
            lastestLock = dateWare[0].LastetLock;
        }
        else {
            lastestLock = '';
        }
        if (dateWare && dateWare.length > 0 && dateWare[0].IsPackageNumber == 1) {
            IsPackageNumber = 1;
            $("#PackageNumBox").show();
            $("#ProductSearchBox").hide();
        }
        else {
            IsPackageNumber = 0;
            $("#PackageNumBox").hide();
            $("#ProductSearchBox").show();
        }
        $("#lock_date_detail").val(lastestLock);

        $("#DetailWareID_To").dropdown("clear");
        let dataWareTran = DataComboWareTransfer.filter((word) => Number(word["ID"]) != WareIDChoose);
        Load_Combo(dataWareTran, "cbbDetailWareID_To", false);

        $("#Detail_Date").flatpickr({
            dateFormat: 'd-m-Y H:i:s',
            enableTime: true,
            time_24hr: true,
            minDate: lastestLock,
            maxDate: new Date(),
            defaultDate: new Date()
        });

    }

    function WareToDetail_UpdateLastLock() {
        let WareToIDChoose = Number($('#DetailWareID_To').dropdown('get value'));
        let dateWareTo = DataComboWare.filter(word => word["ID"] == WareToIDChoose);
        let lastestLockTo = '';
        if (dateWareTo && dateWareTo.length > 0 && "01-01-1900 00:00" != dateWareTo[0].LastetLock) {
            lastestLockTo = dateWareTo[0].LastetLock;
        }
        else {
            lastestLockTo = '';
        }
        $("#lock_date_detail_To").val(lastestLockTo);
    }

    function WareHouse_StockQuantityError(data) {
        let isNext = 1;
        if (data && data.length != 0) {
            for (let i = 0; i < data.length; i++) {
                let item = data[i];
                let _id = "row_" + item.ProductID;
                let _finalNum = Number(item.FinalNum) ? Number(item.FinalNum) : 0;
                if (_finalNum < 0) {
                    isNext = 0;
                    $("#" + _id).addClass("error")
                }
                else {
                    $("#" + _id).removeClass("error")
                }
            }
        }
        return isNext;
    }

    function WareHouse_PrintDetail() {

    }

    //#endregion


    //#region // DETAIL

    function WareDetail_RenderData(DataMaster, DataDetail) {
        if (DataMaster.length != 0) {
            stockCodeExport = DataMaster[0].CodeExport;
            stockCodeReceipt = DataMaster[0].CodeReceipt;
            stockReceiptID = DataMaster[0].ReceiptID;
            $('#txtDetailCodeExport').html(stockCodeExport);
            $('#txtDetailCodeExport').parent().removeClass('d-none');
            if(stockCodeReceipt != ''){
                $('#stockCodeReceiptHeader').html(stockCodeReceipt);
                $('#headerStockReceipt').removeClass("d-none");
            }
            $('#txtWare_Content').val((DataMaster[0].Content));
            $("#DetailWareID").dropdown("refresh");
            $("#DetailWareID").dropdown("set selected", DataMaster[0].WareID);
            $("#DetailWareID_To").dropdown("refresh");
            $("#DetailWareID_To").dropdown("set selected", DataMaster[0].WareToID);
            $('#DetailWareID_To').addClass("disabled");
            $("#ReasonExport").dropdown("refresh");
            $("#ReasonExport").dropdown("set selected", DataMaster[0].Reason);
            $('#Detail_Date').val(GetDateTime_String_DMYHMSS(DataMaster[0].DateExecute));

            let perlock = Number(DataMaster[0].PerLock);
            let perPassing = Number(DataMaster[0].PerPassing);
            let perdate = Number(DataMaster[0].PerDate);
            let peruser = Number(DataMaster[0].PerUser);
            let WareTo = Number(DataMaster[0].WareToID);

            if ((perPassing == 1 || (perdate == 1 && peruser == 1)) && perlock == 1) {
                EditButton = 1;
            } else EditButton = 0;

            if (WareTo != 0) {
                $('#btnSaveDetail').remove();
                $("#DetailImport").hide();
            }
            else {
                $("#DetailImport").css("display", "flex");
            }
            if (EditButton == 0) {
                $('#detail_Item').hide();
                $('#DetailInfo').find('input, textarea, button, select').attr('disabled', 'disabled');
                $('#DetailWareID').addClass("disabled");
                $('#DetailWareID_To').addClass("disabled");
                $('#btnSaveDetail').remove();
                $('#btnDeleteDetail').remove();
                $("#Detail_Date").flatpickr({
                    dateFormat: 'd-m-Y H:i',
                    enableTime: true,
                    time_24hr: true,
                    maxDate: new Date(),
                    defaultDate: new Date()
                });
                $('#Detail_Date').val(GetDateTime_String_DMYHMSS(DataMaster[0].DateExecute));
            } else {
                $('#btnSaveDetail').show();
                $('#btnDeleteDetail').show();
                $('#detail_Item').show();
            }
            WareDetail_CalculatorView();
        }
        for (let i = 0; i < DataDetail.length; i++) {
            let item = DataDetail[i];
            var element = {};
            element.id = item.idProduct;
            element.packageNumber = item.packageNumber;
            element.idPackage = item.packageID;
            element.idProduct = item.idProduct;
            element.UnitCountID = item.UnitCountID;
            element.NameProduct = item.NameProduct;
            element.NameUnit = item.NameUnit;
            element.Number = Number(item.Number).toString();
            element.Note = item.Note;
            element.Unit_Standard = item.Unit_Standard;
            element.state = item.state.toString();
            element.idDetail = item.idDetail;
            element.SupplierID = 0;
            element.Amount =  item.Amount;
            element.ExpiredDay = '';
            element.IniAmount = item.IniAmount;
            element.DiscountAmount = item.DiscountAmount;
            element.DiscountPer = item.DiscountPer;
            element.UnitPrice = item.UnitPrice;

            product_selected[item.idProduct] = element;
            ItemDetail_Render(item.idProduct, element, "StockProductBody");

        }
        WareHouse_UpdateInfo();
    }

    function WareHouse_UpdateInfo() {
        let data = [];
        let TotalAmount = 0;
        for ([key, value] of Object.entries(product_selected)) {
            data.push(value);
            TotalAmount = TotalAmount + Number(value.Amount);
        }
        $('#DetailWareID').addClass("disabled");
        $('#txtWare_Amount').val(TotalAmount);
    }

    function WareHouse_DeleteDetail() {
        let title = "@Local["Chứng từ kho xuất"]" + " " + stockCodeExport + " @Local["Sẽ bị xoá"]";
        title += stockCodeReceipt != "" ? "<br/>" + "@Local["Chứng từ nhập kho"] " + stockCodeReceipt + " @Local["Sẽ bị xoá"]" : "";
        const promise = notiConfirm(title);
        promise.then(function () {
            let ware = Number($('#DetailWareID').dropdown('get value')) ? Number($('#DetailWareID').dropdown('get value')) : 0;
            WareHouse_DeleteExecute(ser_DetailID, ware);
        }, function () { });
    }

    function WareHouse_DeleteExecute(id, ware) {
        AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=DeleteItem"
            , data = {
                'id': id,
                'typeid': 0,
                'ware': ware,
            }
            , async = true
            , error = null
            , success = function (result) {
                if (result != "0") {
                    WareHouse_Close();
                    notiSuccess();
                    if ($('#stdetail_' + id + '-0').length) $('#stdetail_' + id + '-0').remove();
                    if (typeof StockStatusMin_Load !== 'undefined') StockStatusMin_Load();
                    if (typeof ViewForm_Close !== 'undefined') ViewForm_Close();
                    syslog_whr('d', result);
                } else {
                    notiError_SW();
                }
            }
        );

    }

    //#endregion

    //#region // Handle Product List

    function ItemDetail_DetectProduct() {
        ItemDetail_DetectUnit();
        ItemDetail_DetectQuantity();
    }

    function ItemDetail_DetectQuantity() {
        let productID = Number($("#productDetail").attr("data-productid"));
        let dateExecute = $("#Detail_Date").val();
        let wareID = Number($('#DetailWareID').dropdown('get value')) ? Number($('#DetailWareID').dropdown('get value')) : 0;
        if (productID != 0 && wareID != 0 && dateExecute != "") {
            AjaxLoad(url = "/WareHouse/Stock/StockOutDetail/?handler=LoadStockQuantity"
                , data = {
                    'masterID': ser_DetailID,
                    'productID': productID,
                    'wareID': wareID,
                    'dateExecute': dateExecute
                }
                , async = true, error = null
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        let quantityStock = "0";
                        if (data.length != 0) {
                            quantityStock = data[0].QUANTITY;
                        }
                        let _e = {};
                        _e.PackageNumber = "";
                        _e.ProductID = productID;
                        _e.QUANTITY = quantityStock;
                        _e.ExpiredDay = "";
                        data_packageNum[productID] = _e;
                        $("#StockQuantity").val(formatNumber(quantityStock));
                        let dtProduct = data_product.find((word) => Number(word["ID"] == productID));
                        let warerecept = Number($("#DetailWareID_To").dropdown('get value')) ? Number($("#DetailWareID_To").dropdown('get value')) : 0;
                        if(dtProduct){
                            $("#StockNameUnit").html(dtProduct.UnitName);
                            $("#Pro_ItemAmount").val(warerecept != 0 ? dtProduct.Cost_Price : 0)
                        }
                        else{
                            $("#StockNameUnit").html("");
                            $("#Pro_ItemAmount").val(0)
                        }
                    }
                }
            );
        }

    }

    //#endregion


    //#region // PRODUCT UNIT

    function ItemDetail_DetectUnit() {
        ItemDetail_LoadUnit();
        return false;
    }

    function ItemDetail_LoadUnit() {
        let product = Number($('#productDetail').attr("data-productid")) ? Number($('#productDetail').attr("data-productid")) : 0;
        let data = ItemDetail_LoadUnitAction(product, data_product, data_productunit)
        if (data != undefined && data != null && data.length != 0) {
            Load_Combo(data, "cbbproductUnit", true);
            $("#productUnit").dropdown("refresh");
            $("#productUnit").dropdown("set selected", Number(data[0].ID));
        }

        return false;
    }

    function ItemDetail_LoadUnitAction(idProduct, products, unitproduct) {

        let _data = [];
        let pro = products.filter(word => word["ID"] == idProduct);
        if (pro && pro.length > 0) {
            _data.push({ "ID": pro[0].UnitID, "Name": pro[0].UnitName });
            let unit = unitproduct.filter(word => word["ProductID"] == idProduct);
            if (unit != undefined && unit.length > 0) {
                for (let i = 0; i < unit.length; i++) {
                    _data.push({
                        "ID": unit[i].UnitChange,
                        "Name": unit[i].UnitChangeName
                            + '<a class="btn-link  mb-0 ms-2 p-0 px-1 pe-2">'
                            + ' x' + unit[i].Number + ' '
                            + pro[0].UnitName
                            + '</a>'
                    });
                }
            }
        }
        return _data;
    }

    //#endregion


    //#region // Item

    function ItemDetail_Refresh() {
        $('#productDetail').val('');
        $('#productDetail').attr('data-productid', '0');
        $('#productDetail').attr('data-packageid', '0');
        $('#productUnit').dropdown('clear');
        $('#PackageNumber').val('');
        $('#ExpiredDay').val('');
        $('#noteProduct').val('');
        $('#numberProduct').val(0);
        $('#StockQuantity').val(0);
        $("#StockNameUnit").html("");


        $('#Pro_DiscountedAmount').divide();
        $('#Pro_DiscountedAmount').val(0);
        $('#Pro_ItemAmount').divide();
        $('#Pro_ItemAmount').val(0);
        $('#Pro_IniAmount').divide();
        $('#Pro_IniAmount').val(0);
        $('#Pro_Discount').val(0);

        $('#DiscountAmount').dropdown('refresh');
        $('#DiscountAmount').dropdown('set value', 1);
        $('#numberProduct').val(0);

    }

    function ItemDetail_DeleteRow(idProduct) {
        delete product_selected[idProduct];
        $('#row_' + idProduct).remove();
        WareHouse_UpdateInfo();
    }

    function ItemDetail_CheckStockQuantity(packageid, productID, unitID, number, IsNumberExport) {
        try {
            let isExist = 0;
            let numberExport = 0;
            let numberStock = 0
            if (packageid != 0) {
                numberStock = data_packageNum[packageid] != undefined ? data_packageNum[packageid].QUANTITY : 0;
            }
            else {
                numberStock = data_packageNum[productID] != undefined ? data_packageNum[productID].QUANTITY : 0;
            }

            if (productID != 0 && unitID != 0 && number != 0) {
                let dtProduct = data_product.filter(word => word["ID"] == productID);
                if (dtProduct && dtProduct.length != 0) {
                    let unitStandard = dtProduct[0].UnitID;
                    if (unitID != unitStandard) {
                        let dtUnit = data_productunit.filter(word => word["UnitChange"] == unitID && word["ProductID"] == productID)
                        let numberChange = 1;
                        if (dtUnit && dtUnit.length > 0) {
                            numberChange = dtUnit[0]["Number"];
                        };
                        numberExport = numberChange * number;
                    }
                    else {
                        numberExport = number;
                    }
                }
            }
            if (numberStock == 0 || numberExport > numberStock) {
                isExist = 1;
            }
            return IsNumberExport != undefined ? numberExport : isExist;
        }
        catch (ex) {
            return 1;
        }
    }

    function ItemDetail_Save() {
        document.getElementById("textShowMessage").innerHTML = "";
        let packageNumber = $('#PackageNumber').val() ? ($('#PackageNumber').val()).trim() : "";
        let product = Number($('#productDetail').attr('data-productid')) ? Number($('#productDetail').attr('data-productid')) : 0;
        let packageid = Number($('#productDetail').attr('data-packageid')) ? Number($('#productDetail').attr('data-packageid')) : 0;
        let productDetailUnit = Number($('#productUnit').dropdown('get value')) ? Number($('#productUnit').dropdown('get value')) : 0;
        let numberProduct = Number($('#numberProduct').val()) ? Number($('#numberProduct').val()) : 0;
        let noteProduct = $('#noteProduct').val() ? $('#noteProduct').val() : '';

        let Pro_ItemAmount = $('#Pro_ItemAmount').val() ? $('#Pro_ItemAmount').val() : 0;
        let Pro_IniAmount = $('#Pro_IniAmount').val() ? $('#Pro_IniAmount').val() : 0;
        let Pro_Discount = $('#Pro_Discount').val() ? $('#Pro_Discount').val() : 0;
        let DiscountType = Number($('#DiscountAmount').dropdown('get value')) ? Number($('#DiscountAmount').dropdown('get value')) : 0;
        let Pro_DiscountedAmount = $('#Pro_DiscountedAmount').val() ? $('#Pro_DiscountedAmount').val() : 0;

        let standardUnit = 0;
        //let standardNumber = 0;

        //#region //Validate
        let isError = 0;
        let isErrorQuantity = 0;
        if (!$.isNumeric(numberProduct) || Number(numberProduct) < vtth_range_min || Number(numberProduct) > vtth_range_max) {
            $('#numberProduct').closest('.field').addClass('error')
            isError = 1;
        }
        else $('#numberProduct').closest('.field').removeClass('error')
        if (product == 0) {
            $('#productDetail').closest('.field').addClass('error')
            isError = 1;
        }
        else $('#productDetail').closest('.field').removeClass('error')
        if (productDetailUnit == 0) {
            $('#productUnit').closest('.field').addClass('error')
            isError = 1;
        }
        else $('#productUnit').closest('.field').removeClass('error')
        let isProductExist = 0;
        let keyProductExist = 0;
        for ([key, value] of Object.entries(product_selected)) {
            if (value.idProduct == product ) {
                isProductExist = 1;
                keyProductExist = [key];
                //delete product_selected[key];
                break;
            }
        }
        isErrorQuantity = ItemDetail_CheckStockQuantity(packageid, product, productDetailUnit, numberProduct);
        //#endregion

        if (isError == 0 && isErrorQuantity == 0 && isProductExist == 0) {
            document.getElementById("textShowMessage").innerHTML = "";
            document.getElementById("textShowMessageMaster").innerHTML = ""
            var element = {};
            element.id = product;
            element.packageNumber = packageNumber;
            element.idPackage = packageid;
            element.idProduct = product;
            element.UnitCountID = productDetailUnit;
            element.NameProduct = $('#productDetail').val();
            element.NameUnit = $('#productUnit').dropdown('get text');
            element.Number = Number(numberProduct).toString();
            element.Note = noteProduct;
            element.state = "1";
            element.Unit_Standard = standardUnit.toString();
            element.idDetail = "0";
            element.SupplierID = 0;
            element.Amount = Pro_DiscountedAmount;
            element.ExpiredDay = '';
            element.IniAmount = Pro_IniAmount;
            element.DiscountAmount = (DiscountType == 1) ? (Math.round((Pro_Discount * Pro_IniAmount / 100) * 100) / 100) : Pro_Discount;
            element.DiscountPer = (DiscountType == 1) ? Pro_Discount : 0;
            element.UnitPrice = Pro_ItemAmount;
            product_selected[product] = element;

            ItemDetail_Render(product, element, "StockProductBody");
            WareHouse_UpdateInfo();
            ItemDetail_Refresh();

        }
        else if (isErrorQuantity == 1) {
            $('#numberProduct').closest('.field').addClass('error');
            document.getElementById("textShowMessage").innerHTML = "@Local["Số lượng xuất kho không lớn hơn số lượng tồn kho"]";
        }
        else if (isProductExist == 1) {
            document.getElementById("textShowMessage").innerHTML = "@Local["Hàng xuất kho đã được chọn"]";
            $('#row_' + keyProductExist).addClass("border-active");
        }
        else {
            document.getElementById("textShowMessage").innerHTML = "@Local["Kiểm tra dữ liệu"]";
        }
        return false;
    }

    function ItemDetail_OnChangeDiscount() {
        if (Flag_Ware == 1) {
            Flag_Ware = 0;
            let IniAmount = $('#Pro_IniAmount').val() ? $('#Pro_IniAmount').val() : 0;
            let type = Number($('#DiscountAmount').dropdown('get value')) ? Number($('#DiscountAmount').dropdown('get value')) : 0;
            if (!isNaN($('#Pro_Discount').val()) || $('#Pro_Discount').val() == '') {
                let value = Number($('#Pro_Discount').val() ? $('#Pro_Discount').val() : 0);
                if (type == 1 && (value > 100 || value < 0)) {
                    $('#Pro_Discount').val(0);
                }
                if (type == 2 && (value > IniAmount || value < 0)) {
                    $('#Pro_Discount').val(0);
                }
            }
            else {
                $('#Pro_Discount').val(0);
            }
            Flag_Ware = 1;
            ItemDetail_UpdateAmount();
        }
    }

    function ItemDetail_UpdateAmount() {
        if (Flag_Ware == 1) {
            debugger
            Flag_Ware = 0;
            let pridisconted = 0;
            let total_price = 0; number_discount = 0;

            let numberProduct = $('#numberProduct').val() ? $('#numberProduct').val() : 0;
            let item_price = $('#Pro_ItemAmount').val() ? $('#Pro_ItemAmount').val() : 0;
            total_price = item_price * numberProduct;
            let discountValue = $('#Pro_Discount').val() ? $('#Pro_Discount').val() : 0;
            let discountType = Number($('#DiscountAmount').dropdown('get value')) ? Number($('#DiscountAmount').dropdown('get value')) : 0;
            let discountAmount = 0;

            if (discountType == 1) {
                discountAmount = (total_price * discountValue) / 100;
            }
            else {
                discountAmount = discountValue;
            }
            pridisconted = total_price - discountAmount;
            $('#Pro_IniAmount').val(Math.round(total_price * 100) / 100);
            $('#Pro_DiscountedAmount').val(Math.round(pridisconted * 100) / 100);
            Flag_Ware = 1;
        }
    }


    //#endregion


    //#region // RENDER ITEMS

    async function ItemDetail_Render(key, item, id) {
        new Promise((resolve) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    let tr = '<td class="d-none">' + key + '</td>'
                        + '<td class="vt-number-order text-center"></td>'
                        + '<td >'
                        + ((item.packageNumber != "") ? '<h6 class="fw-bold mb-0 text-sm  text-uppercase ellipsis_one_line">' + item.packageNumber + '</h6>' : "")
                        + '</td>'
                        + '<td>'
                        + '<h6 class="mb-0 text-sm ellipsis_one_line  text-primary">' + item.NameProduct + '</h6>'
                        + '</td>'
                        + '<td class="text-center">' + formatNumber(item.Number) + '</td>'
                        + '<td >' + item.NameUnit + '</td>'
                        + '<td >' + formatNumber(item.Amount) + '</td>'
                        + ((EditButton == 1)
                            ? '<td><button title="@Local["Xóa"]" class="buttonGrid"><i class="buttonDeleteClass vtt-icon vttech-icon-cancel-01 text-danger"></i></button></td>'
                            : '<td></td>')
                    tr = '<tr id="row_' + key + '" class="productRow vt-number">' + tr + '</tr>'
                    myNode.insertAdjacentHTML('beforeend', tr);
                }
            }, 10)
        })
    }

    async function ItemDetail_RenderProductList(data, id) {
        return new Promise((reslove) => {
            setTimeout(() => {
                var myNode = document.getElementById(id);
                if (myNode != null) {
                    if (data && data.length > 0) {
                        for (var i = 0; i < data.length; i++) {
                            let item = data[i];
                            let tr = `
                            <td class="d-none">${item.ID}</td>
                            <td class="vt-number-order"></td>
                            <td>
                                <a class="text-dark fw-bold buttonEditClass cursor-pointer d-block">${item.Code}</a>
                                <div class="ellipsis_one_line">${item.Name}</div>
                            </td>`
                            tr = `<tr class="itemProduct vt-number cursor-pointer" role="row" data-id="${item.ID}" data-name="${item.Name}">${tr}</tr>`;
                            myNode.insertAdjacentHTML('beforeend', tr);
                        }
                    }
                }
                reslove();
            }, 10)
        })

    }

    function ItemDetail_RenderPackage(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            if (data && data.length > 0) {
                for (let i = 0; i < data.length; i++) {
                    let item = data[i];
                    let dtProduct = data_product.filter((word) => Number(word["ID"] == item.ProductID));
                    let nameProduct = dtProduct.length != 0 ? dtProduct[0].Name : "";
                    let tr = '<li id="rowPackageNumber_' + item.PackageID + '" class="rowPackageNumber list-group-item border-2 border-dashed d-flex p-3 mb-2 bg-gray-100 border-radius-lg" data-id="' + item.PackageID + '">'
                        + '<div class="w-100">'
                        + '<h6 class=" text-sm mb-0 fw-bold">' + nameProduct + '</h6>'
                        + '<p class="text-sm mb-1 text-secondary">' + ConvertDateTimeUTC_DMY(item.ExpiredDay) + '</p>'
                        + '<svg id="packageNumberProduct_' + item.PackageID + '" style="height:60px;" class="w-100 text-center" >'
                        + '</svg>'
                        + '</div>'
                        + '</li>'
                    myNode.insertAdjacentHTML('beforeend', tr);
                    JsBarcode("#packageNumberProduct_" + item.PackageID, item.PackageNumber, {
                        lineColor: "#000",
                        fontsize: 12,
                        width: 2,
                        height: 30,
                        displayValue: true,
                        background: "#ffffff00"
                    });
                }
            }
        }
    }

    //#endregion

</script>

<script src="/js/main.js" async></script>
<script src="/js/customjs/custom-validation.js"></script>


<style>
    .productRow.error {
        background-color: #ff9898 !important;
    }
    .promotion {
        font-size: 10px;
        color: red;
    }

    #ProductItem.border-active {
        animation: spin 1s linear infinite alternate;
    }

    .itemProduct {
        transition: 0.2s all;
    }

        .itemProduct:hover {
            background-color: var(--bs-blue);
        }

    @@media only screen and (max-width:767px) {
        #StockProductList {
            order: 2;
        }
    }

    @@keyframes spin {
        from {
            background-color: white;
        }

        to {
            background-color: #ffe9e9;
        }
    }
</style>