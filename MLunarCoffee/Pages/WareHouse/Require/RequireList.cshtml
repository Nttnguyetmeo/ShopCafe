@page
@model MLunarCoffee.Pages.WareHouse.Require.RequireList
@{
    if(@Model.layout=="none") Layout=null;
}
@Html.AntiForgeryToken()

<div class="row">
    <div id="re_master" class="col-12 px-0">
        <div class="card card-plain">
            <div class="vtcardheader card-header pb-0">
                <div class="left">
                    <h6 class="mb-0">@Local["Phiếu yêu cầu"]</h6>
                    <p class="text-sm mb-0">@Local["Phiếu chuyển kho từ các kho khác, phiếu order nhà cung cấp"]</p>
                </div>
                <div class="right overflow-unset d-md-flex">
                    <div class="col-w-300 ui fluid search selection dropdown form-control" id="RequireWare" onchange="RequireWareChange()">
                        <input type="hidden" name="branch" />
                        <input class="search" autocomplete="off" tabindex="0" />
                        <div class="default text">eg .@Local["Kho"]</div>
                        <div id="cbbRequireWare" class="menu" tabindex="-1">
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-1">
                <div id="divrequireLoad" class="waitingdiv text-center" style="display: none; position: absolute; left: 50%;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div class="row px-0 form3 m-0">
                    <div class="col-12 col-md-4 col-xl-4 px-0 py-1 pe-sm-2">
                        <div class="vtcondition">
                            <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                            <div class="fulllap collapse collapsesticky show">
                                <div class="col-12 col-md-12 col-xl-12 p-1 px-0">
                                    <div class="input-group flex-nowrap">
                                        <input id="RequireListDate" class="flatpickr form-control" type="text" placeholder="eg .date" onchange="RequireList_Load(0,0,-1)" />
                                        <div class="input-group-text"> <i class="text-primary fas fa-redo " onclick="RequireList_ReLoad()"></i></div>
                                        <div class="input-group-text">
                                            <span data-search="order" class="reqlisttype me-0 fw-bold text-sm text-secondary opacity-5 " aria-hidden="true">order</span>
                                        </div>
                                        <div class="input-group-text" style="border-right: 1px solid #e6e6e6 !important;">
                                            <span data-search="from" class="reqlisttype me-0 fw-bold text-secondary opacity-5" aria-hidden="true">from</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-12 col-xl-12 p-1 px-0">
                                    <div class="input-group flex-nowrap" id="divSearchrelist">
                                        <div class="input-group-text input-group-text px-2">
                                            <i class="fas fa-search" aria-hidden="true"></i>
                                            <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                        </div>
                                        <input id="txtrelist_Filter" type="text" class="form-control" placeholder="eg .@Local["Lọc dữ liệu"]">
                                        <div class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></div>
                                        <div id="per_btn_order" class="input-group-text" style="border-right: 1px solid #e6e6e6 !important;">
                                            <div class="position-relative" onclick="event.preventDefault(); return Requirelist_NewOrder();">
                                                <h6 class="neworder cursor-pointer fw-bold text-warning text-sm mb-0 text-capitalize">@Local["Yêu cầu NCC"]</h6>
                                                <i class="add text-primary fas fa-plus"></i>
                                            </div>
                                        </div>
                                        <div id="per_btn_orderware" class="input-group-text" style="border-right: 1px solid #e6e6e6 !important;">
                                            <div class="position-relative" onclick="event.preventDefault(); return Requirelist_NewOrderWare();">
                                                <h6 class="neworder cursor-pointer fw-bold text-warning text-sm mb-0 text-capitalize">@Local["Yêu cầu kho"]</h6>
                                                <i class="add text-primary fas fa-plus"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="ContentRequire" class="overflow-y" style="min-height:400px;">
                            <ul class="list-group" id="divRquireList">
                            </ul>
                        </div>
                        <button class="btnsysmore btn btn-secondary w-100 p-1 mt-3 cursor-pointer transform-scale-10" onclick="event.preventDefault();return RequireList_Load(1,0,-1);">@Local["Xem thêm"]</button>
                    </div>
                    <div class="col-12 col-md-8 col-xl-8 px-0 pb-1 pt-2" id="re_view">
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="re_detail" class="col-12">

    </div>
</div>

<script>

    let begintr, beginor, beginorw;
    let limit = 50;
    let RequireListData = {};
    let requirelist_type = -1;
    let requirelist_timer;
    let requirelist_ware = {};
    var requiredetailid;
    var RequireWareID;

    $(document).ready(function () {
        RequireWare_SettingHeight();
        RequireWareLoad();
    });

    function RequireWare_SettingHeight() {
        let offsetTop = $("#ContentRequire").offset().top + 150;
        $("#ContentRequire").css("height", 'calc(100vh - ' + offsetTop + 'px)');
    }

    // #region // Load And render
    function RequireWareLoad () {
        AjaxLoad(url = "/WareHouse/Require/RequireList?handler=Initialize"
            , data = {}
            , async = true
            , error = null
            , success = function (result) {
                if (result != "[]") {
                    let data = JSON.parse(result);
                    if (data.Warehouse.length > 0) {
                        requirelist_ware = (data.Warehouse).reduce((pre, arr) => {
                            if(arr.ID) pre[arr.ID] = arr;
                            return pre;
                        }, {})
                        Load_Combo(data.Warehouse, "cbbRequireWare", true);
                        $("#RequireWare").dropdown("clear");
                        $("#RequireWare").dropdown("refresh");
                        $("#RequireWare").dropdown("set selected", data.Warehouse[0].ID);
                    } else {
                        notiWarning("@Local["Cấu hình kho"]!");
                    }
                } else {
                    notiError_SW();
                }
            }
        );
        CheckPermissionControlInPage(sys_PerControl, '@Model.CurrentPath');
        CheckPermissionControlInPage(sys_PerControlMH, '@Model.CurrentPath');
    }

    function RequireWareChange () {
        RequireWareID = Number($('#RequireWare').dropdown('get value')) ? Number($('#RequireWare').dropdown('get value')) : 0;
        RequireList_ReLoad();
    }

    function RequireList_ReLoad () {
        let lastDay = new Date();
        let firstDay = new Date();
        firstDay.setDate(firstDay.getDate() - 7); // minus the date
        $("#RequireListDate").flatpickr({
            mode: "range",
            dateFormat: 'd-m-Y',
            enableTime: false,
            onClose: function (selectedDates, dateStr, instance) {
                if (selectedDates.length == 1) {
                    instance.setDate([selectedDates[0], selectedDates[0]], true);
                }
            }
        });
        $("#RequireListDate").val(formatDateClient(firstDay) + ' to ' + formatDateClient(lastDay));
        RequireList_Load(ismore = 0, curid = 0, type = -1);
        RequireList_Event();
    }

    function RequireList_Load (ismore, curid, type) {
        if (ismore == 0) {
            beginor = 0; begintr = 0, beginorw = 0;
            if(curid == 0){
                $("#divRquireList").empty();
            }
        }
        let date = $('#RequireListDate').val() ? $('#RequireListDate').val() : new Date();
        let dateFrom;
        let dateTo;
        if (date.includes(" to ")) {
            date = date.replace(" to ", "#");
            dateFrom = date.split('#')[0];
            dateTo = date.split('#')[1];
        }
        else {
            dateFrom = date;
            dateTo = date;
        }
        AjaxLoad(url = "/WareHouse/Require/RequireList/?handler=LoadData"
            , data = {
                  'curid': curid
                , 'WareID': RequireWareID
                , 'dateFrom': dateFrom
                , 'dateTo': dateTo
                , 'type': type
                , 'beginor': beginor
                , 'beginorw': beginorw
                , 'begintr': begintr
                , 'limit': limit
            }
            , async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let datadetail = JSON.parse(result).Table;
                    let dataorder_receipt = JSON.parse(result).Table1;
                    if (datadetail != undefined && datadetail.length != 0) {
                        if (curid == 0) {
                             let datatr = datadetail.filter(function (item) {
                                if (item["Type"] == 0) return true;
                                return false;
                            }); 
                            let dataor = datadetail.filter(function (item) {
                                if (item["Type"] == 1) return true;
                                return false;
                            });
                            let dataorw = datadetail.filter(function (item) {
                                if (item["Type"] == 2) return true;
                                return false;
                            });
                            if (dataor != undefined && dataor.length > 0) beginor = dataor[dataor.length - 1].ID;
                            if (datatr != undefined && datatr.length > 0) begintr = datatr[datatr.length - 1].ID;
                            if (dataorw != undefined && dataorw.length > 0) beginorw = dataorw[dataorw.length - 1].ID;
                            if (ismore == 0) RequireListData = {};
                            for (let i = 0; i < datadetail.length; i++) {
                                RequireListData[datadetail[i].ID + "-" + datadetail[i].Type] = datadetail[i];
                            }
                            
                            RequireListRender_List(datadetail, dataorder_receipt, "divRquireList");
                        }
                        else {

                            let iddetail = datadetail[0].ID;
                            let typedetail = datadetail[0].Type;
                            RequireListData[iddetail + "-" + typedetail] = datadetail[0];
                            if ($("#reqdetail_" + iddetail + '-' + typedetail).length) {
                                let tr = RequireListRender_Item(datadetail[0], dataorder_receipt, dataorder_receipt, active = 1);
                                $("#reqdetail_" + iddetail + '-' + typedetail).replaceWith(tr)
                            }
                            RequireDetail_Event();
                        }
                    }
                    else {
                        if (curid == 0 && ismore == 0) {
                            RequireListData = {};
                            $("#divRquireList").html('');
                        }
                        if (curid != 0) {
                            let idRow = 'reqdetail_' + curid + '-' + typedetail;
                            if ($("#" + idRow).length != 0) $("#" + idRow).remove();
                        }
                    }
                }
            },
            sender = null,
            before = function (e) {
                $("#divrequireLoad").show();
            },
            complete = function (e) {
                $("#divrequireLoad").hide();
            }
        );
    }

    function RequireListRender_List (data, dataorderre, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let stringContent = '';
            for (let i = 0; i < data.length; i++) {
                let dataorrece = [];
                let dataorwarerece = [];
                let item = data[i];
                if (item.Type == 1){
                    dataorrece = dataorderre.filter(function (item) {
                        if (item["OrderID"] == data[i].ID) return true;
                        return false;
                    }); 
                }
                if (item.Type == 2){
                    dataorwarerece = dataorderre.filter(function (item) {
                        if (item["ExportID"] == data[i].ExportID) return true;
                        return false;
                    });
                }
                stringContent = stringContent + RequireListRender_Item(item, dataorrece, dataorwarerece, active = 0);
            }
            myNode.insertAdjacentHTML('beforeend', stringContent);
        }
        RequireDetail_Event();
    }

    function RequireListRender_Item(item, dataorrece, dataorwarerece, active) {
        let lineh = '', linef = '', deorrece = '', allowsign = 0, sign = '';
        let datatype = item.Type;
        if (datatype == 0) {
            lineh = '<span class="text-success fw-bold">@Local["Nhận từ kho"]</span>'
                + '<span class="ms-2 text-dark text-capitalize">' + item.TransferWare + '</span>';
            if (item.State == 1) {
                allowsign = 1;
                linef = '@Local["Chứng từ nhập kho"]' + '<a data-code="' + item.Code + '" data-type="' + datatype + '" class="viewform text-primary px-2">' + item.Code + '</a>';
            }
            else {
                linef = '<span class="text-secondary text-sm text-capitalize">@Local["Chưa nhận hàng"]</span>';
            }
        }
        else if(datatype == 1) {
            lineh = '<span class="text-warning fw-bold">@Local["Yêu cầu"]</span>'
                + '<span class="ms-2 text-dark text-capitalize">' + item.OrderTo + '</span>';
            if (item.IsApprove == 1) {
                lineh = lineh + '<a data-type="' + datatype + '" data-code="' + item.Code + '" class="viewform text-primary px-2">' + item.Code + '</a><i class="text-success fas fa-check"></i>';
            } 
            else {
                lineh = lineh + '<a data-type="' + datatype + '" data-code="' + item.Code + '" class="viewform text-primary px-2">' + item.Code + '</a>'
                    + '<i data-type="' + datatype + '" data-id="' + item.ID+'" class="editorder text-primary opacity-1 fas fa-edit"></i>';

            }
            if (dataorrece != undefined && dataorrece.length != 0) {
                deorrece = RequireListRender_OrderReceipt(item.ID, dataorrece);
            }
            allowsign = 0;
        }
        else {

            if(item.IsReqWare == 1){
                lineh = '<span class="text-warning fw-bold">@Local["Yêu cầu kho"]</span>'
                lineh += '<span class="ms-2 text-dark text-capitalize">' + Fun_GetName_ByID(requirelist_ware, item.WareID) + '</span>';
                if (item.State == 1) {
                    lineh = lineh + '<a data-type="' + datatype + '" data-code="' + item.Code + '" class="viewform text-primary px-2">' + item.Code + '</a><i class="text-success fas fa-check"></i>';
                }
                else {
                    lineh += '<a data-type="' + datatype + '" data-code="' + item.Code + '" class="viewform text-primary px-2">' + item.Code + '</a>'
                        + '<i data-type="' + datatype + '" data-id="' + item.ID + '" class="editorder text-primary opacity-1 fas fa-edit"></i>';
                }
                if (dataorwarerece != undefined && dataorwarerece.length != 0) {
                    deorrece = RequireListRender_OrderReceipt(item.ID, dataorwarerece);
                }
            }
            else{
                lineh = '<span class="text-warning fw-bold">@Local["Xuất đến kho"]</span>'
                lineh += '<span class="ms-2 text-dark text-capitalize">' + Fun_GetName_ByID(requirelist_ware, item.WareID) + '</span>';
                if (item.State == 1) {
                    allowsign = 1;
                    lineh += '<a data-type="' + datatype + '" data-code="' + item.Code + '" class="viewform text-primary px-2">' + item.Code + '</a><i class="text-success fas fa-check"></i>';
                    linef += '@Local["Chứng từ xuất kho"]' + '<a data-code="' + item.CodeExport + '" data-isexport="1" data-type="' + datatype + '" class="viewform text-primary px-2">' + item.CodeExport + '</a>';
                }
                else {
                    linef += '<span class="text-secondary text-sm text-capitalize">@Local["Chưa xuất hàng"]</span>';
                }
            }
        }

        if (allowsign == 1) {
            sign = ((item.IsSign != 0)
                ? '<a class="text-sm text-primary text-capitalize">@Local["Đã ký tên"]</a>'
                : '<a class="text-sm text-secondary text-capitalize">@Local["Chưa ký tên"]</a>')
        }
        let tr =
            '<div class=" ms-1 w-100 py-0 align-items-center">'
            + '<a class="viewdetail fw-bold text-uppercase"'
            + ' data-type="' + datatype
            + '" data-id="' + item.ID + '">' + lineh + '</a>'
            + '<div class="d-flex w-100">'
            + '<span class="text-sm text-dark">' + ConvertTimeSpanUTC_Time(item.DateCreate) + "   " + item.CreatedName + '</span>'
            + '<div class="ms-auto my-auto">'

            + '</div>'
            + '</div>'

            + '<div class="pt-2 text-sm text-muted">'
            + linef + sign
            + '</div>'
            + '<div class="pt-2 text-sm text-muted">'
            + deorrece
            + '</div>'

            + '</div>';
        tr = '<li id="reqdetail_' + item.ID + '-' + item.Type + '" class="requiredetail ' + ((active == 1) ? 'active' : '') + ' rounded-2 ms-0 p-2 my-1 border-0 d-flex  border-radius-lg position-relative" >'
            + tr

            + '<hr class="horizontal dark my-0">'
            + '</li>';
        return tr;
    }

    function RequireListRender_OrderReceipt (id, data) {
        let tr = ''
        let stringid = '';
        let sign = '';
        let collapseid = 'multi-collapse' + id;
        for (let i = 0; i < data.length; i++) {
            let curid = ' mulorre' + data[i].ID;
            stringid = stringid + curid;
            sign = ((data[i].IsSign != 0)
                ? '<a class="ps-2 text-sm text-primary text-capitalize">@Local["Đã ký tên"]</a>'
                : '<a class="ps-2 text-sm text-secondary text-capitalize">@Local["Chưa ký tên"]</a>')

            tr = tr
                + '<div class="mt-2 collapsesticky collapse ' + collapseid + '" id="' + curid + '">'
                + '<div class="card p-2 ">'
                + '<a class="opendetailimport" data-id="' + data[i].ID + '" data-order="' + id + '">'
                + '<span class="text-primary">' + data[i].Code + '</span>'
                + '</a>'
                + '<span class="text-sm text-dark ">@Local["Ngày nhận"]: ' + ConvertTimeSpanUTC_Time(data[i].DateReceipt) + sign + '</span>'

                + '</div>'
                + '</div>';
        }
        tr = '<a data-id="' + id + '" data-type="' + 1 + '" class="opendetail my-2"'
            + 'type="button" data-bs-toggle="collapse" data-bs-target=".' + collapseid + '"'
            + 'aria-expanded="false"'
            + 'aria-controls="' + stringid + '">'
            + data.length + ' @Local["Đơn nhận"]'
            + '</a>'
            + tr;
        return tr;
    }
    //#endregion


    //#region // Event

    function RequireDetail_Event () {
        $("#divRquireList .viewform").unbind("click").bind('click', function () {
            let code = $(this).attr("data-code");
            let type = $(this).attr("data-type");
            let isexport = $(this).attr('data-isexport')
            $("#re_view").empty();
            let div = '<div class="m-0 viewcontent border-dashed border-1 border-secondary border-radius-md p-4" data-code="' + code + '"></div>';
            $("#re_view").append(div);
            if (type == 0)
                $('#re_view .viewcontent[data-code="' + code + '"]').load("/WareHouse/Ticket/ViewForm?type=2&code=" + code + "&ticketproduct=0");
            else if (type == 1)
                $('#re_view .viewcontent[data-code="' + code + '"]').load("/WareHouse/Ticket/ViewForm?type=8&code=" + code + "&ticketproduct=0");
            else{
                if(isexport == 1)
                    $('#re_view .viewcontent[data-code="' + code + '"]').load("/WareHouse/Ticket/ViewForm?type=4&code=" + code + "&ticketproduct=0");
                else 
                    $('#re_view .viewcontent[data-code="' + code + '"]').load("/WareHouse/Ticket/ViewForm?type=9&code=" + code + "&ticketproduct=0");
            }
        });
        $("#divRquireList  .opendetail").unbind("click").bind('click', function () {
            $("#divRquireList .requiredetail").removeClass('active');
            let id = $(this).attr("data-id");
            let type = $(this).attr("data-type");
            $("#reqdetail_" + id + "-" + type).addClass('active');

        });
        $("#divRquireList  .viewdetail").unbind("click").bind('click', function () {
            $("#divRquireList .requiredetail").removeClass('active');
            let id = $(this).attr("data-id");
            let type = $(this).attr("data-type");
            $("#reqdetail_" + id + "-" + type).addClass('active');
            if (type == 0) {
                $("#re_view").empty();
                $("#re_view").load('/WareHouse/Require/ReceiptTransfer?Detail=' + id + '&ver=' + versionofWebApplication);
            }
            else if (type == 1) {
                $("#re_view").empty();
                $("#re_view").load('/WareHouse/Require/ReceiptSupplier?Detail=' + id + '&ver=' + versionofWebApplication);
            }
            else{
                $("#re_view").empty();
                $("#re_view").load('/WareHouse/Require/ExportTransfer?Detail=' + id + '&ver=' + versionofWebApplication);
            }
        });
        $("#divRquireList  .opendetailimport").unbind("click").bind('click', function () {
            $("#divRquireList .requiredetail").removeClass('active');
            let id = $(this).attr("data-id");
            let idoder = $(this).attr("data-order");
            $("#reqdetail_" + idoder + "-" + 1).addClass('active');
            $("#re_view").empty();
            $("#re_view").load('/WareHouse/Require/ImportSupplier?Detail=' + id + '&OrderDetail=' + idoder + '&ver=' + versionofWebApplication);

        });

        $("#divRquireList  .editorder").unbind("click").bind('click', function () {
            $("#divRquireList .requiredetail").removeClass('active');
            let id = $(this).attr("data-id");
            let type = $(this).attr("data-type");
            $("#reqdetail_" + id + "-" + type).addClass('active');
            Requirelist_DetailOrder(id, type);

        });

    }

    function RequireList_Event () {

        $('#txtrelist_Filter').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#divSearchrelist .fa-search").hide();
            $("#divSearchrelist .spinner-border").show();
            clearTimeout(requirelist_timer);
            requirelist_timer = setTimeout(function (e) {
                Requirelist_FilterText();
            }, 500);
        });

        $("#divSearchrelist").on('click', '.btn_clear', function (e) {
            $('#txtrelist_Filter').val('');
            $(".btn_clear").addClass('opacity-1');
            $('#divRquireList .requiredetail').removeClass("d-none");
        });

        $(".reqlisttype").unbind("click").bind('click', function () {
            let field = $(this).attr("data-search");
            if (field == "from") {
                if ($(this).hasClass("text-secondary opacity-5")) {
                    $(".reqlisttype").removeClass("text-primary text-success text-warning").addClass("text-secondary opacity-5");
                    $(this).removeClass("text-secondary opacity-5").addClass("text-success");
                    requirelist_type = 1;
                }
                else {
                    $(".reqlisttype").removeClass("text-primary text-success text-warning").addClass("text-secondary opacity-5");
                    requirelist_type = -1;
                }

            }
            else {
                if ($(this).hasClass("text-secondary opacity-5")) {
                    $(".reqlisttype").removeClass("text-primary text-success text-warning").addClass("text-secondary opacity-5");
                    $(this).removeClass("text-secondary opacity-5").addClass("text-warning");
                    requirelist_type = 0;
                }
                else {
                    $(".reqlisttype").removeClass("text-primary text-success text-warning").addClass("text-secondary opacity-5");
                    requirelist_type = -1;
                }
            }
            Requirelist_FilterType();
        });

    }

    async function Requirelist_FilterType () {
        await new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    let ishideex = 0;
                    for ([key, value] of Object.entries(RequireListData)) {
                        ishideex = 0;
                        if (requirelist_type == 1 && value.TransferWare == '') ishideex = 1;
                        if (requirelist_type == 0 && value.TransferWare != '') ishideex = 1;
                        if (ishideex == 0) $('#reqdetail_' + key).removeClass("d-none");
                        else $('#reqdetail_' + key).addClass("d-none");

                    }
                }
            )
        })
    }

    async function Requirelist_FilterText () {
        await new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    let search = xoa_dau($('#txtrelist_Filter').val().toLowerCase()).trim();

                    for ([key, value] of Object.entries(RequireListData)) {
                        if (xoa_dau(value.Code).toLowerCase().includes(search)
                            || xoa_dau(value.CreatedName).toLowerCase().includes(search)
                            || xoa_dau(value.TransferWare).toLowerCase().includes(search)
                        ) {
                            $('#reqdetail_' + key).removeClass("d-none");
                        }
                        else {
                            $('#reqdetail_' + key).addClass("d-none");
                        }
                    }
                    $("#divSearchrelist .fa-search").show();
                    $("#divSearchrelist .spinner-border").hide();
                    resolve()
                }
            )
        })
    }

    //#endregion



    //#region // Orther

    function Requirelist_NewOrder() {
        Requirelist_Open();
        $("#re_detail").load('/WareHouse/Require/RequireDetail?CurrentID=0' + '&WareID=' + RequireWareID + '&ver=' + versionofWebApplication);
    }

    function Requirelist_NewOrderWare() {
        Requirelist_Open();
        $("#re_detail").load('/WareHouse/Require/RequireWareDetail?CurrentID=0' + '&WareID=' + RequireWareID + '&ver=' + versionofWebApplication);
    }

    function Requirelist_DetailOrder(id, type) {
        Requirelist_Open();
        if(type == 1)
            $("#re_detail").load('/WareHouse/Require/RequireDetail?CurrentID=' + id + '&WareID=' + RequireWareID + '&ver=' + versionofWebApplication);
        else
            $("#re_detail").load('/WareHouse/Require/RequireWareDetail?CurrentID=' + id + '&WareID=' + RequireWareID + '&ver=' + versionofWebApplication);
    }

    function Requirelist_Open() {
        $("#re_detail").show();
        $("#re_detail").empty();
        $("#re_master").hide();
    }

    function RequireList_Close() {
        $("#re_detail").hide();
        $("#re_detail").empty();
        $("#re_master").show();
    }

    //#endregion

</script>

<style>
    #divRquireList .requiredetail.active {
        background-color: #e9ecefa3 !important;
    }

    #divRquireList .requiredetail {
        cursor: pointer;
    }

    #divRquireList .horizontal {
        position: absolute;
        bottom: 0px;
        width: 100%;
    }

    .reqlisttype {
        font-size: 15px;
        margin-right: 11px;
        cursor: pointer;
    }

    #divSearchrelist .add {
        position: absolute;
        top: -5px;
        right: -5px;
        font-size: 10px;
    }

    #divRquireList .viewdetail:hover {
        border-bottom: 1px solid rgb(var(--bs-primary));
    }
    #divRquireList .editorder:hover {
        opacity: 1 !important;
    }

</style>