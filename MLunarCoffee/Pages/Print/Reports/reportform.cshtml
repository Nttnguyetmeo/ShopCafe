@page
@model MLunarCoffee.Pages.Print.Reports.reportformModel
@{
    Layout = null;
}
@Html.AntiForgeryToken()
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<link rel="stylesheet" href="/css/flick-jquery-ui.css">
<link href="/css/jquery-ui-slider-pips.css" rel="stylesheet" />
<script>js_require_notasync('/js/comon/jquery-ui-slider-pips.js', true);</script>
<div id="PRF_LoaderDiv" class="waitingdiv text-center position-absolute top-50 start-50 translate-middle" style="display: none;">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<div id="PRF_Container" class="container-fluid px-0 h-100">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3 card-plain">
                <div class="card-header position-sticky top-0 border-radius-xl z-index-sticky p-3 shadow">
                    <div class="row px-2 form3" id="PRF_formOption">
                        <div class="field col-12 col-sm-6 col-xl-6 p-1">
                            <label>@Local["Tiêu đề"] </label>
                            <input id="PRF_txtName" class="form-control" name="name" type="text" onchange="PRF_changeTitle()" placeholder="eg. @Local["Tiêu đề"]">
                        </div>
                        <div class="field col-12 col-sm-3 col-md-3 col-xl-3 p-1">
                            <label>@Local["Khổ giấy"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="PRF_PageSize">
                                <input type="hidden" name="branch" onchange="event.preventDefault; PRF_cbbPageSizeChange()" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text">eg. @Local["Khổ giấy"]</div>
                                <div id="PRF_cbbPageSize" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-sm-3 col-xl-3 p-1">
                            <label>@Local["Chiều rộng"] (mm)</label>
                            <input id="PRF_width" class="form-control" min="0" value="0" type="number" onchange="PRF_changePageSize()" placeholder="eg. width">
                        </div>
                        <div class="field col-12 col-sm-3 col-xl-3 p-1 d-none">
                            <label>@Local["Chiều cao"] (mm)</label>
                            <input id="PRF_height" class="form-control" min="0" value="0" type="number" onchange="PRF_changePageSize()" placeholder="eg. height" disabled>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3 pt-3 mt-3">
                    <div class="d-lg-flex">
                        <div class="col-12 col-lg-2 p-1 h-100">
                            <p class="text-dark font-weight-bold ps-2 ms-1 text-xl ">@Local["Danh sách trường dữ liệu"]</p>
                            <hr class="horizontal dark my-0 opacity-2">
                            <ul id="PRF_SideNav" class="w-100 nav nav-pills flex-column h-100 border-radius-lg pt-3 px-2">
                            </ul>
                        </div>
                        <div class="col-12 col-lg-10 p-1 h-100">
                            <div class="flex-grow-1 justify-content-center card">
                                <div id="PRF_BodyContent" class="d-flex justify-content-center mt-0">
                                    <div id="PRF_LoaderTbDiv" class="waitingdiv text-center position-absolute top-50 start-50 translate-middle" style="display: none;">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="sr-only">Loading...</span>
                                        </div>
                                    </div>
                                    <div class="">
                                        <div id="PRF_scale-slider_hor" class="mx-0 mt-3"></div>
                                        <div class="m-0 mt-2 mobile-responsive pe-3" style="width: 210mm;min-height: 297mm;" id="PRF_PrintDiv">
                                            <div class="row my-3">
                                                <div class="col-8 d-flex">
                                                    <img class="avatar avatar-lg" id="PRF_Logo" src="">
                                                    <div class="w-100 ps-3">
                                                        <label class="w-100  text-dark fw-bold text-sm mb-0" id="PRF_CompanyName"></label>
                                                        <div class="d-flex ">
                                                            <label class="w-auto text-secondary fw-normal text-sm mb-0">@Local["Chi nhánh"]:</label>
                                                            <label class="w-auto text-secondary fw-normal text-sm mb-0" id="PRF_Branch"></label>
                                                        </div>
                                                        <div class="d-flex text-secondary">
                                                            <label class="w-auto text-secondary fw-normal text-sm mb-0">@Local["Điện thoại"]:</label>
                                                            <label class="w-auto text-secondary fw-normal text-sm mb-0" id="PRF_BranchPhone"></label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-4">
                                                    <div class="d-flex text-md-end text-start">
                                                        <label class="ms-auto text-dark fw-bold text-sm mb-0">@Local["Người lập báo cáo"]:</label>
                                                        <label class="text-dark fw-bold text-sm mb-0" id="PRF_CreatedBy"></label>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class=" row">
                                                <label class="w-100 text-dark fw-bold text-center fs-4" id="PRF_name"></label>
                                                <label class=" w-100 text-center text-normal text-secondary text-sm mt-n2">@Local["Từ"] <span id="PRF_DateFrom"></span> @Local["Đến"] <span id="PRF_DateTo"></span> </label>
                                            </div>
                                            <table data-name="PRF_dtContent" class="table vt-table mb-0" id="PRF_dtContent">
                                                <thead id="PRF_dtContentHeader">
                                                </thead>
                                                <tbody id="PRF_dtContentBody">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="fixed-botombutton px-3 mt-2">
                    <div class="action_Save">
                        <div class="text-danger text-gradient text-sm font-weight-bold" id="PRF_textShowMessage"></div>
                        <div class="action_Save-Content">
                            <button class="btn btn-secondary" form="form3" onclick="event.preventDefault();PRF_Close()">@Local["Đóng"]</button>
                            <button form="form3" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="return PRF_Print()">@Local["In và đóng"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        //#region //INIT - DEFINE
        let PRF_DataPrint, PRF_DataKeyPrint;
        let PRF_DataBranch = {};
        let PRF_whenAvailable;
        let PRF_branchID = "@Model._branchID";
        let PRF_dateFrom = "@Model._dateFrom";
        let PRF_dateTo = "@Model._dateTo";
        let PRF_PrintWidth = 0, PRF_PrintHeigth = 0;
        $(document).ready(function ()
        {
            $('#MainRenderBody').addClass('PRF_Hide_MainDiv');
            $('#MainRenderBody_Manual').addClass('PRF_Hide_MainDiv');
            PRF_Init();
        });

        function PRF_Init()
        {
            PRF_whenAvailable = PRF_InitControl();
        }

        async function PRF_InitControl()
        {
            return new Promise((resolve) =>
            {
                AjaxLoad(url = "/Print/Reports/reportform?handler=Initialize"
                    , data = { 'branchID': PRF_branchID }
                    , async = true
                    , error = function () { notiError_SW() }
                    , success = function (result)
                    {
                        if (result != "[]") {
                            let data = JSON.parse(result);
                            PRF_DataBranch = data[0] ?? {};

                            //Loadcombo
                            let DataPageSize = [{ ID: "210,297", Name: "A4 - khổ dọc 210 mm x 297 mm" }
                                , { ID: "297,210", Name: "A4 - khổ ngang 297 mm x 210 mm" }
                                , { ID: "148,210", Name: "A5 - khổ dọc 148 mm x 210 mm" }
                                , { ID: "210,148", Name: "A5 - khổ ngang 210 mm x 148 mm" }]
                            Load_Combo(DataPageSize, "PRF_cbbPageSize", true);
                            $("#PRF_PageSize").dropdown("refresh");
                            $("#PRF_PageSize").dropdown("set selected", "210,297");

                            PRF_RenderScaleSlide(id = 'PRF_scale-slider_hor', [...Array(101).keys()], PRF_scaleX, { rightLimit: 70, leftLimit: 30 });
                            //Set first title
                            $('#PRF_scale-slider_hor .ui-slider-pip .ui-slider-label')[0].innerHTML = 0
                        }
                        else if (result == "[]") {
                            notiWarning("@Local["Không có dữ liệu"]");
                        }
                        else {
                            notiError_SW()
                        }
                        resolve();
                    }
                    , sender = null
                    , before = function ()
                    {
                        $("#PRF_LoaderDiv").show();
                    }
                    , complete = function (e)
                    {
                        $("#PRF_LoaderDiv").hide();
                    }
                );
            });
        }
        //#endregion

        //#region //Render Scale Slider
        function PRF_scaleX(ui)
        {
            let pl = Number(PRF_PrintWidth) * (Number(ui.values[0]) / 100);
            let pr = Number(PRF_PrintWidth) * (1 - Number(ui.values[1]) / 100);
            $("#PRF_PrintDiv").css({
                'padding-left': `${pl}mm`,
                'padding-right': `${pr}mm`
            })
        }

        function PRF_RenderScaleSlide(id, data, funcChange, options)
        {
            let rightLimit = options?.rightLimit ?? 70;
            let leftLimit = options?.leftLimit ?? 70;
            let orientation = options?.orientation ?? "horizontal";
            $(`#${id}`)
                .slider({
                    max: data.length - 1,
                    min: 0,
                    values: [0, data.length - 1],
                    step: 1,
                    range: true,
                    orientation: orientation,
                    slide: function (event, ui)
                    {
                        if (ui.values[1] < rightLimit || ui.values[0] > leftLimit) {
                            return false;
                        }
                    },
                    change: function (event, ui)
                    {
                        if (ui.values[1] < rightLimit || ui.values[0] > leftLimit) {
                            return false;
                        }
                        if (typeof funcChange === 'function') {
                            funcChange(ui);
                        }
                    },
                })
                .slider("pips", {
                    rest: "label",
                    labels: data
                });
        }
        //#endregion

        //#region //FUNC CALLBACK
        async function PRF_CBPrintReport(namePrint, dataPrint, dataKeyPrint, options)
        {
            return new Promise((resolve) =>
            {
                $("#PRF_LoaderDiv").show();
                if (typeof PRF_whenAvailable === 'undefined') return;
                PRF_whenAvailable
                    .then(() =>
                    {
                        PRF_DataPrint = { ...dataPrint };
                        PRF_DataKeyPrint = { ...dataKeyPrint };
                        PRF_RenderNav(dataKeyPrint, id = 'PRF_SideNav');
                        let { empName } = options;
                        PRF_FillData({
                            dataBranch: PRF_DataBranch,
                            dataFrom: PRF_dateFrom,
                            dateTo: PRF_dateTo,
                            printName: namePrint ?? 'Vttech_PrintForm',
                            empName: empName || sys_employeeName_Main
                        });
                        PRF_RenderTbHeader(dataKeyPrint, id = 'PRF_dtContentHeader');
                        PRF_LoadData(dataPrint, dataKeyPrint, id = 'PRF_dtContentBody');
                        resolve();
                        $("#PRF_LoaderDiv").hide();
                    })
                    .catch(e => console.warn(e.toString()));
            })
        }
        //#endregion

        //#region //LOAD DATA
        function PRF_FillData(item)
        {
            //Fill data header
            let branchName = PRF_branchID != 0 ? PRF_DataBranch?.Name : decodeHtml('@Local["Tất cả chi nhánh"]');
            let branchPhone = PRF_branchID != 0 ? PRF_DataBranch?.Hotline : PRF_DataBranch?.CompanyPhone;
            $('#PRF_CompanyName').text(PRF_DataBranch?.CompanyName);
            $('#PRF_Logo').attr("src", PRF_DataBranch?.LogoCompany);
            $('#PRF_Branch').text(branchName);
            $('#PRF_BranchPhone').text(branchPhone);
            $('#PRF_CreatedBy').text(item?.empName);
            $('#PRF_DateFrom').text(item?.dataFrom);
            $('#PRF_DateTo').text(item?.dateTo);
            $('#PRF_name').text(decodeHtml(item?.printName));
            $('#PRF_txtName').val(decodeHtml(item?.printName));

        }

        async function PRF_RenderTbHeader(dataKeyPrint, id)
        {
            return new Promise((resolve) =>
            {
                var myNode = document.getElementById(id);
                if (myNode !== null) {
                    myNode.innerHTML = '';
                    if (Object.keys(dataKeyPrint).length !== 0) {
                        let stringContent = '';
                        for ([key, value] of Object.entries(dataKeyPrint)) {
                            let { isShow } = (value[1] ?? {});
                            let showField = (isShow ?? true) ? '' : 'display: none';
                            stringContent += `<th style="${showField}" data-name="${key}">${decodeHtml(value[0])}</th>`;
                        }
                        stringContent = '<tr>' + stringContent + '</tr>';
                        document.getElementById(id).innerHTML = stringContent;
                    }
                }
                resolve();
            });
        }

        async function PRF_LoadData(dataPrint, dataKeyPrint, id)
        {
            return new Promise((resolve) =>
            {
                $('#PRF_LoaderTbDiv').show();
                setTimeout(() =>
                {
                    $('#PRF_LoaderTbDiv').hide();
                    try {
                        var myNode = document.getElementById(id);
                        if (myNode !== null) {
                            myNode.innerHTML = '';
                            if (dataPrint && dataPrint.length > 0) {
                         
                                if (dataKeyPrint && Object.values(dataKeyPrint).length != 0) {
                                    let index = 0;
                                    let footer = {};
                                    for ([key, value] of Object.entries(dataPrint)) {
                                        let tr = '';
                                        if (Object.entries(dataKeyPrint).length > 0) {
                                            let j = 0;
                                            for ([key1, value1] of Object.entries(dataKeyPrint)) {
                                                let isTextCenter = (j == 0) ? 'text-center' : '';
                                                let showField = '';
                                                let valFooter;
                                                let total = 0;
                                                if (typeof value1 === 'object') {
                                                    let { isShow, callbackRenderValue, isTotalFooter } = (value1[1] ?? {});
                                                    showField = (isShow ?? true) ? '' : 'display: none'; 
                                                    let val = (typeof callbackRenderValue !== 'function' ? value[key1] : callbackRenderValue(value[key1], value, index));
     
                                                    valFooter = isTotalFooter ? PRF_SumFooter(footer[key1]?.value, val) : '';
                                                    tr += `<td style="${showField}" class="${isTextCenter}" data-name='${key1}'>${decodeHtml(val)}</td>`;
                                                }
                                                else {
                                                    tr += `<td class="${isTextCenter}" data-name='${key1}'>${decodeHtml(value[key1])}</td>`;
                                                }
                                                footer[key1] = {
                                                    isTextCenter,
                                                    showField,
                                                    value: valFooter ?? ''
                                                };
                                                j++;
                                            }
                                        }
                                        tr = '<tr role="row">' + tr + '</tr>';
                                        myNode.insertAdjacentHTML('beforeend', tr);
                                        index++;
                                    }
                                    //Render Footer
                                    let tfoot = PRF_RenderFooter(footer);
                                    myNode.insertAdjacentHTML('beforeend', tfoot);
                                }
                                else notiWarning('@Local["Không có trường dữ liệu"]');

                            }
                            else notiWarning("Empty data");
                        }
                        $('#PRF_LoaderTbDiv').hide();
                    }
                    catch (ex) {
                        console.log(ex.toString())
                        notiError_SW();
                    }
                    resolve();
                }, 500);
            });
        }

        function PRF_SumFooter(accumulator, currentValue)
        {
            try
            {
                let val = isNaN(Number(currentValue)) ? currentValue.toString().replace(/[^a-zA-Z0-9\.]/gm, "") : currentValue;
                if (/^(\-?\d+\.?\d*|\.\d+)$/.test(val)){
                    accumulator = (accumulator ?? 0) + Number(val);
                }
                return accumulator;
            }
            catch(ex){
                return 0;
            }
        }

        function PRF_RenderFooter(footer)
        {
            let tr = '';
            let countNotEmp = 0;
            for ([key, val] of Object.entries(footer)) {
                if (val && val.value != undefined && val.value != '') countNotEmp++;
                let valRow = !isNaN(Number(val?.value || NaN)) ? formatNumber(Number(val?.value)) : decodeHtml(val?.value);
                tr += `<td style="${val?.showField}" class="${val?.isTextCenter}" data-name='${key}'>${valRow}</td>`;
            }

            tr = (countNotEmp > 0) ? '<tfoot><tr role="row" class="text-white bg-gradient bg-primary">' + tr + '</tr></tfoot>' : '';
            return tr;
        }
        //#endregion

        //#region //RENDER SIDENAV OPTION
        async function PRF_RenderNav(dataKeyPrint, id)
        {
            return new Promise((resolve) =>
            {
                var myNode = document.getElementById(id);
                if (myNode !== null) {
                    myNode.innerHTML = '';
                    if (Object.keys(dataKeyPrint).length !== 0) {
                        let result = '';
                        let index = 0;
                        $(`#${id}`).css('opacity', 0);
                        for ([key, value] of Object.entries(dataKeyPrint)) {
                            index++;
                            if (index == 1) continue;
                            let { isShow } = (value[1] ?? {});
                            let isCheck = (isShow ?? true) ? 'checked' : '';
                            result += '<li class="px-1 nav-item field" role="presentation">'
                                + '<div class="form-check">'
                                + '<input id="cbk_' + key + '" name="cbk_' + key + '" '
                                + 'data-name="' + key + '" class="form-check-input pr-2 PRF_cbkHeader" type="checkbox"' + isCheck + '>'
                                + '<label class="custom-control-label" for="cbk_' + key + '">' + decodeHtml(value[0]) + '</label>'
                                + '</div>'
                                + '</li>'
                                + '<hr class="horizontal dark my-0 opacity-2">';

                        }
                        document.getElementById(id).innerHTML = result;
                        $(`#${id}`).animate({ opacity: 1 }, 1000);
                        PRF_Event();
                    }
                }
                resolve();
            })
        }
        //#endregion

        //#region //EVENT
        function PRF_Close()
        {
            $('#MainRenderBody').removeClass('PRF_Hide_MainDiv');
            $('#MainRenderBody_Manual').removeClass('PRF_Hide_MainDiv');
            $('#MainSendMail_Content').empty();
            $("#MainSendMail_Content").html('')
            $("#MainSendMail").removeClass('active');
        }

        function PRF_Print()
        {
            //Set style page print
            $('#PRF_formOption').form('validate form');
            if ($('#PRF_formOption').form('is valid')) {
                fn_Print(printedid = "PRF_PrintDiv"
                    , beforefun = function ()
                    {
                        $('#PRF_LoaderTbDiv').removeClass('d-none');
                        $("#PRF_PrintDiv textarea").replaceWith(function ()
                        {
                            return $("<pre />", {
                                id: $(this).attr('id'),
                                html: $(this).val(),
                                class: this.classList.value,
                                css: { "white-space": "break-spaces" }
                            })
                        })
                    }
                    , afterfun = function ()
                    {
                        $('#PRF_LoaderTbDiv').addClass('d-none');
                        $("#PRF_PrintDiv pre").replaceWith(function ()
                        {
                            return $("<textarea />", {
                                id: $(this).attr('id'),
                                html: $(this).html(),
                                class: this.classList.value,
                                css: { "oveflow-y": "hidden" }
                            })
                        });
                        PRF_Close();
                    }
                );
            }
        }

        function PRF_Event()
        {
            $('.PRF_cbkHeader').unbind('change').change(function ()
            {
                let _dataname = $(this).attr('data-name') ?? '';
                if (_dataname != '') {
                    let $th = $('#PRF_dtContent').find("thead").find('th[data-name="' + _dataname + '"]');
                    let $td = $('#PRF_dtContent').find("tbody").find('td[data-name="' + _dataname + '"]');
                    if ($th.length > 0) {
                        if ($(this).is(":checked")) $th.show();
                        else $th.hide();
                    }
                    if ($td.length > 0) {
                        if ($(this).is(":checked")) $td.show();
                        else $td.hide();
                    }
                }
            })
        }

        function PRF_changePageSize()
        {
            PRF_PrintWidth = $('#PRF_width').val();
            PRF_PrintHeigth = $('#PRF_height').val();
            $("#PRF_PrintDiv").css({
                'width': `${PRF_PrintWidth}mm`,
                'min-height': `${PRF_PrintHeigth}mm`
            })
            $("#PRF_scale-slider_hor").css({
                'width': `${PRF_PrintWidth}mm`,
            })
        }

        function PRF_cbbPageSizeChange()
        {
            let valDimenson = $('#PRF_PageSize').dropdown('get value') ?? "";
            let width = valDimenson.split(',') != undefined ? valDimenson.split(',')[0] : 0;
            let height = valDimenson.split(',') != undefined ? valDimenson.split(',')[1] : 0;
            $('#PRF_width').val(width);
            $('#PRF_height').val(height);
            PRF_PrintWidth = width;
            PRF_PrintHeigth = height;
            $("#PRF_PrintDiv").css({
                'width': `${PRF_PrintWidth}mm`,
                'min-height': `${PRF_PrintHeigth}mm`
            })
            $("#PRF_scale-slider_hor").css({
                'width': `${PRF_PrintWidth}mm`,
            })
        }
        function PRF_changeTitle()
        {
            let title = $('#PRF_txtName').val() || decodeHtml('@Local["Tiêu đề"]');
            $('#PRF_name').text(title);
        }
                        //#endregion
    </script>

    <style>
        .PRF_Hide_MainDiv {
            display: none !important;
        }
        /*----------------------------------------Horizontal Scale---------------------------------------*/
        #PRF_scale-slider_hor.ui-slider {
            border-radius: 0px;
            background: #c7cdd5;
            border: none;
            height: 2px;
            margin: 1em 4em 4em;
        }

            #PRF_scale-slider_hor.ui-slider .ui-slider-range {
                background: linear-gradient(to right, #434d5a 0%, #00c7d7 50%, #434d5a 100%);
                border: 1px solid rgba(67, 77, 90, 0.5);
                height: 4px;
                top: -1px;
                transition: all 0.2s ease-out;
            }

        #PRF_scale-slider_hor .ui-slider-handle {
            border-radius: 2px;
            height: 20px;
            width: 12px;
            top: -26px;
            left: -26px;
            border: none;
        }

            #PRF_scale-slider_hor .ui-slider-handle:nth-of-type(n+1) {
                transform: rotateZ(0deg);
                margin-left: -6px;
            }

            #PRF_scale-slider_hor .ui-slider-handle:nth-of-type(n+2) {
                transform: rotateZ(0deg);
                margin-left: -5px;
            }

            #PRF_scale-slider_hor .ui-slider-handle:after {
                content: "";
                border: 6px solid transparent;
                width: 0;
                height: 0;
                position: absolute;
                bottom: -11px;
                border-top-color: #434d5a;
            }

            #PRF_scale-slider_hor .ui-slider-handle.ui-slider-handle.ui-state-focus:after,
            #PRF_scale-slider_hor .ui-slider-handle.ui-slider-handle.ui-state-hover:after,
            #PRF_scale-slider_hor .ui-slider-handle.ui-slider-handle.ui-state-active:after {
                border-top-color: #00c7d7;
            }

        #PRF_scale-slider_hor .ui-slider-pip {
            top: 2px;
        }

            #PRF_scale-slider_hor .ui-slider-pip .ui-slider-label {
                display: none;
                background: rgba(67, 77, 90, 0);
                color: #434d5a;
                border-radius: 4px;
                padding: 0.3em 0;
                width: 2.4em;
                margin-left: -1.2em;
                transition: all 0.2s ease-out;
            }

            #PRF_scale-slider_hor .ui-slider-pip .ui-slider-line {
                height: 4px;
            }

            #PRF_scale-slider_hor .ui-slider-pip:nth-of-type(5n+3) .ui-slider-line {
                height: 8px;
            }

            #PRF_scale-slider_hor .ui-slider-pip:nth-of-type(10n+3) .ui-slider-line {
                height: 12px;
            }

            #PRF_scale-slider_hor .ui-slider-pip:nth-of-type(10n+3) .ui-slider-label {
                top: 16px;
                display: block;
            }

            #PRF_scale-slider_hor .ui-slider-pip.ui-slider-pip-last .ui-slider-line {
                margin-left: -1px;
            }

            #PRF_scale-slider_hor .ui-slider-pip.ui-slider-pip-selected .ui-slider-label,
            #PRF_scale-slider_hor .ui-slider-pip.ui-slider-pip-selected-first .ui-slider-label,
            #PRF_scale-slider_hor .ui-slider-pip.ui-slider-pip-selected-second .ui-slider-label {
                background: rgba(67, 77, 90, 0.7);
                color: #fffaf7;
            }

        #PRF_scale-slider_hor span.ui-corner-all.ui-slider-handle.ui-state-default {
            background: transparent;
        }
    </style>
