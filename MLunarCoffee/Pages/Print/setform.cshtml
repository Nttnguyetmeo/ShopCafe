@page
@model MLunarCoffee.Pages.Print.setform
@{
    Layout = null;
}
@Html.AntiForgeryToken()

<div class="row">

    <div class="col-12">
        <div class="card mb-3">
            <div class="card-header p-3 pb-0">
                <div class="d-flex mt-2 me-n3">
                    <div class="col-auto my-auto">
                        <div class="px-1">
                            <p class="pb-0 mb-0">
                                <a id="sf_infocolpe" class="btn btn-sm text-md btn-primary" data-bs-toggle="collapse" href="#sf_infoarea" role="button" aria-expanded="false">
                                    <i class="fas fa-angle-down pe-3"></i>
                                    <span id="sfs_nameheader">-</span>
                                </a>
                            </p>
                        </div>
                    </div>
                    <div class="my-auto ms-auto me-3">
                        <button class="btn btn-sm  text-md p-2 btn-danger"
                                onclick="event.preventDefault();lf_Cancel()">
                            @Local["Đóng"]
                        </button>
                        <button id="sf_btnUndo" class="btn btn-sm  text-md p-2 btn-dark" onclick="event.preventDefault();lf_Undo()">
                            <span>@Local["Hoàn tác"]</span>
                        </button>

                        <button class="btn btn-sm  text-md p-2 btn-success" onclick="event.preventDefault();lf_Preview()">@Local["Xem trước"]</button>
                        <button type="button" onclick="event.preventDefault();sf_SetformSave(0)" class="btn btn-sm  text-md p-2 bg-gradient-primary">@Local["Lưu và đóng"]</button>
                        <button id="sf_btnSaveConti" type="button" onclick="event.preventDefault();sf_SetformSave(1)" class="btn btn-sm  text-md p-2 bg-gradient-info d-none">@Local["Lưu và tiếp tục"]</button>
                        <button id="sf_btnReset" type="button" onclick="event.preventDefault();sf_Resetform()" class="btn btn-sm  text-md p-2 bg-gradient-warning  d-none">@Local["Đặt lại"]</button>
                    </div>
                </div>
            </div>
            <div class="card-body pt-0 px-0">
                <div class="collapsesticky z-index-sticky w-100 shadow-lg rounded-3 py-5 position-absolute bg-white  collapse" id="sf_infoarea">
                    <div class="card-body pt-0 ps-3 pb-0">
                        <div class="row px-2 form3" id="sf_form">
                            <div class="col-12 col-md-5 col-xl-4 p-1">
                                <ul id="sfs_size" class="w-100 nav nav-pills flex-column bg-white border-radius-lg px-2">
                                </ul>
                            </div>
                            <div class="col-12 col-md-7 col-xl-8 p-1">
                                <div class="row">
                                    <div class="field col-12 p-1">
                                        <label>@Local["Tên mẫu"]</label>
                                        <input id="sfs_name" class="form-control" name="name" type="text" placeholder="eg. @Local["Tên mẫu"]" onchange="sf_NameChange()" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 col-sm-6 col-xl-6 p-1">
                                        <label>@Local["Loại"]</label>
                                        <div class="ui fluid search selection dropdown" id="sfs_type">
                                            <input type="hidden" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .type</div>
                                            <div id="cbbsfs_type" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 col-sm col-xl p-1">
                                        <label>Command</label>
                                        <div class="ui fluid search selection dropdown" id="sfs_command" onchange="sf_CommandChange()">
                                            <input type="hidden" name="command" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .command</div>
                                            <div id="cbbsfs_command" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 col-sm-3 col-xl-3 p-1" id="sfs_StogeSign_area">
                                        <label>@Local["Ký hiệu"]</label>
                                        <div class="ui fluid search selection dropdown" id="sfs_StogeSign">
                                            <input type="hidden" name="command" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .command</div>
                                            <div id="cbbsfs_StogeSign" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 col-sm-3 col-xl-3 p-1">
                                        <label>@Local["Kích thước"]</label>
                                        <div class="ui fluid search selection dropdown" id="sfs_dimension" onchange="sf_DimensionChange()">
                                            <input type="hidden" name="command" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .dimension</div>
                                            <div id="cbbsfs_dimension" class="menu" tabindex="-1">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="field col-12 col-sm-3 col-xl-3 p-1">
                                        <label>@Local["Phân trang"]</label>
                                        <div class="ui fluid search selection dropdown" id="sfs_paging">
                                            <input type="hidden" name="command" />
                                            <input class="search" autocomplete="off" tabindex="0" />
                                            <div class="default text">eg .paging</div>
                                            <div id="cbbsfs_paging" class="menu" tabindex="-1">
                                            </div>
                                        </div>

                                    </div>
                                    <div class="field col-12 col-sm-3 col-xl-3 p-1">
                                        <label>@Local["Chiều rộng"] (mm)</label>
                                        <input id="sfs_width" class="form-control" min="0" value="0" type="number" onchange="sf_SizeChange()" placeholder="eg. width" />
                                    </div>
                                    <div class="field col-12 col-sm-3 col-xl-3 p-1">
                                        <label>@Local["Chiều cao"] (mm)</label>
                                        <input id="sfs_height" class="form-control" min="0" value="0" type="number" onchange="sf_SizeChange()" placeholder="eg. height" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="field col-12 p-1">
                                        <label>@Local["Ghi chú"]</label>
                                        <input id="sfs_note" class="form-control" type="text" placeholder="eg. @Local["Ghi chú"]" />
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="field col-12 p-1">
                                        <label>@Local["Hình mờ"]</label>
                                        <input id="sfs_watermark" class="form-control" type="text" placeholder="eg. @Local["Hình mờ"]" onchange="sf_SizeChange()" />
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="d-flex mt-4 ms-3">
                            Using
                            <i class="mx-1 mt-1 fas fa-arrow-alt-circle-left"></i>
                            <i class="mx-1 mt-1 fas fa-arrow-alt-circle-up"></i>
                            <i class="mx-1 mt-1 fas fa-arrow-circle-right"></i>
                            <i class="mx-1 mt-1 fas fa-arrow-circle-down"></i>
                            to move and using
                            <span class="text-danger text-bold mx-1">DEL</span> to delele element.
                            <span class="text-danger text-bold mx-1">Ctr C,Ctr V </span> to  copy and paste
                        </div>
                    </div>
                </div>
                <div class="d-flex">
                    <div class="col-auto my-auto">
                        <div class="d-flex ms-4" id="sliderArea">
                            <div id="sliderDouble" style="margin-right: 15px; width: 200px; "></div>
                            <div id="sliderNum" class="mt-n2 text-danger">100%</div>
                            <a id="sf_setfree" class="text-md ms-2 ms-3 mt-n2 cursor-pointer text-primary" onclick="event.preventDefault();sf_SetformDraging()">Free position</a>
                        </div>

                    </div>
                    <div class="my-auto ms-auto">
                        <div class="me-3 text-end text-danger text-gradient text-sm font-weight-bold" id="sfMessage"></div>
                        <ul id="sf_element" class="nav nav-pills p-1 bg-transparent me-2">
                        </ul>
                    </div>
                </div>

                <div class="row px-2" id="sf_settingarea">
                    <div class="col-12">
                        <div class="py-2">

                            <div class="row ps-1 pe-3 h-100">
                                <div id="sf_proarea" class="col-12 col-sm-12 col-md-3 col-xl-3 mt-lg-n2 mt-0 p-1">
                                    <div class="pt-3 px-2  mt-0 ">
                                        <div class="draggableField ui-widget-content  mb-3">
                                            <h5 id="headingConstant">
                                                <i class="cursor-pointer p-2 text-sm fa fa-plus text-xs collapsed" data-bs-toggle="collapse"
                                                   data-bs-target="#collapseConstant" aria-expanded="false" aria-controls="collapseConstant">
                                                </i>
                                                <span class="text-sm text-dark">List constant</span>
                                            </h5>
                                            <div id="collapseConstant" class="collapsesticky accordion-collapse collapse" aria-labelledby="headingConstant">
                                                <div class="accordion-body p-0 ps-4 text-sm overflow-y">
                                                    <div class="w-100 pe-0 me-0  ">
                                                        <ul id="sf_contanst" class="nav nav-pills flex-column bg-transparent border-radius-lg">
                                                            <li class="nav-item field" role="presentation">
                                                                <a data-value="sys_username" class="detail p-1 py-2 nav-link cursor-pointer">
                                                                    <span class="text-sm  text-dark">Tên tài khoản</span>
                                                                </a>
                                                                <hr class="horizontal dark my-0 opacity-2">
                                                            </li>
                                                            <li class="nav-item field" role="presentation">
                                                                <a data-value="sys_empname" class="detail p-1 py-2 nav-link cursor-pointer">
                                                                    <span class="text-sm  text-dark">Tên nhân viên</span>
                                                                </a>
                                                                <hr class="horizontal dark my-0 opacity-2">
                                                            </li>
                                                            <li class="nav-item field" role="presentation">
                                                                <a data-value="sys_currentdate" class="detail p-1 py-2 nav-link cursor-pointer">
                                                                    <span class="text-sm  text-dark">Ngày hôm nay</span>
                                                                </a>
                                                                <hr class="horizontal dark my-0 opacity-2">
                                                            </li>
                                                        </ul>


                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="draggableField ui-widget-content  mb-3">
                                            <h5 id="headingField">
                                                <i class="cursor-pointer p-2 text-sm fa fa-plus text-xs" data-bs-toggle="collapse"
                                                   data-bs-target="#collapseField" aria-expanded="false" aria-controls="collapseField">
                                                </i>
                                                <span class="text-sm text-dark">List mapping field</span>
                                            </h5>
                                            <div id="collapseField" class="collapsesticky accordion-collapse collapse" aria-labelledby="headingField">
                                                <div class="input-group flex-nowrap px-3 sticky-top" id="sfsearchdiv">
                                                    <div class="input-group-text input-group-text px-2">
                                                        <i class="fas fa-search" aria-hidden="true"></i>
                                                        <div class="spinner-border spinner-border-sm d-none"></div>
                                                    </div>
                                                    <input id="sf_searchinput" type="text" class="form-control" placeholder="eg .search field">
                                                    <div class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1" aria-hidden="true"></i></div>
                                                </div>
                                                <div class="accordion-body text-sm overflow-y">
                                                    <ul id="sf_field" class="nav nav-pills flex-column bg-transparent border-radius-lg d-none">
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="draggableField ui-widget-content  mb-3">
                                            <h5 id="headingPro">
                                                <i class="cursor-pointer p-2 text-sm fa fa-plus text-xs collapsed" data-bs-toggle="collapse"
                                                   data-bs-target="#collapsePro" aria-expanded="false" aria-controls="collapsePro">
                                                </i>
                                                <span class="text-sm text-dark">List properties</span>
                                            </h5>
                                            <div id="collapsePro" class="collapsesticky accordion-collapse collapse show" aria-labelledby="headingPro">
                                                <div class="accordion-body text-sm overflow-y">
                                                    <div id="sf_formproperty" class="w-100 pe-0 me-0  mt-3 position-relative">
                                                        <div class="col-12">
                                                            <div class="input-group mt-1">
                                                                <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                      data-bs-original-title="Trường dữ liệu mapping">
                                                                    <i class="fas fa-map-marker"></i>
                                                                </span>
                                                                <input id="sf_id" class="fw-bold text-primary opacity-10 ps-2 form-control  disabled" placeholder="eg. mapping field" type="text">
                                                                <span class="input-group-text bg-transparent">
                                                                    <i class="fas fa-minus-circle" onclick="sf_ObjectRemoveID()"></i>
                                                                </span>
                                                            </div>
                                                            <div id="sf_procol" class="col-12 d-none ">
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Tên cột trong table">
                                                                        <i class="fas fa-heading"></i>
                                                                    </span>
                                                                    <input id="sf_colheadertext" class="ps-2 form-control  disabled" placeholder="eg. header column" type="text">
                                                                </div>
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Tên footer trong table">
                                                                        <i class="fas fa-font"></i>
                                                                    </span>
                                                                    <input id="sf_colfootertext" class="ps-2 form-control  disabled" placeholder="eg. footer column" type="text">
                                                                </div>
                                                                <div class="mt-1">
                                                                    <span class="text-dark pb-1">Số span</span>
                                                                    <input id="sf_colfooterspan" class="ps-2 form-control  disabled" placeholder="eg. footer span" min="0" type="number">
                                                                </div>
                                                                <div class="mt-1">
                                                                    <span class="text-dark pb-1">Field</span>
                                                                    <div class="ui fluid search selection form-control dropdown disabled" id="sf_footerfield">
                                                                        <input type="hidden" name="branch">
                                                                        <input class="search" autocomplete="off" tabindex="0" />
                                                                        <div class="default text">eg. select field</div>
                                                                        <div id="cbbsf_footerfield" class="menu" tabindex="-1">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Class footer">
                                                                        <i class="fas fa-code"></i>
                                                                    </span>
                                                                    <input id="sf_colfooterclass" class="ps-2 form-control  disabled" placeholder="eg. class footer" type="text">
                                                                </div>
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Class cột">
                                                                        <i class="fas fa-code"></i>
                                                                    </span>
                                                                    <input id="sf_colheaderclass" class="ps-2 form-control  disabled" placeholder="eg. class header" type="text">
                                                                </div>
                                                            </div>
                                                            <div id="sf_proelenment" class="col-12 d-none ">
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Text label trong checkbox">
                                                                        <i class="fas fa-align-justify"></i>
                                                                    </span>
                                                                    <input id="sf_text" class="ps-2 form-control  disabled" placeholder="eg. text" type="text">
                                                                </div>

                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Radio name">
                                                                        <i class="fas fa-align-justify"></i>
                                                                    </span>
                                                                    <input id="sf_nameradio" class="ps-2 form-control  disabled" placeholder="eg. radio name" type="text">
                                                                </div>
                                                                <div class="input-group mt-1">
                                                                    <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                          data-bs-original-title="Giá trị true /false checkbox">
                                                                        <i class="fas fa-bold"></i>
                                                                    </span>
                                                                    <div class="form-control p-0">
                                                                        <div class="ui fluid search form-control selection dropdown disabled" style="border: 0;" id="sf_valuebool">
                                                                            <input type="hidden" name="branch" readonly="readonly">
                                                                            <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                                                            <i class="dropdown icon"></i>
                                                                            <div class="default text">eg. true / false</div>
                                                                            <div class="menu" tabindex="-1">
                                                                                <div class="item" data-value="false">false</div>
                                                                                <div class="item" data-value="true">true</div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <div class="col-12">
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">Header/footer/body</span>
                                                                <div class="ui fluid search selection dropdown form-control disabled" id="sf_typewhole">
                                                                    <input type="hidden" />
                                                                    <i class="dropdown icon"></i>
                                                                    <input class="search" autocomplete="off" tabindex="0" />
                                                                    <div class="default text">eg .type</div>
                                                                    <div class="menu" tabindex="-1">
                                                                        <div class="item" data-value="1">Header</div>
                                                                        <div class="item" data-value="2">Body</div>
                                                                        <div class="item" data-value="3">Footer</div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">Lặp lại (Render ul)</span>
                                                                <div class="form-control p-0">
                                                                    <div class="ui fluid search form-control selection dropdown disabled" style="border: 0;" id="sf_repeat">
                                                                        <input type="hidden" name="branch" readonly="readonly">
                                                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                                                        <i class="dropdown icon"></i>
                                                                        <div class="default text">eg. repeat</div>
                                                                        <div class="menu" tabindex="-1">
                                                                            <div class="item" data-value="false">false</div>
                                                                            <div class="item" data-value="true">true</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="input-group mt-1">
                                                                <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                      data-bs-original-title="Dữ liệu control (innerhtml, val ,etc,... Table map)">
                                                                    <i class="fas fa-align-justify"></i>
                                                                </span>
                                                                <input id="sf_value" class="ps-2 form-control  disabled" placeholder="eg. value" type="text">
                                                            </div>
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">Manual Value</span>
                                                                <div class="form-control p-0">
                                                                    <div class="ui fluid search form-control selection dropdown disabled" style="border: 0;" id="sf_manual">
                                                                        <input type="hidden" name="branch" readonly="readonly">
                                                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                                                        <i class="dropdown icon"></i>
                                                                        <div class="default text">eg. manual value</div>
                                                                        <div class="menu" tabindex="-1">
                                                                            <div class="item" data-value="false">false</div>
                                                                            <div class="item" data-value="exchange_rate">Exchange Rate</div>
                                                                            <div class="item" data-value="val_input_1">Value Input 1</div>
                                                                            <div class="item" data-value="val_input_2">Value Input 2</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">Class control</span>
                                                                <textarea id="sf_class" class="ps-2 mt-1 form-control  disabled" placeholder="eg. class" rows="2" type="text"></textarea>
                                                            </div>
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">CSS</span>
                                                                <textarea id="sf_style" class="ps-2 mt-1 form-control  disabled" placeholder="eg. style" rows="2" type="text"></textarea>
                                                                <textarea id="sf_styletd" class="ps-2 mt-1 form-control  disabled" placeholder="eg. style td" rows="2" type="text"></textarea>
                                                                <input id="sf_imagetd" class="ps-2 mt-1 form-control  disabled" placeholder="eg. image link td" type="text">
                                                            </div>
                                                            <div class="input-group mt-1">
                                                                <span class="input-group-text bg-transparent" data-bs-toggle="tooltip" data-bs-placement="top"
                                                                      data-bs-original-title="QR(True/False)">
                                                                    <i class="fas fa-bold"></i>
                                                                </span>
                                                                <div class="form-control p-0">
                                                                    <div class="ui fluid search form-control selection dropdown disabled" style="border: 0;" id="sf_valueqr">
                                                                        <input type="hidden" name="branch" readonly="readonly">
                                                                        <input class="search" autocomplete="off" tabindex="0" readonly="readonly">
                                                                        <i class="dropdown icon"></i>
                                                                        <div class="default text">eg. @Local["Đúng / Sai"]</div>
                                                                        <div class="menu" tabindex="-1">
                                                                            <div class="item" data-value="false">@Local["Sai"]</div>
                                                                            <div class="item" data-value="true">@Local["Đúng"]</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="mt-1">
                                                                <span class="text-dark pb-1">Row-col span excel</span>
                                                                <div class="row m-n1">
                                                                    <div class="col-12 col-sm-6 col-xl-6 p-1">
                                                                        <input id="sf_excelrowspan" class="ps-2 form-control  disabled" placeholder="eg. rowspan" type="number">
                                                                    </div>
                                                                    <div class="col-12 col-sm-6 col-xl-6 p-1">
                                                                        <input id="sf_excelcolspan" class="ps-2 form-control  disabled" placeholder="eg. colspan" type="number">
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div id="sf_type" class="text-dark ms-sm-2 mt-2 font-weight-bold mb-3 py-2"></div>
                                                            <div class="w-auto mt-1 position-fixed bottom-3 z-index-3">
                                                                <div class="mt-2 d-flex px-0 py-2">
                                                                    <button id="sf_Clonebtn" class="me-1 btn btn-sm px-2 text-normal text-xs py-1 bg-gradient-info disabled m-0"
                                                                            onclick="event.preventDefault();sf_ObjectClone()">
                                                                        <span class="text-sm">@Local["Sao chép"]</span>
                                                                    </button>
                                                                    <button id="sf_ClearContentbtn" class="me-1 btn btn-sm px-2 text-normal text-xs py-1 bg-gradient-warning disabled m-0" onclick="event.preventDefault();sf_ObjectClear()">
                                                                        <span class="text-sm">@Local["Làm trống"]</span>
                                                                    </button>
                                                                    <button id="sf_updatebtn" class="me-1 btn btn-sm px-2 text-normal text-xs py-1 bg-gradient-success disabled m-0" onclick="event.preventDefault();sf_ObjectUpdate()">
                                                                        <span class="text-sm">@Local["Lưu"]</span>
                                                                    </button>
                                                                    <button id="sf_removebtn" class="me-0 btn btn-sm px-2 text-normal text-xs py-1 bg-gradient-danger disabled m-0" onclick="event.preventDefault();sf_ObjectRemove()">
                                                                        <span class="text-sm">@Local["Xóa"]</span>
                                                                    </button>
                                                                </div>
                                                                <div style="height:20px;">
                                                                    <div id="sf_actionnoti" class="text-white rounded-2 bg-gradient-success text-center text-md ms-0 text-uppercase me-0">
                                                                    </div>
                                                                </div>                                                                
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-9 col-xl-9 p-1 flex-grow-1 overflow-auto">
                                    <div id="sf_formdetail" class="d-flex justify-content-center bg-gray-100 h-100 w-100">
                                        <div id="sf_formarea" class=" border-dashed border-1 border-secondary border-radius-md mt-0 h-100 w-100">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    var sf_size = {
        0: {
            "name": '@Local["A4-khổ dọc"]',
            "w": 210,
            "h": 297
        },
        1: {
            "name": '@Local["A4-khổ ngang"]',
            "w": 297,
            "h": 210
        },
        2: {
            "name": '@Local["A5-khổ dọc"]',
            "w": 148,
            "h": 210
        },
        3: {
            "name": '@Local["A5-khổ ngang"]',
            "w": 210,
            "h": 148
        },
        4: {
            "name": 'K57',
            "w": 57,
            "h": 0
        },
        5: {
            "name": 'K80',
            "w": 80,
            "h": 0
        }
    };
    var sf_masterdata = [];
    var sf_data = {};
    var sf_col = {
        "class": "text-center",
        "classtd": "",
        "text": "column",
        "footerclass": "",
        "footerspan": 0,
        "footertext": "footer text",
        "footerid": "",
        "ismanual": false,
        "style": "",
        "styletd": "",
        "id": ""
    };
    var sf_exceltr = {
        "class": "",
        "td": {},
        "id": "",
        "style": ""
    };
    var sf_exceltd = {
        "class": "",
        "text": "sample",
        "id": "",
        "style": "",
        "image":"",
        "rowspan": "",
        "colspan": ""
    };
    var sf_element = {
        "0": {
            "class": "row text-sm text-dark text-normal m-0 px-0",
            "type": "row",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole":2,
            "text": "",
            "name": "",
            "child": {}
        },
        "1": {
            "class": "col text-sm text-dark text-normal m-0",
            "type": "col",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "text": "",
            "name": "",
            "child": {}
        },
        "2": {
            "class": "form-control text-sm text-dark text-normal",
            "type": "input",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "3": {
            "class": "w-100 pb-0 text-sm m-0 text-dark text-normal",
            "type": "label",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "4": {
            "class": "avatar avatar-sm",
            "type": "img",
            "value": "/default.png",
             "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "5": {
            "class": "form-check-input text-sm pb-0 text-dark text-normal",
            "type": "checkbox",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "6": {
            "class": "form-control pb-0 text-sm text-dark text-normal",
            "type": "textarea",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "7": {
            "class": "form-check-input pb-0 text-sm text-dark text-normal",
            "type": "radio",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "name": "",
            "text": ""
        },
        "8": {
            "class": "table vt-table table-bordered",
            "type": "table",
            "id": "",
            "style": "",
            "name": "",
            "col": {}
        },
        "9": {
            "class": "pagebreak",
            "type": "pagebreak",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "typewhole": 2,
            "text": "",
            "name": ""
        },
        "10": {
            "class": "tableexcel position-relative",
            "type": "tableexcel",
            "id": "",
            "style": "",
            "name": "",
            "col": {}
        },
        "11": {
            "class": "iframe",
            "type": "iframe",
            "value": "",
            "style": "",
            "id": "",
            "isrepeat": false,
            "isqr": false,
            "name": "",
            "text": ""
        },
    };
    var sf_command = 0;
    var sf_typeexcel = 0;
    var sf_obselected = '';
    var sf_typeselected = '';
    let sf_indexvalue;
    let sf_dimenflag = 0;
    var lf_Detail = (@Model.Detail);
    let sf_datafield;
    var data_Timersf;
    var sfdragging = 0;
    var ctrlDown = false;
    var sf_copydata;
    var sf_copytype;
    $(document).ready(function () {
        if (lf_Detail == 0) {
            $("#sf_infoarea").addClass('show');
        }
        else {
            $("#sf_btnSaveConti").removeClass('d-none');
            $("#sf_btnReset").removeClass('d-none');
        }
        sf_ElementRender(sf_element, "sf_element");
        sf_ObjectEvent();
        sf_GetInitialize(lf_Detail);
        sf_SizeRender(sf_size, "sfs_size");
        sf_SettingIni();
        sf_EventMoveEle();

    });

    //#region // Function Other
    function lf_Preview () {
        let stylePreview = document.getElementById('sf_stylepreview');
        let styleSetting = document.getElementById('sf_styleSetting');
        if (stylePreview.hasAttribute('media')) {
            stylePreview.removeAttribute('media');
            styleSetting.setAttribute('media', "max-width: 1px")
        }
        else {
            stylePreview.setAttribute('media', "max-width: 1px");
            styleSetting.removeAttribute('media');
        }


    }
    function lf_Undo () {
        sf_obselected = '';
        sf_typeselected = '';
        if (sf_masterdata.length > 1) {
            let lastitem = sf_masterdata[sf_masterdata.length - 2];
            sf_data = JSON.parse(JSON.stringify(lastitem));
            sf_masterdata.pop();
            sf_ObjectDraw(sf_data, 'sf_formarea');
        }
    }
    function sf_Resetform () {
        sfdragging = 0; sf_dimenflag = 0;
        sf_obselected = '';
        sf_typeselected = '';
        sf_command = 0;
        sf_masterdata = [];
        sf_GetInitialize(lf_Detail);
    }
    function sf_SettingIni () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
        var slider = document.getElementById('sliderDouble');
        noUiSlider.create(slider, {
            start: [100],
            connect: true,
            step: 10,

            range: {
                'min': 10,
                'max': 200
            }
        });
        slider.noUiSlider.on('change', function (e) {

            var slider = document.getElementById('sf_formarea');
            slider.style.zoom = Number(e).toFixed() + "%";
            $('#sliderNum').html(Number(e).toFixed() + "%")
        });

    }
    function sf_EventMoveEle () {

        $('#sf_formarea').keyup(function (e) {
            if (sf_dimenflag == 1) {
                sf_dimenflag = 0;
                if (e.keyCode == 46) {
                    sf_ObjectRemove();
                    $('.tooltip.fade.show').remove();
                }
                if (e.keyCode == 37 || e.keyCode == 38) {

                    sf_ObjectUp();
                    $('.tooltip.fade.show').remove();
                }
                if (e.keyCode == 39 || e.keyCode == 40) {
                    sf_ObjectDown();
                    $('.tooltip.fade.show').remove();
                }
                sf_dimenflag = 1;
            }
        });

        $('#sf_formarea').keydown(function (e) {
            if (e.keyCode == 17 || e.keyCode == 91) ctrlDown = true;
        }).keyup(function (e) {
            if (e.keyCode == 17 || e.keyCode == 91) ctrlDown = false;
        });



        $('#sf_formarea').keydown(function (e) {
            if (ctrlDown && (e.keyCode == 67)) {
                sf_ObjectCopy();
            }
            if (ctrlDown && (e.keyCode == 86)) {
                sf_ObjectPasted();
            }
        });

    }
    function sf_SetformDraging()
    {

        if (!$(".draggableField").hasClass('dragingpro')) {
            $(".draggableField").addClass('dragingpro')
            $(".draggableField").draggable();
            $(".draggableField").resizable();
            $('#sf_setfree').html('Dock position');
            $("#sf_proarea").addClass('draginghide');
        }
        else {
            $(".draggableField").removeClass('dragingpro')
            $(".draggableField").draggable();
            $(".draggableField").draggable('destroy');
            $(".draggableField").css("top","0px");
            $(".draggableField").css("left", "0px");
            $(".draggableField").css("width", "");
            $(".draggableField").css("height", "");
            $('#sf_setfree').html('Free position');
            $("#sf_proarea").removeClass('draginghide');

        }
    }
    //#endregion
    //#region // Infomation
    function sf_GetInitialize (id) {
        AjaxLoad(url = "/Print/setform/?handler=GetInitial"
            , data = {"id": id}
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "") {
                    sf_dimenflag = 0;
                    let datas = JSON.parse(result);
                    let datadetail = datas.Detail;
                    Load_Combo(datas.Command, "cbbsfs_command", false);
                    Load_Combo(datas.Type, "cbbsfs_type", true);
                    if(datas.StogeSign.length != 0 ){
                        $("#sfs_StogeSign_area").removeClass('d-none');
                        Load_Combo(datas.StogeSign, "cbbsfs_StogeSign", false);
                    }
                    else{
                        $("#sfs_StogeSign_area").addClass('d-none');
                    }
                    Load_Combo([{"ID": false, "Name": "false"}, {"ID": true, "Name": "true"}], "cbbsfs_dimension", true);
                    Load_Combo([{"ID": false, "Name": "false"}, {"ID": true, "Name": "true"}], "cbbsfs_paging", true);

                    sf_dimenflag = 1;
                    $("#sfs_dimension").dropdown("refresh");
                    $("#sfs_dimension").dropdown("set selected", false);
                    $("#sfs_width").prop('disabled', true);
                    $("#sfs_height").prop('disabled', true);
                    sf_InfoEvent();

                    if (lf_Detail != 0 && datadetail != undefined && datadetail.length == 1) {
                        let item = datadetail[0];
                        sf_data = JSON.parse(item.Form);
                        sf_ObjectDraw(sf_data, 'sf_formarea');
                        $('#sfs_name').val(item.Name);
                        $('#sfs_nameheader').html(item.Name);
                        $("#sfs_command").dropdown("refresh");
                        $("#sfs_command").dropdown("set selected", Number(item.CommandID));
                        $("#sfs_type").dropdown("refresh");
                        $("#sfs_type").dropdown("set selected", Number(item.Type));                        
                        $("#sfs_StogeSign").dropdown("refresh");
                        $("#sfs_StogeSign").dropdown("set selected", Number(item.StogeSign));
                        //$("#sfs_command").dropdown("refresh");
                        //$("#sfs_command").dropdown("set selected", Number(item.CommandID));

                        sf_command = Number(item.CommandID);

                        if (item.Dimension == 0) {
                            $('#sfs_width').val(0);
                            $('#sfs_height').val(0);
                            $("#sfs_dimension").dropdown("refresh");
                            $("#sfs_dimension").dropdown("set selected", false);
                            $("#sfs_width").prop('disabled', true);
                            $("#sfs_height").prop('disabled', true);
                            $('#sfs_paging').addClass('disabled');
                            $("#sfs_paging").dropdown("refresh");
                            $("#sfs_paging").dropdown("set selected", false);
                        }
                        else {
                            $("#sfs_dimension").dropdown("refresh");
                            $("#sfs_dimension").dropdown("set selected", true);
                            $('#sfs_width').val(item.Widthmm);
                            $('#sfs_height').val(item.Heightmm);
                            $("#sfs_width").prop('disabled', false);
                            $("#sfs_height").prop('disabled', false);
                            $('#sfs_paging').removeClass('disabled');
                            $("#sfs_paging").dropdown("refresh");
                            $("#sfs_paging").dropdown("set selected", Number(item.IsPaging) == 1);

                        }
                        $('#sfs_note').val(item.Desciption);
                        $('#sfs_watermark').val(item.Watermark);

                        
                        sf_SizeChange();
                    }

                }
            }
        );
    }
    function sf_DimensionChange () {
        if (sf_dimenflag == 1) {
            let dimesion = $('#sfs_dimension').dropdown('get value');
            if (dimesion == 'true') {
                $("#sfs_width").prop('disabled', false);
                $("#sfs_height").prop('disabled', false);
                $('#sfs_paging').removeClass('disabled');
            } else {
                $("#sfs_width").prop('disabled', true);
                $("#sfs_height").prop('disabled', true)
                $('#sfs_paging').addClass('disabled');
                $("#sfs_paging").dropdown("refresh");
                $("#sfs_paging").dropdown("set selected", false);
            }


        }
    }
    function sf_CommandChange () {

        if (sf_dimenflag == 1) {

            sf_dimenflag = 0;
            let newsf_command = (Number($('#sfs_command').dropdown('get value')) ? Number($('#sfs_command').dropdown('get value')) : 0);
            if (sf_command != 0 && sf_command != newsf_command ) {
                const promise = notiConfirm('@Local["Tất cả thay đổi sẽ bị xóa"]');
                promise.then(function () {sf_CommandChangeExe(newsf_command);}, function (e) {
                    $("#sfs_command").dropdown("refresh");
                    $("#sfs_command").dropdown("set selected", Number(sf_command));
                    sf_dimenflag = 1;
                });
            }
            else {
                sf_command = newsf_command;
                sf_CommandChangeExe(newsf_command);
            }
        }
    }
    function sf_NameChange () {
        $('#sfs_nameheader').html($('#sfs_name').val());
    }
    function sf_CommandChangeExe (command) {
        sf_command = command;
        if (sf_command != 0) {
            sf_FieldGet(sf_command);
            $('#sf_field').removeClass('d-none');
        }
        else {
            $('#sf_field').addClass('d-none');
        }
       // sf_ObjectReDataID(sf_data);
       // sf_ObjectReColDataID(sf_data);
        sf_ObjectDraw(sf_data, 'sf_formarea');
        sf_ElementFilter(true);
        sf_dimenflag = 1;
    }
    function sf_SizeChange () {
        if (sf_dimenflag == 1) {
            let he = Number($("#sfs_height").val());
            let wi = Number($("#sfs_width").val());
            let watermark = $("#sfs_watermark").val();
            if (wi > 0) {
                $('#sf_formarea').css({"width": wi + "mm"});
                $('#sf_formarea').removeClass('w-100');
            }
            else {
                $('#sf_formarea').addClass('w-100');
                $('#sf_formarea').removeProp('width');
                wi = 0;
            }
            if (he > 0) {
                $('#sf_formarea').css({"height": he + "mm"});
                $('#sf_formarea').removeClass('h-100');
            }
            else {
                $('#sf_formarea').addClass('h-100');
                $('#sf_formarea').removeProp('height');
                he = 0;
                
            }            
            if (wi != 0 && he != 0 && watermark != '') {
                let style = $("#sf_formarea").attr('style') ? $("#sf_formarea").attr('style') : ""; ;
                $('#sf_formarea').attr('style', style + `background:url('${watermark}') no-repeat center !important ;background-size:100%!important;`);
            }
            else {
                let style = $("#sf_formarea").attr('style') ? $("#sf_formarea").attr('style') : "";
                $('#sf_formarea').attr('style', style + `background-image:none !important;`);               
            }
        }
    }

    function sf_SizeRender (elements, id) {

        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            for ([k, v] of Object.entries(elements)) {
                stringContent = stringContent + '<li class="nav-item field" role="presentation">'
                    + '<a datakey="' + k + '" class="size p-1 py-2 nav-link cursor-pointer">'
                    + '<span class="text-sm fw-bold text-dark ">' + v.name + '</span>'
                    + '<span class="text-sm  ms-2 text-secondary ">' + v.w + ' mm x ' + v.h + ' mm</span>'
                    + '</a>'
                    + '</li>'
                    + '<hr class="horizontal dark my-0 opacity-2">';


            }

            document.getElementById(id).innerHTML = stringContent;
        }

    }
    function sf_InfoEvent () {
        $("#sfs_size .size").unbind('click').click(function (event) {
            let key = $(this).attr('datakey');
            $("#sfs_dimension").dropdown("refresh");
            $("#sfs_dimension").dropdown("set selected", true);
            let vsize = sf_size[key];
            $('#sfs_width').val(vsize.w);
            $('#sfs_height').val(vsize.h);
            sf_SizeChange();
        });


    }

    //#endregion
    //#region // Field
    function sf_FieldGet (id) {

        AjaxLoad(url = "/Print/setform/?handler=GetCol"
            , data = {'command': id}
            , async = true
            , error = function () {notiError_SW();}
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    sf_FieldRender(data, "sf_field");

                    sf_FieldEvent();
                }
            }
        );
    }
    async function sf_FieldRender (datas, id) {
        return new Promise((resolve, reject) => {
            let drops = [];
            let fileds = [];
            for ([k, v] of Object.entries(datas)) {
                if (v != undefined && v.length == 1) {
                    let ob = Object.entries(v[0]);
                    for (let i = 0; i < ob.length; i++) {
                        let e = {};
                        e.name = ob[i][0];
                        e.des = ob[i][1];
                        fileds.push(e);
                        let e1 = {};
                        e1.ID = ob[i][0];
                        e1.Name = ob[i][0]  ;
                        drops.push(e1);
                    }

                }
            }
            sf_datafield = fileds;
            sf_FieldRenderExe(sf_datafield,id);
            Load_Combo(drops, "cbbsf_footerfield", false);
        });
    }
    function sf_FieldRenderExe (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    stringContent = stringContent + '<li class="nav-item field" role="presentation">'
                        + '<a data-value="' + item.name + '" class="detail p-1 py-2 nav-link cursor-pointer disabled ">'

                        + '<span class="text-sm fw-bold text-dark">' + item.des + '</span>'
                        + '<span class="text-sm ms-2 text-primary">' + item.name + '</span>'
                        + '</a>'
                        + '</li>'
                        + '<hr class="horizontal dark my-0 opacity-2">';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function sf_FieldEvent () {
        $("#sf_field .detail").unbind('click').click(function (event) {
            if (sf_obselected !== '' && sf_obselected !== 0) {
                sf_ObjectUpdateID($(this).attr('data-value'))
            }
        });
        $('#sf_searchinput').unbind('keyup').keyup(function () {
            if ($(this).val().length > 0) $("#sfsearchdiv .btn_clear").removeClass('opacity-1');
            else $("#sfsearchdiv .btn_clear").addClass('opacity-1');
            $("#sfsearchdiv .fa-search").hide();
            $("#sfsearchdiv .spinner-border").removeClass('d-none');
            clearTimeout(data_Timersf);
            data_Timersf = setTimeout(function (e) {
                sf_FieldFilter("sf_field");
            }, 200);
        });
        $("#sfsearchdiv").on('click', '.btn_clear', function (e) {
            $('#sf_searchinput').val('');
            $("#sf_searchinput .btn_clear").addClass('opacity-1');
            sf_FieldFilter("sf_field");

        });
    }
    async function sf_FieldFilter (id) {
        new Promise((resolve, reject) => {
            setTimeout(
                () => {
                    let textsearch = $('#sf_searchinput').val().trim();
                    if (textsearch == "") {
                        sf_FieldRenderExe(sf_datafield, id);
                    }
                    else {
                        let search = xoa_dau(textsearch.toLowerCase());
                        if (search == "") {
                            sf_FieldRenderExe(sf_datafield, id);
                        }
                        else {
                            let data = sf_datafield.filter(word => {
                                return (xoa_dau(word["name"].toLowerCase()).includes(search)
                                    || xoa_dau(word["des"].toLowerCase()).includes(search));
                            });
                            sf_FieldRenderExe(data, id);

                        }
                    }
                    $("#sfsearchdiv .fa-search").show();
                    $("#sfsearchdiv .spinner-border").addClass('d-none');
                    switch (sf_typeselected) {
                        case 'td': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        case 'label': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        case 'img': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        case 'iframe': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        case 'textarea':
                        case 'input': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        case 'radio': {
                            break;
                        }

                        case 'checkbox': {
                            $('#sf_field .detail').removeClass('disabled');
                            break;
                        }
                        default: {
                            break;
                        }
                    }
                    sf_FieldEvent();
                    resolve()
                }
            )
        })
    }
    //#endregion
    //#region // Element
    async function sf_ElementRender (elements, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';
                let stringContent = '';
                for ([k, v] of Object.entries(elements)) {
                    stringContent = stringContent +
                        `<li datakey=${k} datatype=${v.type} class="disabled nav-item element cursor-pointer border-1 border-secondary bg-gray-300 border-radius-md  p-1 px-2 text-dark text-xs fw-bold">
                            ${v.type}
                        </li>`;
                }

                document.getElementById(id).innerHTML = stringContent;
            }
            sf_ElementEvent();

        });
    }
    function sf_ElementEvent () {
        $("#sf_element .element").unbind('click').click(function (event) {

            if (sf_obselected !== '' && (sf_typeselected == 'row' || sf_typeselected == 'col')) {
                let key = $(this).attr('datakey');
                let valueadd = JSON.parse(JSON.stringify(sf_element[key]));

                sf_ObjectAdd(sf_obselected, valueadd);

            }
        });
    }
    function sf_ElementFilter (hide, type, id,excel) {

        $('#sf_class').val('');
        $('#sf_style').val('');
        $('#sf_styletd').val('');
        $('#sf_imagetd').val('');

        $('#sf_id').val('');
        $('#sf_type').html('');
        $('#sf_text').val('');
        $('#sf_value').val('');
        $('#sf_nameradio').val('');
        $('#sf_excelrowspan').val(0);
        $('#sf_excelcolspan').val(0);


        $('#sf_colfooterclass').val('');
        $('#sf_colfooterspan').val(1);
        $('#sf_colfootertext').val('');


        $('#sf_excelrowspan').addClass('disabled');
        $('#sf_excelcolspan').addClass('disabled');


        $('#sf_procol').addClass('d-none');
        $('#sf_proelenment').addClass('d-none');
        $('#sf_field .detail').addClass('disabled');
        $("#sf_valuebool").dropdown("refresh");
        $("#sf_valuebool").dropdown("set selected", false);
        $("#sf_valueqr").dropdown("refresh");
        $("#sf_valueqr").dropdown("set selected", false);
        $("#sf_repeat").dropdown("refresh");
        $("#sf_repeat").dropdown("set selected", false);
        $("#sf_manual").dropdown("refresh");
        $("#sf_manual").dropdown("set selected", false);
        $("#sf_typewhole").dropdown("refresh");
        $("#sf_typewhole").dropdown("set selected", 2);

        $("#sf_footerfield").dropdown("refresh");
        $("#sf_footerfield").dropdown("clear");
        $('#sf_removebtn').addClass('disabled');
        $('#sf_updatebtn').addClass('disabled');
        $('#sf_Clonebtn').addClass('disabled');
        $('#sf_ClearContentbtn').addClass('disabled');

        $('#sf_footerfield').addClass('disabled');
        $('#sf_valuebool').addClass('disabled');
        $('#sf_valueqr').addClass('disabled');
        $('#sf_repeat').addClass('disabled');
        $('#sf_manual').addClass('disabled');
        $('#sf_typewhole').addClass('disabled');
        $('#sf_styletd').addClass('disabled');
        $('#sf_imagetd').addClass('disabled');

        if (hide) {
            $('#sf_element li').addClass('disabled');
        }
        else {
            if (type == 'row' || type == 'col') $('#sf_element li').removeClass('disabled');
            else $('#sf_element li').addClass('disabled');
        }
        $('#sf_formproperty input').addClass('disabled');

        if (hide == false && id != 0) {
            $('#sf_class').removeClass('disabled');
            $('#sf_removebtn').removeClass('disabled');
            $('#sf_updatebtn').removeClass('disabled');
            $('#sf_Clonebtn').removeClass('disabled');
            $('#sf_ClearContentbtn').removeClass('disabled');
            $('#sf_type').html(type);

            switch (type) {
                case 'td': {
                    if (excel == true) {
                        $('#sf_excelrowspan').removeClass('disabled');
                        $('#sf_excelcolspan').removeClass('disabled');
                        $('#sf_value').removeClass('disabled');
                        $('#sf_field .detail').removeClass('disabled');
                        $('#sf_manual').removeClass('disabled');
                        $('#sf_style').removeClass('disabled');
                        $('#sf_imagetd').removeClass('disabled');

                    }
                    else {
                        $('#sf_field .detail').removeClass('disabled');
                        $('#sf_colheadertext').removeClass('disabled');
                        $('#sf_colheaderclass').removeClass('disabled');
                        $('#sf_colfooterclass').removeClass('disabled');
                        $('#sf_colfooterspan').removeClass('disabled');
                        $('#sf_colfootertext').removeClass('disabled');
                        $('#sf_footerfield').removeClass('disabled');
                        $('#sf_procol').removeClass('d-none');
                        $('#sf_manual').removeClass('disabled');
                        $('#sf_styletd').removeClass('disabled');
                        $('#sf_style').removeClass('disabled');
                    }
                    break;
                }
                case 'label': {
                    $('#sf_style').removeClass('disabled');
                    $('#sf_field .detail').removeClass('disabled');
                    $('#sf_value').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    $('#sf_valueqr').removeClass('disabled');
                    $('#sf_manual').removeClass('disabled');
                    break;
                }
                case 'iframe':
                case 'img': {
                    $('#sf_style').removeClass('disabled');
                    $('#sf_field .detail').removeClass('disabled');
                    $('#sf_value').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    break;
                }
                case 'textarea':
                case 'input': {
                   $('#sf_style').removeClass('disabled');
                    $('#sf_field .detail').removeClass('disabled');
                    $('#sf_value').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    break;
                }
                case 'radio': {
                    $('#sf_nameradio').removeClass('disabled');
                    $('#sf_text').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    break;
                }

                case 'checkbox': {
                    $('#sf_style').removeClass('disabled');
                    $('#sf_field .detail').removeClass('disabled');
                    $('#sf_valuebool').removeClass('disabled');
                    $('#sf_text').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    break;
                }
                case 'table': {
                    $('#sf_style').removeClass('disabled');
                    $('#sf_proelenment').removeClass('d-none');
                    $('#sf_value').removeClass('disabled');
                    break;
                }
                case 'row': {
                    $('#sf_typewhole').removeClass('disabled');
                    $('#sf_typewhole').removeClass('disabled');
                    $('#sf_repeat').removeClass('disabled');
                    $('#sf_value').removeClass('disabled');
                    break;
                }
                case 'pagebreak': {
                    $('#sf_class').addClass('disabled');
                    $('#sf_style').addClass('disabled');
                    $('#sf_typewhole').addClass('disabled');
                    $('#sf_repeat').addClass('disabled');
                    $('#sf_manual').addClass('disabled');
                    $('#sf_value').addClass('disabled ');
                    break;
                }
                default: {
                    $('#sf_proelenment').removeClass('d-none');
                    $('#sf_style').removeClass('disabled');
                    break;
                }
            }
        }
    }
    async function sf_notiaction (_s) {
        new Promise((resolve, reject) => {
            $('#sf_actionnoti').show();
            $('#sf_actionnoti').html('');
            $("#sf_actionnoti").append(`<span class="show2s">${_s}</span>`);
            setTimeout(() => {
                $('#sf_actionnoti').hide();
            }, 1000);
            resolve();
        });
    }

    //#endregion
    // #region // Up and down
    function sf_ObjectUp () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeselected == 'td') sf_ObjectUpTdRecur(sf_obselected, sf_data);
            else sf_ObjectUpRecur(sf_obselected, sf_data);
            sf_ObjectDraw(sf_data, 'sf_formarea', isselected = 1);
        }
    }
    function sf_ObjectUpRecur (id, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            let beforek = -1;
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {

                    if (beforek != -1 && _eles[beforek] != undefined) {
                        let swap = JSON.parse(JSON.stringify(v));
                        swap.random = _eles[beforek].random;
                        let swap1 = JSON.parse(JSON.stringify(_eles[beforek]));
                        swap1.random = v.random;
                        _eles[k] = swap1;
                        _eles[beforek] = swap;
                        $("#" + beforek).trigger("click");
                        $("#sf_formarea").attr("tabindex", -1).focus()
                        break;
                    }
                }
                beforek = k;
                sf_ObjectUpRecur(id, v.child);
            }
        }
    }
    function sf_ObjectUpTdRecur (id, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    let beforek = -1;
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            if (beforek != -1 && v.col[beforek] != undefined) {
                                let swap = JSON.parse(JSON.stringify(v1));
                                swap.random = v.col[beforek].random;
                                let swap1 = JSON.parse(JSON.stringify(v.col[beforek]));
                                swap1.random = v1.random;
                                v.col[k1] = swap1;
                                v.col[beforek] = swap;

                                $("#" + beforek).trigger("click");
                                $("#sf_formarea").attr("tabindex", -1).focus()

                            }
                            break;
                        }
                        beforek = k1;
                    }

                }
                else sf_ObjectUpTdRecur(id, v.child);
            }
        }
    }

    function sf_ObjectDown () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeselected == 'td') sf_ObjectDownTdRecur(sf_obselected, sf_data);
            else sf_ObjectDownRecur(sf_obselected, sf_data);
            sf_ObjectDraw(sf_data, 'sf_formarea', isselected = 1);
            $("#" + sf_obselected).addClass('_selected');
        }
    }
    function sf_ObjectDownRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            let beforek = -1;
            for ([k, v] of Object.entries(_eles).reverse()) {
                if (k === id) {
                    if (beforek != -1 && _eles[beforek] != undefined) {
                        let swap = JSON.parse(JSON.stringify(v));
                        swap.random = _eles[beforek].random;
                        let swap1 = JSON.parse(JSON.stringify(_eles[beforek]));
                        swap1.random = v.random;
                        _eles[k] = swap1;
                        _eles[beforek] = swap;
                        $("#" + beforek).trigger("click");
                        $("#sf_formarea").attr("tabindex", -1).focus()
                        break;
                    }
                }
                beforek = k;
                sf_ObjectDownRecur(id, v.child);


            }
        }
    }
    function sf_ObjectDownTdRecur (id, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    let beforek = -1;
                    for ([k1, v1] of Object.entries(v.col).reverse()) {
                        if (k1 === id) {
                            if (beforek != -1 && v.col[beforek] != undefined) {
                                let swap = JSON.parse(JSON.stringify(v1));
                                swap.random = v.col[beforek].random;
                                let swap1 = JSON.parse(JSON.stringify(v.col[beforek]));
                                swap1.random = v1.random;
                                v.col[k1] = swap1;
                                v.col[beforek] = swap;
                                $("#" + beforek).trigger("click");
                                $("#sf_formarea").attr("tabindex", -1).focus()
                            }
                            break;
                        }
                        beforek = k1;
                    }

                }
                else sf_ObjectDownTdRecur(id, v.child);
            }
        }
    }
    //#endregion
    //#region // Read
    function sf_ObjectRead () {

        if (sf_obselected != '' && sf_obselected !== 0) {
            sf_indexvalue = undefined;
            if (sf_typeselected == 'td') {
                if (sf_typeexcel == 0) {
                    sf_ObjectReadtdRecur(sf_obselected, sf_data)
                    if (sf_indexvalue != undefined) {
                        $('#sf_colheaderclass').val(sf_indexvalue.class);
                        $('#sf_class').val(sf_indexvalue.classtd);
                        $('#sf_style').val(sf_indexvalue.style != undefined ? sf_indexvalue.style : "");
                        $('#sf_styletd').val(sf_indexvalue.styletd != undefined ? sf_indexvalue.styletd : "");
                        $('#sf_id').val(sf_indexvalue.id);
                        $('#sf_colheadertext').val(sf_indexvalue.text);
                        $('#sf_colfooterclass').val(sf_indexvalue.footerclass);
                        $('#sf_colfooterspan').val(sf_indexvalue.footerspan);
                        $('#sf_colfootertext').val(sf_indexvalue.footertext);
                        $("#sf_footerfield").dropdown("refresh");
                        $("#sf_footerfield").dropdown("set selected", sf_indexvalue.footerid);
                        if (!$('#sf_manual').hasClass('disabled')) {
                            $("#sf_manual").dropdown("refresh");
                            $("#sf_manual").dropdown("set selected", sf_indexvalue.ismanual);
                        }
                    }
                }
                else {
                    sf_ObjectReadExcel_Td(sf_obselected, sf_data);
                    if (sf_indexvalue != undefined) {
                        $('#sf_style').val(sf_indexvalue.style != undefined ? sf_indexvalue.style : "");
                        $('#sf_imagetd').val(sf_indexvalue.image != undefined ? sf_indexvalue.image : "");
                        $('#sf_value').val(sf_indexvalue.text);
                        $('#sf_excelrowspan').val(sf_indexvalue.rowspan != undefined ? sf_indexvalue.rowspan:0);
                        $('#sf_excelcolspan').val(sf_indexvalue.colspan != undefined ? sf_indexvalue.colspan : 0);
                        if (!$('#sf_manual').hasClass('disabled')) {
                            $("#sf_manual").dropdown("refresh");
                            $("#sf_manual").dropdown("set selected", sf_indexvalue.ismanual);
                        }
                    }
                }
            }
            else {
                if (sf_typeselected == 'tr' && sf_typeexcel == 1) {
                    sf_ObjectReadExcel_Tr(sf_obselected, sf_data);
                    $('#sf_style').val(sf_indexvalue.style != undefined ? sf_indexvalue.style : "");
                    $('#sf_class').val(sf_indexvalue.class);
                    if (!$('#sf_manual').hasClass('disabled')) {
                        $("#sf_manual").dropdown("refresh");
                        $("#sf_manual").dropdown("set selected", sf_indexvalue.ismanual);
                    }
                }
                else {
                    sf_ObjectReadRecur(sf_obselected, sf_data);
                    if (sf_indexvalue != undefined) {
                        $('#sf_class').val(sf_indexvalue.class);
                        $('#sf_style').val(sf_indexvalue.style != undefined ? sf_indexvalue.style : "");
                        $('#sf_id').val(sf_indexvalue.id);
                        $('#sf_text').val(sf_indexvalue.text);
                        $('#sf_nameradio').val(sf_indexvalue.name);


                        if (!$('#sf_valueqr').hasClass('disabled')) {
                            $("#sf_valueqr").dropdown("refresh");
                            $("#sf_valueqr").dropdown("set selected", sf_indexvalue.isqr);
                        }

                        if ($('#sf_valuebool').hasClass('disabled')) {
                            $('#sf_value').val(sf_indexvalue.value);
                        }
                        else {
                            $("#sf_valuebool").dropdown("refresh");
                            $("#sf_valuebool").dropdown("set selected", sf_indexvalue.value);
                        }

                        if (!$('#sf_repeat').hasClass('disabled')) {
                            $("#sf_repeat").dropdown("refresh");
                            $("#sf_repeat").dropdown("set selected", sf_indexvalue.isrepeat);
                        }
                        if (!$('#sf_manual').hasClass('disabled')) {
                            $("#sf_manual").dropdown("refresh");
                            $("#sf_manual").dropdown("set selected", sf_indexvalue.ismanual);
                        }
                        if (!$('#sf_typewhole').hasClass('disabled')) {
                            $("#sf_typewhole").dropdown("refresh");
                            $("#sf_typewhole").dropdown("set selected", sf_indexvalue.typewhole);
                        }

                        }
                }
            }
            $('#sf_formproperty textarea').each(function () {
                this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');
            }) ;
        }
    }
    function sf_ObjectReadExcel_Td (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        for ([k2, v2] of Object.entries(v1.td)) {
                            if (k2 === id) {
                                sf_indexvalue = v2;
                                break;
                            }
                        }


                    }
                }

            }
        }
    }
    function sf_ObjectReadExcel_Tr (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            sf_indexvalue = v1;
                            break;
                        }
                    }
                }


            }
        }
    }
    function sf_ObjectReadtdRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            sf_indexvalue = v1;
                            break;
                        }
                    }
                }
                else sf_ObjectReadtdRecur(id, v.child);

            }
        }
    }
    function sf_ObjectReadRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    sf_indexvalue = v;
                    break;
                }
                else sf_ObjectReadRecur(id, v.child);
            }
        }
    }
    //#endregion
    //#region // Clear
    function sf_ObjectClear () {

        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeselected == 'table') sf_ObjectClearTdRecur(sf_obselected, sf_data);
            else sf_ObjectClearRecur(sf_obselected, sf_data);
            sf_ObjectDraw(sf_data, 'sf_formarea');
        }
    }
    function sf_ObjectClearRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id && v.child != undefined) {
                    v.child = {};
                    break;
                }
                else sf_ObjectClearRecur(id, v.child);
            }
        }
    }
    function sf_ObjectClearTdRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    if (k === id) {
                        v.col = {};
                        break;
                    }
                }
                else sf_ObjectClearTdRecur(id, v.child);
            }
        }
    }
    //#endregion
    //#region // Clone
    function sf_ObjectClone () {

        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeexcel == 0) {
                if (sf_typeselected == 'td') sf_ObjectCloneTdRecur(sf_obselected, sf_data);
                else sf_ObjectCloneRecur(sf_obselected, 0, sf_data);
            }
            else {
                if (sf_typeselected == 'tableexcel') sf_ObjectClone_Excel(sf_obselected, sf_data);
            }
            sf_ObjectDraw(sf_data, 'sf_formarea');
        }
    }
    function sf_ObjectClone_Excel (id, _eles) {
        let time = (new Date()).getTime();
        let idrandom = time.toString() + id.toString();
        let valueadd = undefined;

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && k == id) {
                    valueadd = JSON.parse(JSON.stringify(v));
                    valueadd.random = idrandom;
                    for ([k1, v1] of Object.entries(valueadd.col)) {
                        sf_ObjectCloneTableReset(v1.td);
                    }
                    break;
                }
            }
        }

        if (valueadd != undefined) {
            let new_ = JSON.parse(JSON.stringify(valueadd));
            new_.col = {};

            for ([k, v] of Object.entries(valueadd.col)) {
                let time = (new Date()).getTime();
                let idrandom = time.toString() + RandomNumber().toString();
                let _newr = JSON.parse(JSON.stringify(v));
                _newr.random = idrandom;
                _newr.id = idrandom;
                new_.col[idrandom] = _newr;
            }

            _eles[idrandom] = new_;
        }
    }
    function sf_ObjectCloneRecur (id, idparent, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    let objClone = JSON.parse(JSON.stringify(v));
                    if (v.type == 'table') sf_ObjectCloneTableReset(objClone.col);
                    else sf_ObjectCloneReset(objClone.child);
                    sf_ObjectAdd(idparent, objClone)
                    break;
                }
                else sf_ObjectCloneRecur(id, k, v.child);
            }
        }
    }

    function sf_ObjectCloneTableReset (elements) {
        if (elements != undefined && Object.keys(elements).length != 0) {
            for ([k, v] of Object.entries(elements)) {
                let time = (new Date()).getTime();
                let idrandom = time.toString() + RandomNumber().toString();
                v.random = idrandom;
                elements[idrandom] = elements[k];
                delete elements[k];
            }
        }
    }
    function sf_ObjectCloneReset (elements) {
        if (elements != undefined && Object.keys(elements).length != 0) {
            for ([k, v] of Object.entries(elements)) {
                if (v.type == 'table') {
                    let time, idrandom;

                    for ([kc, vc] of Object.entries(v.col)) {
                        time = (new Date()).getTime();
                        idrandom = time.toString() + RandomNumber().toString();
                        vc.random = idrandom;
                        v.col[idrandom] = v.col[kc];
                        delete v.col[kc];
                    }
                    time = (new Date()).getTime();
                    idrandom = time.toString() + RandomNumber().toString();
                    v.random = idrandom;
                    elements[idrandom] = elements[k];
                    delete elements[k];
                }
                else {
                    if (v.child != undefined && Object.keys(v.child).length != 0) {
                        sf_ObjectCloneReset(v.child)
                    }
                    else {
                        let time = (new Date()).getTime();
                        let idrandom = time.toString() + RandomNumber().toString();
                        v.random = idrandom;
                        elements[idrandom] = elements[k];
                        delete elements[k];
                    }
                }
            }
        }
    }
    function sf_ObjectCloneTdRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {

                            let time = (new Date()).getTime();
                            let idrandom = time.toString() + RandomNumber().toString();
                            let valueadd = JSON.parse(JSON.stringify(v1));
                            valueadd.random = idrandom;
                            sf_ObjectColAddRecur(idrandom, valueadd, k, _eles);

                            break;
                        }
                    }

                }
                else sf_ObjectCloneTdRecur(id, v.child);
            }
        }
    }
    //#endregion
    //#region // Update remove add
    function sf_ObjectRemove () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeexcel == 1 && sf_typeselected == 'td') {
                sf_ObjectRemove_Td(sf_obselected, sf_data);
            }
            else if (sf_typeexcel == 1 && sf_typeselected == 'tr') {
                sf_ObjectRemove_Tr(sf_obselected, sf_data);
            }
            else if (sf_typeselected == 'td') sf_ObjectRemoveTdRecur(sf_obselected, sf_data);
            else sf_ObjectRemoveRecur(sf_obselected, sf_data);

            sf_ObjectDraw(sf_data, 'sf_formarea');
            sf_obselected = '';
            sf_typeselected = '';
            sf_ElementFilter(true);
        }
    }
    function sf_ObjectRemove_Tr (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == "tableexcel") {
                    for (let [k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            delete v.col[k1]
                            break;
                        }
                    }
                }
            }
        }
    }
    function sf_ObjectRemove_Td (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == "tableexcel") {
                    for (let [k1, v1] of Object.entries(v.col)) {

                        for (let [k2, v2] of Object.entries(v1.td)) {
                            if (k2 === id) {
                                delete v1.td[k2]
                                break;
                            }
                        }
                    }
                }
            }
        }
    }


    function sf_ObjectRemoveRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    delete _eles[k]
                    break;
                }
                else sf_ObjectRemoveRecur(id, v.child);


            }
        }
    }
    function sf_ObjectRemoveTdRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            delete v.col[k1]
                            break;
                        }
                    }


                }
                else sf_ObjectRemoveTdRecur(id, v.child);
            }
        }
    }
    function sf_ObjectUpdate () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            let _class = $('#sf_class').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _style = $('#sf_style').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _styletd = $('#sf_styletd').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _imagelink = $('#sf_imagetd').val().replace(/^\s+|\s+$/gm, '').toLowerCase();

            let _exrowspan = $('#sf_excelrowspan').val();
            let _excolspan = $('#sf_excelcolspan').val();



            let _text = $('#sf_text').val().replace(/^\s+|\s+$/gm, '');
            let _name = $('#sf_nameradio').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _fieldfooter = undefined;
            let _value = undefined;
            let _valuebool = undefined;
            let _isrepeat = undefined;
            let _ismanual = undefined;
            let _isqr = undefined;
            let _typewhole = 2;
            if ($('#sf_valuebool').hasClass('disabled')) {
                _value = $('#sf_value').val().replace(/^\s+|\s+$/gm, '');
            }
            else {
                _valuebool = $('#sf_valuebool').dropdown('get value');
            }
            if (!$('#sf_footerfield').hasClass('disabled')) {
                _fieldfooter = $('#sf_footerfield').dropdown('get value');
            }
            if (!$('#sf_repeat').hasClass('disabled')) {
                _isrepeat = $('#sf_repeat').dropdown('get value');
            }
            if (!$('#sf_manual').hasClass('disabled')) {
                _ismanual = $('#sf_manual').dropdown('get value');
            }
            if (!$('#sf_valueqr').hasClass('disabled')) {
                _isqr = $('#sf_valueqr').dropdown('get value');
            }
            if (!$('#sf_typewhole').hasClass('disabled')) {
                _typewhole = $('#sf_typewhole').dropdown('get value');
            }
            let _headtext = $('#sf_colheadertext').val().replace(/^\s+|\s+$/gm, '');
            let _headclass = $('#sf_colheaderclass').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _footerclass = $('#sf_colfooterclass').val().replace(/^\s+|\s+$/gm, '').toLowerCase();
            let _footerspan = Number($('#sf_colfooterspan').val());
            let _footertext = $('#sf_colfootertext').val().replace(/^\s+|\s+$/gm, '');
            if (sf_typeselected == 'td') {
                if (sf_typeexcel == 1) {
                    sf_ObjectUpdateTdExcel(sf_obselected
                        , _text = _value
                        , _class = _class
                        , _style = _style
                        , _rowspan = _exrowspan
                        , _colspan = _excolspan
                        , _ismanual = _ismanual
                        , _imagelink = _imagelink
                        , sf_data);
                    }
                else {
                    sf_ObjectUpdateTdRecur(sf_obselected
                        , _headtext = _headtext
                        , _headclass = _headclass
                        , _tdclass = _class
                        , _footerclass = _footerclass
                        , _footerspan = _footerspan
                        , _footertext = _footertext
                        , _fieldfooter = _fieldfooter
                        , _ismanual = _ismanual
                        , _style = _style
                        , _styletd = _styletd

                    , sf_data);
                }
            }
            else {
                if (sf_typeexcel == 1 && sf_typeselected == 'tr') {
                    sf_ObjectUpdateTrExcel(sf_obselected, _class, _style, _ismanual, sf_data);
                }
                else {
                    sf_ObjectUpdateRecur(sf_obselected
                        , _text = _text
                        , _value = _value
                        , _valuebool = _valuebool
                        , _class = _class
                        , _style = _style
                        , _name = _name
                        , _isrepeat = _isrepeat
                        , _ismanual = _ismanual
                        , _isqr = _isqr
                        , _typewhole = _typewhole
                        , sf_data);
                }
            }
            sf_ObjectDraw(sf_data, 'sf_formarea');
            sf_notiaction('@Local["Lưu"]');
        }
    }
    function sf_ObjectUpdateTdExcel (id, _text, _class, _style, _rowspan, _colspan, _ismanual, _imagelink, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {

                        for (let [k2, v2] of Object.entries(v1.td)) {
                            if (k2 === id) {
                                v2.text = _text;
                                v2.class = _class;
                                v2.style = _style;
                                v2.rowspan = _rowspan;
                                v2.colspan = _colspan;
                                v2.ismanual = _ismanual;
                                v2.image = _imagelink;
                                break;
                            }
                        }
                    }
                }
            }
        }
    }
    function sf_ObjectUpdateTrExcel(id, _class, _style, _ismanual, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            v1.class = _class;
                            v1.style = _style;
                            v1.ismanual = _ismanual;
                            break;
                        }
                    }
                }
            }
        }
    }


    function sf_ObjectUpdateTdRecur (id, _headtext, _headclass, _tdclass, _footerclass, _footerspan, _footertext, _fieldfooter, _ismanual
        , _style
        , _styletd
        , _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            v1.text = _headtext;
                            v1.classtd = _tdclass;
                            v1.class = _headclass;
                            v1.footerclass = _footerclass;
                            v1.footerspan = _footerspan;
                            v1.footertext = _footertext;
                            v1.footerid = _fieldfooter;
                            v1.ismanual = _ismanual;
                            v1.style = _style;
                            v1.styletd = _styletd;
                            break;
                        }
                    }


                }
                else sf_ObjectUpdateTdRecur(id, _headtext, _headclass, _tdclass, _footerclass, _footerspan, _footertext, _fieldfooter, _ismanual
                    , _style
                    , _styletd
                    , v.child);

            }
        }
    }
    function sf_ObjectUpdateRecur(id, _text, _value, _valuebool, _class, _style, _name, _isrepeat, _ismanual, _isqr, _typewhole, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    v.text = _text;
                    v.value = _valuebool == undefined ? _value : _valuebool;
                    v.class = _class;
                    v.style = _style;
                    v.name = _name;
                    v.isrepeat = _isrepeat;
                    v.ismanual = _ismanual;
                    v.isqr = _isqr;
                    v.typewhole = _typewhole;
                    break;
                }
                else sf_ObjectUpdateRecur(id, _text, _value, _valuebool, _class, _style, _name, _isrepeat, _ismanual, _isqr, _typewhole, v.child);


            }
        }
    }
    function sf_ObjectUpdateID (id) {
        if (sf_obselected != '' && sf_obselected !== 0) {

            if (sf_typeselected == 'td') {
                if (sf_typeexcel == 1) {
                    sf_ObjectUpdateIDColExcel(sf_obselected
                        , _id = id
                        , sf_data);
                }
                else sf_ObjectUpdateIDColRecur(sf_obselected
                    , _id = id
                    , sf_data);
            }
            else {
                sf_ObjectUpdateIDRecur(sf_obselected
                    , _id = id
                    , sf_data);
            }

            sf_ObjectDraw(sf_data, 'sf_formarea');
            sf_ObjectRead();
        }
    }
    function sf_ObjectUpdateIDColExcel (id, _id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        for ([k2, v2] of Object.entries(v1.td)) {
                            if (k2 === id) {
                                v2.id = _id;
                                break;
                            }
                        }
                    }
                }

            }
        }

    }
    function sf_ObjectUpdateIDColRecur (id, _id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (v.type == 'table' && Object.keys(v.col).length > 0) {
                    for ([k1, v1] of Object.entries(v.col)) {
                        if (k1 === id) {
                            v1.id = _id;
                            break;
                        }
                    }


                }
                else sf_ObjectUpdateIDColRecur(id, _id, v.child);





            }
        }
    }
    function sf_ObjectRemoveID () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeselected == 'td') {
                if (sf_typeexcel == 1) {
                    sf_ObjectUpdateIDColExcel(sf_obselected
                        , _id = ""
                        , sf_data);

                }
                else
                sf_ObjectUpdateIDColRecur(sf_obselected
                    , _id = ""
                    , sf_data);
            }
            else {
                sf_ObjectUpdateIDRecur(sf_obselected
                    , _id = ""
                    , sf_data);
            }

            sf_ObjectDraw(sf_data, 'sf_formarea');
            sf_ObjectRead();
        }
    }
    function sf_ObjectUpdateIDRecur (id, _id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    v.id = _id;
                    break;
                }
                else sf_ObjectUpdateIDRecur(id, _id, v.child);


            }
        }
    }
    function sf_ObjectAdd (keypa, veladd) {

        let time = (new Date()).getTime();
        let idrandom = time.toString() + RandomNumber().toString();
        veladd.random = idrandom;
        if (Number(keypa) === 0) {
            sf_data[idrandom] = veladd;
        }
        else sf_ObjectAddRecur(idrandom, veladd, keypa, sf_data);
        sf_ObjectDraw(sf_data, 'sf_formarea');

    }
    function sf_ObjectAddRecur (keyadd, valueadd, keypa, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for (let [k, v] of Object.entries(_eles)) {

                if (v.child != undefined) {
                    if (v.random === keypa) {
                        v.child[keyadd] = valueadd;
                        break;
                    }
                    else sf_ObjectAddRecur(keyadd, valueadd, keypa, v.child);
                }

            }
        }

    }
    function sf_ObjectColAddRecur (keyadd, valueadd, keypa, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for (let [k, v] of Object.entries(_eles)) {
                if (v.type == 'table') {
                    if (k === keypa) {
                        v.col[keyadd] = valueadd;
                        break;
                    }

                }
                else sf_ObjectColAddRecur(keyadd, valueadd, keypa, v.child);
            }
        }
    }
    function sf_ObjectExcelcoladd (keyadd, valueadd, keypa, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for (let [k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel') {
                    if (k === keypa) {
                        v.col[keyadd] = valueadd;
                        break;
                    }

                }
                else sf_ObjectExcelcoladd(keyadd, valueadd, keypa, v.child);
            }
        }
    }
    function sf_ObjectExceltd_add (keyadd, valueadd, keypa, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for (let [k, v] of Object.entries(_eles)) {
                if (v.type == 'tableexcel') {
                    for (let [k1, v1] of Object.entries(v.col)) {
                        if (k1 === keypa) {

                            v1.td[keyadd] = valueadd;
                        }
                    }

                }

            }

        }

    }


    //#endregion
    //#region // Draw
    async function sf_ObjectDraw (data, id) {
        return new Promise((resolve, reject) => {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                myNode.innerHTML = '';

                fn_RenderForm(myNode, data, isholder = true);
                sf_SaveState(data);
                $("#" + sf_obselected).addClass('_selected');
                sf_ObjectEvent();
            }
        });
    }
    async function sf_SaveState (data) {
        return new Promise((resolve, reject) => {
            if (sf_masterdata != undefined) {
                let lastitem = (sf_masterdata.length>1) ? sf_masterdata[sf_masterdata.length - 1] : '';
                if (JSON.stringify(data) != JSON.stringify(lastitem)) {
                    if (sf_masterdata.length > 20) {
                        sf_masterdata.shift();
                    }
                    sf_masterdata.push(JSON.parse(JSON.stringify(data)));
                    if (sf_masterdata.length <= 1) {
                        $('#sf_btnUndo').addClass('disabled');
                    } else $('#sf_btnUndo').removeClass('disabled');
                }
            }
        });
    }
    function sf_ObjectEvent () {
        $("#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea iframe").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
 
            let idselected = $(this)[0].id;
            if (idselected != undefined && idselected != '') {
                if (!$(this).hasClass('_selected')) {
                    $("#sf_formarea,#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea iframe").removeClass('_selected');
                    $("#sf_formarea table td").removeClass('_selected');
                    $("#sf_formarea table tr").removeClass('_selected');
                    $(this).addClass('_selected');
                    if ($(this).hasClass('tableexcel')) sf_typeexcel = 1;
                    else sf_typeexcel = 0;

                    sf_obselected = $(this)[0].id;
                    sf_typeselected = $(this).attr('datatype');
                    sf_ElementFilter(hide = false, sf_typeselected, sf_obselected);
                    sf_ObjectRead(sf_obselected);
                }
                else {
                    $(this).removeClass('_selected');
                    sf_obselected = '';
                    sf_typeselected = '';
                    sf_ElementFilter(hide = true);
                    sf_typeexcel = 0;
                }
            }
        });
        $("#sf_formarea").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();

            if (!$(this).hasClass('_selected')) {

                $("#sf_formarea,#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea table,#sf_formarea iframe").removeClass('_selected');
                $("#sf_formarea table td").removeClass('_selected');
                $(this).addClass('_selected');

                sf_obselected = 0;
                sf_typeselected = 'row';
                sf_ElementFilter(hide = false, sf_typeselected, sf_obselected);
            }
            else {
                $(this).removeClass('_selected');
                sf_obselected = '';
                sf_typeselected = '';

                sf_ElementFilter(hide = true);
            }
        });
        $("#sf_formarea .tableexcel tbody tr").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (!$(this).hasClass('_selected')) {
                $("#sf_formarea,#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea iframe").removeClass('_selected');
                $("#sf_formarea table tr").removeClass('_selected');
                $("#sf_formarea table td").removeClass('_selected');
                $(this).addClass('_selected');

                sf_obselected = $(this)[0].id;
                sf_typeexcel = 1;
                sf_typeselected = $(this).attr('datatype');
                sf_ElementFilter(hide = false, sf_typeselected, sf_obselected,excel=true);
                sf_ObjectRead(sf_obselected);
            }
            else {
                $(this).removeClass('_selected');
                sf_obselected = '';
                sf_typeselected = '';
                sf_typeexcel = 0;
                sf_ElementFilter(hide = true);
            }
        });
        $("#sf_formarea .tableexcel tbody td").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (!$(this).hasClass('_selected')) {
                $("#sf_formarea,#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea iframe").removeClass('_selected');
                $("#sf_formarea table tr").removeClass('_selected');
                $("#sf_formarea table td").removeClass('_selected');
                $(this).addClass('_selected');

                sf_obselected = $(this)[0].id;
                sf_typeselected = $(this).attr('datatype');
                sf_typeexcel = 1;
                sf_ElementFilter(hide = false, sf_typeselected, sf_obselected, excel = true);
                sf_ObjectRead(sf_obselected);
            }
            else {
                $(this).removeClass('_selected');
                sf_obselected = '';
                sf_typeselected = '';
                sf_typeexcel = 0;
                sf_ElementFilter(hide = true);
            }
        });
        $("#sf_formarea .table tbody td").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (!$(this).hasClass('_selected')) {
                $("#sf_formarea,#sf_formarea div,#sf_formarea input,#sf_formarea textarea,#sf_formarea label,#sf_formarea table,#sf_formarea img,#sf_formarea iframe").removeClass('_selected');
                $("#sf_formarea table td").removeClass('_selected');
                $(this).addClass('_selected');
                if ($(this).hasClass('tableexcel')) sf_typeexcel = 1;
                else sf_typeexcel = 0;
                sf_obselected = $(this)[0].id;
                sf_typeselected = $(this).attr('datatype');
                sf_ElementFilter(hide = false, sf_typeselected, sf_obselected);
                sf_ObjectRead(sf_obselected);
            }
            else {
                $(this).removeClass('_selected');
                sf_obselected = '';
                sf_typeselected = '';
                sf_ElementFilter(hide = true);
            }
        });
        $("#sf_formarea table .addcol").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (sf_obselected !== '' && sf_typeselected == 'table') {
                let time = (new Date()).getTime();
                let idrandom = time.toString() + RandomNumber().toString();
                let valueadd = JSON.parse(JSON.stringify(sf_col));
                valueadd.random = idrandom;
                sf_ObjectColAddRecur(idrandom, valueadd, sf_obselected, sf_data);
                sf_ObjectDraw(sf_data, 'sf_formarea');
            }
        });
        $("#sf_formarea .addrow").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (sf_obselected !== '' && sf_typeselected == 'tableexcel') {
                let time = (new Date()).getTime();
                let idrandom = time.toString() + RandomNumber().toString();
                let valueadd = JSON.parse(JSON.stringify(sf_exceltr));
                valueadd.random = idrandom;
                valueadd.id = idrandom;
                sf_ObjectExcelcoladd(idrandom, valueadd, sf_obselected, sf_data);
                sf_ObjectDraw(sf_data, 'sf_formarea');

            }
        });
        $("#sf_formarea .addtd").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            if (sf_obselected !== '' && sf_typeselected == 'tr') {
                let time = (new Date()).getTime();
                let idrandom = time.toString() + RandomNumber().toString();
                let valueadd = JSON.parse(JSON.stringify(sf_exceltd));

                valueadd.random = idrandom;
                valueadd.id = idrandom;
                sf_ObjectExceltd_add(idrandom, valueadd, sf_obselected, sf_data);
                sf_ObjectDraw(sf_data, 'sf_formarea');
            }
        });
        $('#sf_formproperty textarea').each(function () {
            this.setAttribute('style', 'height:' + (this.scrollHeight) + 'px;overflow-y:hidden;');
        }).on('input', function () {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
        $("#sf_contanst li a").unbind('click').click(function (event) {
            event.preventDefault();
            event.stopPropagation();
            var copyText = $(this).attr('data-value');
            navigator.clipboard.writeText(copyText);
  

        });
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    }
    //#endregion
    //#region // Copy and paster
    function sf_ObjectCopy () {
        if (sf_obselected != '' && sf_obselected !== 0) {

            if (sf_typeselected != 'td' /*&& sf_typeselected != 'table'*/) {
                sf_notiaction('@Local["Sao chép"]');
                sf_copytype = sf_obselected;
                sf_ObjectCopyRecur(sf_obselected, sf_data);

            }
        }
    }
    function sf_ObjectCopyRecur (id, _eles) {

        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    sf_copydata = JSON.parse(JSON.stringify(v));
                    break;
                }

                sf_ObjectCopyRecur(id, v.child);
            }
        }
    }
    function sf_ObjectPasted () {
        if (sf_obselected != '' && sf_obselected !== 0) {
            if (sf_typeselected == 'col' || sf_typeselected == 'row') sf_ObjectPastedRecur(sf_obselected, sf_data);
            sf_notiaction('@Local["Dán"]');
        }
    }
    function sf_ObjectPastedRecur (id, _eles) {
        if (_eles != undefined && Object.keys(_eles).length != 0) {
            for ([k, v] of Object.entries(_eles)) {
                if (k === id) {
                    if (v.type == 'col' || v.type == 'row') {
                        let objClone = JSON.parse(JSON.stringify(sf_copydata));
                        if (sf_copytype == 'table') sf_ObjectCloneTableReset(objClone.col);
                        else sf_ObjectCloneReset(objClone.child);
                        sf_ObjectAdd(id, objClone)
                        break;
                    }


                }
                else sf_ObjectPastedRecur(id, v.child);
            }
        }
    }


    //#endregion
    //#region // Main event
    function sf_SetformSave (iscontinue) {

        $('#sfMessage').html('');
        $('#sf_form').form('validate form');
        if ($('#sf_form').form('is valid')) {
            if (sf_data && Object.keys(sf_data).length == 0) $('#sfMessage').html('@Local["Dữ liệu trống"]');
            else {
                //sf_RemoveRandom(sf_data);
                let name = $('#sfs_name').val();
                let width = $('#sfs_width').val();
                let height = $('#sfs_height').val();
                let note = $('#sfs_note').val();
                let watermark = $('#sfs_watermark').val();
                

                let command = Number($('#sfs_command').dropdown('get value')) ? Number($('#sfs_command').dropdown('get value')) : 0;
                let stogesign = Number($('#sfs_StogeSign').dropdown('get value')) ? Number($('#sfs_StogeSign').dropdown('get value')) : 0;                
                let type = Number($('#sfs_type').dropdown('get value')) ? Number($('#sfs_type').dropdown('get value')) : 0;
                let dimesion = $('#sfs_dimension').dropdown('get value') ? $('#sfs_dimension').dropdown('get value') : 'false';
                let paging = $('#sfs_paging').dropdown('get value') ? $('#sfs_paging').dropdown('get value') : 'false';

                AjaxLoad(url = "/Print/setform/?handler=ExcuteData"
                    , data = {
                        'form': JSON.stringify(sf_data)
                        , 'name': name
                        , 'width': width
                        , 'height': height
                        , 'note': note
                        , 'watermark': watermark
                        , 'command': command
                        , 'stogesign': stogesign
                        , 'type': type
                        , 'dimesion': dimesion
                        , 'paging': paging
                        , 'CurrentID': lf_Detail
                    }, async = true
                    , error = function () {
                        notiError_SW();
                    }
                    , success = function (result) {
                        if (result != "0") {
                            if (iscontinue == 0) {
                                lf_Save(lf_Detail != "0" ? lf_Detail : result);

                            }
                            notiSuccess();
                        }
                        else {
                            notiError_SW();
                        }
                    }
                );
            }
        } ;

    }
    function sf_RemoveRandom (elements) {

        let index = 0;
        if (elements != undefined && Object.keys(elements).length != 0) {
            for ([k, v] of Object.entries(elements)) {
                if (v.type == 'table') {
                    sf_RemoveRandomCol(v.col);
                }
                delete v.random;
                elements[index] = v;
                index++;
                delete elements[k];

                if (v.child != undefined && Object.keys(v.child).length != 0) {
                    sf_RemoveRandom(v.child)
                }
            }
        }
    }
    function sf_RemoveRandomCol (col) {
        let indexcol = 0;
        if (col != undefined && Object.keys(col).length != 0) {
            for ([k1, v1] of Object.entries(col)) {
                delete v1.random;
                col[indexcol] = v1;
                indexcol++;
                delete col[k1];
            }
        }
    }
    //#endregion

</script>
<script>js_require('/js/main.js')</script>
<script>js_require('/js/customjs/custom-validation.js')</script>
<style id="sf_stylepreview" media="max-width: 1px">
    #sf_formarea div:not([class='form-check']):not([type='radio']), #sf_formarea label, #sf_formarea img, #sf_formarea iframe, #sf_formarea input:not([type='checkbox']):not([type='radio']), #sf_formarea thead {
        cursor: pointer;
    }

    #sf_formarea input:not([type='checkbox']):not([type='radio']) {
        min-height: 20px;
    }

    #sf_formarea table i {
        display: none;
    }

    #sf_formarea {
        background: white;
    }

    #sf_proarea {
        display: none !important;
    }

    #sf_formarea .repeatclass {
        display: none !important;
    }
</style>
<style id="sf_styleSetting">
    #sf_formarea {
        gap: 5px;
        padding: 10px;
    }

        #sf_formarea > *:not([class*='m-']):not([class*='mt-']):not([class*='mb-']):not([class*='ms-']):not([class*='me-']) {
            margin: 0 !important;
        }

    .row > label {
        flex: 1;
    }

    #sf_formarea ._selected, #sf_formdetail ._selected, #sf_formarea ._selected thead {
        border: 3px solid #ff9f9f !important;
        border-style: dashed !important;
        background: #fffbeb !important;
    }

    #sf_formarea div:not([class='form-check']), #sf_formarea label, #sf_formarea textarea, #sf_formarea img, #sf_formarea iframe, #sf_formarea input:not([type='checkbox']):not([type='radio']), #sf_formarea thead, #sf_formarea table {
        background: #f9f9f9;
        margin: 5px !important;
        min-height: 20px;
        min-width: 20px;
        cursor: pointer;
        border: 1px solid #cbcbcb;
        border-style: dashed;
    }

    #sf_formarea thead {
        position: relative;
    }

        #sf_formarea thead i {
            margin-right: 5px;
            display: none;
        }

    @@media print {
        .pagebreak {
            page-break-before: always;
        }
    }

    .pagebreak {
        height: 1px;
        margin-top: 5px;
        margin-bottom: 5px;
        border: 1px solid red;
        border-style: dotted;
    }

    #sf_formarea ._selected thead i {
        display: block;
    }

    #sf_formarea table td {
        cursor: pointer;
        min-width: 10px;
        border: 1px solid #3a416f;
    }

    #sf_formarea input:not([type='checkbox']):not([type='radio']), #sf_formarea textarea {
        background: white;
    }

    #sf_element li.disabled {
        opacity: 0.2;
        cursor: unset;
    }

    #sf_formproperty .disabled {
        opacity: 0.5;
        pointer-events: none;
        background: #e7e7e7;
    }



    #sf_formdetail span {
        font-size: 12px;
        font-style: italic;
    }

    #sf_formproperty label {
        max-height: 30px;
        min-height: 30px;
        margin-bottom: 0;
    }

    .beginmove {
        background: red !important;
    }

    .ui-droppable-active {
        background: #ffe4e4;
    }

    .noUi-handle.noUi-handle-lower {
        background-image: linear-gradient(310deg,#7928ca,#ff0080);
    }

    #sliderArea {
        margin-top: 9px;
    }

    .nav-link.disabled {
        opacity: 0.7 !important;
    }

    .dragingpro {
        z-index: 2000;
        background: #f8f8f8;
        border-radius: 0.75rem !important;
        box-shadow: 0 8px 26px -4px rgb(20 20 20 / 15%), 0 8px 9px -5px rgb(20 20 20 / 6%) !important;
        padding: 10px;
        width: 300px;
        border: 3px solid #6c757d;
        position: absolute !important;
        max-height: 80vh !important;
        min-height: 30vh !important;
        max-width: 500px !important;
        min-width: 200px !important;
        overflow-y: auto;
        overflow-x: hidden;
        margin: -7px;
    }

    .draginghide {
        width: 0px !important;
        position: relative;
    }

    .sfui-helper {
        position: absolute !important;
        background: red !important;
        overflow: hidden;
    }

    .sfui-helperpa {
        position: relative !important;
    }


    .ui-resizable {
        position: relative;
    }

    .ui-resizable-handle {
        position: absolute;
        font-size: 0.1px;
        display: block;
    }

    .ui-resizable-disabled .ui-resizable-handle, .ui-resizable-autohide .ui-resizable-handle {
        display: none;
    }

    .ui-resizable-n {
        cursor: n-resize;
        height: 7px;
        width: 100%;
        top: -5px;
        left: 0;
    }

    .ui-resizable-s {
        cursor: s-resize;
        height: 7px;
        width: 100%;
        bottom: -5px;
        left: 0;
    }

    .ui-resizable-e {
        cursor: e-resize;
        width: 7px;
        right: -5px;
        top: 0;
        height: 100%;
    }

    .ui-resizable-w {
        cursor: w-resize;
        width: 7px;
        left: -5px;
        top: 0;
        height: 100%;
    }

    .ui-resizable-se {
        cursor: se-resize;
        width: 12px;
        height: 12px;
        right: 1px;
        bottom: 1px;
    }

    .ui-resizable-sw {
        cursor: sw-resize;
        width: 9px;
        height: 9px;
        left: -5px;
        bottom: -5px;
    }

    .ui-resizable-nw {
        cursor: nw-resize;
        width: 9px;
        height: 9px;
        left: -5px;
        top: -5px;
    }

    .ui-resizable-ne {
        cursor: ne-resize;
        width: 9px;
        height: 9px;
        right: -5px;
        top: -5px;
    }

    .ui-selectable-helper {
        position: absolute;
        z-index: 100;
        border: 1px dotted black;
    }

    .ui-slider {
        position: relative;
        text-align: left;
    }

        .ui-slider .ui-slider-handle {
            position: absolute;
            z-index: 2;
            width: 1.2em;
            height: 1.2em;
            cursor: default;
        }

        .ui-slider .ui-slider-range {
            position: absolute;
            z-index: 1;
            font-size: .7em;
            display: block;
            border: 0;
            background-position: 0 0;
        }

    .ui-slider-horizontal {
        height: .8em;
    }

        .ui-slider-horizontal .ui-slider-handle {
            top: -.3em;
            margin-left: -.6em;
        }

        .ui-slider-horizontal .ui-slider-range {
            top: 0;
            height: 100%;
        }

        .ui-slider-horizontal .ui-slider-range-min {
            left: 0;
        }

        .ui-slider-horizontal .ui-slider-range-max {
            right: 0;
        }

    .ui-slider-vertical {
        width: .8em;
        height: 100px;
    }

        .ui-slider-vertical .ui-slider-handle {
            left: -.3em;
            margin-left: 0;
            margin-bottom: -.6em;
        }

        .ui-slider-vertical .ui-slider-range {
            left: 0;
            width: 100%;
        }

        .ui-slider-vertical .ui-slider-range-min {
            bottom: 0;
        }

        .ui-slider-vertical .ui-slider-range-max {
            top: 0;
        }

    .ui-spinner {
        position: relative;
        display: inline-block;
        overflow: hidden;
        padding: 0;
        vertical-align: middle;
    }

    .ui-spinner-input {
        border: none;
        background: none;
        padding: 0;
        margin: .2em 0;
        vertical-align: middle;
        margin-left: .4em;
        margin-right: 22px;
    }

    .ui-spinner-button {
        width: 16px;
        height: 50%;
        font-size: .5em;
        padding: 0;
        margin: 0;
        text-align: center;
        position: absolute;
        cursor: default;
        display: block;
        overflow: hidden;
        right: 0;
    }

    .ui-spinner a.ui-spinner-button {
        border-top: none;
        border-bottom: none;
        border-right: none;
    }
    /* more specificity required here to overide default borders */
    .ui-spinner .ui-icon {
        position: absolute;
        margin-top: -8px;
        top: 50%;
        left: 0;
    }
    /* vertical centre icon */
    .ui-spinner-up {
        top: 0;
    }

    .ui-spinner-down {
        bottom: 0;
    }

    .show2s {
        -moz-animation: cssAnimation 0s ease-in 2s forwards;
        -webkit-animation: cssAnimation 0s ease-in 2s forwards;
        -o-animation: cssAnimation 0s ease-in 2s forwards;
        animation: cssAnimation 0s ease-in 2s forwards;
        -webkit-animation-fill-mode: forwards;
        animation-fill-mode: forwards;
    }

    @@keyframes cssAnimation {
        to {
            width: 0;
            height: 0;
            overflow: hidden;
        }
    }

    @@-webkit-keyframes cssAnimation {
        to {
            width: 0;
            height: 0;
            visibility: hidden;
        }
    }

    .tableexcel {
        min-width: 200px !important;
    }

        .tableexcel thead {
            height: 10px;
            background: red;
        }

        .tableexcel .addtd {
            margin: 10px;
        }
</style>
