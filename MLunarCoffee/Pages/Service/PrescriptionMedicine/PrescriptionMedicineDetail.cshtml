@page
@model MLunarCoffee.Pages.Service.PrescriptionMedicine.PrescriptionMedicineDetailModel
@{
    Layout = null;
}

<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="card"  id="Medicine_Container" >
    <div class="card-header pb-0 pt-3 px-3">
        <div class="d-lg-flex">
            <div class="col-auto my-auto">
                <div class="h-100">
                    <h6 class="mb-0">@Local["Đơn thuốc"]</h6>
                    <p class="text-sm mb-0">@Local["Chi tiết đơn thuốc"]</p>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body py-0 px-3">
        <div class="row px-2 ">
            <div class="col-12 col-lg-4 mt-2 px-1 ">
                <div class="">
                    <label>@Local["Chọn thuốc"]</label>
                    <div class="input-group" id="MedicDetail_Sort">
                        <span class="input-group-text input-group-text px-2">
                            <i class="fas fa-search" aria-hidden="true" style="display: block;"></i>
                            <div class="spinner-border spinner-border-sm" style="display: none;"></div>
                        </span>
                        <input id="contentMedicineSearch" type="text" class="form-control " placeholder="eg .@Local["Tìm kiếm"]">
                        <span class="input-group-text"><i class="btn_clear fas fa-minus-circle"></i></span>
                    </div>
                    <ul id="contentMedicine" class="list-group border-dashed border-1 border-secondary border-radius-md overflow-auto mt-2" style="max-height: calc(100vh - 275px); ">
                    </ul>
                </div>
            </div>
            <div class="col-12 col-lg-8 mt-2 px-1">
                <div class="col-12">
                    <div class="row form3 px-2" id="formMedicine">
                        <div class="field col-6 col-md-6 col-sm-6 px-1">
                            <label>@Local["Mã đơn thuốc"]</label>
                            <input id="CodePrescriptionMedicine" name="code" autocomplete="off" class="form-control" placeholder="eg. @Local["Mã đơn thuốc"]" />
                        </div>
                        <div class="field col-6 col-md-6 col-sm-6 px-1">
                            <label>@Local["Đơn thuốc"]</label>
                            <input id="NamePrescriptionMedicine" name="name" autocomplete="off" class="form-control" placeholder="eg. @Local["Đơn thuốc"]" />
                        </div>
                    </div>
                </div>
                <div class="shadow-lg position-relative">
                    <div class="list-group position-absolute pt-2" id="dtTableDetailMedicineBody" style=" z-index: 1; background: white; width: 100%;">
                    </div>
                </div>
                <div class="mt-2" style="max-height: calc(100vh - 345px); overflow-x: hidden;">
                    <div class="px-2 mt-2 container1 zigzag">
                        <div class="row text-sm text-dark text-normal ms-2 me-2">
                            <div class="row text-sm text-dark text-normal d-flex pt-2">
                                <div class="col-auto text-sm text-dark text-normal">
                                    <img dataid="CompanyAvatar" tabindex="0" class="avatar avatar-xl" datatype="img" src="https://cdnvttimg.MUSLUNARCOFFEE.com/DEMONK/_Logo/213-01(20220614120331).png" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="CompanyAvatar">
                                </div>
                                <div class="col text-sm text-dark text-normal">
                                    <div class="row text-sm text-dark text-normal mb-0">
                                        <label class="w-auto pb-0 text-sm text-dark text-normal p-0 mb-0" datatype="label">@Local["Địa chỉ"]:</label>
                                        <label tabindex="0" dataid="BranchAddress" class="w-auto pb-0 text-sm text-dark text-normal mb-0 text-capitalize" datatype="label">Gò Vấp, TP.Hồ Chí Minh, Việt Nam</label>
                                    </div>
                                    <div class="row text-sm text-dark text-normal">
                                        <label class="w-auto pb-0 text-sm text-dark text-normal p-0 mb-0" datatype="label">@Local["Điện thoại"]:</label>
                                        <label tabindex="0" dataid="BranchTel" class="w-auto pb-0 text-sm text-dark text-normal mb-0" datatype="label">0936944427</label>
                                    </div>
                                    <div class="row text-sm text-dark text-normal mt-n1">
                                        <label class="w-auto pb-0 text-sm text-dark text-normal p-0 mb-0" datatype="label">@Local["Email"]:</label>
                                        <label tabindex="0" dataid="CompanyEmail" class="w-auto pb-0 text-sm text-dark text-normal mt-0" datatype="label">info@MUSLUNARCOFFEE.com</label>
                                    </div>
                                </div>
                            </div>
                            <label class="w-100 pb-0 text-dark text-normal fs-5 text-center fw-bold text-uppercase" datatype="label">@Local["Đơn thuốc"]</label>
                            <div class="text-dark px-0 my-3" id="content_review">
                            </div>
                            <div class="row text-sm text-dark text-normal p-0 mt-0">
                                <div class="col-auto text-sm text-dark text-normal">
                                    <label class="w-auto pb-0 text-sm text-dark text-normal" datatype="label">@Local["Ghi chú"]:</label>
                                </div>
                                <div class="col text-sm text-dark text-normal mb-3 ps-0" datavalue="" style="border-bottom: 1px dotted;">
                                    <label tabindex="0" id="review_note" class="w-100 pb-0 text-sm text-dark text-normal m-0" datatype="label"></label>
                                </div>
                            </div>
                            <div class="row text-sm text-dark text-normal">
                                <div class="col-8 text-sm text-dark text-normal"></div>
                                <div class="col-4 text-sm text-dark text-normal ms-auto">
                                    <label class="w-100 pb-0 text-sm text-dark text-normal text-center mt-n2" datatype="label">@Local["Bác sĩ điều trị"]</label>
                                    <label class="w-100 pb-0 text-sm text-dark text-normal text-center mt-n2 mb-4" datatype="label">@Local["Ký tên"]</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="container2 zigzag"></div>
                </div>
                <div class="col-12">
                    <div class="row px-2">
                        <div class="col-8 col-md-8 col-sm-8 px-1">
                            <label>@Local["Ghi chú"]</label>
                            <textarea id="txtContent" rows="1" autocomplete="off" class="form-control" placeholder="eg. @Local["Ghi chú"]"></textarea>
                        </div>
                        <div class="field col-4 col-md-4 col-sm-4 px-1">
                            <label>@Local["Tổng giá"]</label>
                            <input id="AmountPrescriptionMedicine" nautocomplete="off" name="number" value="0" class="form-control disabled" disabled="disabled" placeholder="eg. @Local["Tổng giá"]" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="card-footer fixed-botombutton py-3">
        <div class="action_Save">
            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
            <div class="action_Save-Content">
                <button class="btn btn-secondary" onclick="event.preventDefault();return Prescription_CancelDetail();">@Local["Đóng"]</button>
                <button id="Medicine_btnSave" type="button" class="btn bg-gradient-primary mt-2 me-2 _tab_control_" data-tab="edit_combo_Medicine" onclick="event.preventDefault();return SavePrescriptionMedicine();">@Local["Lưu"]</button>
            </div>
        </div>
    </div>
</div>


<script>
    var dataPreMedicine = [];
    var dataPreMedicineUnit = [];
    var DataPrescriptionMedicine = {};
    var changingDiscountFlag = 1;
    var flagMain = 0;
    var changingFlag = 1;
    var ser_PrescriptionMedicineID = @Model._PrescriptionMedicineID;

    $(document).ready(function () {
        Medicine_Initialize();
        Medicine_Event();
    });

    async function Medicine_Initialize() {
        new Promise((resolve, reject) => {
            AjaxLoad(url = "/Service/PrescriptionMedicine/PrescriptionMedicineDetail/?handler=Load_Data_Initialize"
                , data = {}
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        dataPreMedicine = data.Medicine;
                        dataPreMedicineUnit = data.MedicineUnit;
                        renderComboMedicine(dataPreMedicine, "contentMedicine");
                        Medicine_LoadUpdate();
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        });
    };


    //#region //  EVENT

    function Medicine_Event() {

        $('#content_review').on('click', '.buttonDeleteClass', function (event) {
            let timespan = Number($(this).attr('data-id'));
            let medicineID = Number($(this).attr('data-id-medic'));
            $('#medic_' + medicineID).removeClass('choosen');
            delete DataPrescriptionMedicine[timespan];
            $('#rowMedicine_' + timespan).remove();
            Medicine_RenderReview();
            Medicine_Event_ChangeAmount();
            event.stopPropagation();
        });
        $('#content_review').on('click', '.buttonEditClass', function (event) {
            let timespan = Number($(this).attr('data-id'));
            $('.rowMedicine').addClass("d-none");
            $('#rowMedicine_' + timespan).removeClass("d-none");
            event.stopPropagation();
        });
        $('#dtTableDetailMedicineBody').on('click', '.btnCancelMedic', function (event) {
            $('.rowMedicine').addClass("d-none");
            event.stopPropagation();
        });

        $('#contentMedicine').on('click', '.medicineSelect', function (event) {
            let id = Number($(this).attr('data-id'));
            if (!$(this).hasClass('choosen')) {
                let data = dataPreMedicine.filter(word => word["ID"] == id);
                if (data && data.length > 0) {
                    let item = data[0];
                    Medicine_AddRowChoose(Number(item.ID), Number(item.UnitID), 1, 0, '', '', '')
                }
                $(this).addClass("choosen");
            }
            $('.rowMedicine').addClass("d-none");
            event.stopPropagation();
        });
        $('#contentMedicineSearch').unbind().keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#MedicDetail_Sort .fa-search").hide();
            $("#MedicDetail_Sort .spinner-border").show();
            re_TimerOnchange = setTimeout(function (e) {
                MedicSearch(xoa_dau($('#contentMedicineSearch').val().toLowerCase()).trim());
            }, 500);
        });
        $("#MedicDetail_Sort").on('click', '.btn_clear', function (e) {
            $('#contentMedicineSearch').val('');
            $(".btn_clear").addClass('opacity-1');
            MedicSearch('');
        });
        $('#AmountPrescriptionMedicine').divide();
    }

    //#endregion


    //#region // LOAD DATA UPDATE

    async function Medicine_LoadUpdate() {
        new Promise((resolve, reject) => {
            if (Number(ser_PrescriptionMedicineID) != 0) {
                let ID = Number(ser_PrescriptionMedicineID);
                AjaxLoad(url = "/Service/PrescriptionMedicine/PrescriptionMedicineDetail/?handler=DataDetail"
                    , data = { ID: ID }
                    , async = true
                    , error = null
                    , success = function (result) {
                        if (result != "0") {
                            let data = JSON.parse(result);
                            let dataMain = data.Table;
                            let dataMedicine = data.Table1;

                            if (dataMain && dataMain.length != 0) {
                                $('#NamePrescriptionMedicine').val(dataMain[0].Name);
                                $('#AmountPrescriptionMedicine').val(dataMain[0].Amount);
                                $('#CodePrescriptionMedicine').val(dataMain[0].Code);
                                $('#txtContent').val(dataMain[0].Note);
                            }

                            if (dataMedicine && dataMedicine.length != 0) {
                                for (var i = 0; i < dataMedicine.length; i++) {
                                    let item = dataMedicine[i];
                                    Medicine_AddRowChoose(Number(item.ProductID), Number(item.Unit), item.Quantity, Number(item.Price), item.Dosage1, item.Dosage2, item.Dosage3);
                                }
                                PrescriptionChoose();
                                $('.rowMedicine').addClass("d-none");
                            }
                        }

                    });
                return false;
            }
            resolve();
        });
    }

    //#endregion


    //#region // Render

    function Medicine_RenderEach(key, value, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let tr = `
                                <li id="rowMedicine_${key}" class="d-flex rowMedicine Medicine_${value.Medicine_ID} position-relative rounded-2 shadow">
                                   <div class="text-dark row px-2 flex-grow-1">
                                      <div class="col-12">
                                        <div class="row px-3">
                                            <span class="text-dark text-sm fw-bold p-1 ms-2"><i class="fas fa-capsules me-2"></i>@Local["Thuốc"]</span>
                                            <div class="field col-12 col-sm-12 col-md-12 p-1">
                                                ${Medicine_AddCell_Medicine(key)}
                                            </div>
                                        </div>
                                        <div class="row px-3">
                                            <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Quantity(key)}
                                            </div>
                                            <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Unit(key)}
                                            </div>
                                        </div>
                                        <div class="row px-3">
                                            <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Dosage1(key)}
                                            </div>
                                            <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Price(key)}
                                            </div>

                                        </div>
                                        <div class="row px-3">
                                           <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Dosage2(key)}
                                            </div>
                                            <div class="field col-6 col-md-6 col-xl-6 p-1">
                                                ${Medicine_AddCell_Dosage3(key)}
                                            </div>
                                        </div>

                                      </div>
                                        <div class="mt-2 mx-auto pe-4" style="text-align: right; padding-right: 20px;">
                                            <button class="btn btn-secondary btn-sm px-4 btnCancelMedic" data-id="${key}">@Local["Đóng"]</button>
                                        </div>
                                   </div>
                                </li>
                            `
            document.getElementById(id).insertAdjacentHTML('beforeend', tr);
        }
        $('#Price_' + key).divide();
        Medicine_Fill_Data(key, value);
        Medicine_Event_Row();
        Medicine_RenderReview();
    }

    function Medicine_AddCell_Medicine(randomNumber) {
        let result = `
                            <div class="ui fluid search selection dropdown medicine form-control disabled" title="${randomNumber}" id="Medicine_${randomNumber}">
                               <input type="hidden" />
                               <input id="MedicineSearch_${randomNumber}" class="search" autocomplete="off" tabindex="0">
                               <div class="text">eg. Medicine</div>
                               <div id="cbbMedicine_${randomNumber}" class="menu" tabindex="-1">
                                  ${dataPreMedicine.map((medicine) => {
            return `<div class="item" data-value="${medicine.ID}">${medicine.Name}</div>`;
        }).join("")
            }
                               </div>
                            </div>
                        `
        return result;
    }

    function Medicine_AddCell_Quantity(randomNumber) {
        let result = `
                            <div class="input-group">
                                <span class="input-group-text">@Local["Số lượng"]</span>
                                <input class="quantity form-control ps-2" placeholder="eg .@Local["Số lượng"]" id="Quantity_${randomNumber}" type="number" min="0" value="0" />
                            </div>
                        `
        return result;
    }
    function Medicine_AddCell_Price(randomNumber) {
        let result = `
                            <div class="input-group">
                                <span class="input-group-text">@Local["Đơn giá"]</span>
                                <input class="price form-control ps-2" placeholder="eg .@Local["Đơn giá"]" id="Price_${randomNumber}" type="text" min="0" value="0" />
                            </div>
                        `
        return result;
    }

    function Medicine_AddCell_Unit(randomNumber) {
        let result = `
            <div class="input-group">
                <span class="input-group-text">@Local["Đơn vị"]</span>
                <div class="ui search selection dropdown unit form-control" id="Unit_${randomNumber}">
                    <input type = "hidden" />
                    <i class="dropdown icon"></i>
                    <div class="text">eg. @Local["Đơn vị"]</div>
                    <div id="cbbUnit_${randomNumber}" class="menu" tabindex="-1">
                    </div>
                </div>
            </div>
        `
        return result;
    }

    function Medicine_AddCell_Dosage1(randomNumber) {
        let result = `<textarea id="Dosage1_${randomNumber}" class="dosage1 form-control" rows="1" type="text" value="" placeholder="eg .@Local["Ghi chú liều dùng"] (@Local["Sáng"]...)"></textarea>`;
        return result;
    }
    function Medicine_AddCell_Dosage2(randomNumber) {
        let result = `<textarea id="Dosage2_${randomNumber}" class="dosage2 form-control" rows="1" type="text" value="" placeholder="eg .@Local["Ghi chú liều dùng"] (@Local["Chiều"]...)"></textarea>`;
        return result;
    }
    function Medicine_AddCell_Dosage3(randomNumber) {
        let result = `<textarea id="Dosage3_${randomNumber}" class="dosage3 form-control" rows="1" type="text" value="" placeholder="eg .@Local["Ghi chú liều dùng"] (@Local["Tối"]...)"></textarea>`;
        return result;
    }


    function Render_Unit_Change_Medicine(id, random) {
        $('#Unit_' + random).dropdown('clear');
        $('#Unit_' + random).dropdown("refresh");
        let _data = [];
        let pro = dataPreMedicine.filter(word => word["ID"] == id);
        if (pro && pro.length > 0) {
            if (pro[0].UnitName != '') {
                _data.push({ "ID": pro[0].UnitID, "Name": pro[0].UnitName });
            }
            let unit = dataPreMedicineUnit.filter(word => word["ProductID"] == id);
            if (unit != undefined && unit.length > 0) {
                for (let i = 0; i < unit.length; i++) {
                    if (unit[i].UnitChangeName != '') {
                        _data.push({ "ID": unit[i].UnitChange, "Name": unit[i].UnitChangeName });
                    }
                }
            }
            Load_Combo(_data, "cbbUnit_" + random, true);
            $('#Unit_' + random).dropdown("clear");
            $('#Unit_' + random).dropdown("refresh");
            $('#Unit_' + random).dropdown("set selected", Number(_data[0].ID));
        }
    }

    //#endregion

    //#region // Fill Data and Event Onchange

    function Medicine_Fill_Data(key, value) {
        $("#Medicine_" + key).dropdown("refresh");
        $("#Medicine_" + key).dropdown("set selected", value.Medicine_ID);
        if (Number(value.Medicine_ID) != 0) {
            Render_Unit_Change_Medicine(value.Medicine_ID, key);
            $("#Unit_" + key).dropdown("refresh");
            $("#Unit_" + key).dropdown("set selected", value.Unit);
        }
        $('#Quantity_' + key).val(value.Quantity);
        $('#Dosage1_' + key).val(value.Dosage1);
        $('#Dosage2_' + key).val(value.Dosage2);
        $('#Dosage3_' + key).val(value.Dosage3);
        $('#Price_' + key).val(value.Price);
    }

    function Medicine_Event_Row() {

        $('.ui.dropdown').dropdown({
            allowCategorySelection: true,
            forceSelection: false,
            transition: "fade up"
        });

        $(".unit").bind('change').change(function () {
            let idcom = this.id
            let id = idcom.replace("Unit_", "");
            let unit_id = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
            DataPrescriptionMedicine[id].Unit = unit_id;
            Medicine_RenderReview();
        });

        $(".medicine").bind('change').change(function (e) {
            let idcom = this.id
            let id = idcom.replace("Medicine_", "")
            let productid = Number($('#' + idcom).dropdown('get value')) ? Number($('#' + idcom).dropdown('get value')) : 0;
            DataPrescriptionMedicine[id].Medicine_ID = productid;
            Render_Unit_Change_Medicine(productid, id);
        });

        $(".price").bind('change').change(function () {
            let _val = Number($(this).val());
            let _id = this.id.replace("Price_", "");
            if(isNaN(_val) || _val < 0) {
                _val = 0;
                $(this).val(0);
                return;
            }
            DataPrescriptionMedicine[_id].Price = _val;
            Medicine_Event_ChangeAmount();
            Medicine_RenderReview();
        });

        $(".quantity").bind('change').change(function () {
            let _val = Number($(this).val());
            let _id = this.id.replace("Quantity_", "");
            if(isNaN(_val) || _val < 0) {
                _val = 0;
                $(this).val(0);
                return;
            }
            $(this).attr("value", _val);
            DataPrescriptionMedicine[_id].Quantity = _val;
            Medicine_Event_ChangeAmount();
            Medicine_RenderReview();
        });

        $(".dosage1").bind('change').change(function () {
            $(this).attr("value", this.value)
            let id = this.id.replace("Dosage1_", "")
            DataPrescriptionMedicine[id].Dosage1 = this.value;
            Medicine_Event_ChangeAmount();
            Medicine_RenderReview();
        });

        $(".dosage2").bind('change').change(function () {
            $(this).attr("value", this.value)
            let id = this.id.replace("Dosage2_", "")
            DataPrescriptionMedicine[id].Dosage2 = this.value;
            Medicine_Event_ChangeAmount();
            Medicine_RenderReview();
        });

        $(".dosage3").bind('change').change(function () {
            $(this).attr("value", this.value)
            let id = this.id.replace("Dosage3_", "")
            DataPrescriptionMedicine[id].Dosage3 = this.value;
            Medicine_Event_ChangeAmount();
            Medicine_RenderReview();
        });

    }

    function Medicine_Event_ChangeAmount() {
        let result = 0;
        if (Object.values(DataPrescriptionMedicine).length != 0) {
            for ([key, value] of Object.entries(DataPrescriptionMedicine)) {
                result += value.Price * (value.Quantity == 0 ? 1 : value.Quantity);
            }
        }
        $("#AmountPrescriptionMedicine").val(result);
    }

    //#endregion


    //#region //  EVENT

    function Medicine_AddRowChoose(medicineID, unit, quantity, price, dosage1, dosage2, dosage3) {
        let element = {};
        let id = (new Date()).getTime();
        element.id = id;
        element.Medicine_ID = medicineID;
        element.Unit = unit;
        element.Quantity = quantity;
        element.Price = price;
        element.Dosage1 = dosage1;
        element.Dosage2 = dosage2;
        element.Dosage3 = dosage3;
        DataPrescriptionMedicine[id] = element;
        Medicine_RenderEach(id, element, 'dtTableDetailMedicineBody');
        return id;
    }

    //#endregion

    //#region //  Search
    function MedicSearch(text) {
        if (text == '') {
            renderComboMedicine(dataPreMedicine, 'contentMedicine');
        }
        else {
            let searchingValue = (xoa_dau($('#contentMedicineSearch').val())).trim().toLowerCase();

            let _detail = dataPreMedicine.filter(s => (xoa_dau(s.Name).trim().toLowerCase().includes(searchingValue))
                || (xoa_dau(s.Code).trim().toLowerCase().includes(searchingValue))
            );
            renderComboMedicine(_detail, 'contentMedicine');
        }
        $("#MedicDetail_Sort .fa-search").show();
        $("#MedicDetail_Sort .spinner-border").hide();
    }

    //#endregion

    function SavePrescriptionMedicine() {
        document.getElementById("textShowMessage").innerHTML = "";

        var NamePres = ($('#NamePrescriptionMedicine').val()).trim() ? ($('#NamePrescriptionMedicine').val()).trim() : '';
        var CodePres = ($('#CodePrescriptionMedicine').val()).trim() ? ($('#CodePrescriptionMedicine').val()).trim() : '';
        var Amount = ($('#AmountPrescriptionMedicine').val()).trim() ? Number($('#AmountPrescriptionMedicine').val()) : 0;
        var Note = ($('#txtContent').val()).trim() ? ($('#txtContent').val()).trim() : '';

        if (NamePres == undefined || NamePres == "") {
            document.getElementById("textShowMessage").innerHTML = "@Local["Kiểm tra dữ liệu"]";
        }
        else if (Object.values(DataPrescriptionMedicine).length == 0) {
            document.getElementById("textShowMessage").innerHTML = "@Local["Kiểm tra dữ liệu"]";
        }
        if (document.getElementById("textShowMessage").innerHTML == "") {
            CheckingPrescriptionMedicine();
        }
        $('#formMedicine').form('validate form');
        if ($('#formMedicine').form('is valid') && document.getElementById("textShowMessage").innerHTML === "") {
            AjaxLoad(url = "/Service/PrescriptionMedicine/PrescriptionMedicineDetail/?handler=ExcuteData"
                , data = {
                    PrescriptionMedicineID: Number(ser_PrescriptionMedicineID),
                    data: JSON.stringify(Object.values(DataPrescriptionMedicine)),
                    Name: NamePres,
                    Code: CodePres,
                    Amount: Amount,
                    Note: Note
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        notiSuccess();
                        Prescription_LoadData();
                        Prescription_CancelDetail();
                        syslog_ser((ser_PrescriptionMedicineID != '0' ? 'u' : 'i'), result);
                    } else {
                        notiError_SW();
                    }
                });
            if ($('#textShowMessage').length) $('#textShowMessage').html('');
        }
    }



    function CheckingPrescriptionMedicine() {
        let isCheck = 0;
        let ismatch = 0;
        let productcheck = "";
        for ([key, value] of Object.entries(DataPrescriptionMedicine)) {
            let medicineid = Number(value.Medicine_ID);
            let unitid = Number(value.Unit);
            let price = Number(value.Price);

            if (medicineid == 0) {
                $('#Medicine_' + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
            }
            else $('#Medicine_' + key).css('background-color', 'white');
            if (unitid == 0) {
                $('#Unit_' + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
            }
            else $('#Unit_' + key).css('background-color', 'white');
            if (price < 0) {
                $('#Price_' + key).css('background-color', 'var(--bs-bg-error)'); isCheck = 1;
            }
            else $('#Price_' + key).css('background-color', 'white');

            if (productcheck.includes('[' + medicineid + ',' + unitid + ']')) {
                $('#rowMedicine_' + key).css('background-color', 'var(--bs-bg-error)');
                ismatch = 1;
            }
            else {
                $('#rowMedicine_' + key).css('background-color', 'white');
            }
            productcheck += '[' + medicineid + ',' + unitid + ']';
        }
        if (isCheck == 1 || ismatch == 1) {
            document.getElementById("textShowMessage").innerHTML = "@Local["Kiểm tra dữ liệu"]";
        }
        else {
            document.getElementById("textShowMessage").innerHTML = "";
        }
    }

    function Prescription_CancelDetail() {
        $("#PrescriptionMedicineDetail").empty();
        $("#PrescriptionMedicineDetail").hide();
        document.getElementById("PrescriptionMedicineDetail").innerHTML = '';
        $("#PrescriptionMedicineList").show();
        Prescription_LoadData();
    }

    function renderComboMedicine(data, id) {
        var stringly = '';
        if (data.length > 0) {
            var myNode = document.getElementById(id);
            if (myNode != null) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let li = `
                                        <li id="medic_${item.ID}" class="list-group-item text-dark text-sm border-0 medicineSelect" data-id="${item.ID}">
                                            <span class="fw-bold">${item.Code}</span>
                                            ${item.Name}
                                        </li>
                                        `
                    stringly += li;
                }
            }
        }
        document.getElementById(id).innerHTML = stringly;
        PrescriptionChoose();
    }

    function PrescriptionChoose() {
        if ([DataPrescriptionMedicine].length > 0) {
            for ([key, value] of Object.entries(DataPrescriptionMedicine)) {
                let medicineid = Number(value.Medicine_ID);
                $('#medic_' + medicineid).addClass('choosen');
            }
        }
    }

    function Medicine_RenderReview() {
        if ([DataPrescriptionMedicine].length > 0) {
            let string = '';
            let i = 1;
            for ([key, value] of Object.entries(DataPrescriptionMedicine)) {
                let id = Number(value.id);
                let idMedic = Number(value.Medicine_ID);
                let idUnit = Number(value.Unit);
                let _dataUnit = [];
                let pro = dataPreMedicine.filter(word => word["ID"] == idMedic);
                if (pro && pro.length > 0) {
                    if (pro[0].UnitName != '') {
                        _dataUnit.push({ "ID": pro[0].UnitID, "Name": pro[0].UnitName });
                    }
                    let unit = dataPreMedicineUnit.filter(word => word["ProductID"] == idMedic);
                    if (unit != undefined && unit.length > 0) {
                        for (let i = 0; i < unit.length; i++) {
                            if (unit[i].UnitChangeName != '') {
                                _dataUnit.push({ "ID": unit[i].UnitChange, "Name": unit[i].UnitChangeName });
                            }
                        }
                    }
                }
                let medicName = dataPreMedicine.filter(word => word['ID'] == idMedic)[0].Name;
                let medicUnit = _dataUnit.filter(word => word['ID'] == idUnit)[0].Name;
                let quantity = value.Quantity;
                let dosage1 = value.Dosage1 && value.Dosage1 != "" ? '<div class="col-sm"><lable class="ps-4 ms-1">' + value.Dosage1 + '</lable> </div>' : '';
                let dosage2 = value.Dosage2 && value.Dosage2 != "" ? '<div class="col-sm"><lable class="ps-4 ms-1">' + value.Dosage2 + '</lable> </div>' : '';
                let dosage3 = value.Dosage3 && value.Dosage3 != "" ? '<div class="col-sm"><lable class="ps-4 ms-1">' + value.Dosage3 + '</lable> </div>' : '';
                let div = `
                                            <div class="row text-dark mb-2 pe-2 position-relative">
                                                <div class="d-flex">
                                                    <div class="w-70 col-auto my-auto">
                                                        <div class="row text-sm text-dark text-normal">
                                                            <div class="col-auto text-sm text-dark text-normal pe-0"><label tabindex="0" dataid="medicinenum" class="pb-0  fw-bold mb-0 text-sm" datatype="label">${i}</label></div>
                                                            <div class="col-auto text-sm text-dark text-normal pe-0" style="max-width: 20%"><label class="pb-0 text-normal mb-0 text-sm" datatype="label">@Local["Tên thuốc"]</label></div>
                                                            <div class="col text-sm text-dark text-normal w-80"><label tabindex="0" dataid="medicinename" class="pb-0 mb-0 text-sm fw-bold w-100" datatype="label" style="border-bottom: 1px dotted;">${medicName}</label></div>
                                                        </div>
                                                    </div>
                                                    <div class="w-30 ms-auto my-auto mt-1 d-flex">
                                                        <div class="col-auto text-sm text-dark text-normal pe-0" style="max-width: 50%"><label class="pb-0  text-sm text-normal">@Local["Liều dùng"]:</label></div>
                                                        <div class="col-auto text-sm text-dark text-normal pe-0" style="max-width: 45%">
                                                            <label tabindex="0" dataid="quantity" class="w-auto pb-0 text-sm fw-bold text-center" style="border-bottom: 1px dotted;">${quantity}</label>
                                                            <label tabindex="0" dataid="unitName" class="w-auto pb-0 text-sm fw-bold" datatype="label" style="border-bottom: 1px dotted;">${medicUnit}</label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row text-sm text-dark text-normal">
                                                    ${dosage1 + dosage2 + dosage3}
                                                </div>
                                                <div class="btn-action-medic position-absolute w-auto end-0 px-0">
                                                    <button class="buttonGrid px-0" title="@Local["Sửa"]"><i class="buttonEditClass opacity-4 text-darks vtt-icon vttech-icon-edit" data-id="${id}" data-id-medic="${idMedic}"></i></button>
                                                    <button class="buttonGrid px-0" title="@Local["Xóa"]"><i class="buttonDeleteClass opacity-4 text-danger vtt-icon vttech-icon-delete" data-id="${id}" data-id-medic="${idMedic}" ></i></button>
                                                </div>
                                            </div>
                                       `
                string += div
                i++;
            }
            $("#content_review").html(string);
        }
        $('#review_note').html($('#txtContent').val());
    }

</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>

<style>
    .btn-action-medic .buttonDeleteClass:hover, .btn-action-medic .buttonEditClass:hover {
        opacity: 1 !important;
        cursor: pointer;
    }

    .rowMedicine:not(:first-child) {
        margin-top: 0.5em !important;
    }

    .medicineSelect.choosen {
        background-image: linear-gradient(310deg, rgb(var(--bs-primary-from)) 0%, rgb(var(--bs-primary-to)) 100%);
        color: white !important;
    }

    .zigzag {
        position: relative;
        width: 100%;
    }

        .zigzag:before {
            content: "";
            display: block;
            position: absolute;
            top: -10px;
            width: 100%;
            height: 10px;
        }

    .container1 {
        background: #E2E2E2;
        /*    -webkit-filter: drop-shadow(rgba(0, 0, 0, 0.8) 0px 1px 2px);*/
    }

        .container1:before {
            background: linear-gradient( 45deg, transparent 33.333%, #E2E2E2 33.333%, #E2E2E2 66.667%, transparent 66.667% ), linear-gradient( -45deg, transparent 33.333%, #E2E2E2 33.333%, #E2E2E2 66.667%, transparent 66.667% );
            background-size: 20px 40px;
            left: 0;
        }

    .container2 {
        background: #FFF;
        height: 10px;
    }

        .container2:before {
            background: linear-gradient( 45deg, transparent 33.333%, #FFF 33.333%, #FFF 66.667%, transparent 66.667% ), linear-gradient( -45deg, transparent 33.333%, #FFF 33.333%, #FFF 66.667%, transparent 66.667% );
            background-size: 20px 40px;
        }

    #dtTableDetailMedicineBody .ui.search.dropdown > .text {
        white-space: normal;
    }
</style>