@page
@model MLunarCoffee.Pages.Service.ServiceComboDetailModel
@{
    Layout = null;
}
<script>js_require('/js/comon/initialize_setting.js');</script>

<div class="row">
    <div id="ServiceComboDetail">
        <div class="mt-3 pb-0 p-3 px-0">
            <div class="d-lg-flex">
                <div class="w-50 col-auto my-auto">
                    <div class="h-100 ps-2">
                        <h6 class="mb-0">@Local["Combo dịch vụ"]</h6>
                        <p class="text-sm mb-0">@Local["Chi tiết combo dịch vụ"]</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="pt-2">
            <div class="row p-3">
                <div class="col-12 col-md-5 mt-2 col-lg-3 p-2 px-3 bg-gray-100 rounded-3">
                    <label>@Local["Tìm kiếm"] @Local["Dịch vụ"]</label>
                    <input class="form-control mb-2" id="Input_Service" type="text" placeholder="eg .@Local["Tìm kiếm"]">
                    <div class="overflow-auto" style="height:calc(100vh - 300px);">
                        <ul id="Combo_Service_List" class="list-group"></ul>
                    </div>
                </div>
                <div class="col-12 mt-lg-n4 mt-0 col-md-7 col-lg-9 p-1 ps-lg-3 ps-0">
                    <div class="row px-2 form3 ps-lg-3" id="formComboService">
                        <div class="field col-12 col-sm-12 col-md-6 col-xl-3 px-1 ">
                            <label>@Local["Loại"]</label>
                            <div class="ui fluid search selection dropdown form-control" id="ComboService_ComboTypeID">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text"></div>
                                <div id="ComboService_CbbComboType" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-sm-12 col-md-6 col-xl-3 px-1 ">
                            <label>@Local["Mã combo"]</label>
                            <input class="form-control" id="SC_ComboCode" name="code" placeholder="eg .@Local["Mã combo"]" />
                        </div>
                        <div class="field col-12 col-sm-12 col-md-12 col-xl-3 px-1 ">
                            <label>@Local["Combo"]</label>
                            <input class="form-control" id="SC_ComboName" name="name" placeholder="eg .@Local["Combo"]" />
                        </div>
                        <div class="field col-12 col-sm-12 col-md-6 col-xl-3 px-1">
                            <label>@Local["Tổng tiền"]</label>
                            <input class="form-control disabled" id="TotalPrice" disabled="disabled" placeholder="eg .@Local["Tổng tiền"]" />
                        </div>
                        <div class="field col-12 p-1 mt-2" id="Per_ComboService_Free">
                            <div class="form-check text-lg d-inline-flex p-2 ps-0 py-0">
                                <input type="checkbox" class="form-check-input m-0 me-2" id="ComboService_IsFree" onclick="ComboService_FreeCombo();">
                                <label for="ComboService_IsFree" class="mt-1">@Local["Dịch vụ miễn phí"]</label>
                            </div>
                            <div class="ui fluid search selection dropdown multiple form-control disabled" id="ComboService_ServiceFreeID">
                                <input type="hidden" />
                                <input class="search" autocomplete="off" tabindex="0" />
                                <div class="default text"></div>
                                <div id="ComboService_ServiceFreeCbb" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="col-12 p-1">
                            <label>@Local["Nội dung"]</label>
                            <textarea class="form-control" id="SC_txtcontent" rows="3" placeholder="eg .@Local["Nội dung"]"></textarea>
                        </div>                        
                    </div>
                    <div class="row p-2 overflow-auto" style="height:calc(100vh - 455px);">
                        <div class="col-12">
                            <h6 class="fw-bold mt-2 mb-0">@Local["Chi tiết combo dịch vụ"]</h6>
                            <p class="text-sm mb-0">
                                @Local["Giá dịch vụ mang tính chất tham khảo"].
                                @Local["Giá dịch vụ sẽ được tính tại thời điểm lên combo cho khách"]
                            </p>
                            <ul id="ComboService_Selected" class="list-group"></ul>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="card-footer fixed-botombutton">
            <div class="action_Save">
                <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                <div class="action_Save-Content">
                    <button class="btn btn-secondary"
                            form="formcustomer"
                            onclick="event.preventDefault();return CloseDetailComboService();">
                        @Local["Đóng"]
                    </button>
                    <button id="scd_btndelete"  data-tab="delete_combo_service" type="button" class="btn bg-gradient-danger mt-2 me-2 d-none _tab_control_" onclick="event.preventDefault();return ServiceCombo_Delete();">@Local["Xóa"]</button>
                    <button form="formcustomer"
                            type="button"
                            data-value="fade up"
                            class="btn bg-gradient-primary mt-2 me-2"
                            onclick="event.preventDefault();return ServiceCombo_Execute();">
                        @Local["Lưu"]
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    var ser_DencosComboID = @Model._Dentistcosmetic;
    var ser_ServiceComboID = @Model._ServiceComboID;
    var SCData = {};
    var SCFlag = 0;
    var dataServiceFree = [];    
    $(document).ready(function () {        
        $("#TotalPrice").divide();
        ServiceCombo_LoadInit();
        ServiceCombo_LoadDetail();
        ServiceCombo_Render_Service(Data_Service, 'Combo_Service_List');
        ServiceCombo_FilterService();
        SCFlag = 1;
    });
    function ServiceCombo_LoadInit() {
        AjaxLoad(url = "/Service/ServiceComboDetail/?handler=LoadInit"
            , data = { }, async = false, error = null
            , success = function (result) {
                let datas = JSON.parse(result);
                dataServiceFree = datas.service;                
                Load_Combo(DataComboType, "ComboService_CbbComboType", true);
                $("#ComboService_ComboTypeID").dropdown("refresh");
                $('#ComboService_ComboTypeID').dropdown('set selected', DataComboType[0].ID.toString());

            }
        );
    }
    function ServiceCombo_LoadDetail() {
        if (ser_ServiceComboID != 0) {
            
            AjaxLoad(url = "/Service/ServiceComboDetail/?handler=LoadataDetail"
                , data = { ID: ser_ServiceComboID }, async = false, error = null
                , success = function (result) {
                    let data = JSON.parse(result);
                    if (data.length != 0) {
                        ServiceCombo_LoadInfoDetail(data);
                        $('#scd_btndelete').removeClass('d-none');
                    }
                }
            );
        }         
    }
    function ServiceCombo_LoadInfoDetail(data) {
        if (data) {
            let item = data[0];
            $("#SC_ComboName").val(item.ComboName).trigger("keyup");
            $("#SC_ComboCode").val(item.ComboCode);
            $("#SC_txtcontent").val(item.Note);
            $("#ComboService_ComboTypeID").dropdown("refresh");
            $('#ComboService_ComboTypeID').dropdown('set selected', item.ComboType.toString());
            if(item.Ruler != 0) {
                $('#ComboService_IsFree').click();
                $("#ComboService_ServiceFreeID").dropdown("refresh");
                $('#ComboService_ServiceFreeID').dropdown('set selected', item.ServiceFree.split(","));
            }            
            let data_info = JSON.parse(item.ListService);
            if (Object.values(data_info).length > 0) {
                for ([key, values] of Object.entries(data_info)) {
                    if (Data_Service[key] != undefined) {
                        SCData[key] = Data_Service[key];
                        let e = {};
                        e.ID = key;
                        e.Price = values.Price != undefined ? values.Price : 0;
                        e.Times = values.Times != undefined ? values.Times : 0;
                        e.Percent = values.Percent != undefined ? values.Percent : 0;
                        e.Amount = values.Amount != undefined ? values.Amount : 0;
                        SCData[key] = e;
                        SCSelected_Render(SCData, 'ComboService_Selected');
                        SCSelected_DetectTotal();
                    }
                }
            }
        }
    }
    function ServiceCombo_FilterService() {
        if (document.getElementById("Input_Service")) {
            var filter = document.getElementById("Input_Service");
            filter.addEventListener("keyup", function (event) {
                let textsearch = $('#Input_Service').val().trim();
                event.preventDefault();
                let search = xoa_dau(textsearch.toLowerCase());
                if (search == "") {
                    $("#Combo_Service_List .rowService").each(function () {
                        $(this).removeClass("d-none");
                    })
                }
                else {
                    for ([key, value] of Object.entries(Data_Service)) {
                        let ServiceName = xoa_dau((value.Name).toLowerCase());
                        if (ServiceName.includes(search)) {
                            $('.rowService[data-id="' + key + '"]').removeClass("d-none");
                        }
                        else {
                            $('.rowService[data-id="' + key + '"]').addClass("d-none");
                        }
                    }
                }
                ColorSearchFilterText(search, "rowService");
            });
        }
    }

    //#region // Render data
    function ServiceCombo_Render_Service(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let stringcontent = '';
            if (data && Object.values(data).length > 0) {
                for ([key, value] of Object.entries(data)) {                    
                    let type = '<span class="text-secondary fw-normal ps-1">@Local["Dịch vụ"]<span>';                    
                    if (value.IsProduct == 1) type = '<span class="text-secondary fw-normal ps-1">@Local["Sản phẩm"]<span>';
                    let tr = `
                        <li class="list-group-item bg-gray-100 border-0 rounded-3 p-3 text-sm justify-content-between icon-move-right rowService cursor-pointer" data-id="${key}">
                            <div class="d-flex">
                                <div class="d-flex flex-column">
                                    <h6 class="mb-1 fw-bold text-primary text-sm">
                                        ${value.Name}
                                        ${type}
                                    </h6>
                                    <span class="text-sm text-dark">${formatNumber(value.Price)}</span>
                                </div>
                                <div class="d-flex ms-auto">
                                    <i class="fas fa-arrow-right text-xs ms-1 text-primary" aria-hidden="true"></i>
                                </div>
                            </div>
                            <hr class="horizontal dark mt-1 mb-0">
                        </li>
                        `;


                    stringcontent += tr;

                }

                document.getElementById(id).innerHTML = stringcontent;
            }
            SCListEvent();
        }
    }
    function SCSelected_Render(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            let stringcontent = '';
            if (data && Object.values(data).length > 0) {
                for ([key, value] of Object.entries(data)) {
                    let _ser = Data_Service[key];
                    let classtimetreat = '';
                    let isPro = Data_Service[key].IsProduct;
                    if (ser_DencosComboID == 1) classtimetreat = 'd-none';
                    let tr = `
                        <li class="list-group-item border-0 justify-content-between ps-0 mb-2 pt-2 border-radius-lg item_selected" data-id="${key}">
                            <div class="row">
                                <div class="col-12 col-sm-12 col-md-12 col-xl p-1 flex-grow-1">
                                    <div class="mt-1 d-flex align-items-center">
                                        <button class="btn btn-link btn-icon-only btn-rounded text-dark my-auto item_remove"
                                                data-id="${key}">
                                            <i class="opacity-1 text-danger buttonDeleteClass icon remove"></i>
                                        </button>
                                        <div class="d-flex flex-column">
                                            <h6 class="mb-1 fw-bold text-primary text-sm">
                                                ${_ser.Name != undefined ? _ser.Name : ''}
                                            </h6>
                                            <span class="text-sm">${formatNumber(value.Price)}</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4 col-xl-2 p-1 ${classtimetreat} ${isPro==1 ? "d-none" : ""}">
                                      <span class="text-dark text-sm">${Outlang["Lan_dieu_tri"]}</span>
                                      <div class="input-group flex-nowrap mt-lg-0  ">
                                        <div class="text-sm text-primary fw-bold input-group-text">${Outlang["Lan"]}</div>
                                        <input id="SCDiscounttimes_${key}" data-id="${key}" type="number" class="times ps-2 form-control" value="${value.Times}">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4 col-xl-2 p-1">
                                    <span class="text-dark text-sm">${Outlang["Giam_chiet_khau"]}</span>
                                    <div class="input-group flex-nowrap mt-lg-0  ">
                                        <div class="text-sm text-primary fw-bold input-group-text">%</div>
                                        <input id="SCDiscountper_${key}" data-id="${key}" type="number" class="per ps-2 form-control" value="${value.Percent}">
                                    </div>
                                </div>
                                <div class="col-12 col-sm-12 col-md-4 col-xl-2 p-1">
                                     <span class="text-dark text-sm">${Outlang["Giam_chiet_khau"]}</span>
                                     <div class="input-group flex-nowrap mt-lg-0  ">
                                        <div class="text-sm text-primary fw-bold input-group-text">VND</div>
                                        <input id="SCDiscountamount_${key}" data-id="${key}" data-amount="${value.Price}" value="${value.Amount}"  class="amount ps-2 form-control"  >
                                    </div>
                                </div>                                
                            </div>

                        </li>

                        `;

                    stringcontent += tr;
                }
                document.getElementById(id).innerHTML = stringcontent;
            }
            SCSelectedEvent();
        }
    }
    //#endregion

    //#region //  Event Selected Service and Remove Item
    function SCListEvent() {
        $("#Combo_Service_List .rowService").unbind('click').click(function () {
            let ServiceID = $(this).attr("data-id");
            let obj = Data_Service[ServiceID];
            if (obj != undefined) {
                let e = {};
                e.ID = obj.ID;
                e.Price = obj.Price;
                e.Times = 0;
                e.Percent = 0;
                e.Amount = 0;
                SCData[ServiceID] = e;
                $(this).addClass("d-none");

            }
           SCSelected_Detect();
        })

    }

    function SCSelectedEvent () {
        $("#ComboService_Selected .amount").divide();
        $("#ComboService_Selected .item_remove").unbind('click').click(function () {
            let ServiceID = $(this).attr("data-id");
            if (SCData[ServiceID] != undefined) {
                delete SCData[ServiceID];
                $('.item_selected[data-id="' + ServiceID + '"]').remove();
                let row_service = $('#Combo_Service_List .rowService[data-id="' + ServiceID + '"]');
                if (row_service.length > 0) {
                    $('#Combo_Service_List .rowService[data-id="' + ServiceID + '"]').removeClass("d-none");
                }
                SCSelected_Detect();

            }
        })
        $("#ComboService_Selected .per").unbind('change').change(function () {
            if (SCFlag == 1) {
                SCFlag = 0;
                let _v = $(this).val();
                let _isallow = 0;
                if (!isNaN(_v)) {
                    let _vnum = Number(_v);
                    if (_vnum <= 100 && _vnum >= 0) {
                        _isallow = 1;
                    }
                }
                if (_isallow == 1) {
                    let ServiceID = $(this).attr("data-id");
                    if (SCData[ServiceID] != undefined && SCData[ServiceID].Percent != undefined) {
                        SCData[ServiceID].Percent = $(this).val();
                        SCData[ServiceID].Amount = 0;
                        $('#SCDiscountamount_' + ServiceID).val(0);
                        SCSelected_DetectTotal();
                    }
                    $(this).removeClass('error');
                } else {
                    $(this).addClass('error');
                }

                SCFlag = 1;
            }
        })
        $("#ComboService_Selected .amount").unbind('change').change(function () {
            if (SCFlag == 1) {
                SCFlag = 0;
                let _amount = $(this).attr("data-amount");
                let _v = $(this).val();
                let _isallow = 0;
                if (!isNaN(_v)) {
                    let _vnum = Number(_v);
                    if (_vnum <= _amount && _vnum >= 0) {
                        _isallow = 1;
                    }
                }
                if (_isallow == 1) {
                    let ServiceID = $(this).attr("data-id");
                    if (SCData[ServiceID] != undefined && SCData[ServiceID].Amount != undefined) {
                        SCData[ServiceID].Amount = $(this).val();
                        SCData[ServiceID].Percent = 0;
                        $('#SCDiscountper_' + ServiceID).val(0);
                        SCSelected_DetectTotal();
                    }
                    $(this).removeClass('error');
                } else {
                    $(this).addClass('error');
                }

                SCFlag = 1;
            }
        })
        $("#ComboService_Selected .times").unbind('change').change(function () {
            if (SCFlag == 1) {
                SCFlag = 0;
                let _v = $(this).val();
                let _isallow = 0;
                if (!isNaN(_v)) {
                    let _vnum = Number(_v);
                    if (_vnum <= 10000 && _vnum >= 0) {
                        _isallow = 1;
                    }
                }
                if (_isallow == 1) {
                    let ServiceID = $(this).attr("data-id");
                    if (SCData[ServiceID] != undefined && SCData[ServiceID].Times != undefined) {
                        SCData[ServiceID].Times = $(this).val();
                        SCSelected_DetectTotal();
                    }
                    $(this).removeClass('error');
                } else {
                    $(this).addClass('error');
                }

                SCFlag = 1;
            }
        })
    }

    function ComboService_FreeCombo(){
        let checked = $("#ComboService_IsFree").is(":checked");
        if (checked) {
            $("#ComboService_ServiceFreeID").removeClass('disabled');
            Load_Combo(dataServiceFree, "ComboService_ServiceFreeCbb", true);
            $("#ComboService_ServiceFreeID").dropdown("refresh");            
        }
        else {
            $("#ComboService_ServiceFreeID").addClass('disabled');
            $("#ComboService_ServiceFreeID").dropdown("clear");
        }
    }
    //#endregion

    //#region // Onchange Value Discount
    function SCSelected_DetectTotal () {
        let TotalPrice = 0;
        let TotalDiscount = 0;
        for ([key, value] of Object.entries(SCData)) {
            TotalDiscount = 0;
            if (value.Amount != 0) TotalDiscount = Number(value.Amount);
            else {
                if (value.Percent != 0) TotalDiscount = Number(value.Price) * Number(value.Percent) / 100;
            }
            TotalPrice = TotalPrice + Number(value.Price) - TotalDiscount;
        }
        $("#TotalPrice").val(TotalPrice);

    }
    function SCSelected_Detect() {
        SCSelected_DetectTotal();
        if (Object.values(SCData).length > 0) {
            SCSelected_Render(SCData, 'ComboService_Selected');
        }
        else {
            $("#ComboService_Selected").empty();
        }
    }
    //#endregion

    //#region // Execute Data
    function ServiceCombo_Execute() {
        let NameCombo = $("#SC_ComboName").val() ? $("#SC_ComboName").val() : '';
        let CodeCombo = $("#SC_ComboCode").val() ? $("#SC_ComboCode").val() : '';
        let NoteCombo = $("#SC_txtcontent").val() ? $("#SC_txtcontent").val() : '';
        let RulerID = $("#ComboService_IsFree").is(':checked') ? 1 : 0;
        let ServiceFreeCombo = $("#ComboService_IsFree").is(':checked') ? $("#ComboService_ServiceFreeID").dropdown("get value") + ',' : '';
        let ComboType = $("#ComboService_ComboTypeID").dropdown("get value") ? $("#ComboService_ComboTypeID").dropdown("get value") : 0;
        
        $('#formComboService').form('validate form');
        if ($('#formComboService').form('is valid')) {
            if (Object.values(SCData).length > 0) {
                let data_Execute = {};
                for ([key, value] of Object.entries(SCData)) {
                    let e = {};
                    e.Percent = value.Percent != undefined ? value.Percent : 0;
                    e.Amount = value.Amount != undefined ? value.Amount : 0;
                    e.Times = value.Times != undefined ? value.Times : 0;
                    e.Price = value.Price != undefined ? value.Price : 0;
                    data_Execute[key] = e;
                    if (ServiceFreeCombo != ''){
                        if(!ServiceCombo_CheckServiceFree(ServiceFreeCombo, key))
                            return false;
                    };
                }
                if ($('#textShowMessage').html() == '') {
                    AjaxLoad(url = "/Service/ServiceComboDetail/?handler=ExcuteData"
                        , data = {
                            ComboServiceID: ser_ServiceComboID,
                            ComboName: NameCombo,
                            ComboType : ComboType,
                            Code: CodeCombo,
                            Note: NoteCombo,
                            ServiceFree : ServiceFreeCombo,
                            Ruler: RulerID,
                            Data: JSON.stringify(data_Execute)
                        }, async = true, error = null
                        , success = function (result) {
                            if (result != "0") {
                                notiSuccess();
                                CloseDetailComboService();
                                if (typeof SVCL_LoadComboType !== 'undefined' && $.isFunction(SVCL_LoadComboType)) {
                                    SVCL_LoadComboType();
                                }                                
                                syslog_ser(ser_ServiceComboID != '0' ? 'u' : 'i', result);
                            }
                            else {
                                $("#textShowMessage").html("@Local["Trùng dữ liệu"]")
                            }
                        }
                    );
                }
            }
            else {
                $("#textShowMessage").html("@Local["Kiểm tra dữ liệu"]")
            }
        }
    }

    function ServiceCombo_CheckServiceFree(string,key){
        let dataSerFree = string.split(',');
        for(let i = 0; i < dataSerFree.length ; i++){
            if (dataSerFree[i] == key) {
                $("#textShowMessage").html(decodeHtml("@Local["Trùng dữ liệu"]"));
                $("#ComboService_ServiceFreeID").parent().addClass('error');
                return false
            }
            else{
                $("#textShowMessage").html('');
                $("#ComboService_ServiceFreeID").parent().removeClass('error');
            }
        }
        return true;
    }
    function ServiceCombo_Delete () {
        const promise = notiConfirm();
        promise.then(function () {ServiceCombo_DeleteExe(ser_ServiceComboID);}, function () { });
    }
    function ServiceCombo_DeleteExe (id) {
        AjaxLoad(url = "/Service/ServiceComboDetail/?handler=DeleteItem"
            , data = {id: id}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    notiSuccess();
                    CloseDetailComboService();
                    if (typeof SVCL_LoadComboType !== 'undefined' && $.isFunction(SVCL_LoadComboType)) {
                        SVCL_LoadComboType();
                    }     
                    LoadServiceComboAjax();
                    syslog_ser('d', result);
                } else {
                    notiError_SW();
                }
            }
        );

    }

    //#endregion

</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<style>
    #ComboService_Selected .item_selected:hover .buttonDeleteClass {
        opacity: 1 !important;
    }

    #ComboService_Selected input.error {
        background: #ff000012;
    }
</style>