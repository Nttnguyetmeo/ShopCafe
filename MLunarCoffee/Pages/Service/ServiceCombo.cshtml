@page
@model MLunarCoffee.Pages.Service.ServiceComboModel
@{
    if (@Model.layout == "none") Layout = null;
}
@Html.AntiForgeryToken()


<div class="card card-plain container-fluid px-0">
    <div class="row m-0" id="ServiceComboList">
        <div class="col-12 px-0">
            <div class="row">
                <div class="col-12 col-sm-12 col-md-4 col-xl-3 p-1 position-relative">
                    <div class="card card-plain px-2">
                        <div class="vtcardheader card-header pb-0 px-1 pt-3">
                            <div class="left">
                                <h6 class="mb-0">@Local["Combo"]</h6>
                                <p class="text-sm mb-0">@Local["Dịch vụ"] / @Local["Sản phẩm"] </p>
                            </div>
                            <div class="right">
                                <button class="btn btn-primary btn-sm mb-0" id="btnAddProduct" data-tab="add_combo_service" data-value="fade up"
                                        onclick="event.preventDefault();return SVCL_AddNewComboType()">
                                    @Local["Thêm mới"]
                                </button>
                            </div>
                        </div>
                        <div class="py-0 px-1">
                            <div class="m-0  mobile-responsive position-relative">
                                <div id="SVCL_wating" class="waitingdiv text-center position-absolute top-50 z-index-2 start-50 translate-middle" style="display: none;">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                                <div class="nav-wrapper mt-3" style="--max-height:calc( 100vh - 220px ); --overflow-y: auto">
                                    <ul class="nav nav-pills nav-menus nav-menus-vertical flex-column  bg-white border-radius-lg"
                                        id="SVCL_dtContentComboTypeBody">
                                    </ul>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-sm-12 col-md-8 col-xl-9 p-1">
                    <div class="card card-plain px-2">
                        <div class="card-header px-1 py-lg-2 py-0">
                            <div class="vtcardheader mt-2">
                                <div class="left">
                                    <h6 class="mb-0">@Local["Danh sách"]</h6>
                                    <p class="text-sm mb-0">
                                        @Local["Chi tiết combo dịch vụ"]
                                    </p>
                                </div>
                                <div class="right">
                                    <button class="btn btn-primary btn-sm mb-0" id="btnAddProduct" data-tab="add_combo_service" data-value="fade up"
                                            onclick="event.preventDefault();return AddNewComboService()">
                                        @Local["Thêm mới"]
                                    </button>
                                    <button class="btn btn-dark btn-sm   mb-0 position-relative dropdown-toggle" data-bs-toggle="collapse" data-bs-target="#colLists">
                                        @Local["Xem thêm"]
                                    </button>
                                </div>
                                <div class="toggle">
                                    <div class="collapse position-absolute z-index-3 end-1 top-100 mt-2" id="colLists" style="min-width:250px;">
                                        <ul class="card card-body text-dark text-capitalize opacity-10">
                                            <li class="d-flex">
                                                <div class="form-check form-switch">
                                                    <input class="shtoogle form-check-input" data-name="servicefree" type="checkbox">
                                                </div>
                                                <p class="text-sm">@Local["Dịch vụ miễn phí"]</p>
                                            </li>
                                            <li class="d-flex">
                                                <div class="form-check form-switch">
                                                    <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                                </div>
                                                <p class="text-sm">@Local["Ghi chú"]</p>
                                            </li>
                                            <li class="d-flex">
                                                <div class="form-check form-switch">
                                                    <input class="shtoogle form-check-input" data-name="combotype" type="checkbox">
                                                </div>
                                                <p class="text-sm">@Local["Loại"]</p>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="vtcondition ">
                                <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                                <div class="fulllap collapse collapsesticky show">
                                    <div class="row p-0 m-0 mt-2">
                                        <div class="field col-12 col-md-12 col-xl-4 p-0">
                                            <div class="input-group flex-nowrap" id="sc_boxinputsearch">
                                                <div class="input-group-text input-group-text px-2">
                                                    <i class="fas fa-search" aria-hidden="true"></i>
                                                    <div class="spinner-border spinner-border-sm d-none"></div>
                                                </div>
                                                <input id="sc_inputsearch" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm"]">
                                                <div class="input-group-text">
                                                    <i class="btn_clear fas fa-minus-circle opacity-1"></i>
                                                </div>
                                            </div>
                                        </div>                                       
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body px-1 py-1">

                            <div class="px-0 py-2 m-0 mt-0 mobile-responsive position-relative" style="max-height: calc(100vh - 200px)">
                                <div id="loaderList" class="waitingdiv text-center position-absolute top-50 z-index-2 start-50 translate-middle" style="display: none;">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>

                                <table class="table vt-table mb-0" id="SVCL_dtContent">
                                    <thead class="hiddenCollapse">
                                        <tr role="row">
                                            <th style="display: none">ID</th>
                                            <th class="text-center" style="width: 40px;">@Local["#"]</th>
                                            <th class="text-center" style="min-width:200px;">@Local["Tên"]</th>
                                            <th class="text-center" style="min-width:120px;width:120px;">@Local["Số lượng"]</th>
                                            <th class="text-center">
                                                @Local["Danh sách"]

                                            </th>
                                            <th data-name="combotype" style="text-align: center;width:150px;">@Local["Loại"] </th>
                                            <th data-name="servicefree">
                                                @Local["Dịch vụ miễn phí"]
                                            </th>
                                            <th data-name="note" style="text-align: center;width:150px;">@Local["Ghi chú"] </th>

                                        </tr>
                                    </thead>
                                    <tbody id="SVCL_dtContentBody">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div id="ServiceComboDetail" class="px-0" style="display: none; background-color: white;">
    </div>
</div>



<script>
    var Data_Service = {};
    var DataComboType = [];
    let shtable;
    var SC_DataServiceCombo;

    $(document).ready(function () {

        SC_EventInit();
        LoadInitializeService();

    });

    function SC_EventInit() {
        let timerOnChange;
        shtable = $("#SVCL_dtContent").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
 
        $('#SVCL_dtContent tbody').on('click', '.buttonEditClass', function () {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            DetailComboService(ID)
        });

        $('#sc_inputsearch').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $(".btn_clear").addClass('opacity-1');
            $("#sc_boxinputsearch .fa-search").hide();
            $("#sc_boxinputsearch .spinner-border").removeClass('d-none');
            clearTimeout(timerOnChange);
            timerOnChange = setTimeout(function (e) {
                SerList_FilterList(isTxtSearch = 1);
            }, 300);
        });

        $("#sc_boxinputsearch .btn_clear").unbind().click(function (e) {
            $('#sc_inputsearch').val('');
            $(".btn_clear").addClass('opacity-1');
            SerList_FilterList(isTxtSearch = 1);
        });

    }

    async function SerList_FilterList(isTxtSearch = 0) {
        return new Promise((resolve) => {
            let search = xoa_dau($('#sc_inputsearch').val().toLowerCase()).trim();
            let data = SC_DataServiceCombo.filter(function (item) {
                if ((search == "" || xoa_dau(item["Code"]).toLowerCase().includes(search)
                    || xoa_dau(item["ComboName"]).toLowerCase().includes(search)))
                    return true;
                return false;
            });
            $("#SVCL_dtContentBody").empty();
            RenderTableServiceCombo(data, 'SVCL_dtContentBody');
            if (isTxtSearch == 1) {
                $("#sc_boxinputsearch .fa-search").show();
                $("#sc_boxinputsearch .spinner-border").addClass('d-none');
            }
            resolve();
        })
    }


    function LoadInitializeService() {
        AjaxLoad(url = "/Service/ServiceCombo/?handler=Initialize"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "0") {
                    let datas = JSON.parse(result);
                    let data = datas.service;
                    if (data.length != 0) {
                        for (let i = 0; i < data.length; i++) {
                            let item = data[i];
                            let e = {};
                            e.ID = item.ID;
                            e.Name = item.Name;
                            e.Price = item.Price;
                            e.IsProduct = item.IsProduct;
                            Data_Service[item.ID] = e;
                        }
                    }
                    SVCL_LoadComboType()

                }
            }
        );
    }

    function SVCL_LoadComboType() {
        AjaxLoad(url = "/Service/ServiceCombo/?handler=LoaddataComboType"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "-1") {
                    DataComboType = JSON.parse(result);
                    RenderComboTypeList(DataComboType, 'SVCL_dtContentComboTypeBody')
                }
            }
            , sender = null
            , before = function (e) {
                $("#SVCL_wating").show();
            }
            , complete = function (e) {
                $("#SVCL_wating").hide();
            }

        );
    }

    async function RenderComboTypeList(data, ID) {
        new Promise((resolve, reject) => {
            let myNode = document.getElementById(ID);
            if (myNode != null) {
                let str = '';
                let stringAll = '';
                let totalAll = 0;
                if (data) {
                    for (let i = 0; i < data.length; i++) {
                        let item = data[i];
                        totalAll += item.Total;
   
                        str +=
                            `<li class="nav-item" role="presentation">
                                <a data-id="${item.ID}" class="text-sm item-menu  rowComboType nav-link cursor-pointer" data-hover data-bs-toggle="tab">
                                    <div class="px-1">
                                        <div data-id="${item.ID}" class="d-inline btnEditCbType ">
                                            <span class="ps-0 text-sm text-dark">
                                                ${item.Name}
                                            </span>
                                        </div>
                                        <div class="d-flex align-items-center mt-0">
                                            <div class="ps-0">
                                                <span class="fw-bold text-primary">${formatNumber(item.Total)}</span>
                                                <span class="px-1 text-lowercase text-secondary">@Local["Sản phẩm"] / @Local["Dịch vụ"]</span>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            <hr class="horizontal dark my-0">
                            </li>
                                `
                    }
                    stringAll = `
                        <li class="nav-item" role="presentation">
                            <a data-id="0" class="text-sm item-menu rowComboType nav-link cursor-pointer" data-hover data-bs-toggle="tab">
                                <div class="ps-1  text-bolder text-lowercase">
                                    <span class="SL_total fw-bolder text-primary">${formatNumber(totalAll)}</span>
                                    <span class="ps-2">@Local["Combo"]</span>
                                </div>
                            </a>
                            <hr class="horizontal dark my-0 opacity-2">
                        </li>`;

                    myNode.innerHTML = stringAll + str;
                    SCBL_EventComboType();
                    $('#SVCL_dtContentComboTypeBody a:first').trigger('click');
                    $('#SVCL_dtContentComboTypeBody a:first').click();
                }
            }
            resolve();
        })

    }

    function LoadServiceComboAjax(TypeID) {
        AjaxLoad(url = "/Service/ServiceCombo/?handler=LoaddataServiceCombo"
            , data = { "TypeID": TypeID }, async = true, error = null
            , success = function (result) {
                if (result != "-1") {
                    let data = JSON.parse(result);
                    SC_DataServiceCombo = data;
                    RenderTableServiceCombo(data, 'SVCL_dtContentBody');
                }
            }
            , sender = null
            , before = function () {
                $("#dtContentMaterial").hide();
                $("#loaderList").show();
            }
            , complete = function (e) {
                $("#dtContentMaterial").show();
                $("#loaderList").hide();
            }

        );
    }

    function RenderTableServiceCombo(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr = '<td class="d-none">' + item.ID + '</td>'
                        + '<td class="vt-number-order text-center"></td>'
                        + '<td>'
                        + '<a class="buttonEditClass text-primary fw-bold d-inline-block border-bottom border-dark cursor-pointer" href="#">' + item.Code + '</a>'
                        + '<a class="text-dark d-block ">' + item.ComboName + '</a></td>'
                        + '<td class="text-center">' + SC_Render_TotalSer((item.ListService)) + '</td>'
                        + '<td>' + RenderTableServiceCombo_Service(item.ListService) + '</td>'
                        + '<td data-name="combotype">' + item.ComboType + '</td>'
                        + `<td data-name="servicefree">${RenderTableServiceCombo_ServiceFreeRender(item.ServiceFree)}</td>`
                        + '<td data-name="note"><span class="content_line_clamp">' + item.Note + '</span></td>'
 
                    stringContent = stringContent + '<tr role="row" class="rowComboService vt-number" data-id="' + item.ID + '">' + tr + '</tr>';
                }
            }
            myNode.innerHTML = stringContent;
        }
        shtable.Refresh();
        ToolPopper();
        //ServiceCombo_Event();
    }

    function SC_Render_TotalSer(listser) {

        try {
            return formatNumber(Object.values(JSON.parse(listser)).length);
        }
        catch (ex) {
            return '0'
        }
    }
 
    function RenderTableServiceCombo_Service(data) {
        data = JSON.parse(data);
        let result = "";
        let stringContent = "";
        let count = 0;
        if (Object.values(data).length > 0) {
            for ([key, value] of Object.entries(data)) {
                count += 1;
                if (Data_Service[key] != undefined) {
                    let _price = (value.Price != undefined)
                        ? (`<span class="ps-2 text-primary">${formatNumber(value.Price)}</span>`)
                        : ``;
                    let _timetreat = (value.Times != undefined && value.Times != 0)
                        ? (`<span class="ps-2 text-dark">${formatNumber(value.Times)} @Local["Lần điều trị"]</span>`)
                        : ``;
                    //let _discountper = (value.Percent != undefined && value.Percent != 0)
                    //    ? (`<span class="ps-2 text-dark">- ${value.Percent}%</span>`)
                    //    : ``;
                    //let _discountamount = (value.Amount != undefined && value.Amount != 0)
                    //    ? (`<span class="ps-2 text-dark">- ${formatNumber(value.Amount)}</span>`)
                    //    : ``;
                    stringContent += `
                            <div class="ps-2 pb-1">
                                <span class="text-primary fw-bold">${count}. </span>
                                ${Data_Service[key].Name}${_price}${_timetreat}  
                            </div>`;
                }
                else {
                    stringContent += `
                            <div class="ps-2 pb-1">
                                <span class="text-primary pe-2 fw-bold">${count}. </span>
                                
                            </div>`;
                }
            };

        }
        result = `<div class="content_line_clamp"><div style="white-space: initial;">${stringContent}</div></div>`
        return result;
    }

    function RenderTableServiceCombo_ServiceFreeRender(string) {
        let result = '';
        let DataServiceFree = string.split(',');
        let count = 0;
        if (DataServiceFree && DataServiceFree.length > 0) {
            for (let i = 0; i < DataServiceFree.length; i++) {
                count += 1;
                let item = DataServiceFree[i];
                if (item != "") {
                    result += `
                            <div class="ps-2 pb-1">
                                <span class="text-primary fw-bold">${count}. </span>
                                ${Fun_GetName_ByID(Data_Service, item)}  
                            </div>`;

                }
 
            }
        }
        result = `<div class="content_line_clamp"><div style="white-space: initial;">${result}</div></div>`
        return result ;

    }

    function AddNewComboService() {
        $("#ServiceComboList").hide();
        $("#ServiceComboDetail").load("/Service/ServiceComboDetail?ver=" + versionofWebApplication);
        $("#ServiceComboDetail").show();
        return false;
    }

    function DetailComboService(ID) {
        $("#ServiceComboList").hide();
        $("#ServiceComboDetail").load("/Service/ServiceComboDetail?ServiceComboID=" + ID + "&ver=" + versionofWebApplication);
        $("#ServiceComboDetail").show();
        return false;
    }

    function CloseDetailComboService() {
        $("#ServiceComboList").show();
        $("#ServiceComboDetail").hide();
        $("#ServiceComboDetail").empty();
        return false;
    }

    
    //#region //Combotype
    function SVCL_AddNewComboType() {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Service/ServiceComboTypeDetail" + "?ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }

    function SVCL_EditComboType(ID) {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Service/ServiceComboTypeDetail?CurrentID=" + ID + "&ver=" + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function SCBL_EventComboType() {
        $("#SVCL_dtContentComboTypeBody .rowComboType").unbind('click').click(function () {
            $("#SVCL_dtContentComboTypeBody .rowComboType").removeClass('active');
            $(this).addClass('active');
            let TypeID = Number($(this).attr('data-id')) ? Number($(this).attr('data-id')) : 0;
            LoadServiceComboAjax(TypeID);
        });
        $('#SVCL_dtContentComboTypeBody .btnEditCbType').on('shown.bs.tab', function (e) {
            let ID = Number($(this).attr('data-id')) ? Number($(this).attr('data-id')) : 0;
            SVCL_EditComboType(ID);
        });
    
 
    }
//#endregion
</script>
<style>
    .rowComboType .btnEditCbType:hover {
        border-bottom: 1px solid var(--color--primary)
    }
</style>

