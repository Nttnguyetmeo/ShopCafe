@page
@model MLunarCoffee.Pages.Employee.WorkScheduleDetailModel
@{
    Layout = null;
}

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Cập nhật lịch làm việc"]</h6>
                                <p class="text-sm text-primary mb-0">@Local["Ngày cập nhật của lịch làm việc không được là ngày của của quá khứ"]</p>
                            </div>
                        </div>
                        <div class="ms-auto my-auto d-flex">
                            <input class="flatpickr form-control input-group-text" id="WDDValidDate" type="text" placeholder="@Local["Chọn ngày"].." />
                        </div>
                    </div>
                </div>

                <div class="card-body pt-2">
                    <div class="row px-2 form3" id="form3">
                        <div class="m-0 my-3 px-1  position-relative">
                            <div id="loaderList" class="waitingdiv position-absolute top-50 start-50 translate-middle" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <ul class="list-group p-4" id="WDD_Content">
                            </ul>
 
                        </div>
                    </div>
                    <div class="fixed-botombutton">
                        <div class="action_Save">
                            <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage"></div>
                            <div class="action_Save-Content">
                                <button class="btn btn-secondary" form="form3" onclick="event.preventDefault(); return WorkSchedule_CloseDetail()">@Local["Đóng"]</button>
                                <button form="form3" id="btnSaveDetail" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault();return WDD_Save()">@Local["Lưu"]</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<script type="text/javascript">
    var wddata_sche;
    var wddata_shift;
    var wddata_branch;
    var wddata_empid = "@Model._CurrentID";
    var wddata_curdate = '@Model._DateTimeCurrent';

    $(document).ready(function () {
        $("#WDDValidDate").attr("disabled", wddata_curdate != "0");
        $("#WDDValidDate").flatpickr({
            dateFormat: 'd-m-Y',
            enableTime: false,
            defaultDate: wddata_curdate != "0" ? new Date(ConvertStringDMY_YMD(wddata_curdate)) : new Date(),
            minDate: wddata_curdate != "0" ? new Date(ConvertStringDMY_YMD(wddata_curdate)) : new Date(),
        });

        WDD_Ini();
    });
    function WDD_Ini() {
        AjaxLoad(url = "/Employee/WorkScheduleDetail/?handler=LoadComboMain"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    wddata_shift = data.dataShift;
                    wddata_branch = data.dataBranch;
                    WDD_LoadScheduler();
                }
            });
    }
    function WDD_LoadScheduler() {
        AjaxLoad(url = "/Employee/WorkScheduleDetail/?handler=LoadDataDetail"
            , data = {
                'empid': wddata_empid,
                'datecurrent': wddata_curdate
            }, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    if (wddata_curdate == "0") {
                        let data = JSON.parse(result);
                        if (data.length != 0) wddata_sche = JSON.parse(data[0].Data);
                        else wddata_sche = WDD_CreatedEmpty();
                    }
                    else {
 
                        let dayofweek = new Date(ConvertStringDMY_YMD(wddata_curdate)).getDay();
                        let datas = JSON.parse(result);
                        let dataex = datas.Table;
                        let datawe = datas.Table1;
                        if (dataex.length != 0) {
                            let _obj = JSON.parse(dataex[0].Data);
                            for (let k = 0; k < _obj.length; k++) {
                                _obj[k].dayofweek = dayofweek;
                            }
                            wddata_sche = _obj;
                        }
                        else if (datawe.length != 0) {
                            wddata_sche = JSON.parse(datawe[0].Data);
                            wddata_sche = wddata_sche.filter(v => Number(v.dayofweek) === Number(dayofweek));
                        }
                        else wddata_sche = WDD_CreatedEx(dayofweek);
                    }

                    WDD_Render(wddata_sche, 'WDD_Content');
                }
            },
             sender=null,
            before= function (e) {
                $("#loaderList").show();
            },
            complete= function (e) {

                $("#loaderList").hide();
        });
    }

    function WDD_CreatedEmpty () {
        let obj = [];
        for (let i = 0; i < 7; i++) {
            let e = {};
            e.dayofweek = i.toString();
            e.off = false;
            e.shift = [{shift: "", branch:""}];
            obj.push(e);
        }
        return obj;
    }
    function WDD_CreatedEx (dayofweek) {
        let obj = [];
        let e = {};
        e.dayofweek = dayofweek;
        e.off = false;
        e.shift = [{shift: "", branch: ""}];
        obj.push(e);
        return obj;
    }
    function WDD_Render (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            let sunday = '';
            if (data && data.length > 0) {
               
                for (let i = 0; i < data.length; i++) {
                    
                    let item = data[i];
                    let off = item.off;
                    if (off) {
                        let tr = WDD_RenderEach(item.dayofweek);
                        if (item.dayofweek == 0) sunday = sunday + tr;
                        else stringContent = stringContent + tr;
                    }
                    else {
                        for (var k = 0; k < item.shift.length; k++) {
                            let tr = WDD_RenderEach(item.dayofweek, k);
                            if (item.dayofweek == 0) sunday = sunday + tr; 
                            else stringContent = stringContent + tr;
                        }
                    }

                }
            }
            document.getElementById(id).innerHTML = stringContent + sunday ;
        }
        WDD_FillData(data);
        WDD_EventEle();
    }
    function WDD_RenderEach (dayofweek, indexshift) {
        let _shift = '', _branch = '';
        let dow = '', add = '', dele = '';
        if (indexshift != undefined) {
            _shift = WDD_CellShift(dayofweek, indexshift);
            _branch = WDD_CellBranch(dayofweek, indexshift);
        }
        if (!isNaN(indexshift) && indexshift > 0) {
            dow = '';
            dele = `<a class="text-danger"><i data-value="${dayofweek}" data-index="${indexshift}" class="buttonDeleteClass fw-bold ps-2 text-lg far fa-minus" style="margin-top: 5px;"></i></a>`;
        }
        else dow = WDD_Renderday(dayofweek);
        if (!isNaN(indexshift) && indexshift == 0) {
            add = `<a class="text-primary"><i data-value="${dayofweek}" class="buttonAddClass fw-bold ps-2 text-lg fas fa-plus" style="margin-top: 5px;"></i></a>`;
        }
        let tr = `<li class="border-0 d-flex align-items-center p-0">
                                    <div class="row col-12 my-2 ">
                                        <div class="col-12 col-sm-12 col-md-4 col-xl-2 p-1">
                                            <div class="d-flex align-item-center" >
                                            ${dow}
                                            </div>
                                        </div>
                                        <div class="col-12 col-sm-12 col-md-4 col-xl-5 p-1 position-relative">
                                            <div class="d-flex align-item-center position-absolute" style="top:18px;left:-30px;">
                                                ${dele}${add}
                                            </div>
                                            ${_shift}
                                        </div>
                                        <div class="col-12 col-sm-12 col-md-4 col-xl-5 p-1">
                                            ${_branch}
                                        </div>

                                    </div>

                                </li>
                                 `   ;
        return tr;
    }
    function WDD_FillData (data) {
        $('#WDD_Content .brachWork').each(function (i, obj) {
            Load_Combo(wddata_branch, obj.id, false);
        });
        $('#WDD_Content .shiftWork').each(function (i, obj) {
            Load_Combo(wddata_shift, obj.id, false);
        });
        for (var i = 0; i < data.length; i++) {
            let off = data[i].off;
            let shift = data[i].shift;
            let idoff = 'offwork_' + data[i].dayofweek;
            if (off) {
                $('#' + idoff).prop('checked', false);
            }
            else {
                $('#' + idoff).prop('checked', true);
                for (k = 0; k < shift.length; k++) {
                    let idshift = 'shiftwork_' + data[i].dayofweek + '_' + k;
                    let idbranch = 'branchwork_' + data[i].dayofweek + '_' + k;
                    $("#" + idbranch).dropdown("refresh");
                    $("#" + idbranch).dropdown("set selected", shift[k].branch);
                    $("#" + idshift).dropdown("clear");
                    let valueshiftstring = shift[k].shift.split(',');
                    let valueshift = [];
                    for (z = 0; z < valueshiftstring.length; z++) {
                        if (!isNaN(valueshiftstring[z])) valueshift.push(valueshiftstring[z]);
                    }
                    $("#" + idshift).dropdown('set selected', valueshift);
                }
            }
        }
    }
    function WDD_EventEle() {
        $('#WDD_Content .checkoffWorkScheduler').unbind().change(function () {
            let id = this.id;
            let dayofweek = id.replace('offwork_', '');
            if (!this.checked) {
                for (i = 0; i < wddata_sche.length; i++) {
                    if (wddata_sche[i].dayofweek == dayofweek) {
                        wddata_sche[i].shift = [];
                        wddata_sche[i].off = true;
                    }
                }
            }
            else {
                for (i = 0; i < wddata_sche.length; i++) {
                    if (wddata_sche[i].dayofweek == dayofweek) {
                        let el = {};
                        el.branch = "";
                        el.shift = "";
                        wddata_sche[i].shift = [];
                        wddata_sche[i].shift.push(el);
                        wddata_sche[i].off = false;
                    }
                }
            }
            WDD_Render(wddata_sche, 'WDD_Content');
        });
        $("#WDD_Content .buttonDeleteClass").unbind().click(function (event) {
            let dayofweek = $(this).attr("data-value");
            let index = $(this).attr("data-index");
            for (i = 0; i < wddata_sche.length; i++) {
                if (wddata_sche[i].dayofweek == dayofweek) {
                    for (k = wddata_sche[i].shift.length - 1; k >= 0; k--) {
                        if (index == k)
                            wddata_sche[i].shift.splice(k, 1);
                    }
                }
            }
            WDD_Render(wddata_sche, 'WDD_Content');
        });

        $("#WDD_Content .buttonAddClass").unbind().click(function (event) {
            let dayofweek = $(this).attr("data-value");
            for (i = 0; i < wddata_sche.length; i++) {
                if (wddata_sche[i].dayofweek == dayofweek) {
                    let el = {};
                    el.branch = "";
                    el.shift = "";
                    wddata_sche[i].shift.push(el);

                }
            }
            WDD_Render(wddata_sche, 'WDD_Content');
        });
        $("#WDD_Content .brachWorkScheduler").unbind('change').change(function (event) {
            let id = $(this)[0].id;
            let dayofweek = id.split('_')[1];
            let index = id.split('_')[2];
            for (i = 0; i < wddata_sche.length; i++) {
                if (wddata_sche[i].dayofweek == dayofweek) {
                    for (k = wddata_sche[i].shift.length - 1; k >= 0; k--) {
                        if (index == k)
                            wddata_sche[i].shift[k].branch = $(this).dropdown('get value').toString();
                    }
                }
            }

        });
        $("#WDD_Content .shiftWorkScheduler").unbind('change').change( function (event) {
            let id = $(this)[0].id;
            let dayofweek = id.split('_')[1];
            let index = id.split('_')[2];
            for (i = 0; i < wddata_sche.length; i++) {
                if (wddata_sche[i].dayofweek == dayofweek) {
                    for (k = wddata_sche[i].shift.length - 1; k >= 0; k--) {
                        if (index == k)
                            wddata_sche[i].shift[k].shift = $(this).dropdown('get value').toString();
                    }
                }
            }
        });

    }
    function WDD_CellBranch(dayofweek, index) {
        return `<div id="branchwork_${dayofweek}_${index}" class="mt-2 ui fluid search selection dropdown form-control brachWorkScheduler">
                <input type="hidden" />
                <i class="dropdown icon"></i>
                <div class="default text">@Local["Chi nhánh"]</div>
                <div id="cbbbranchwork_${dayofweek}_${index}" class="menu brachWork" tabindex="-1">
                </div>
            </div>`;
    }
    function WDD_CellShift (dayofweek, index) {
        return `<div id="shiftwork_${dayofweek}_${index}" class="mt-2 ui fluid multiple search selection dropdown form-control shiftWorkScheduler">
                <input type="hidden"  />
                <i class="dropdown icon"></i>
                <div class="default text">@Local["Ca làm việc"]</div>
                <div id="cbbshiftwork_${dayofweek}_${index}" class="menu shiftWork" tabindex="-1">
                </div>
            </div>`;
    }
    function WDD_Renderday(day) {
        let resulf = "";

        switch (Number(day)) {
            case 0:
                resulf = "@Local["Chủ nhật"]";
                break;
            case 1:
                resulf = "@Local["Thứ hai"]";
                break;
            case 2:
                resulf = "@Local["Thứ ba"]";
                break;
            case 3:
                resulf = "@Local["Thứ tư"]";
                break;
            case 4:
                resulf = "@Local["Thứ năm"]";
                break;
            case 5:
                resulf = "@Local["Thứ sáu"]";
                break;
            case 6:
                resulf = "@Local["Thứ bảy"]";
                break;
            default:
                break;
        }
        resulf = `<div class="mt-3">
                    <div class="form-check ">
                        <input id="offwork_${day}" class="checkoffWorkScheduler form-check-input" type="checkbox">
                        <a class="position-relative text-capitalize mb-0 mt-2 detail border-bottom border-primary text-sm fw-bold">
                            ${resulf}
                        </a>
                    </div>
                </div>`;
        return resulf;
    }

    //#region // Save Event
    function WDD_Save () {
        if (WDD_Validate() == "0") {

            AjaxLoad(url = "/Employee/WorkScheduleDetail/?handler=ExcuteData"
                , data = {
                    data: JSON.stringify(wddata_sche)
                    , empid: wddata_empid
                    , date: $('#WDDValidDate').val() ? $('#WDDValidDate').val() : new Date()
                    , datecurrent: wddata_curdate
                }
                , async = true
                , error = null
                , success = function (result) {
                    if (result != "0") {
                        let data = JSON.parse(result);
                        if(data && data.length == 1 && data[0]["RESULT"] == 1){
                            let userid = data[0]["USERID"];
                            notiSuccess();
                            if (WorkCalendar) WorkCalendar.refetchEvents();
                            WorkSchedule_CloseDetail();
                            debugger
                            if(userid && userid != 0){
                                fcm_senduser(Number(userid), Master_circleAvatar, sys_employeeName_Main, 'Update work schedule');
                            }
                        }
                        else {
                            notiError_SW();
                        }
                    }
                    else {
                        notiError_SW();
                    }
                }
            );
        }
    }
    function WDD_Validate () {
        let resulf = "0";
        for (i = 0; i < wddata_sche.length; i++) {
            let dayofweek = wddata_sche[i].dayofweek;
            if (!wddata_sche[i].off) {
                let shift = wddata_sche[i].shift;
                for (k = 0; k < shift.length; k++) {
                    let idshit = 'shiftwork_' + dayofweek + '_' + k;
                    let idbranch = 'branchwork_' + dayofweek + '_' + k;

                    if ($('#' + idshit).dropdown('get value').toString() == '') {
                        $('#' + idshit).addClass('error');
                        resulf = "1";
                    } else {
                        if ($('#' + idshit).hasClass('error')) $('#' + idshit).removeClass('error');
                    }
                    if ($('#' + idbranch).dropdown('get value').toString() == '') {
                        $('#' + idbranch).addClass('error');
                        resulf = "1";
                    } else {
                        if ($('#' + idbranch).hasClass('error')) $('#' + idbranch).removeClass('error');
                    }
                }

            }
        }
        return resulf;
    }
    //#endregion
</script>
<style>
 
    #WDDValidDate:disabled {
        background: #f8f9fa !important;
    }
    #WDD_Content li {
        min-height: 50px !important;
       
    }
</style>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>