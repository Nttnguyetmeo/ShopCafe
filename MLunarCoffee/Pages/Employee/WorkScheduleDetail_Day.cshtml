@page
@model SourceMain.Pages.Employee.WorkScheduleDetail_DayModel
@{
    Layout = null;
}

<div class="container-fluid px-0">
    <div class="row">
        <div class="col-12">
            <div class="card mb-3">
                <div class="card-header p-3 pb-0">
                    <div class="d-lg-flex">
                        <div class="w-50 col-auto my-auto">
                            <div class="h-100">
                                <h6 class="mb-0">@Local["Đổi lịch làm việc theo ngày"]<span id="working_by_day"></span></h6>
                                <p class="text-sm mb-0">@Local["Chi tiết đổi lịch làm việc theo ngày"]</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body p-3 pt-2">
                    <div class="row px-2 ">
                        <div class="mobile-responsive p-3" style="height:400px">
                            <div id="loaderList" class="waitingdiv text-center w-100 mt-2" style="display: none;">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="sr-only">Loading...</span>
                                </div>
                            </div>
                            <table id="dtContentDetailWorkList" class="table vt-table mb-0">
                                <thead class="hiddenCollapse">
                                    <tr role="row">
                                        <th style="width: 70px;">@Local["Nghỉ"]</th>
                                        <th>@Local["Ca làm việc"]</th>
                                        <th style="width: 250px;">@Local["Chi nhánh"]</th>
                                        <th style="width: 70px;">@Local["Xử lý"]</th>
                                    </tr>
                                </thead>
                                <tbody class="form3" id="dtContentDetailWorkListBody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="fixed-botombutton">
                <div class="action_Save">
                    <div class="action_Save-Content">
                        <button class="btn btn-secondary" form="form3" onclick="event.preventDefault(); return WorkSchedule_CloseDetail()">@Local["Đóng"]</button>
                        <button form="form3" id="btnSaveDetail" type="button" class="btn bg-gradient-primary mt-2 me-2" onclick="event.preventDefault();return ExcuteDataDetail()">@Local["Lưu"]</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var Employee_Scheduler_Detail_Particular;
    var _DateTimeCurrent = '@Model._DateTimeCurrent';
    var _DateTimeLine = '@Model._DateTimeLine';
    var _CurrentEmpWorkDayID = '@Model._CurrentID';

    var _dataShiftEmpWork;
    var _dataBranchEmpWork;

    $(document).ready(function () {
        $("#working_by_day").html('(' + _DateTimeCurrent + ')');
        LoadComboMainEmpWorkDetail_Day();
    });
    function LoadComboMainEmpWorkDetail_Day() {
        AjaxLoad(url = "/Employee/WorkScheduleDetail_Day/?handler=LoadComboMain"
            , data = {}, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    _dataShiftEmpWork = data.dataShift;
                    _dataBranchEmpWork = data.dataBranch;
                    LoadataEmpWorkDetail();
                }
            });
    }
    function LoadataEmpWorkDetail() {
        AjaxLoad(url = "/Employee/WorkScheduleDetail_Day/?handler=LoadDataDetail"
            , data = {
                empid: _CurrentEmpWorkDayID,
                datetimeline: _DateTimeLine,
                datecurrent: _DateTimeCurrent
            }, async = true, error = null
            , success = function (result) {
                if (result != "") {
                    let data = JSON.parse(result);
                    Employee_Scheduler_Detail_Particular = data;
                    RenderWorkDetail_Particular(Employee_Scheduler_Detail_Particular, 'dtContentDetailWorkListBody');
                }
            },
            before= function () {
                $("#dtContentDetailWorkList").hide();
                $("#loaderList").show();
            },
            complete=function (e) {
                $("#dtContentDetailWorkList").show();
                $("#loaderList").hide();

        });
    }

    function ExcuteDataDetail() {
        if (ValidateWorkDetail() == "0") {
            AjaxLoad(url = "/Employee/WorkScheduleDetail_Day/?handler=ExcuteData"
                , data = {
                    data: JSON.stringify(Employee_Scheduler_Detail_Particular)
                    , empid: _CurrentEmpWorkDayID
                    , date: _DateTimeCurrent
                }, async = true, error = null
                , success = function (result) {
                    if (result == "1") {
                        notiSuccess();
                        WorkSchedule_CloseDetail();
                        if (WorkCalendar) WorkCalendar.refetchEvents()
                    } else {
                        notiError_SW("@Local["Lỗi thao tác"]");
                    }
                });
        }
    }
    function ValidateWorkDetail() {
        let resulf = "0";
        if (!Employee_Scheduler_Detail_Particular[0].off) {
            let shift = Employee_Scheduler_Detail_Particular[0].shift;
            for (k = 0; k < shift.length; k++) {
                let idshit = 'shiftwork_' + k;
                let idbranch = 'branchwork_' + k;

                if ($('#' + idshit).dropdown('get value').toString() == '') {
                    $('#' + idshit).addClass('importantRule');
                    resulf = "1";
                } else {
                    if ($('#' + idshit).hasClass('importantRule')) $('#' + idshit).removeClass('importantRule');
                }
                if ($('#' + idbranch).dropdown('get value').toString() == '') {
                    $('#' + idbranch).addClass('importantRule');
                    resulf = "1";
                } else {
                    if ($('#' + idbranch).hasClass('importantRule')) $('#' + idbranch).removeClass('importantRule');
                }
            }

        }
        return resulf;
    }
    function RenderWorkDetail_Particular(data, id) {

        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                let item = data[0];
                let off = item.off;
                if (off) {
                    let tr =
                        '<td class="celldevidecheck text-center">' + AddCell_Off() + '</td>'
                        + '<td class="celldevide"></td>'
                        + '<td class="celldevide"></td>'
                        + '<td class="celldevide"></td>';
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
                else {
                    let shiftinday = item.shift.length;
                    for (var k = 0; k < item.shift.length; k++) {
                        let tr =

                            ((k == 0) ? ('<td class="celldevidecheck" rowspan="' + shiftinday + '">' + AddCell_Off() + '</td>') : '')
                            + '<td class="celldevide">' + AddCell_Shift(k) + '</td>'
                            + '<td class="celldevide">' + AddCell_Branch(k) + '</td>'
                            + '<td class="celldevide text-center">'
                            + (
                                (k == 0) ? '<button class="buttonGrid"><i class="buttonAddClass vtt-icon vttech-icon-add"></i></button>'
                                    : '<button class="buttonGrid"><i data-index="' + k + '" class="buttonDeleteClass vtt-icon vttech-icon-delete"></i></button>'
                            )
                            + '</td>';
                        stringContent = stringContent + '<tr role="row">' + tr + '</tr>';

                    }
                }

            }
            document.getElementById(id).innerHTML = stringContent;
        }
        AssignValue_WorkingSchedulerDetail_par(data);
        EventClick_WorkShedulerDetail();
    }
    function EventClick_WorkShedulerDetail() {
        $('.checkoffWorkScheduler').change(function () {
            if (this.checked) {
                Employee_Scheduler_Detail_Particular[0].shift = [];
                Employee_Scheduler_Detail_Particular[0].off = true;
            }
            else {
                let el = {};
                el.branch = "";
                el.shift = "";
                Employee_Scheduler_Detail_Particular[0].shift = [];
                Employee_Scheduler_Detail_Particular[0].shift.push(el);
                Employee_Scheduler_Detail_Particular[0].off = false;
            }
            RenderWorkDetail_Particular(Employee_Scheduler_Detail_Particular, 'dtContentDetailWorkListBody');
        });
        $(".buttonDeleteClass").on('click', function (event) {

            let index = $(this).attr("data-index");
            for (k = Employee_Scheduler_Detail_Particular[0].shift.length - 1; k >= 0; k--) {
                if (index == k)
                    Employee_Scheduler_Detail_Particular[0].shift.splice(k, 1);
            }
            RenderWorkDetail_Particular(Employee_Scheduler_Detail_Particular, 'dtContentDetailWorkListBody');
        });
        $(".buttonAddClass").on('click', function (event) {
            let el = {};
            el.branch = "";
            el.shift = "";
            Employee_Scheduler_Detail_Particular[0].shift.push(el);
            RenderWorkDetail_Particular(Employee_Scheduler_Detail_Particular, 'dtContentDetailWorkListBody');
        });
        $(".brachWorkScheduler").on('change', function (event) {
            let id = $(this)[0].id;
            let index = id.split('_')[1];
            for (k = Employee_Scheduler_Detail_Particular[0].shift.length - 1; k >= 0; k--) {
                if (index == k)
                    Employee_Scheduler_Detail_Particular[0].shift[k].branch = $(this).dropdown('get value').toString();
            }
        });
        $(".shiftWorkScheduler").on('change', function (event) {
            let id = $(this)[0].id;
            let index = id.split('_')[1];
            for (k = Employee_Scheduler_Detail_Particular[0].shift.length - 1; k >= 0; k--) {
                if (index == k)
                    Employee_Scheduler_Detail_Particular[0].shift[k].shift = $(this).dropdown('get value').toString();
            }
        });

    }
    function AssignValue_WorkingSchedulerDetail_par(data) {
        // Assign value
        for (var i = 0; i < data.length; i++) {
            let off = data[0].off;
            let shift = data[0].shift;
            let idoff = 'offwork_';
            if (off) {
                $('#' + idoff).prop('checked', true);
            }
            else {
                $('#' + idoff).prop('checked', false);
                for (k = 0; k < shift.length; k++) {
                    let idshift = 'shiftwork_'  + k;
                    let idbranch = 'branchwork_' + k;
                    $("#" + idbranch).dropdown("refresh");
                    $("#" + idbranch).dropdown("set selected", shift[k].branch);
                    $("#" + idshift).dropdown("clear");
                    let valueshiftstring = shift[k].shift.split(',');
                    let valueshift = [];
                    for (z = 0; z < valueshiftstring.length; z++) {
                        if (!isNaN(valueshiftstring[z])) valueshift.push(valueshiftstring[z]);
                    }
                    $("#" + idshift).dropdown('set selected', valueshift);
                }
            }
        }
    }
    function AddCell_Off() {
        let id = 'offwork_';
        let resulf = '<div class="ui form-check ps-5" style="margin: 5px;transform: scale(1.23);">'
            + '<input id="' + id + '" type="checkbox"  class="checkoffWorkScheduler form-check-input" />'
            + '<label class="coloring red"></label></div>';
        return resulf;
    }
    function AddCell_Branch( index) {
        let id = 'branchwork_'  +  index;
        let resulf = '<div id="' + id + '" class="ui fluid search selection dropdown brachWorkScheduler form-control"><input type="hidden"/>' +
            '<input  class="search" autocomplete="off" tabindex="0" /><div class="default text">@Local["Chi nhánh"]</div><div class="menu" tabindex="-1">';
        for (i = 0; i < _dataBranchEmpWork.length; i++) {
            resulf = resulf + '<div class="item" data-value=' + _dataBranchEmpWork[i].ID + '>' + _dataBranchEmpWork[i].Name + '</div>'
        }
        resulf = resulf + '</div>';
        return resulf;
    }
    function AddCell_Shift( index) {
        let id = 'shiftwork_'  + index;
        let resulf = '<div id="' + id + '" class="ui fluid multiple search selection dropdown shiftWorkScheduler form-control"><input type="hidden"/>' +
            '<input class="search" autocomplete="off" tabindex="0" /><div class="default text">@Local["Ca làm việc"]</div><div class="menu" tabindex="-1">';
        for (i = 0; i < _dataShiftEmpWork.length; i++) {
            resulf = resulf + '<div class="item" data-value=' + _dataShiftEmpWork[i].ID + '>' + _dataShiftEmpWork[i].Name + '</div>'
        }
        resulf = resulf + '</div>';
        return resulf;
    }

</script>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
