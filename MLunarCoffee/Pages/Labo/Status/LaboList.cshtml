@page
@model MLunarCoffee.Pages.Labo.Status.LaboListModel
@{
    if (@Model.layout == "none") Layout = null;

}

<script>js_require('/js/comon/initialize_setting.js');</script>
@Html.AntiForgeryToken()
<script>js_require_notasync('/assests/dist/flatpickr/plugins/monthSelect/index.js', true)</script>
<script>css_require('/assests/dist/flatpickr/plugins/monthSelect/style.css')</script>
<div class="card card-plain mt-n2 ms-n2">
    <div class="vtcardheader card-header pb-0">
        <div class="left w-lg-25">
            <h6 class="mb-0">@Local["Labo khách hàng"]</h6>
            <p class="text-sm mb-0">@Local["Chi tiết đơn hàng labo"]</p>
        </div>
        <div class="right overflow-unset w-lg-75">
            <div class="vtcondition w-100">
                <a class="sign" data-open="@Local[" Hiển thị"]" data-close="@Local[" Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
                <div class="fulllap collapse collapsesticky show">
                    <div class="row p-0 m-0">
                        <div class="field col-12 col-md-6 col-xl-3 p-1">
                            <div class="input-group flex-nowrap" id="LaboList_SearchArea">
                                <div class="input-group-text input-group-text px-2">
                                    <i class="fas fa-search" aria-hidden="true"></i>
                                    <div class="spinner-border spinner-border-sm" style="display:none;"></div>
                                </div>
                                <input id="LaboList_SearchInput" type="text" class="form-control" placeholder="eg .@Local[" Tìm kiếm"]">
                                <div class="input-group-text"><i class="btn_clear fas fa-minus-circle opacity-1"></i></div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-xl-2 p-1">
                            <div class="ui fluid search selection dropdown form-control" id="LaboBranchID" onchange="LaboList_LoadData()">
                                <input type="hidden" name="branch" />
                                <i class="dropdown icon"></i>
                                <div class="default text">eg .@Local["Chi nhánh"]</div>
                                <div id="cbbLaboBranch" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-xl-2 p-1">
                            <div class="ui fluid search selection dropdown form-control" id="LaboSupID" onchange="LaboList_LoadData()">
                                <input type="hidden" />
                                <i class="dropdown icon"></i>
                                <div class="default text">eg .@Local["Nhà cung cấp"]</div>
                                <div id="cbbLaboSup" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-xl-2 p-1">
                            <div class="ui fluid search selection dropdown form-control" id="LaboStatusID" onchange="LaboList_LoadData()">
                                <input type="hidden" />
                                <i class="dropdown icon"></i>
                                <div class="default text">eg .@Local["Trạng thái"]</div>
                                <div id="cbbLaboStatus" class="menu" tabindex="-1">
                                </div>
                            </div>
                        </div>
                        <div class="field col-12 col-md-6 col-xl-3 p-1">
                            <div class="input-group flex-nowrap rounded-end position-relative">
                                <div class="input-group-text py-0 px-3 position-relative ">
                                    <div id="blockTime" class="px-2 rounded-2 bg-gradient-primary text-white" style="border-radius: 10px !important;" title="@Local[" Giới hạn ngày"]" data-bs-toggle="tooltip">
                                        <div id="LaboList_Time_Block" class="text-sm">31</div>
                                    </div>
                                </div>
                                <input id="LaboList_Date" class="form-control hoverpopup flatpickr border-end border-end-0" title="" data-bs-toggle="tooltip" type="text" placeholder="eg .@Local[" Ngày"]" />
                                <div id="LaboList_DateFrom_TempBlock" class="input-group-text border-end position-relative border-end-0" title="@Local["Tháng"]" data-bs-toggle="tooltip">
                                    <div id="LaboList_DateFrom_TempText" class="fw-bold">0</div>
                                    <input id="LaboList_DateFrom_Temp" class="flatpickr position-absolute start-0 top-0 w-100 h-100 opacity-0" type="text" placeholder="eg .@Local[" Ngày"]" />
                                </div>
                                <div class="input-group-text border-start-0 border-end ps-2 m-0"> </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body pt-0 pe-0 pb-2">
        <div class="d-lg-flex">
            <div class="col-w-400 mx-auto position-relative">
                <div id="LaboList_Content_Waiting" class="waitingdiv text-center position-absolute top-0 start-50 translate-middle-x" style="display: none;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
                <div class="mt-3 ms-n2">
                    <ul id="LaboList_Content_Main" class="bg-white border-radius-md ps-0 pe-2 overflow-y m-0" style="max-height: calc(100vh - 200px)">
                    </ul>
                    <button id="btnLoadMoreLaboList" class="btnsysmore btn btn-secondary w-100 p-1 mb-0" onclick="LaboList_LoadData(0,1)">@Local["Xem thêm"]</button>
                </div>
            </div>
            <div class="flex-grow-1">
                <div id="Labo_Detail" style="display: none;">
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    let Labobegin = 0;
    let LaboLimit = 20;
    let LaboFlag = 0;
    var LaboCurrentID = 0;

    var initial_labo_id = Number('@Model._LaboID');
    var Data_Labo_List = [];
    var LaboDataUser, LaboDataEmployee, LaboDataTeeth, LaboEmpinBranch, LaboTask ;

    var LaboList_Timer;
    let Labo_isShowDetail = true;
    let Labo_DF,Labo_DT;
    $(document).ready(function () {
        Master_IndexDB_Reads(_Session_Data, [_Session_User,_Session_Employee, _Session_Teeth]
            , function (data) {
                LaboDataUser = data[0];
                LaboDataEmployee = data[1];
                LaboDataTeeth = data[2];
                LaboList_LoadInitialize();
            });
        LaboMain_Event();
        ToolPopper();
    });
    function LaboMain_Event () {
        $(".buttonCloseLaboDetail").on("click", function () {
            $('.section_labo_right').removeClass("absolute_detail");
        });
        $('#LaboList_SearchInput').keyup(function () {
            if ($(this).val().length > 0) $(".btn_clear").removeClass('opacity-1');
            else $("#LaboList_SearchArea .btn_clear").addClass('opacity-1');
            $("#LaboList_SearchArea .fa-search").hide();
            $("#LaboList_SearchArea .spinner-border").show();
            clearTimeout(LaboList_Timer);
            LaboList_Timer = setTimeout(function (e) {
                LaboList_Refresh();
                LaboList_LoadData();
            }, 500);
        });
        $("#LaboList_SearchArea").on('click', '.btn_clear', function (e) {
            $('#LaboList_SearchInput').val('');
            $("#LaboList_SearchArea .btn_clear").addClass('opacity-1');
            LaboList_Refresh();
            LaboList_LoadData();
        });

    }
    function LaboList_LoadInitialize () {
        AjaxLoad(url = "/Labo/Status/LaboList/?handler=Initialize"
            , data = {}, async = true
            , error = function () {
                notiError_SW();
            }
            , success = function (result) {
                let data = JSON.parse(result);
                if (data != undefined) {
                    let dataBranch = data.Branch;
                    let dataSupplier = data.Supplier;
                    let dataStatus = data.AllStatus;
                    LaboEmpinBranch = data.LaboEmp;
                    LaboTask = data.LaboTask;
                    let ComboMax = Load_Combo(dataBranch, "cbbLaboBranch", true, "@Local["Tất cả"]");
                    $("#LaboBranchID").dropdown("refresh");
                    $("#LaboBranchID").dropdown("set selected", ComboMax.toString());
                    let e = {};
                    e.ID = "0";
                    e.Name = decodeHtml("@Local["Tất cả nhà cung cấp"]")
                    dataSupplier.unshift(e);
                    Load_Combo(dataSupplier, "cbbLaboSup", true);
                    $("#LaboSupID").dropdown("refresh");
                    $("#LaboSupID").dropdown("set selected", dataSupplier[0].ID.toString());

                    let e1 = {};
                    e1.ID = "0";
                    e1.Name = decodeHtml("@Local["Tất cả trạng thái"]");
                    dataStatus.splice(0, 1, e1);
                    Load_Combo(dataStatus, "cbbLaboStatus", true);
                    $("#LaboStatusID").dropdown("refresh");
                    $("#LaboStatusID").dropdown("set selected", dataStatus[0].ID.toString());
                    LaboFlag = 1;
                    LaboList_InitDateTime();

                    LaboList_LoadData();

                }
            }
        );

    }
    function LaboList_InitDateTime(){
        let rangedate = 31;
        Labo_DT = new Date();
        Labo_DF = new Date();
        Labo_DF = new Date(Labo_DF.setDate(Labo_DF.getDate() - 6));
        $("#LaboList_Date").val(ConvertDateTimeUTC_DMY(Labo_DF) + ' to ' + ConvertDateTimeUTC_DMY(Labo_DT));
        $("#LaboList_DateFrom_TempText").html((Labo_DF.getMonth() + 1) + '/' + Labo_DF.getFullYear());
        ListLabo_Date = $("#LaboList_Date").flatpickr({
            mode: "range"
            , dateFormat: 'd-m-Y'
            , enableTime: false
            , showMonths: 1
            , onClose: function (selectedDates, dateStr, instance) {
                if (selectedDates.length == 1) {
                    instance.setDate([selectedDates[0], selectedDates[0]], true);
                }
                $("#LaboList_Date").removeClass('error');
                $('#LaboList_Date').prop('title', '');
                if (selectedDates.length != 1) {
                    var diffDays = Math.abs(selectedDates[1] - selectedDates[0]) / (1000 * 60 * 60 * 24);
                    if (diffDays > 31) {
                        instance.setDate([selectedDates[0], selectedDates[0]], true);
                        $('#LaboList_Date').attr('title', decodeHtml("@Local["Tối đa 31 ngày"]"));
                        $("#LaboList_Date").addClass('error');

                    }
                    LaboList_LoadData();
                }

            }
        });
        ListLabo_Month = $("#LaboList_DateFrom_Temp").flatpickr({
            dateFormat: 'd-m-Y'
            , enableTime: false
            , plugins: [
                new monthSelectPlugin({
                    shorthand: false,
                    dateFormat: "d-m-Y",
                    altFormat: "F Y",
                })
            ]
            , onChange: function (selectedDates, dateStr, instance) {
                let DF_DateTime = selectedDates[0];
                let DF_Month = DF_DateTime.getMonth();
                let DF_Year = DF_DateTime.getFullYear();

                let DT_Month = DF_DateTime.getMonth();
                let DT_Year = DF_DateTime.getFullYear();
                let DF_New = new Date(DF_Year, DF_Month, 1);
                let DT_New = new Date(DT_Year, DT_Month + 1, 0);
                if (DF_Year + DF_Month > DT_Year + DT_Month) {
                    DF_New = new Date(DT_Year, DT_Month, 1);
                    DT_New = new Date(DF_Year, DF_Month + 1, 0);
                }
                var diffDays = Math.abs(DT_New - DF_New) / (1000 * 60 * 60 * 24);
                if (rangedate != 0 && diffDays > rangedate) ListLabo_Date.setDate([DF_New, DF_New]);
                else ListLabo_Date.setDate([DF_New, DT_New]);
                $("#LaboList_DateFrom_TempText").html((DF_Month + 1) + '/' + DF_Year);
                $("#LaboList_DateTo_TempText").html((DT_Month + 1) + '/' + DT_Year);
                $("#LaboList_Date").removeClass('error');
                LaboList_LoadData();
            }
        })
    }
    function LaboList_LoadData (currentid, isLoadmore ) {
        if (LaboFlag == 1) {
            let branchid = (Number($('#LaboBranchID').dropdown('get value')) ? Number($('#LaboBranchID').dropdown('get value')) : 0);
            let txt_searchroot = xoa_dau($('#LaboList_SearchInput').val().toLowerCase()).trim();
            let txt_search = txt_searchroot.replace(/[^a-zA-Z0-9 ]/g, '');
            let LaboCurrentID = 0;
            let LaboSupID = (Number($('#LaboSupID').dropdown('get value')) ? Number($('#LaboSupID').dropdown('get value')) : 0);
            let LaboStatusID = (Number($('#LaboStatusID').dropdown('get value')) ? Number($('#LaboStatusID').dropdown('get value')) : 0);
            let DateStr = $("#LaboList_Date").val();
            if (DateStr.includes(" to ")) {
                Labo_DF = ConvertDMY_ToInt(DateStr.split(" to ")[0]);
                Labo_DT = ConvertDMY_ToInt(DateStr.split(" to ")[1]);
            } else {
                Labo_DF = ConvertDMY_ToInt(DateStr);
                Labo_DT = ConvertDMY_ToInt(DateStr);
            }
            if (currentid != undefined && Number(currentid) != 0) {
                LaboCurrentID = Number(currentid);
            }
            if (Number(isLoadmore) != 1 && LaboCurrentID == 0) {
                Data_Labo_List = [];
                Labobegin = 0;
                $("#LaboList_Content_Main").empty();
            }

            AjaxLoad(url = "/Labo/Status/LaboList/?handler=LoadData"
                , data = {
                    'CurrentID': LaboCurrentID
                    , 'BranchID': branchid
                    , 'LaboSupID': LaboSupID
                    , 'LaboStatusID': LaboStatusID
                    , 'limit': LaboLimit
                    , 'idbegin': Labobegin
                    , 'textsearch': txt_search
                    , 'txt_searchroot': txt_searchroot
                    , 'DateFrom': Labo_DF
                    , 'DateTo': Labo_DT
                }, async = true
                , error = function () {
                    notiError_SW();
                }
                , success = function (result) {
                    let data = JSON.parse(result);

                    if (data != undefined && data.length != 0) {
                        if (LaboCurrentID == 0) {
                            Data_Labo_List = Data_Labo_List.concat(data);
                            if (Data_Labo_List != undefined && Data_Labo_List.length != 0) {
                                Labobegin = Data_Labo_List[Data_Labo_List.length - 1].ID;

                                RenderData_LaboList(Data_Labo_List, 'LaboList_Content_Main');
                                if (initial_labo_id !== 0) {
                                    let idfirstclick = 'labo_item_list_' + initial_labo_id;
                                    if ($('#' + idfirstclick).length) {
                                        $('#' + idfirstclick).trigger("click");
                                    }
                                    initial_labo_id = 0;
                                }
                                else {
                                    $(".labo_item_list:first").click();
                                }
                            }
                        }
                        else {
                            let index = Data_Labo_List.findIndex(e => e.ID == LaboCurrentID);
                            if (index != - 1) {
                                Data_Labo_List[index] = { ...data[0] };
                                if ($('#labo_item_list_' + LaboCurrentID).length) {
                                    let tr = RenderData_LaboList_Each(data[0]);
                                    $('#labo_item_list_' + LaboCurrentID).replaceWith(tr);
                                    LaboDetail_Event();
                                    $('#labo_item_list_' + LaboCurrentID).trigger("click");
                                }
                                else {
                                    Data_Labo_List.splice(index, 1);
                                }
                            }
                            else {
                                $('#labo_item_list_' + LaboCurrentID)?.remove()
                            }
                        }
                        $("#btnLoadMoreLaboList").show();
                    }
                    else {
                        $("#btnLoadMoreLaboList").hide();
                    }

                }
                , sender = null
                ,before = function (e) {
                    $('#LaboList_Content_Waiting').show();
                },
                complete = function (e) {
                    $('#LaboList_Content_Waiting').hide();
                    $("#LaboList_SearchArea .fa-search").show();
                    $("#LaboList_SearchArea .spinner-border").hide();
                }
                );
        }
    }


    //#region // Render Data
    function RenderData_LaboList (data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            //myNode.innerHTML = '';
            if (data && data.length > 0) {
                for (var j = 0; j < data.length; j++) {
                    let item = data[j];
                    let tr = RenderData_LaboList_Each(item);
                    myNode.insertAdjacentHTML('beforeend', tr);

                }
            }
            let stringContent =
                                `<li class="bg-gray-100 border-radius-md nav-item" role="presentation">
                                    <div class="cursor-pointer d-flex item-menu nav-link px-2 rowGroupService text-sm">
                                        <div class="ms-1 pt-1 text-bolder">
                                            <span class="text-dark">@Local["Phiếu labo"]</span>
                                        </div>
                                        <div class="ms-auto">
                                            <div class="d-inline position-relative">
                                                <div class="cursor-pointer px-2 collapsed" data-bs-toggle="collapse" role="tab" data-bs-target="#colLists" aria-expanded="true">
                                                    <i class="fa-caret-down fas fs-4 fw-bold text-gradient text-primary"></i>
                                                </div>
                                                <div class="bg-white collapse end-1 mt-2 position-absolute top-100 z-index-3" id="colLists" style="min-width: 270px;">
                                                    <ul class="card card-body text-dark text-capitalize opacity-10" style=" max-height: 400px; overflow: auto;">
                                                        <li class="d-flex">
                                                            <div class="form-check form-switch">
                                                                <input class="form-check-input" id="LaboList_ckbShowDetail" ${Labo_isShowDetail ? 'checked="checked"' : ''} type="checkbox">
                                                            </div>
                                                            <p class="text-sm">@Local["Chi tiết"]</p>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr class="horizontal dark my-0 opacity-2">
                                </li>`;
            myNode.insertAdjacentHTML('afterbegin', stringContent);
            ToolPopper();
            LaboDetail_Event();
        }
    }

    function RenderData_LaboList_Each (item) {
        let result = "";
        if (item != undefined) {
            let obj = Fun_GetObject_ByID(LaboDataUser, item.UserCreated);
            let img = (obj != null && obj.Avatar != "") ? obj.Avatar : Master_Default_Pic;
            let obj_doc = Fun_GetObject_ByID(LaboDataEmployee, item.DoctorID);
            let name_doc = (obj_doc != null) ? obj_doc.Name : '';
            let isDetail = Labo_isShowDetail ? '' : 'd-none';
            result =
                `<li id="labo_item_list_${item.ID}" data-id="${item.ID}" data-color="${item.ColorStatus}"  class=" labo_item_list cursor-pointer ${(item.IsUnRead == 1) ? 'un_read' : ''}  border-radius-lg m-1 me-0 ms-0 position-relative rounded-2">
                        <div class="border border-top-0 border-end-0 border-bottom-0 border-3" style="border-color:${item.ColorStatus} !important">
                            <div class="align-items-center border border-end-0 border-radius-sm border-start-0 border-top-0 p-2 pb-3 w-100">

                               <div class="align-items-center d-flex ps-1">
                                   <div class="d-flex px-0">
                                       <div class="d-inline me-2">
                                <span class="badge badge-dot p-0">
                             <i class="fa-circle fas mt-n2 text-xxs" style="color: ${item.ColorStatus}"></i>
                             </span>
                             <span class="text-xs text-dark fw-bold" >${item.NameStatus}</span>
                                       </div>
                                       <div class="d-inline fw-bold me-2">
                                           <span class="mt-2 text-xs">${GetDateTime_String_DMY(item.Created)}</span>
                                       </div>
                                       <div class="d-inline fw-bold me-2">
                                           <span class="mt-2 text-xs"><i class="fas fa-angle-right pe-2"></i>${item.SupName}</span>
                                       </div>
                                   </div>
                               </div>
                               <a class="cursor-pointer border-bottom border-primary code col-auto fw-bold mb-0 ms-1 mt-0 my-auto text-primary text-sm">${item.LaboCode}</a>
                               <span class="code col-auto fw-bold mb-0 ms-2 mt-0 my-auto text-dark text-sm">${item.CustName}</span>


                           </div>
                           <div class="LaboList_MasterRowDetail ${isDetail}">
                               <ul class="px-0">
                                   <li class="border-0 border-radius-lg ms-0 ms-1 p-2 position-relative rounded-2 row">
                                       <div class="col-12 col-md-6 d-block mt-2 px-0 text-xs">
                                           <span class="text-secondary">@Local["Người yêu cầu"]</span>
                                           <span class="d-block font-weight-bold text-dark">${name_doc}</span>
                                       </div>

                                       <div class="col-12 col-md-6 d-block mt-2 px-0 text-xs">
                                           <span class="text-secondary">@Local["Người chịu trách nhiệm"]</span>
                                           <span class="d-block font-weight-bold text-dark">${Fun_GetName_ByID(LaboDataEmployee, item.EmpTo)}</span>
                                       </div>
                                   </li>

                               </ul>
                           </div>
                       </div>
                    </li>`
        }
        return result;
    }
    //#endregion


    //#region // Labo Event Click

    function LaboDetail_Event() {
        $("#LaboList_Content_Main .labo_item_list").bind('click', function (event) {
            LaboCurrentID = $(this).attr("data-id");
            let color = $(this).attr("data-color");
            $(this).addClass("active").siblings().removeClass("active");
            $('#LaboList_Content_Main > li.active').get(0)?.style.setProperty("--LBL_bgMaster", `${color}0b`);
            $('.section_labo_right').addClass("absolute_detail");
            if (typeof LaboDetail_OutSide === 'function' && $("#Labo_Detail").is(":visible")) {
                LaboDetail_OutSide(
                    function () {$('#LaboList_Content_Main').css("pointerEvents", "none");}
                    , function () {$('#LaboList_Content_Main').css("pointerEvents", "auto");});
                $("#Labo_Detail").show();
            }
            else {
                let link = '/Labo/Status/LaboDetail?DetailID=' + LaboCurrentID
                    + "&ver=" + versionofWebApplication;
                $('#Labo_Detail').load(link, () => {
                    $('#Labo_Detail').show();
                });
            }

        });
       
        $("#LaboList_Content_Main .labo_change_status").bind('click', function (event) {
            event.preventDefault();
            let ID = Number($(this).attr("data-id"));
            LaboDetail_ChangeStatus(this, ID);
        });
        $("#LaboList_ckbShowDetail").on('change', function (e) {
            let isCheck = $(this).is(":checked");
            Labo_isShowDetail = isCheck;
            if (isCheck) {
                $('.LaboList_MasterRowDetail').removeClass('d-none');
            }
            else {
                $('.LaboList_MasterRowDetail').addClass('d-none');
            }
        });
    }


    function LaboList_Refresh () {
        Labobegin = 0;
        LaboLimit = 20;
    }

    //#endregion

</script>
<style>
    #LaboList_Date.error {
        color: red !important;
    }
    #LaboList_Content_Main > li.active {
        background-color: var(--LBL_bgMaster);
    }

</style>

<script>js_require('/js/comon/initialize_setting.js')</script>