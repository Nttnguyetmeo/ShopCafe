@page
@model MLunarCoffee.Pages.DeleteMergeCus.LoadCustomerToMergeModel
@{
    Layout = null;
}


<script>js_require('/js/comon/initialize_setting.js');</script>
<div class="row">
    <div class="alert alert-warning font-weight-bold  text-white mt-2" role="alert">
        <p>
            <span class="alert-icon"><i class="fa fa-exclamation-triangle"></i></span>
            <strong data-languagestatic="guide_merge_caution">Lưu Ý</strong>
            <span> - </span>
            <strong class="alert-text" data-languagestatic="guide_merge_way">Cách Dữ Liệu Được Gộp</strong>
        </p>
        <ul class="list-group list-group-flush">
            <li data-languagestatic="guide_merge_caution_1" class="list-group-item bg-transparent py-1 px-0">Tất Cả Các Dữ Liệu Khách Hàng Bên Trái Sẽ Chuyển Và Gộp Vào Khách Hàng Bên Phải</li>
            <li data-languagestatic="guide_merge_caution_2" class="list-group-item bg-transparent py-1 px-0">Số Điện Thoại Khách Hàng Bên Trái Sẻ Gộp Và Trở Thành Số Điện Thoại Thứ 2 Của Khách Hàng Bên Phải</li>
            <li data-languagestatic="guide_merge_caution_3" class="list-group-item bg-transparent py-1 px-0">Sau Khi Gộp Chỉ Còn Tồn Tại Khách Hàng Bên Phải</li>
        </ul>
    </div>
    <div class="col-12 col-md-6 mt-2">
        <div class="row gx-4">
            <div class="col-auto">
                <div class="avatar avatar-xl position-relative">
                    <a id="avatarCustomer" style="position: relative;">
                        <img id="avatarCustomerFrom" alt="profile_image" class="hoverpopup w-100 border-radius-lg shadow-sm" src="/default.png" onerror="Master_OnLoad_Error_Image(this)">
                    </a>
                </div>
            </div>
            <div class="col-auto  mt-1">
                <div class="h-100">
                    <h6 class="mb-1">
                        <span title="Code" id="txtCodeFrom">Unknown</span>
                    </h6>
                    <div class="d-flex text-xs">
                        <span class="my-auto text-md fw-bold  text-dark text-uppercase" id="txtNameFrom">Unknown</span>
                    </div>
                    <div data-tab="phone_customer" title="Phone number" class="hoverpopup _tab_control_" style="display: inline" id="txtPhoneFrom"></div>
                </div>
            </div>
            <div class="col-auto my-sm-auto ms-sm-auto me-sm-0 mx-auto mt-3">
                <span class="badge bg-gradient-info" id="txtBranchNameFrom"></span>
                <span class="badge bg-gradient-success" id="txtSourceFrom"></span>
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table text-right">
                    <tbody id="dtContentCustomerDetailFromBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 mt-2" id="customerMergeDetinationSearch">
        <div class="input-group">
            <input type="text" id="txtSearchingCustomerDetination" placeholder="Name, PhoneNumer, Code..." class="form-control" autocomplete="off">
            <div class="input-group-text" onclick="event.preventDefault();SearchingCustomerDetination()">
                <span class="fa fa-search form-control-feedback" aria-hidden="true"></span>
            </div>
        </div>
        <div class="text-danger text-gradient text-sm font-weight-bold" id="textShowMessage1"></div>
        <div class="table-responsive">
            <table class="vt-table table" id="dtContentCustomerDetination">
                <tbody id="dtContentCustomerDetinationBody">
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-12 col-md-6 mt-2" id="customerMergeDetination" style="display:none;">
        <div class="row gx-4">
            <div class="col-auto">
                <div class="avatar avatar-xl position-relative">
                    <a id="avatarCustomer" style="position: relative;">
                        <img id="avatarCustomerTo" alt="profile_image" class="hoverpopup w-100 border-radius-lg shadow-sm" src="/default.png" onerror="Master_OnLoad_Error_Image(this)">
                    </a>
                </div>
            </div>
            <div class="col-auto  mt-1">
                <div class="h-100">
                    <h6 class="mb-1">
                        <span title="Code" id="txtCodeTo">Unknown</span>
                    </h6>
                    <div class="d-flex text-xs">
                        <span class="my-auto text-md fw-bold  text-dark text-uppercase" id="txtNameTo">Unknown</span>
                    </div>
                    <div data-tab="phone_customer" title="Phone number" class="hoverpopup _tab_control_" style="display: inline" id="txtPhoneTo"></div>
                </div>
            </div>
            <div class="col-auto my-sm-auto ms-sm-auto me-sm-0 mx-auto mt-3">
                <span class="badge bg-gradient-info" id="txtBranchNameTo"></span>
                <span class="badge bg-gradient-success" id="txtSourceTo"></span>
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <table class="table text-right">
                    <tbody id="dtContentCustomerDetailToBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    var ser_customerFromMerge = "@Model._customerFromMerge";

    $(document).ready(function () {
        CusToMerge_Loadata();
        $('#dtContentCustomerDetination tbody').on('click', '.buttonChooseDetinationClass', function () {
            console.log('aaaaa')
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            ChooseDetinationCustomer(ID);
            ser_customerToMerge = ID;
        });
    });

    function CusToMerge_Loadata() {
        if (ser_customerFromMerge != "0") {
            AjaxLoad(url = "/DeleteMergeCus/LoadCustomerToMerge/?handler=Loadata"
                , data = { "id": ser_customerFromMerge }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    let data = JSON.parse(result);
                    if (data.length != 0) {
                        let dataCustomerGenFrom = data.Table1;
                        let dataCustomerDetailFrom = data.Table;
                        if (dataCustomerGenFrom && dataCustomerDetailFrom) {
                            RenderDetailCustomerMerge(dataCustomerGenFrom, "dtContentCustomerDetailFromBody");
                            if (dataCustomerDetailFrom[0].Image == '' || dataCustomerDetailFrom[0].Image == undefined) {
                                $('#avatarCustomerFrom').attr('src', 'data:image/png;base64, ' + Master_Default_Image);
                            }
                            else {
                                $('#avatarCustomerFrom').attr('src', 'data:image/png;base64, ' + dataCustomerDetailFrom[0].Image);
                            }
                            document.getElementById("txtNameFrom").innerHTML = dataCustomerDetailFrom[0].Name;
                            document.getElementById("txtCodeFrom").innerHTML = '<a href="/Customer/MainCustomer?CustomerID=' + dataCustomerDetailFrom[0].ID + "&ver=" + versionofWebApplication + '">' + dataCustomerDetailFrom[0].CustCode + '</a>';
                            document.getElementById("txtBranchNameFrom").innerHTML = dataCustomerDetailFrom[0].BranchName;
                            document.getElementById("txtPhoneFrom").innerHTML = dataCustomerDetailFrom[0].Phone;
                            document.getElementById("txtSourceFrom").innerHTML = dataCustomerDetailFrom[0].Source;
                            document.getElementById("txtCreatedFrom").innerHTML = dataCustomerDetailFrom[0].CreatedInfo;
                        }
                    }
                }
            );
        }
    }

    function progressBarMove() {
        var elem = document.getElementById("progressBarMerge");
        var width = 1;
        var id = setInterval(frame, 70);
        function frame() {
            if (width >= 100) {
                clearInterval(id);
            } else {
                width++;
                elem.style.width = width + '%';
            }
        }




    }
    function ChooseDetinationCustomer(id) {
        AjaxLoad(url = "/DeleteMergeCus/LoadCustomerToMerge/?handler=DetectDetination"
            , data = { 'CustomerID': id, }
            , async = true
            , error = function () { notiError_SW(); }
            , success = function (result) {
                if (result != "[]") {
                    document.getElementById("customerMergeDetinationSearch").style.display = "none";
                    document.getElementById("customerMergeDetination").style.display = "block";
                    RenderDetinationSearch("", 'dtContentCustomerDetinationBody');
                    $('#txtSearchingCustomerDetination').val('');
                    var data1 = JSON.parse(result)["Table"];
                    var data2 = JSON.parse(result)["Table1"];
                    if (data1 && data2) {
                        RenderDetailCustomerMerge(data2, "dtContentCustomerDetailToBody");
                        if (data1[0].Image == '' || data1[0].Image == undefined) {
                            $('#avatarCustomerTo').attr('src', 'data:image/png;base64, ' + Master_Default_Image);
                        }
                        else {
                            $('#avatarCustomerTo').attr('src', 'data:image/png;base64, ' + data1[0].Image);
                        }
                        document.getElementById("txtNameTo").innerHTML = data1[0].Name;
                        document.getElementById("txtCodeTo").innerHTML = '<a href="/Customer/MainCustomer?CustomerID=' + data1[0].ID + "&ver=" + versionofWebApplication + '">' + data1[0].CustCode + '</a>';
                        document.getElementById("txtBranchNameTo").innerHTML = data1[0].BranchName;
                        document.getElementById("txtPhoneTo").innerHTML = data1[0].Phone;
                        document.getElementById("txtSourceTo").innerHTML = data1[0].Source;
                        document.getElementById("txtCreatedTo").innerHTML = data1[0].CreatedInfo;
                    }
                } else {
                    notiError_SW();
                }
            }
        );
        return false;
    }

    function RenderDetailCustomerMerge(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td class="text-start text-dark fw-bold">' + item.Name + '</td>'
                        + ((item.YN === 1)
                            ? ('<td class="ps-4"><i class="text-success vtt-icon vttech-icon-check me-2"></i></td>')
                            : '<td class="ps-4"><i class="text-danger vtt-icon vttech-icon-cancel1 me-2"></i></td>')
                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
    function SearchingCustomerDetination() {
        var SeachingText = $('#txtSearchingCustomerDetination').val();
        if (SeachingText.length > 3) {

            AjaxLoad(url = "/DeleteMergeCus/LoadCustomerToMerge/?handler=SearchingCustomerToMerge"
                , data = { 'keyword': SeachingText, customerFrom: ser_customerFromMerge }
                , async = true
                , error = function () { notiError_SW(); }
                , success = function (result) {
                    let data = JSON.parse(result);
                    RenderDetinationSearch(data, 'dtContentCustomerDetinationBody');
                    ser_customerToMerge = 0;
                }
            );
        }
        else {
            document.getElementById("textShowMessage1").innerHTML = "Nhập Hơn 3 Ký Tự Để Tìm Kiếm";
        }
    }
    function RenderDetinationSearch(data, id) {
        var myNode = document.getElementById(id);
        if (myNode != null) {
            myNode.innerHTML = '';
            let stringContent = '';
            if (data && data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    let item = data[i];
                    let tr =
                        '<td style="display:none !important;">' + item.ID + '</td>'
                        + '<td>' + item.STT + '</td>'
                        + '<td><a href="/Customer/MainCustomer?CustomerID=' + item.CusID + "&ver=" + versionofWebApplication + '">' + item.CustCode + '</a></br>' + item.CustName + '</td>'
                        + '<td>' + item.CreatedInfo + '</td>'
                        + '<td><button class="buttonGrid"><i class="buttonChooseDetinationClass vtt-icon vttech-icon-delete"></i></button></td>'

                    stringContent = stringContent + '<tr role="row">' + tr + '</tr>';
                }
            }
            document.getElementById(id).innerHTML = stringContent;
        }
    }
</script>

<script>js_require('/js/main.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
<style>
    #progressBar {
        width: 100%;
        background-color: #ddd;
    }

    #progressBarMerge {
        width: 1%;
        height: 30px;
        background-color: #4CAF50;
    }
</style>
