@page
@model MLunarCoffee.Pages.Desk.Appointment.AppointmentInDay_Desk_BranchModel
@{
    Layout = null;
}


<div class="container-fluid pt-0 px-0">
    <div class="vtcondition">
        <a class="sign" data-open="@Local["Hiển thị"]" data-close="@Local["Thu gọn"]" data-bs-toggle="collapse" aria-expanded="true"></a>
        <div class="fulllap collapse collapsesticky show">
            <div class="row px-3">
                <div class="field col-12 col-md-4 col-xl-3 ps-0 pe-1 mt-2">
                    <div class="input-group" id="searchApp">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input id="filterAppointment" type="text" class="form-control" placeholder="eg .@Local["Tìm kiếm"]" onkeyup="onkeyupAppointmentInDay()">
                        <div class="input-group-text p-0">
                            <div class="position-relative d-inline">
                                <a class="cursor-pointer px-2" data-bs-toggle="collapse" role="tab" data-bs-target="#colsearch">
                                    <i class=" text-gradient text-primary fas fa-filter"></i>
                                </a>
                                <div class="collapse collapsesticky position-absolute z-index-3 end-1 top-100 mt-1" id="colsearch" style="min-width:285px;">
                                    <div class="card card-body text-dark text-capitalize opacity-10">
                                        <div class="field col-12 mt-2">
                                            <div class="input-group flex-nowrap rounded-end position-relative">
                                                <div class="ui fluid search selection dropdown form-control" id="Doctor_ID">
                                                    <input id="Doctor" type="hidden" />
                                                    <i class="dropdown icon"></i>
                                                    <input id="SearchDoctor_InDay" class="search" autocomplete="off" tabindex="0" />
                                                    <div class="default text">eg .@Local["Bác sĩ"]</div>
                                                    <div id="cbbDoctor_App" class="menu" tabindex="-1">
                                                    </div>
                                                </div>
                                                <div id="AppInDay_IsMine" class="input-group-text position-relative cursor-pointer  _tab_control_" data-tab="callvtt_btn_doc_myself" title="" data-ismine="1">
                                                    <span class="btn badge bg-gradient-success my-auto me-2" onclick="event.preventDefault(); AppInDay_setMySelf();">@Local["Của tôi"]</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="ScheduleTypeList">
                                                <input type="hidden" name="branch" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg .@Local["Loại lịch"]</div>
                                                <div id="cbbAppoinmentType" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="Scheduler_Type_List">
                                                <input type="hidden" name="branch" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg .@Local["Loại chi tiết"]</div>
                                                <div id="cbb_Scheduler_Type" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="ScheduleBranchID" onchange="LoadAppointmentListAjax()">
                                                <input type="hidden" name="branch" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg .@Local["Chi nhánh"]</div>
                                                <div id="cbbBranch" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="ScheduleStatus">
                                                <input type="hidden" name="" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg .@Local["Trạng thái"]</div>
                                                <div id="cbbAppoinmentStatus" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="CusSource">
                                                <input type="hidden" name="" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg . @Local["Nguồn khách hàng"]</div>
                                                <div id="cbbCusSource" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="CusCare">
                                                <input type="hidden" name="" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg . @Local["Dịch vụ quan tâm"]</div>
                                                <div id="cbbCusCare" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="field col-12 mt-2">
                                            <div class="ui fluid search selection dropdown form-control" id="AppCreator">
                                                <input type="hidden" name="" />
                                                <i class="dropdown icon"></i>
                                                <div class="default text">eg . @Local["Người tạo"]</div>
                                                <div id="cbbAppCreator" class="menu" tabindex="-1">
                                                </div>
                                            </div>
                                        </div>
                                        <button class="btn btn-dark btn-sm mt-3 mb-2" onclick="Collapse_filterAppointment()">@Local["Đóng"]</button>
                                        <button class="btn btn-primary btn-sm " onclick="Filter_Appointment_InDay()">OK</button>
                                    </div>
                                </div>
                            </div>
                            <div class="position-relative d-inline">
                                <a class="cursor-pointer px-2" data-bs-toggle="collapse" role="tab"
                                   data-bs-target="#colLists">
                                    <i class=" text-gradient text-primary fs-4 pe-2 fw-bold fas fa-caret-down"></i>
                                </a>
                                <div class="collapse position-absolute z-index-3 end-1 top-100 mt-1" id="colLists" style="min-width:250px;">
                                    <ul class="card card-body text-dark text-capitalize opacity-10" style=" max-height: 400px; overflow: auto;">
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="app_code" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Mã lịch hẹn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="con_employee" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tư vấn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="con_doc" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Bác sĩ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="room" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Phòng"]</p>
                                        </li>

                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="created" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thông tin tạo"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="editname" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chỉnh sửa gần nhất"]</p>
                                        </li>

                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="source" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nguồn khách hàng"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="customer_group" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nhóm khách hàng"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="member" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thành viên"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="birth" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ngày sinh"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="cust_address" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Địa chỉ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="Commune" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Phường xã"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="District" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Quận huyện"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="City" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tỉnh/Thành phố"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="branch" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Chi nhánh"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="assistant" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Kỹ thuật viên/phụ tá"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="typedetail" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Loại chi tiết"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="note" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ghi chú"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="document_code" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Mã hồ sơ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="custoldcode" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Mã khách hàng cũ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="document_created" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Ngày tạo hồ sơ"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="phone" type="checkbox" checked="checked">
                                            </div>
                                            <p class="text-sm">@Local["Số điện thoại"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="gender" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Giới tính"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="totalPay" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tổng tiền thanh toán"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="staff" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Tele phụ trách"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="isPayment" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Thanh toán"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="remind" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Nhắc lịch hẹn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <div class="form-check form-switch">
                                                <input class="shtoogle form-check-input" data-name="reasonCancel" type="checkbox">
                                            </div>
                                            <p class="text-sm">@Local["Lý do hủy lịch hẹn"]</p>
                                        </li>
                                        <li class="d-flex">
                                            <button class="btn btn-dark btn-sm my-2 w-100" onclick="print_App_Inday()" id="per_CustPrintAppInDay">@Local["In"]</button>
                                        </li>
                                        <li class="d-flex">
                                            <button data-tab="export_excel" class="_tab_control_ btn btn-primary btn-sm my-2 w-100" onclick="exportFile_app_inday()">@Local["Xuất"]</button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="resblock field col-12 col-md-8 col-xl-9 px-0 mt-2">
                    @*<button class="navbar-toggler shadow-none ms-n2 sidenav-toggler d-md-block">
                    <span class="navbar-toggler-icon mt-2">
                    <span class="navbar-toggler-bar bar1"></span>
                    <span class="navbar-toggler-bar bar2"></span>
                    <span class="navbar-toggler-bar bar3"></span>
                    </span>
                    </button>*@

                    <div id="AppointmentTimeline" class="collapse d-flex flex-wrap gap-2 align-items-center">
                    </div>
                </div>



            </div>
        </div>
    </div>
    <div class="">
        <div class="m-0 my-3 mobile-responsive position-relative vt-header-sticky vt-hs-height overflow-auto">
            <div id="AppInDayWaiting" class="position-absolute top-0 start-50 translate-middle-x waitingdiv text-center z-index-3" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <table data-name="ContentAppointmentInDayList" class="table vt-table mb-0" id="dtContentAppointmentInDayList">
                <thead>
                    <tr>
                        <th class="d-none">ID</th>
                        <th class="d-none">CusID</th>
                        <th class="no-sort" style="padding: 0.3rem !important">#</th>
                        <th data-name="app_code">@Local["Mã lịch hẹn"]</th>
                        <th style="min-width: 110px;">@Local["Thời gian"]</th>
                        <th data-name="document_code">@Local["Mã hồ sơ"]</th>
                        <th data-name="document_created">@Local["Ngày tạo hồ sơ"]</th>
                        <th>@Local["Mã khách hàng"]</th>
                        <th data-name="custoldcode">@Local["Mã khách hàng cũ"]</th>
                        <th style="min-width: 120px;">@Local["Khách hàng"]</th>
                        <th data-name="phone">@Local["Số điện thoại"]</th>
                        <th data-name="birth">@Local["Ngày sinh"]</th>
                        <th data-name="cust_address" class="vtt-filter" style="min-width: 120px;">@Local["Địa chỉ"]</th>
                        <th data-name="Commune" class="vtt-filter" style="min-width: 120px;">@Local["Phường xã"]</th>
                        <th data-name="District" class="vtt-filter" style="min-width: 120px;">@Local["Quận huyện"]</th>
                        <th data-name="City" class="vtt-filter" style="min-width: 150px;">@Local["Tỉnh/Thành phố"]</th>
                        <th style="min-width: 140px;">@Local["Nội dung"]</th>
                        <th style="min-width: 70px;">@Local["Loại"]</th>
                        <th data-name="typedetail">@Local["Loại chi tiết"]</th>
                        <th>@Local["Trạng thái"]</th>
                        <th data-name="con_employee">@Local["Tư vấn"]</th>
                        <th data-name="con_doc">@Local["Bác sĩ"]</th>
                        <th data-name="room">@Local["Phòng"]</th>
                        <th data-name="remind">@Local["Nhắc lịch hẹn"]</th>
                        <th data-name="reasonCancel">@Local["Lý do hủy lịch hẹn"]</th>
                        <th data-name="note">@Local["Ghi chú"]</th>
                        <th data-name="source" style="min-width: 70px;">@Local["Nguồn khách hàng"]</th>
                        <th data-name="customer_group" style="min-width: 70px;">@Local["Nhóm khách hàng"]</th>
                        <th data-name="branch">@Local["Chi nhánh"]</th>
                        <th data-name="assistant">@Local["Kỹ thuật viên/phụ tá"]</th>
                        <th data-name="member">@Local["Thành viên"]</th>
                        <th data-name="created" style="min-width: 130px;">@Local["Thông tin tạo"]</th>
                        <th data-name="editname" style="min-width: 130px;">@Local["Thông tin sửa"]</th>
                        <th data-name="gender">@Local["Giới tính"]</th>
                        <th data-name="totalPay">@Local["Tổng tiền thanh toán"]</th>
                        <th data-name="staff">@Local["Tele phụ trách"]</th>
                        <th data-name="isPayment">@Local["Thanh toán"]</th>
                        <th class="no-sort" style="width: 50px; padding: 0.3rem !important">@Local["Hủy"]</th>
                    </tr>
                </thead>
                <tbody id="dtContentAppointmentInDayListBody">
                </tbody>
            </table>
        </div>
        <div id="Desk_Noteapp" class="shadow-lg bg-white p-3">
        </div>
    </div>
</div>



<script type="text/javascript">

    let ser_TypeApp = "@Model._Status";
    var dataConsult_InDay = [];
    let changingFlag = 0;
    let dataAppointment = {};
    let dataCustomer_Group = {};
    let sys_dataScheduleStatus;
    let Appointment_CurrentID = 0;
    let Appointment_ConsultID = 0;
    let AppointmentTimeOut;
    var sys_dataScheduleMember;
    let Appointment_Current_Date;
    let shtable;
    let Appointment_Time_Obj = {};
    var DataSchedule_ReasonCancel = {};
    let Appointment_Timeline = [{ "session": "morning", "icon": "sun icon", "Time": [{ "display": "07:00 - 10:00", "tfrom": 700, "tto": 1000 }, { "display": "10:00 - 13:00", "tfrom": 1000, "tto": 1300 }] }
        , { "session": "afternoon", "icon": "moon icon", "Time": [{ "display": "13:00 - 17:00", "tfrom": 1300, "tto": 1700 }, { "display": "17:00 - 20:00", "tfrom": 1700, "tto": 2000 }] }]
    let DataServiceCare, DataService, AP_District, AP_City, AP_Commune;
    let DataDotor, DataEmployee = {};
    $(document).ready(function ()
    {
        shtable = $("#dtContentAppointmentInDayList").TableExpandColumn({
            shtoogle: $('.shtoogle')
        });
        $('#dtContentAppointmentInDayList').tablesort();
        $('#dtContentAppointmentInDayList').tablecontrol();
        Appointment_Reset_InDay();
        Appointment_Event_Change_Date();
        Master_IndexDB_Reads(_Session_Data, [_Session_Service, _Session_ServiceCare, _Session_District, _Session_City,_Session_Commune]
            , function (data)
            {
                DataService = data[0];
                DataServiceCare = data[1];
                AP_District = data[2];
                AP_City = data[3];
                AP_Commune = data[4];
                Checking_TabControl_Permission();
                LoadComboSchedule();

            })
    });

    //#region // Date Time  Step
    function Appointment_To_Change_Display_Date()
    {
        $("#DateAppointment").html(Appointment_Current_Date);
        let DOW = ConvertDateTimeToString_DOW(formatDMY_To_Date(Appointment_Current_Date));
        $("#DowAppointment").html(DOW);
    }
    function Appointment_Reset_InDay()
    {
        let datenow = new Date();
        Appointment_Current_Date = formatDateClient(datenow);
        Appointment_To_Change_Display_Date();
        LoadAppointmentListAjax();
    }
    function Appointment_Event_Change_Date()
    {
        $("#PriviousDateAppointment").on("click", function ()
        {
            if (Appointment_Current_Date) {
                let date_selected = new Date(formatDMY_To_Date(Appointment_Current_Date));
                date_selected.setDate(date_selected.getDate() - 1);
                Appointment_Current_Date = formatDateClient(date_selected)
                Appointment_To_Change_Display_Date();
                clearTimeout(AppointmentTimeOut)
                AppointmentTimeOut = setTimeout(function (e)
                {
                    LoadAppointmentListAjax();
                }, 300)

            }
        });
        $("#NextDateAppointment").on("click", function ()
        {
            if (Appointment_Current_Date) {
                let date_selected = new Date(formatDMY_To_Date(Appointment_Current_Date));
                date_selected.setDate(date_selected.getDate() + 1);
                Appointment_Current_Date = formatDateClient(date_selected)
                Appointment_To_Change_Display_Date();
                clearTimeout(AppointmentTimeOut)
                AppointmentTimeOut = setTimeout(function (e)
                {
                    LoadAppointmentListAjax();
                }, 300)
            }
        });
    }
    //#endregion

    function Appointment_InDay_Render_Time_Line()
    {
        $("#AppointmentTimeline").empty();
        let stringcontent = "";
        for (let i = 0; i < Appointment_Timeline.length; i++) {
            let items = Appointment_Timeline[i];
            let Icon = items.icon;
            let Time = items.Time;
            for (let j = 0; j < Time.length; j++) {
                let item = Time[j];
                let tr = `<div class="timer w-auto cursor-pointer input-group flex-fill d-inline-flex align-items-center justify-content-center" data-tfrom="${item.tfrom}" data-tto="${item.tto}">
                                <span class="input-group-text timer_counter fs-5 text-primary" id="timer_${item.tfrom}">0</span>
                                <span class="form-control">${item.display}</span>
                            </div>`;
               
                stringcontent += tr;
            }
        }
        $("#AppointmentTimeline").html(stringcontent);
        Appointment_InDay_Time_Line_Selected();
    }

    function Appointment_InDay_Time_Line_Selected()
    {
        $("#AppointmentTimeline .timer").click(function ()
        {

            if ($(this).hasClass("active") == false) {
                $(this).addClass("active");
                let Appointment_Time_From = Number($(this).attr("data-tfrom"));
                let Appointment_Time_To = Number($(this).attr("data-tto"));
                let _e = {};
                _e.Time_From = Appointment_Time_From;
                _e.Time_To = Appointment_Time_To;
                Appointment_Time_Obj[Appointment_Time_From] = _e;
            }
            else {
                $(this).removeClass("active");
                let Appointment_Time_From = Number($(this).attr("data-tfrom"));
                delete Appointment_Time_Obj[Appointment_Time_From];
            }
            Filter_Appointment_InDay();
        })
    }


    function LoadAppointmentListAjax(AppID)
    {

        if (changingFlag == 1) {
            changingFlag = 0;
            if (AppID == undefined) {
                AppID = 0;
                dataCustomer_Group = {};
                /*dataAppointment = {};*/
                Appointment_InDay_Render_Time_Line();
            }
            let branchid = (Number($('#ScheduleBranchID').dropdown('get value')) ? Number($('#ScheduleBranchID').dropdown('get value')) : 0)
            let DoctorID = 0, StatusID = 0;
            if (Number(ser_TypeApp) == 3) {
                DoctorID = sys_employeeID_Main;
                StatusID = 0;
            }
            else {
                DoctorID = (Number($('#Doctor_ID').dropdown('get value')) ? Number($('#Doctor_ID').dropdown('get value')) : 0);
                let _d = [];
                if (Number(ser_TypeApp) == 2) {
                    _d = sys_dataScheduleStatus.filter(function (wor)
                    {
                        return (Number(wor.IsCashier) == 1);
                    });
                }
                if (Number(ser_TypeApp) == 4) {
                    _d = sys_dataScheduleStatus.filter(function (wor)
                    {
                        return (Number(wor.IsXquang) == 1);
                    });
                }
                if (Number(ser_TypeApp) == 5) {
                    _d = sys_dataScheduleStatus.filter(function (wor)
                    {
                        return (Number(wor.IsExamination) == 1);
                    });
                }
                if (_d != undefined && _d.length == 1) { StatusID = Number(_d[0].ID); }
            }

            AjaxLoad(url = "/Desk/Appointment/AppointmentInDay_Desk_Branch/?handler=LoadataAppointmentList"
                , data = {
                    'BranchID': branchid
                    , 'AppID': AppID
                    , 'DateFrom': Appointment_Current_Date
                    , 'StatusID': StatusID
                    , 'DoctorID': DoctorID
                }, async = true
                , error = function ()
                {
                    notiError_SW();
                }
                , success = function (result)
                {
                    if (result != "0") {
                        let _data_app = JSON.parse(result);
                        if (AppID == 0) {
                            if (_data_app.length == 0) {
                                Appointment_Counter_Point();
                                $('#dtContentAppointmentInDayListBody').html('');
                            }
                            else AppInDay_Render(_data_app);
                        }
                        else {
                            if (_data_app != undefined && _data_app.length == 1) {
                                if ($("#Row_App_Inday_" + AppID).length > 0) {
                                    $("#Row_App_Inday_" + AppID).replaceWith(Render_Push_AppointmentInDay_Each(AppID, _data_app[0]));
                                }
                                else {
                                    $("#dtContentAppointmentInDayListBody").append(Render_Push_AppointmentInDay_Each(AppID, _data_app[0]));
                                }
                            }
                        }
                        JsBarcode(".barcodeApppoinment").init();
                        shtable.Refresh();
                        changingFlag = 1;
                        Filter_Appointment_InDay();
                        Checking_TabControl_Permission();
                    }
                }, sender = null
                ,
                before = function (e)
                {
                    if (AppID == 0) {
                        $("#AppInDayWaiting").show();
                    }
                },
                complete = function (e)
                {
                    if (AppID == 0) {
                        $("#AppInDayWaiting").hide();
                    }
                }
            );

        }
    }
    function AppInDay_Render(_data_app)
    {
        $("#dtContentAppointmentInDayListBody").empty();
        dataAppointment = {};
        $("#ContentAppointmentInDayList").empty();
        //_data_app.sort(function (b, a) {
        //    return Number(a.Time.replace(':', '')) - Number(b.Time.replace(':', ''));
        //});
        fnRenderBlock(_data_app, "dtContentAppointmentInDayListBody"
            , blocknum = 50
            , fnrender = Render_AppointmentInDay_Content
            , fnsuccess = function ()
            {

            }
        );
    }

    async function Render_AppointmentInDay_Content(_data_app)
    {
        new Promise((resolove) =>
        {
            setTimeout(() =>
            {
                var myNode = document.getElementById("dtContentAppointmentInDayListBody");
                if (myNode != null) {
                    let tr = "";
                    for (let _ii = 0; _ii < _data_app.length; _ii++) {
                        dataAppointment[_data_app[_ii].ID] = _data_app[_ii];
                        tr = Render_Push_AppointmentInDay_Each(_data_app[_ii].ID, _data_app[_ii]);
                        myNode.insertAdjacentHTML('beforeend', tr);
                        //$("#dtContentAppointmentInDayListBody").prepend(tr);
                        //App_InDay_Create_Timer();
                        JsBarcode(`#Row_App_Inday_${_data_app[_ii].ID} .barcodeApppoinment`).init();
                    }
                    shtable.Refresh();
                    $('.schedule-next').tooltip();
                    Appointment_Count_App_By_Time();
                    Appointment_Counter_Point();
                    Checking_TabControl_Permission();
                }
            }, 100)
        })
    }

    function Render_Push_AppointmentInDay_Each(key, value)
    {
        let result = "";
        let ColorBorderType = value.TypeID == 1
            ? (value.OptionlColor != "" ? value.OptionlColor : '#0f7402')
            : (value.OptionlColor != "" ? value.OptionlColor : '#2196f3')
        ColorBorderType = value.IsCancel == 0 ? ColorBorderType : '#ea0606';


        //let ColorBorderType = value.TypeID == 1 ? 'border-success' : 'border-info';
        //ColorBorderType = value.IsCancel == 0 ? ColorBorderType : 'border-danger';
        let rgbaCol = 'rgba(' + parseInt(value.ColorCode.slice(-6, -4), 16)
            + ',' + parseInt(value.ColorCode.slice(-4, -2), 16)
            + ',' + parseInt(value.ColorCode.slice(-2), 16)
            + ',0.3)';
        result = '<tr class="row_app vt-number border-5 border-bottom-0 border-top-0 border-end-0 border-3" style="border-color: ' + ColorBorderType + ' !important;background-color:' + rgbaCol + '"'
            + ' data_type=' + value.TypeID
            + ' data_scheduler_type=' + value.ScheduleTypeID
            + ' data_time=' + value.Time
            + ' data_consult=' + value.ConsultID
            + ' data_doctor=' + value.DoctorID
            + ' data_doctor2=' + value.DoctorID2
            + ' data_status=' + value.TypeStatusID
            + ' data_cancel=' + value.IsCancel
            + ' data_source=' + value.CustTypeID
            + ' data_ServiceCare=' + value.ServiceCare_ID
            + ' data_creator=' + value.CreatedID
            + ' id="Row_App_Inday_' + key + '">'
            + RenderAppointmentInDayList_Content_Row(value)
            + '</tr>';

        return result;
    }

    // #region // Realtime
    //async function App_InDay_Create_Timer() {
    //    if (ConvertOnly_DMY_To_DateTime(Appointment_Current_Date).getTime() == GetDateTime_Now_Only_Date().getTime()) {
    //        App_InDay_Create_Timer_Realtime();
    //        await new Promise((resolve, reject) => {
    //            setInterval(
    //                () => {
    //                    App_InDay_Create_Timer_Realtime();
    //                },
    //                60000
    //            )
    //        });
    //    }


    //}
    //function App_InDay_Create_Timer_Realtime() {
    //    let _timenow = DateNowHHMM();
    //    let _x = document.getElementsByClassName('time_ago_status');
    //    if (_x != undefined && _x.length != 0) {
    //        let _id,_stringid, _element,_elementago, _timechange, _timeago, _timeago_text, _timeexpired, _status, _time_from;
    //        for (_i = 0; _i < _x.length; _i++) {
    //            _stringid = _x[_i].id
    //            _id = _stringid.replace("time_ago_status_", "");
    //            _element = $("#time_change_status_" + _id);
    //            _time_from = $(_x[_i]).closest('.appointmentlist').attr('data_time');
    //            _timechange = _element.html();
    //            _status = Number(_x[_i].dataset.staus);
    //            _timeexpired = sys_dataScheduleStatus_ExpireTime[_status].TimeExpired;
    //            _timeago = HHMM_Distance_HHMM(((_status == 1) ? _time_from : _timechange), _timenow);
    //            _timeago = ((_timeago < 0 && _status == 1) ? 0 : _timeago);
    //            _timeago_text = ChangeMinute_To_Hour_Minute(_timeago, 'ago');
    //            _elementago = $('#time_ago_status_' + _id);
    //            _elementago.html(_timeago_text);
    //            if (_timeexpired != 0 && _timeago > _timeexpired) {
    //                _elementago.removeClass("text-dark");
    //                if (!_elementago.hasClass("text-danger"))
    //                    _elementago.addClass("text-danger");
    //            }
    //            else {
    //                _elementago.addClass("text-dark");
    //                if (_elementago.hasClass("text-danger"))
    //                    _elementago.removeClass("text-danger");

    //            }

    //        }
    //    }
    //}
    // #endregion

    function LoadComboSchedule()
    {
        AjaxLoad(url = "/Desk/Appointment/AppointmentInDay_Desk_Branch/?handler=LoadCombo"
            , data = {}, async = true
            , error = function ()
            {
                notiError_SW();
            }
            , success = function (result)
            {
                if (result != 0) {
                    changingFlag = 0;
                    let data = JSON.parse(result);
                    let objDropdown = {
                        onShow: function () {
                            let ui_drop = $(this);
                            Dropdown_Set_Position(ui_drop);
                        },
                        onHide: function () {
                            let ui_drop = $(this);
                            Dropdown_Remove_Position(ui_drop);
                        },
                        allowCategorySelection: true,
                        forceSelection: false
                    };


                    DataDotor = data.Doctor;
                    (data.Employee).forEach((element, index) =>
                    {
                        DataEmployee[element.ID] = element.Name;
                    });

                    sys_dataScheduleMember = data.Membership;
                    Load_Combo(data.Type, "cbbAppoinmentType", false, '@Local["Loại lịch"]');
                    $("#ScheduleTypeList").dropdown("refresh");
                    $("#ScheduleTypeList").dropdown("set selected", '0');
                    Load_Combo(data.SchedulerType, "cbb_Scheduler_Type", false, '@Local["Loại chi tiết"]');
                    $("#Scheduler_Type_List").dropdown("refresh");
                    $("#Scheduler_Type_List").dropdown("set selected", '0');

                    AppInDay_CheckIsMine();

                    Load_Combo(data.Branch, "cbbBranch", true);
                    $("#ScheduleBranchID").dropdown("refresh");
                    $("#ScheduleBranchID").dropdown("set selected", Number(@Model._branchID));

                    sys_dataScheduleStatus = data.Status.reduce((pre, arr) =>
                    {
                        arr["NameLangOther"] = (author_get("UserLang") == 'en' ? arr["NameLangOther"] : arr["Name"]);
                        pre.push(arr)
                        return pre;
                    }, [])

                    DataSchedule_ReasonCancel = (data.ReasonCancel).reduce((pre, arr) => {
                        if (arr.ID) pre[arr.ID] = arr;
                        return pre;
                    }, {})

                    Load_Combo(sys_dataScheduleStatus, "cbbAppoinmentStatus", false, '@Local["Trạng thái"]');
                    $("#ScheduleStatus").dropdown("refresh");
                    $("#ScheduleStatus").dropdown("set selected", '0');

                    Load_Combo(data.Source, 'cbbCusSource', false, '@Local["Nguồn khách hàng"]');
                    $("#CusSource").dropdown("refresh");
                    $("#CusSource").dropdown("set selected", '0')


                    Load_Combo(data.ServiceCare, 'cbbCusCare', false, '@Local["Dịch vụ quan tâm"]');
                    $("#CusCare").dropdown("refresh");
                    $("#CusCare").dropdown("set selected", '0');

                    Load_Combo(data.Employee, 'cbbAppCreator', false, '@Local["Người tạo"]');
                    $("#AppCreator").dropdown("refresh");
                    $("#AppCreator").dropdown("set selected", '0');

                    $("#Doctor_ID, #ScheduleTypeList, #Scheduler_Type_List, #ScheduleBranchID, #ScheduleStatus, #CusSource, #CusCare").dropdown(objDropdown);

                    changingFlag = 1;
                    LoadAppointmentListAjax();
                    EventMainGrid();
                }
            }
            , sender = null
        );

    }

    //#region // Filter
    function Filter_Appointment_Hide_Line(id)
    {
        if ($('#Row_App_Inday_' + id).hasClass('appointment_line_show'))
            $('#Row_App_Inday_' + id).removeClass("appointment_line_show");
        if (!$('#Row_App_Inday_' + id).hasClass('appointment_line_hide'))
            $('#Row_App_Inday_' + id).addClass("appointment_line_hide");
    }
    function Filter_Appointment_Show_Line(id)
    {
        if ($('#Row_App_Inday_' + id).hasClass('appointment_line_hide'))
            $('#Row_App_Inday_' + id).removeClass("appointment_line_hide");
        if (!$('#Row_App_Inday_' + id).hasClass('appointment_line_show'))
            $('#Row_App_Inday_' + id).addClass("appointment_line_show");
    }

    function Filter_Appointment_InDay()
    {
        if (changingFlag == 1) {

            changingFlag = 0;
            let type = (Number($('#ScheduleTypeList').dropdown('get value')) ? Number($('#ScheduleTypeList').dropdown('get value')) : 0);
            let schedulertype = (Number($('#Scheduler_Type_List').dropdown('get value')) ? Number($('#Scheduler_Type_List').dropdown('get value')) : 0);
            let status = (Number($('#ScheduleStatus').dropdown('get value')) ? Number($('#ScheduleStatus').dropdown('get value')) : 0);
            let consult = (Number($('#Consult_ID').dropdown('get value')) ? Number($('#Consult_ID').dropdown('get value')) : 0);
            let doctor = (Number($('#Doctor_ID').dropdown('get value')) ? Number($('#Doctor_ID').dropdown('get value')) : 0);
            let source = (Number($('#CusSource').dropdown('get value')) ? Number($('#CusSource').dropdown('get value')) : 0);
            let ServiceCare = $('#CusCare').dropdown('get value') ? $('#CusCare').dropdown('get value') : '0';
            let AppCreator = $('#AppCreator').dropdown('get value') ? $('#AppCreator').dropdown('get value') : '0';

            let row = document.getElementsByClassName('row_app');
            for (i = 0; i < row.length; i++) {
                let item_id = row[i].id.replace('Row_App_Inday_', '');
                Filter_Appointment_Show_Line(item_id);
            }

            for (i = 0; i < row.length; i++) {
                let item_id = row[i].id.replace('Row_App_Inday_', '');
                let item_type = row[i].getAttribute('data_type');
                let item_schedule_type = row[i].getAttribute('data_scheduler_type');
                let item_status = row[i].getAttribute('data_status');
                let item_consult = row[i].getAttribute('data_consult');
                let item_doctor = row[i].getAttribute('data_doctor');
                let item_doctor2 = row[i].getAttribute('data_doctor2');
                let item_titem = row[i].getAttribute('data_time');
                let time_number = Number(item_titem.replace(':', ''));
                let item_source = row[i].getAttribute('data_source');
                let item_creator = row[i].getAttribute('data_creator');

                let itemServiceCare = ',' + row[i].getAttribute('data_ServiceCare');

                if (type != 0 && item_type != type)
                    Filter_Appointment_Hide_Line(item_id);

                if (schedulertype != 0 && item_schedule_type != schedulertype)
                    Filter_Appointment_Hide_Line(item_id);
                if (status != 0 && item_status != status)
                    Filter_Appointment_Hide_Line(item_id);

                if (doctor != 0 && item_doctor != doctor && item_doctor2 != doctor)
                    Filter_Appointment_Hide_Line(item_id);
                if (source != 0 && item_source != source) {
                    Filter_Appointment_Hide_Line(item_id);
                }

                if (ServiceCare != '0' && !itemServiceCare.includes(',' + ServiceCare + ',')) {
                    Filter_Appointment_Hide_Line(item_id);
                }

                if (AppCreator != 0 && item_creator != AppCreator)
                    Filter_Appointment_Hide_Line(item_id);

                if (Object.size(Appointment_Time_Obj) != 0) {
                    let isShowApp = 0;
                    for ([key, value] of Object.entries(Appointment_Time_Obj)) {
                        let time_from = value.Time_From;
                        let time_to = value.Time_To;
                        if (time_number >= time_from && time_number <= time_to) {
                            isShowApp = 1;
                        }
                    }
                    if (isShowApp == 0) {
                        Filter_Appointment_Hide_Line(item_id);
                    }
                }
            }
            changingFlag = 1;
        }
    }
    function onkeyupAppointmentInDayAsync(extension)
    {
        return new Promise((resolve, reject) =>
        {
            setTimeout(
                () =>
                {
                    let search = xoa_dau(($('#filterAppointment').val()).toLowerCase()).trim();
                    for ([key, value] of Object.entries(dataAppointment)) {
                        if (value["Phone"].includes(search)
                            || xoa_dau(value["CustName"]).toLowerCase().includes(search)
                            || xoa_dau(value["CustCode"]).toLowerCase().includes(search)

                        ) {
                            Filter_Appointment_Show_Line(key);
                        }
                        else {
                            Filter_Appointment_Hide_Line(key);
                        }
                    }
                    ColorSearchFilterText(search, "seachRow");
                },
            )
        })
    }
    async function onkeyupAppointmentInDay()
    {
        await onkeyupAppointmentInDayAsync();
        return false;
    }
    //#endregion

    //#region // Render

    function RenderTimeAppointment(TimeCurrent, t_time, ScheduleNext)
    {
        let result = '<div>'
            + '<span>' + TimeCurrent + ' - ' + t_time + '</span>'
            + (ScheduleNext != null && ScheduleNext != '1900-01-01T00:00:00' ? '<span data-bs-toggle="tooltip" data-bs-html="true" data-bs-placement="top" data-bs-original-title="' + (!ScheduleNext.includes('1900') ? ('@Local["Lịch hẹn kế tiếp"] <br>' + ConvertDateTimeUTC_DMYHM(ScheduleNext)) : '') + '" class="position-absolute schedule-next"><i class="ps-1 fa fa-angle-double-right ' + (ScheduleNext.includes('1900') ? 'text-secondary' : '') + '" aria-hidden="true"></i></span>' : '');
        + '</div>'
        return result;
    }
    function RenderAppointmentInDay_Status(Content, Type, ServiceCare, ServiceTreat)
    {

        let contentcare = (Number(Type) == 1)
            ? Fun_GetString_ByToken(DataServiceCare, ServiceCare)
            : Fun_GetString_ByToken(DataService, ServiceTreat);
        return '<span class="content_line_clamp"><span class="mt-1">' + contentcare + '</span>'
            + '<span class="content_line_clamp">' + Content + '</span></span>';
    }
    function RenderAppointmentInDayList_Content_Row(item)
    {
        let inttime = item.Time.replace(/[^0-9]/g, "");
        let htime = item.Time.split(':');
        let hour = htime[0];
        let minute = htime[1];
        let d = new Date();
        d.setHours(hour, minute);
        d.setMinutes(Number(minute) + Number(item.TimeSchedule));
        let _hour = (d.getHours() < 10) ? ("0" + d.getHours()) : d.getHours();
        let _minute = (d.getMinutes() < 10) ? ("0" + d.getMinutes()) : d.getMinutes();
        let t_time = _hour + ":" + _minute;
        let content_status = '';
        let codeSchedulerBarcode = xoa_dau(item.CodeScheduler);
        if (item.IsCancel == 0) {
            let statustime = Face_Convert_Date_To_DOW_HM(item.StatusTime);
            content_status =
                '<span id="time_ago_status_' + item.ID + '" data-staus="' + item.TypeStatusID + '"class="ps-2 text-sm time_ago_status">'
                + ((statustime != '00:00') ? statustime : '')
                + '</span>';
        }
        let _typename = "", _statusname = "", _typesubname = "";
        _typesubname = item.ScheduleTypeColorCode != '' ? `<span class="badge fw-bold" style="background:${item.ScheduleTypeColorCode}">${item.ScheduleTypeName}</span>` : ('<div class="font-weight-bold">' + item.ScheduleTypeName + '</div>');
        _typename = '<div class="text-sm">' + (Outlang[item.TypeNameLangKey] ?? item.TypeName) + '</div>'
        _statusname = '<span id="appstatusname_' + item.ID + '" class="badge text-white" style="background-color: ' + item.ColorCode + '">'
            + (author_get("UserLang") == 'en' ? item.StatusNameLangOther : item.StatusName)
            + '</span>';
        let chairname = '';
        if (item.ChairName != "") chairname =  `</br>${item.ChairName}`
        let result = '<td class="d-none">' + item.ID + '</td>'
            + '<td class="d-none">' + item.CustomerID + '</td>'
            + '<td class="vt-number-order"></td>'

            + '<td data-name="app_code" data-sortvalue="' + item.CodeScheduler + '" style="letter-spacing: 4.5px;">'
            + ((item.CodeScheduler != '') ? '<svg class="barcodeApppoinment" jsbarcode-background="transparent" jsbarcode-value="' + codeSchedulerBarcode + '" jsbarcode-fontsize="14" jsbarcode-width="1" jsbarcode-height="30">' : '')
            + '</td>'
            + '<td class="position-relative" data-sortvalue="' + inttime + '">'
            + RenderTimeAppointment(item.Time, t_time, item.ScheduleNext)
            + '</td>'

            + '<td data-name="document_code"><a class="cursor-pointer" href="/Customer/MainCustomer?CustomerID=' + Number(item.CustomerID) + '&ver=' + versionofWebApplication + '">' + item.Document_Code + '</a></td>'
            + '<td data-name="document_created">' + ConvertDateTimeUTC_DMYHM(item.Document_Created) + '</td>'
            + '<td><a class="cursor-pointer" href="/Customer/MainCustomer?CustomerID=' + Number(item.CustomerID) + '&ver=' + versionofWebApplication + '">' + item.CustCode + '</a></td>'
            + '<td data-name="custoldcode">'+item.CustCodeOld+'</td>'
            + '<td>' + item.CustName + '</td>'
            + '<td data-name="phone">'
            + '<div class="extra content"><i class="text-sm text-gradient text-success vtt-icon vttech-icon-call-action"></i><a class="buttonCallClass _tab_control_ cursor-pointer" data-staff="' + item.StaffID + '" data-tab="phone_customer" datacus="' + item.CustomerID + '" data-info="' + encrypt_phone(item.Phone) + '">' + item.Phone + '</a></div>'
            + '</td>'
            + '<td data-name="birth">' + (!item.Birthday.includes('1900') ? ConvertDateTimeUTC_DMY(item.Birthday) : '') + '</td>'
            + '<td data-name="cust_address" class="_tab_control_" data-tab="address_customer">' + item.CustAdd + '</td>'
            + '<td data-name="Commune" class="_tab_control_" data-tab="address_customer">' + RenderAppointmentInDayList_GetName(AP_Commune, item.Commune_ID) + '</td>'
            + '<td data-name="District" class="_tab_control_" data-tab="address_customer">' + RenderAppointmentInDayList_GetName(AP_District, item.District_ID) + '</td>'
            + '<td data-name="City" class="_tab_control_" data-tab="address_customer">' + RenderAppointmentInDayList_GetName(AP_City, item.City_ID) + '</td>'
            + '<td>'
            + RenderAppointmentInDay_Status(item.Content, item.Type, item.ServiceCare_ID, item.ServiceTreat_ID)
            + '</td>'
            + '<td>'
            + _typename
            + '</td>'
            + '<td data-name="typedetail">' + _typesubname + '</td>'
            + '<td>' + _statusname
            + content_status
            + '</td>'
            + '<td data-name="con_employee" class="text-center">'
            + '<button  data-consult="' + item.ConsultID + '" data-schedule="' + item.ID + '" class="btn buttonConsultClass badge bg-dark mb-0 text-white shadow-none">'
            + (DataEmployee[item.ConsultID] != undefined ? DataEmployee[item.ConsultID] : '@Local["Chọn"]')
            + '</button>'
            + '</td>'
            + '<td data-name="con_doc">'
            + (DataEmployee[item.DoctorID] != undefined ? DataEmployee[item.DoctorID] : '')
            + '</td>'
            + '<td data-name="room" class="text-center">'
            + ((item.TypeStatusID === 1 && item.IsCancel != 1)
            ? '<a  class="text-primary fw-bold col-w-100 buttonRoomClass mb-0" data-appid="' + item.ID + '">' + ((item.RoomName != '') ? (item.RoomName + chairname) : '@Local["Chọn"]') + '</a>'
            : '<span  class="text-dark">' + ((item.RoomName != '') ? (item.RoomName + chairname) : '') + '</span>'
            )

            + '</td>'
            + '<td data-name="remind" class="">'
            + '<div data-appid="' + item.ID + '" data-custid="' + item.CustomerID + '" class="cursor-pointer buttonRemindClass badge bg-dark mb-0">'
             + (item.IsRemind == 0 ? '@Local["Xử lý"]' : '@Local["Đã xử lý"]')
            + '</div>'
            + '<div class="d-inline content_line_clamp ms-2">' + item.RemindContent + '</div>'
            + '</td>'
            + '<td data-name="reasonCancel">'
            + (DataSchedule_ReasonCancel[item.ReasonCancel] != undefined ? DataSchedule_ReasonCancel[item.ReasonCancel].Name : "")
            + '</td>'



            + '<td data-name="note">'
            + '<div class="border-0 p-2 bg-gray-100 border-radius-lg">'
            + '<div class="d-flex justify-content-between">'
            + '<span class="note_last_' + item.ID + ' mt-1 text-sm">' + item.Note + '</span>'
            + '<span class="text-dark ms-4">'
            + '<i class="buttonAddNoteClass cursor-pointer text-sm text-gradient text-dark vtt-icon vttech-icon-edit"></i>'
            + '</span>'
            + '</div>'
            + '</div>'
            + '</td>'
            + '<td data-name="source">' + item.CustTypeName + '</td>'
            + '<td data-name="customer_group">'
            + '<div style="display:flex">'
            + '<span class="group_cust_name">' + item.CustGroupName + '</span>'
            + '</div>'
            + '</td>'
            + '<td data-name="branch">' + item.BranchName + '</td>'
            + '<td data-name="assistant">'
            + (DataEmployee[item.AssistantID] != undefined ? DataEmployee[item.AssistantID] : '')
            + '</td>'
            + '<td data-name="member">'
            + sys_getmember(sys_dataScheduleMember, item.Amount)
            + '</td>'

            + '<td data-name="created">'
            + '<div>'
            + (DataEmployee[item.CreatedID] != undefined ? DataEmployee[item.CreatedID] : '')
            + '</div>'
            + ConvertDateTimeUTC_DMYHM(item.CreatedDate)
            + '</td>'
            + '<td data-name="editname">'
            + '<div>'
            + (DataEmployee[item.ModifiedID] != undefined ? DataEmployee[item.ModifiedID] : '')
            + '</div>'
            + ConvertDateTimeUTC_DMYHM(item.ModifiedDate)
            + '</td>'
            + '<td data-name="gender">'
            + (item.Gender_ID == 60 ? "@Local["Nam"]" : "@Local["Nữ"]")
            + '</td>'
            + '<td data-name="totalPay">' + formatNumber(item.TotalPaid) + '</td>'
            + '<td data-name="staff">' + (DataEmployee[item.EmpStaff] != undefined ? DataEmployee[item.EmpStaff] : '') + '</td>'
            + '<td data-name="isPayment" class="text-center">'
            + (item.CusIsPayment == 1 ? '<i class="ni ni-check-bold text-primary text-lg fw-bold"></i>' : '')
            + (item.CusIsPayment == 1 ? '<span class="d-none">@Local["Đã thanh toán"]</span>' : '<span class="d-none">@Local["Chưa thanh toán"]</span>')
            + '</td>'
            + '<td>'
            + ((ser_TypeApp <= 1 && item.IsCancel != 1 && item.TypeStatusID === 1)
                ? Render_Button_Grid(['<button class="buttonGrid" value="'
                    + item.ID
                    + '"><i class="buttonCancelClass vtt-icon vttech-icon-cancel-app fs-5"></i></button>']) : ((item.IsCancel == 1) ? '<span class="badge bg-gradient-danger">@Local["Đã hủy"]</span>' : ''))
            + '</td>';
        return result;
    }

    function RenderAppointmentInDayList_GetName(data, id)
    {
        try {
            let result = '';
            if (!jQuery.isEmptyObject(data)) {
                result = data[Number(id)].Name;
            }
            return result;
        } catch {
            return '';
        }
    }

    function Appointment_Reset_Fill_Popup()
    {
        $("#popupExecuteAppointment .item").removeClass("active selected").show();
    }

    function CancelApppointClick()
    {
        if (Appointment_CurrentID != 0) {
            CancelAppointment(Appointment_CurrentID);
        }
    }
    function ChooseConsultClick()
    {
        if (Appointment_CurrentID != 0) {
            changeConsultApp(Appointment_CurrentID, Appointment_ConsultID);
        }
        //
    }
    function AppInDay_RemoveRow_AppCancel(AppID)
    {
        if (AppID != undefined) {
            $('#Row_App_Inday_' + AppID).remove();
            delete dataAppointment[AppID];
        }
    }

    //#endregion

    //#region // Event
    function Collapse_filterAppointment()
    {
        $('#colsearch').collapse('hide');
    }
    function CancelAppointment(ID, StatusID)
    {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Appointment/AppointmentCancelDetail?CurrentID=" + ID + "&StatusID=" + StatusID);
        $('#DetailModal').modal('show');
        return false;
    }

    function callTakeCareCalling(phone, customer)
    {
        if (typeof CCF_OutcomCall !== 'undefined' && $.isFunction(CCF_OutcomCall)) {
            CCF_OutcomCall(phone, customer, 0, 0);
        }
    }
    function changeConsultApp(schedule, consult)
    {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Appointment/ChangeConsult?CurrentID=" + schedule + "&ConsultID=" + consult + '&ver=' + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function changeRoomApp(schedule)
    {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load("/Appointment/ChangeRoom?CurrentID=" + schedule + '&ver=' + versionofWebApplication);
        $('#DetailModal').modal('show');
        return false;
    }
    function AID_RemindApp(schedule, cust)
    {
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load(`/Marketing/CallDetailInput?MasterID=0&CustomerID=${cust}&Type=1&AppID=${schedule}&TreatID=0&TreatDate="`);
        $('#DetailModal').modal('show');
        return false;

    }
    function EventMainGrid()
    {

        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonCancelClass', function ()
        {
            let ID = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            CancelAppointment(ID);
        });
        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonConsultClass', function ()
        {
            let _consu = $(this).attr("data-consult");
            let _id = $(this).attr("data-schedule");
            changeConsultApp(_id, _consu);
        });
        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonAddNoteClass', function ()
        {
        
            let _id = Number($(this).closest('tr')[0].childNodes[0].innerHTML);
            let pos_top = $("#Mainpusher").scrollTop()
            $("#Desk_Noteapp").show();
            $("#Desk_Noteapp").empty();
            $("#Desk_Noteapp").load("/Appointment/AppoinmentNote?CurrentID=" + _id + "&ver=" + versionofWebApplication, function () {
                $("#Desk_Noteapp").css({
                    "top": pos_top,
                });
                Appnote_SetType("tiny");
            });
 
        });
        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonRoomClass', function ()
        {
            let _appid = $(this).attr("data-appid");
            changeRoomApp(_appid);
        });
 
        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonRemindClass', function ()
        {
            let _appid = $(this).attr("data-appid");
            let _custid = $(this).attr("data-custid");
            AID_RemindApp(_appid, _custid);
        });
 
        $('#dtContentAppointmentInDayList tbody').on('click', '.buttonCallClass', function ()
        {
            let phone = $(this).attr("data-info");
            let cus = $(this).attr("datacus");
            callTakeCareCalling(phone, cus);
        });

        $('#ContentAppointmentInDayList').on('click', '.buttonCallClass', function ()
        {
            let phone = $(this).attr("data-info");
            let cus = $(this).attr("datacus");
            callTakeCareCalling(phone, cus);
        });

        $('.approxtime').on('change', function ()
        {
            Filter_Appointment_InDay();
        });

        $(document).mouseup(function (e)
        {
            let noteApp = $("#Desk_Noteapp");
            if (!noteApp.is(e.target) && noteApp.has(e.target).length === 0) {
                $("#Desk_Noteapp").hide();
            }
        });
    }

    function exportFile_app_inday()
    {
        //var date = new Date();
        //var year = date.getFullYear();
        //var mounth = date.getMonth() + 1;
        //var day = date.getDate();
        exportToExcel("dtContentAppointmentInDayList", Outlang['Danh_sach_lich_hen_trong_ngay']);
        syslog_app('e', '');
    }
    function print_App_Inday()
    {
        syslog_app('p', '');
        let branchid = (Number($('#ScheduleBranchID').dropdown('get value')) ? Number($('#ScheduleBranchID').dropdown('get value')) : 0)
        let Date_Branch = ConvertDMY_ToInt(Appointment_Current_Date).toString() + ';' + branchid;
        $("#DetailModal_Content").html('');
        $("#DetailModal_Content").load('/Print/print?Type=appinday_form&DetailID=' + Date_Branch);
        $('#DetailModal').modal('show');
    }
    // #endregion




    //#region // Couter App
    function Appointment_Count_App_By_Time()
    {
        $(".timer_counter").html("0");
        $(".timer_counter").removeClass("timer_counter_having");
        if (Object.size(dataAppointment) != 0) {
            for ([key, value] of Object.entries(dataAppointment)) {
                let Time = Number(value.Time.replace(':', ''));
                if (Time != 0) {
                    let _id = parseInt(Time / 100) * 100;
                    for (let i = 0; i < Appointment_Timeline.length; i++) {
                        let Times = Appointment_Timeline[i].Time;
                        for (let j = 0; j < Times.length; j++) {
                            let Timer = Times[j];
                            if (Time >= Timer.tfrom && Time <= Timer.tto) {
                                if ($("#timer_" + Timer.tfrom).length > 0) {
                                    let _text = $("#timer_" + Timer.tfrom).html();
                                    let _num = _text.replace('(', '')
                                    _num = Number(_num.replace(')', ''));
                                    _num = _num + 1;
                                    if (_num > 0) {
                                        $("#timer_" + Timer.tfrom).html(_num);
                                        if (!$("#timer_" + Timer.tfrom).hasClass('timer_counter_having'))
                                            $("#timer_" + Timer.tfrom).addClass('timer_counter_having');
                                    }
                                    else {
                                        $("#timer_" + _id).html("0");
                                    }
                                }
                            }
                        }
                    }

                }
            }
        }
    }
    function Appointment_Counter_Point()
    {
        let TotalApp = 0;
        let TotalAppCheckIn = 0;

        let TotalAppCancel = 0;
        if (Object.size(dataAppointment) != 0) {
            for ([key, value] of Object.entries(dataAppointment)) {
                if (value.TypeStatusID != 1 && value.IsCancel != 1) {
                    TotalAppCheckIn++;
                }

                if (value.IsCancel == 1) {
                    TotalAppCancel++;
                }
            }
            TotalApp = Object.size(dataAppointment);
        }
        $("#TotalApp").html(TotalApp);
        $("#TotalAppCheckIn").html(TotalAppCheckIn);
        $("#TotalAppCancel").html(TotalAppCancel);
    }
    //#endregion

    //#region //Permission check ismine
    function AppInDay_CheckIsMine()
    {
        if ($('#AppInDay_IsMine').length > 0) {
            //AppInDay_IsMine
            Load_Combo(DataDotor, "cbbDoctor_App", false, '@Local["Bác sĩ"]');
            $("#Doctor_ID").dropdown("refresh");
            $("#Doctor_ID").dropdown("set selected", '0');

        } else {
            let dtFiltDoc = DataDotor.filter(item => item.ID == sys_employeeID_Main);
            if (dtFiltDoc.length > 0) {
                $('#Doctor_ID').addClass('disabled');
                Load_Combo(dtFiltDoc, "cbbDoctor_App", true);
                $("#Doctor_ID").dropdown("refresh");
                $("#Doctor_ID").dropdown("set selected", sys_employeeID_Main);
            }
            else {
                Load_Combo(DataDotor, "cbbDoctor_App", false, '@Local["Bác sĩ"]');
                $("#Doctor_ID").dropdown("refresh");
                $("#Doctor_ID").dropdown("set selected", '0');
            }
        }
    }

    function AppInDay_setMySelf(){
        $("#Doctor_ID").dropdown("refresh");
        $("#Doctor_ID").dropdown("set selected", sys_employeeID_Main);
    }
    //#endregion
</script>

<style>
/*    .timer.active .timer_counter {
        background: rgb(var(--bs-primary));
        color: white !important;
    }*/
    .timer.active span {
       font-weight:700 !important;
    }
    .timer {
        max-height: 40px;
        min-height: 40px;
    }



    .box_date_time .box_date_time_reset {
        text-align: center;
        font-size: 12px;
        color: #138fee;
    }

    .filter_container {
        position: fixed;
        right: 30px;
        bottom: 30px;
        width: 50px;
        overflow: hidden;
        height: 50px;
        background-color: white;
        z-index: 10000;
        border-radius: 52px;
        display: flex;
        border: 1px solid rgb(0 0 0 / 8%);
        box-shadow: 0px 1px 5px rgb(0 0 0 / 11%);
        transition: width 0.3s ease;
    }

    .fix_div {
        display: flex;
        min-width: 170px;
        justify-content: space-between;
        padding-right: 5px;
    }

    #popupExecuteAppointment {
        display: none;
        position: absolute;
    }

    div#popupExecuteAppointment span {
        font-size: 14px;
        padding: 5px;
        line-height: 13px;
        color: #013b67;
        font-weight: 500;
    }

    #popupExecuteAppointment .menu .item {
        text-decoration: none !important;
        border-bottom: 1px solid #def3ff !important;
        min-width: 140px;
    }

        #popupExecuteAppointment .menu .item:hover {
            background: rgba(0,0,0,.03) !important;
        }
    /*#region // Box time*/
    .box_date_time {
        width: 100%;
        padding: 5px;
    }

        .box_date_time .box_date_time_title {
            text-align: center;
            color: #767676;
            font-size: 12px;
            text-transform: uppercase;
        }

        .box_date_time .box_date_time_step {
            display: flex;
            padding: 5px 0;
            align-items: center;
        }

        .box_date_time .box_date_time_content {
            flex-grow: 1;
            text-align: center;
            font-size: 0.975rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .box_date_time .box_date_time_icon {
            font-size: 16px;
            color: #bdbcbc;
            padding: 0;
            cursor: pointer;
        }

    .appointment_line_hide {
        display: none !important;
    }

    .appointment_line_show {
    }

    /*@@media only screen and (min-width: 768px){
        .timer {
            max-width: 150px;
        }
    }*/
</style>


<style>
    #Desk_Noteapp {
        padding-bottom: 0;
        transition: 0.2s ease-in-out;
        overflow: hidden;
 
        z-index: 11111;
        display: none;
        right: 0;
        top: 50px;
        position: fixed !important;

    }
    @@media only screen and (max-width: 878px) {
        #Desk_Noteapp {
            position: relative;
            width: 100%;
            max-width: 100%;
        
        }
    }
    #AppointmentTimeline .timer.active .timer_counter {
        background: rgb(var(--bs-primary-to));
        color: white !important;
    }
</style>
<script>js_require('/js/main.js');</script>
<script>js_require('/js/comon/initialize_setting.js');</script>
<script>js_require('/js/customjs/custom-validation.js');</script>
